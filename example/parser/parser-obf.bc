; ModuleID = '..\example\parser\parser.bc'
target datalayout = "e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32"
target triple = "i686-pc-windows-msvc16.0.0"

%struct.Link_struct = type { i32, i32, %struct.Connector_struct*, %struct.Connector_struct*, i8* }
%struct.Connector_struct = type { i16, i16, i8, i8, %struct.Connector_struct*, i8* }
%struct.List_o_links_struct = type { i32, i32, i32, %struct.List_o_links_struct* }
%struct.patch_element_struct = type { i8, i8, i32, i32 }
%struct.Image_node_struct = type { %struct.Image_node_struct*, %struct.Connector_struct*, i32 }
%struct.Disjunct_struct = type { %struct.Disjunct_struct*, i16, i8, i8*, %struct.Connector_struct*, %struct.Connector_struct* }
%struct.label_node_struct = type { i32, %struct.label_node_struct* }
%struct.Match_node_struct = type { %struct.Match_node_struct*, %struct.Disjunct_struct* }
%struct.Word_struct = type { [60 x i8], %struct.X_node_struct*, %struct.Disjunct_struct* }
%struct.X_node_struct = type { i8*, %struct.Exp_struct*, %struct.X_node_struct* }
%struct.Exp_struct = type { i8, i8, i8, i8, %union.anon }
%union.anon = type { %struct.E_list_struct* }
%struct.E_list_struct = type { %struct.E_list_struct*, %struct.Exp_struct* }
%struct.anon = type { i8*, i32*, i32, i8* }
%struct.anon.0 = type { i8*, i8* }
%struct.Table_connector = type { i16, i16, %struct.Connector_struct*, %struct.Connector_struct*, i16, i32, %struct.Table_connector* }
%struct.connector_domain_name_pair_struct = type { i8*, i32 }
%struct.domain_struct = type { i8*, i32, %struct.List_o_links_struct*, i32, i32, %struct.d_tree_leaf_struct*, %struct.domain_struct* }
%struct.d_tree_leaf_struct = type { %struct.domain_struct*, i32, %struct.d_tree_leaf_struct* }
%struct.c_list_struct = type { %struct.Connector_struct*, i32, %struct.c_list_struct* }
%struct.Dict_node_struct = type { i8*, %struct.Word_file_struct*, %struct.Exp_struct*, %struct.Dict_node_struct*, %struct.Dict_node_struct* }
%struct.Word_file_struct = type { [60 x i8], i32, %struct.Word_file_struct* }
%struct._iobuf = type { i8*, i32, i8*, i32, i32, i32, i32, i8* }
%struct.string_node_struct = type { i8*, i32, %struct.string_node_struct* }
%struct.BigStruct = type <{ i32, %struct._iobuf*, i8*, i8*, %struct.Disjunct_struct*, i32, %struct.Connector_struct*, %struct.Connector_struct*, i32, i8**, %struct.Violation_list_struct*, i8*, %struct.Disjunct_struct*, %struct.c_list_struct**, %struct.X_node_struct*, i32, %struct.Match_node_struct**, %struct.Disjunct_struct*, %struct.Connector_struct*, i32, %struct.PP_node_struct*, %struct.Dict_node_struct*, %struct.Dict_node_struct*, %struct.Dict_node_struct*, %struct.Linkage_info_struct*, i32, %struct._iobuf*, i8*, %struct.Exp_struct*, %struct.Word_file_struct*, %struct.X_node_struct*, %struct.Tconnector_struct*, i32, %struct.Disjunct_struct*, i8*, %struct.D_type_list_struct**, %struct.PP_node_struct*, %struct.Violation_list_struct*, %struct._iobuf*, %struct.DIS_node_struct*, %struct.X_node_struct*, %struct.Dict_node_struct*, %struct.Exp_struct* }>
%struct.Linkage_info_struct = type { i32, i16, i16, i16, i16, i16 }
%struct.Tconnector_struct = type { i8, i8, %struct.Tconnector_struct*, i8* }
%struct.D_type_list_struct = type { %struct.D_type_list_struct*, i32 }
%struct.PP_node_struct = type { %struct.D_type_list_struct**, %struct.Violation_list_struct* }
%struct.Violation_list_struct = type { %struct.Violation_list_struct*, i8* }
%struct.DIS_node_struct = type { %struct.CON_list_struct*, %struct.List_o_links_struct*, i32 }
%struct.CON_list_struct = type { %struct.CON_list_struct*, %struct.CON_node_struct* }
%struct.CON_node_struct = type { %struct.DIS_list_struct*, %struct.DIS_list_struct*, i32 }
%struct.DIS_list_struct = type { %struct.DIS_list_struct*, %struct.DIS_node_struct* }
%struct.Links_to_patch_struct = type { %struct.Links_to_patch_struct*, i32, i8, i32 }
%struct.clause_struct = type { %struct.clause_struct*, i32, i32, %struct.Tconnector_struct* }
%struct._SECURITY_ATTRIBUTES = type { i32, i8*, i32 }
%struct.Nuggie = type { i32 }

@pp_link_array = common global [497 x %struct.Link_struct] zeroinitializer, align 4
@N_null = common global i32 0, align 4
@word_links = internal global [250 x %struct.List_o_links_struct*] zeroinitializer, align 4
@dfs_root_word = internal global [250 x i32] zeroinitializer, align 4
@structure_violation = internal global i32 0, align 4
@patch_array = internal global [497 x %struct.patch_element_struct] zeroinitializer, align 4
@.str.1 = private unnamed_addr global [6 x i8] c"/////\00", align 1
@.str = private unnamed_addr global [16 x i8] c"               \00", align 1
@.str.3 = private unnamed_addr global [6 x i8] c"/////\00", align 1
@.str.2 = private unnamed_addr global [16 x i8] c"               \00", align 1
@.str.4 = private unnamed_addr global [16 x i8] c"               \00", align 1
@.str.5 = private unnamed_addr global [6 x i8] c"     \00", align 1
@.str.6 = private unnamed_addr global [4 x i8] c"   \00", align 1
@.str.7 = private unnamed_addr global [4 x i8] c"%3d\00", align 1
@.str.8 = private unnamed_addr global [5 x i8] c"<---\00", align 1
@.str.9 = private unnamed_addr global [6 x i8] c"-----\00", align 1
@.str.10 = private unnamed_addr global [5 x i8] c"->  \00", align 1
@.str.11 = private unnamed_addr global [6 x i8] c"     \00", align 1
@.str.12 = private unnamed_addr global [4 x i8] c"   \00", align 1
@.str.13 = private unnamed_addr global [4 x i8] c"%3d\00", align 1
@.str.14 = private unnamed_addr global [5 x i8] c"  %s\00", align 1
@.str.15 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr global [8 x i8] c"       \00", align 1
@.str.17 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.18 = private unnamed_addr global [6 x i8] c" (%c)\00", align 1
@.str.19 = private unnamed_addr global [5 x i8] c"    \00", align 1
@.str.20 = private unnamed_addr global [4 x i8] c"   \00", align 1
@.str.21 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.22 = private unnamed_addr global [18 x i8] c"P.P. violations:\0A\00", align 1
@.str.23 = private unnamed_addr global [12 x i8] c"        %s\0A\00", align 1
@visited = internal global [250 x i32] zeroinitializer, align 4
@N_and_elements = internal global i32 0, align 4
@and_element_sizes = internal global [250 x i32] zeroinitializer, align 4
@.str.24 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.25 = private unnamed_addr global [26 x i8] c"And structure violation.\0A\00", align 1
@.str.26 = private unnamed_addr global [30 x i8] c"Incompatible domain ancestry\0A\00", align 1
@.str.27 = private unnamed_addr global [44 x i8] c"P.P. violation in one part of conjunction.\0A\00", align 1
@has_fat_down = common global [250 x i8] zeroinitializer, align 1
@image_array = common global [250 x %struct.Image_node_struct*] zeroinitializer, align 4
@LT_bound = internal global i32 0, align 4
@LT_size = internal global i32 0, align 4
@label_table = internal global %struct.Disjunct_struct** null, align 4
@hash_table = internal global [1024 x %struct.label_node_struct*] zeroinitializer, align 4
@N_andable_hash_table = internal global i32 0, align 4
@andable_hash_table = internal global %struct.Connector_struct** null, align 4
@.str.28 = private unnamed_addr global [19 x i8] c"ANDABLE-CONNECTORS\00", align 1
@STAT_calls_to_equality_test = internal global i32 0, align 4
@STAT_N_disjuncts = internal global i32 0, align 4
@.str.1.31 = private unnamed_addr global [39 x i8] c"Number of disjunct types (labels): %d\0A\00", align 1
@.str.2.32 = private unnamed_addr global [38 x i8] c"Number of disjuncts in the table: %d\0A\00", align 1
@.str.3.33 = private unnamed_addr global [25 x i8] c"average list length: %f\0A\00", align 1
@.str.4.34 = private unnamed_addr global [30 x i8] c"Number of equality tests: %d\0A\00", align 1
@.str.6.35 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.5.36 = private unnamed_addr global [41 x i8] c"A disjunct I inserted was not there. (1)\00", align 1
@.str.8.37 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.7.38 = private unnamed_addr global [41 x i8] c"A disjunct I inserted was not there. (2)\00", align 1
@.str.9.39 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.10.40 = private unnamed_addr global [4 x i8] c"and\00", align 1
@.str.11.41 = private unnamed_addr global [3 x i8] c"Sp\00", align 1
@.str.12.42 = private unnamed_addr global [4 x i8] c"SIp\00", align 1
@.str.13.43 = private unnamed_addr global [4 x i8] c"nor\00", align 1
@.str.14.44 = private unnamed_addr global [3 x i8] c"or\00", align 1
@.str.15.45 = private unnamed_addr global [2 x i8] c"S\00", align 1
@.str.16.46 = private unnamed_addr global [3 x i8] c"SI\00", align 1
@.str.18.47 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.17.48 = private unnamed_addr global [35 x i8] c"s and t should be the same length!\00", align 1
@.str.20.49 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.19.50 = private unnamed_addr global [24 x i8] c"Never found subdisjunct\00", align 1
@.str.22.51 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.21.52 = private unnamed_addr global [33 x i8] c"Should have found the down link.\00", align 1
@.str.24.53 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.23.54 = private unnamed_addr global [29 x i8] c"Should have found an up link\00", align 1
@.str.25.57 = private unnamed_addr global [11 x i8] c"word = %d\0A\00", align 1
@.str.26.58 = private unnamed_addr global [20 x i8] c"fat link: [%d, %d]\0A\00", align 1
@.str.27.59 = private unnamed_addr global [21 x i8] c"thin link: [%d, %d]\0A\00", align 1
@.str.29 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.28.60 = private unnamed_addr global [35 x i8] c"There should be a fat UP link here\00", align 1
@.str.31 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.30 = private unnamed_addr global [40 x i8] c"Should have found this connector string\00", align 1
@.str.1.61 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.62 = private unnamed_addr global [40 x i8] c"build_clause called with null parameter\00", align 1
@.str.3.63 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.2.64 = private unnamed_addr global [32 x i8] c"an expression node with no type\00", align 1
@.str.4.65 = private unnamed_addr global [3 x i8] c"%s\00", align 1
@.str.5.66 = private unnamed_addr global [4 x i8] c"%3d\00", align 1
@.str.6.67 = private unnamed_addr global [4 x i8] c"   \00", align 1
@.str.7.68 = private unnamed_addr global [2 x i8] c" \00", align 1
@.str.8.69 = private unnamed_addr global [2 x i8] c"@\00", align 1
@.str.9.70 = private unnamed_addr global [3 x i8] c"%s\00", align 1
@.str.10.71 = private unnamed_addr global [3 x i8] c"%c\00", align 1
@.str.11.72 = private unnamed_addr global [2 x i8] c" \00", align 1
@.str.12.73 = private unnamed_addr global [11 x i8] c"  Clause: \00", align 1
@.str.13.74 = private unnamed_addr global [11 x i8] c"(%2d, %2d)\00", align 1
@.str.14.75 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.15.76 = private unnamed_addr global [7 x i8] c"%10s: \00", align 1
@.str.16.77 = private unnamed_addr global [6 x i8] c"(%2d)\00", align 1
@.str.17.78 = private unnamed_addr global [7 x i8] c" <--> \00", align 1
@.str.18.79 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@N_links = common global i32 0, align 4
@link_array = common global [497 x %struct.Link_struct] zeroinitializer, align 4
@chosen_disjuncts = common global [250 x %struct.Disjunct_struct*] zeroinitializer, align 4
@forgiving = common global i8 0, align 1
@.str.1.86 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.87 = private unnamed_addr global [42 x i8] c"Error encountered while extracting links.\00", align 1
@mn_free_list = internal global %struct.Match_node_struct* null, align 4
@match_cost = internal global i32 0, align 4
@.str.90 = private unnamed_addr global [15 x i8] c"%d Match cost\0A\00", align 1
@l_table_size = internal global [250 x i32] zeroinitializer, align 4
@l_table = internal global [250 x %struct.Match_node_struct**] zeroinitializer, align 4
@r_table_size = internal global [250 x i32] zeroinitializer, align 4
@r_table = internal global [250 x %struct.Match_node_struct**] zeroinitializer, align 4
@.str.93 = private unnamed_addr global [5 x i8] c".I%d\00", align 1
@current_name = internal global [9 x i8] c"AAAAAAAA\00", align 1
@.str.1.94 = private unnamed_addr global [32 x i8] c"*** Word \22%s\22 on line %d is not\00", align 1
@.str.2.95 = private unnamed_addr global [35 x i8] c" a correctly formed idiom string.\0A\00", align 1
@.str.3.96 = private unnamed_addr global [31 x i8] c"    This word will be ignored\0A\00", align 1
@.str.4.97 = private unnamed_addr global [64 x i8] c"Idiom string with only one connector -- should have been caught\00", align 1
@maxlinklength = global i32 250, align 4
@null_link_search = global i32 1, align 4
@use_unknown_word = global i32 1, align 4
@verbosity = global i32 0, align 4
@screen_width = global i32 79, align 4
@display_short = global i32 1, align 4
@display_on = global i32 1, align 4
@display_links = global i32 0, align 4
@display_bad = global i32 0, align 4
@display_fat = global i32 0, align 4
@display_multiple = global i32 1, align 4
@display_postscript = global i32 0, align 4
@display_word_subscripts = global i32 1, align 4
@display_link_subscripts = global i32 1, align 4
@display_walls = global i32 0, align 4
@echo_on = global i32 0, align 4
@www_mode = global i32 0, align 4
@just_one = global i32 0, align 4
@linkage_count_limit = global i32 5000, align 4
@word_count_limit = global i32 250, align 4
@null_links = global i32 1, align 4
@N_words = common global i32 0, align 4
@sentence = common global [250 x %struct.Word_struct] zeroinitializer, align 4
@strip_left = global [3 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.116, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.117, i32 0, i32 0), i8* null], align 4
@.str.3.116 = private unnamed_addr global [2 x i8] c"(\00", align 1
@.str.4.117 = private unnamed_addr global [2 x i8] c"$\00", align 1
@strip_right = global [11 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.118, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.119, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.120, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.121, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.122, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.123, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.124, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.125, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13.126, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.127, i32 0, i32 0), i8* null], align 4
@.str.5.118 = private unnamed_addr global [2 x i8] c")\00", align 1
@.str.6.119 = private unnamed_addr global [2 x i8] c"%\00", align 1
@.str.7.120 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.8.121 = private unnamed_addr global [2 x i8] c".\00", align 1
@.str.9.122 = private unnamed_addr global [2 x i8] c":\00", align 1
@.str.10.123 = private unnamed_addr global [2 x i8] c";\00", align 1
@.str.11.124 = private unnamed_addr global [2 x i8] c"?\00", align 1
@.str.12.125 = private unnamed_addr global [2 x i8] c"!\00", align 1
@.str.13.126 = private unnamed_addr global [2 x i8] c"'\00", align 1
@.str.14.127 = private unnamed_addr global [3 x i8] c"'s\00", align 1
@left_wall_defined = common global i32 0, align 4
@right_wall_defined = common global i32 0, align 4
@capitalized_word_defined = common global i32 0, align 4
@unknown_word_defined = common global i32 0, align 4
@parse_cost = common global i32 0, align 4
@mark_cost = common global i32 0, align 4
@N_in_table = common global i32 0, align 4
@N_hash_lookups = common global i32 0, align 4
@work_in_hash_lookups = common global i32 0, align 4
@user_variable = global [19 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i32* @verbosity, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.39, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i32* @screen_width, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32* @linkage_count_limit, i32 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), i32* @display_on, i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i32 0, i32 0), i32* @display_multiple, i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32* @display_short, i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32* @display_postscript, i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32* @display_links, i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), i32* @display_bad, i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.55, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i32* @display_fat, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.57, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0), i32* @display_link_subscripts, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.59, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i32 0, i32 0), i32* @display_word_subscripts, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62.132, i32 0, i32 0), i32* @display_walls, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i32* @null_link_search, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i32 0, i32 0), i32* @use_unknown_word, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32* @echo_on, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i32* @www_mode, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0), i32* @just_one, i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i32 0, i32 0) }, %struct.anon { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.74, i32 0, i32 0), i32* null, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i32 0, i32 0) }], align 4
@.str.38 = private unnamed_addr global [10 x i8] c"verbosity\00", align 1
@.str.39 = private unnamed_addr global [46 x i8] c"Level of detail to give about the computation\00", align 1
@.str.40 = private unnamed_addr global [6 x i8] c"width\00", align 1
@.str.41 = private unnamed_addr global [25 x i8] c"The width of your screen\00", align 1
@.str.42 = private unnamed_addr global [6 x i8] c"limit\00", align 1
@.str.43 = private unnamed_addr global [41 x i8] c"The maximum number of linkages processed\00", align 1
@.str.44 = private unnamed_addr global [9 x i8] c"graphics\00", align 1
@.str.45 = private unnamed_addr global [23 x i8] c"Graphical link display\00", align 1
@.str.46 = private unnamed_addr global [9 x i8] c"multiple\00", align 1
@.str.47 = private unnamed_addr global [40 x i8] c"Expansion of fat (conjunctive) linkages\00", align 1
@.str.48 = private unnamed_addr global [6 x i8] c"short\00", align 1
@.str.49 = private unnamed_addr global [23 x i8] c"Reduced height display\00", align 1
@.str.50 = private unnamed_addr global [11 x i8] c"postscript\00", align 1
@.str.51 = private unnamed_addr global [30 x i8] c"Generating of postscript data\00", align 1
@.str.52 = private unnamed_addr global [6 x i8] c"links\00", align 1
@.str.53 = private unnamed_addr global [30 x i8] c"Showing of complete link data\00", align 1
@.str.54 = private unnamed_addr global [4 x i8] c"bad\00", align 1
@.str.55 = private unnamed_addr global [43 x i8] c"Showing of linkages failing postprocessing\00", align 1
@.str.56 = private unnamed_addr global [4 x i8] c"fat\00", align 1
@.str.57 = private unnamed_addr global [38 x i8] c"Showing of fat (conjunctive) linkages\00", align 1
@.str.58 = private unnamed_addr global [12 x i8] c"lsubscripts\00", align 1
@.str.59 = private unnamed_addr global [32 x i8] c"Showing of complete link labels\00", align 1
@.str.60 = private unnamed_addr global [12 x i8] c"wsubscripts\00", align 1
@.str.61 = private unnamed_addr global [27 x i8] c"Showing of word subscripts\00", align 1
@.str.62.132 = private unnamed_addr global [6 x i8] c"walls\00", align 1
@.str.63 = private unnamed_addr global [22 x i8] c"Always show the walls\00", align 1
@.str.64 = private unnamed_addr global [5 x i8] c"null\00", align 1
@.str.65 = private unnamed_addr global [17 x i8] c"Null link search\00", align 1
@.str.66 = private unnamed_addr global [8 x i8] c"unknown\00", align 1
@.str.67 = private unnamed_addr global [39 x i8] c"Using of the \22unknown word\22 definition\00", align 1
@.str.68 = private unnamed_addr global [5 x i8] c"echo\00", align 1
@.str.69 = private unnamed_addr global [26 x i8] c"Echoing of input sentence\00", align 1
@.str.70 = private unnamed_addr global [4 x i8] c"www\00", align 1
@.str.71 = private unnamed_addr global [22 x i8] c"Suppression of prompt\00", align 1
@.str.72 = private unnamed_addr global [8 x i8] c"justone\00", align 1
@.str.73 = private unnamed_addr global [31 x i8] c"Displaying of just one linkage\00", align 1
@.str.74 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.75 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@user_command = global [5 x %struct.anon.0] [%struct.anon.0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0) }, %struct.anon.0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.79, i32 0, i32 0) }, %struct.anon.0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.81, i32 0, i32 0) }, %struct.anon.0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.83, i32 0, i32 0) }, %struct.anon.0 zeroinitializer], align 4
@.str.76 = private unnamed_addr global [5 x i8] c"quit\00", align 1
@.str.77 = private unnamed_addr global [16 x i8] c"Exit the system\00", align 1
@.str.78 = private unnamed_addr global [5 x i8] c"save\00", align 1
@.str.79 = private unnamed_addr global [36 x i8] c"Save your changes to the dictionary\00", align 1
@.str.80 = private unnamed_addr global [10 x i8] c"variables\00", align 1
@.str.81 = private unnamed_addr global [49 x i8] c"List user-settable variables and their functions\00", align 1
@.str.82 = private unnamed_addr global [5 x i8] c"help\00", align 1
@.str.83 = private unnamed_addr global [35 x i8] c"List the commands and what they do\00", align 1
@is_conjunction = common global [250 x i8] zeroinitializer, align 1
@deletable = common global [250 x i8*] zeroinitializer, align 4
@postprocess_defined = common global i32 0, align 4
@andable_defined = common global i32 0, align 4
@cumulative_time = common global double 0.000000e+00, align 8
@.str.137 = private unnamed_addr global [28 x i8] c"The word \22%s\22 is too long.\0A\00", align 1
@.str.1.138 = private unnamed_addr global [45 x i8] c"A word can have a maximum of %d characters.\0A\00", align 1
@.str.2.139 = private unnamed_addr global [34 x i8] c"The sentence has too many words.\0A\00", align 1
@.str.15.140 = private unnamed_addr global [49 x i8] c"\22%s\22 is followed by too many punctuation marks.\0A\00", align 1
@.str.16.141 = private unnamed_addr global [10 x i8] c"LEFT-WALL\00", align 1
@.str.17.142 = private unnamed_addr global [11 x i8] c"RIGHT-WALL\00", align 1
@.str.18.143 = private unnamed_addr global [42 x i8] c"To process this sentence your dictionary \00", align 1
@.str.19.144 = private unnamed_addr global [22 x i8] c"needs the word \22%s\22.\0A\00", align 1
@.str.20.145 = private unnamed_addr global [13 x i8] c"UNKNOWN-WORD\00", align 1
@.str.22.146 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.21.147 = private unnamed_addr global [36 x i8] c"UNKNOWN_WORD should have been there\00", align 1
@.str.23.148 = private unnamed_addr global [14 x i8] c"%.50s[?].%.5s\00", align 1
@.str.24.149 = private unnamed_addr global [9 x i8] c"%.50s[?]\00", align 1
@.str.25.150 = private unnamed_addr global [18 x i8] c"CAPITALIZED-WORDS\00", align 1
@.str.26.151 = private unnamed_addr global [8 x i8] c"NUMBERS\00", align 1
@.str.27.152 = private unnamed_addr global [17 x i8] c"HYPHENATED-WORDS\00", align 1
@.str.29.153 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.28.154 = private unnamed_addr global [31 x i8] c"I should have found that word.\00", align 1
@.str.30.155 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.31.156 = private unnamed_addr global [15 x i8] c"%d parse cost\0A\00", align 1
@.str.32 = private unnamed_addr global [14 x i8] c"%d mark cost\0A\00", align 1
@.str.33 = private unnamed_addr global [18 x i8] c"%d in hash table\0A\00", align 1
@.str.34 = private unnamed_addr global [17 x i8] c"%d hash lookups\0A\00", align 1
@.str.35 = private unnamed_addr global [20 x i8] c"%f cost per lookup\0A\00", align 1
@.str.36 = private unnamed_addr global [30 x i8] c"%d maximum bytes ever in use\0A\00", align 1
@.str.37 = private unnamed_addr global [22 x i8] c"%d unreclaimed space\0A\00", align 1
@.str.84 = private unnamed_addr global [50 x i8] c"Ambiguous command.  Type \22!help\22 or \22!variables\22\0A\00", align 1
@.str.85 = private unnamed_addr global [3 x i8] c"on\00", align 1
@.str.86 = private unnamed_addr global [4 x i8] c"off\00", align 1
@.str.87.157 = private unnamed_addr global [15 x i8] c"%s turned %s.\0A\00", align 1
@.str.88 = private unnamed_addr global [5 x i8] c"quit\00", align 1
@.str.89 = private unnamed_addr global [49 x i8] c"You have changed some files and not saved them.\0A\00", align 1
@.str.90.158 = private unnamed_addr global [52 x i8] c"Either save your files with \22!save\22 and then quit,\0A\00", align 1
@.str.91 = private unnamed_addr global [54 x i8] c"or get out without saving your files with control-C.\0A\00", align 1
@.str.92 = private unnamed_addr global [5 x i8] c"mark\00", align 1
@.str.93.159 = private unnamed_addr global [9 x i8] c"mark: %s\00", align 1
@.str.94 = private unnamed_addr global [5 x i8] c"save\00", align 1
@.str.95 = private unnamed_addr global [25 x i8] c"No changes to be saved.\0A\00", align 1
@.str.96 = private unnamed_addr global [10 x i8] c"variables\00", align 1
@.str.97 = private unnamed_addr global [67 x i8] c" Variable     Controls                                      Value\0A\00", align 1
@.str.98 = private unnamed_addr global [67 x i8] c" --------     --------                                      -----\0A\00", align 1
@.str.99 = private unnamed_addr global [2 x i8] c" \00", align 1
@.str.100 = private unnamed_addr global [14 x i8] c"             \00", align 1
@.str.101 = private unnamed_addr global [47 x i8] c"                                              \00", align 1
@.str.102 = private unnamed_addr global [4 x i8] c"%5d\00", align 1
@.str.103 = private unnamed_addr global [6 x i8] c" (On)\00", align 1
@.str.104 = private unnamed_addr global [7 x i8] c" (Off)\00", align 1
@.str.105 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.106 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.107 = private unnamed_addr global [78 x i8] c"Toggle a boolean variable as in \22!links\22, set a variable as in \22!width=100\22.\0A\00", align 1
@.str.108 = private unnamed_addr global [5 x i8] c"help\00", align 1
@.str.109 = private unnamed_addr global [69 x i8] c"Special commands always begin with \22!\22.  Command and variable names\0A\00", align 1
@.str.110 = private unnamed_addr global [55 x i8] c"can be abbreviated.  Here is a list of the commands:\0A\0A\00", align 1
@.str.111 = private unnamed_addr global [3 x i8] c" !\00", align 1
@.str.112 = private unnamed_addr global [19 x i8] c"                  \00", align 1
@.str.113 = private unnamed_addr global [53 x i8] c"                                                    \00", align 1
@.str.114 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.115 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.116 = private unnamed_addr global [71 x i8] c" !!<string>         Print all the dictionary words matching <string>.\0A\00", align 1
@.str.117 = private unnamed_addr global [65 x i8] c"                    Also print the number of disjuncts of each.\0A\00", align 1
@.str.118 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.119 = private unnamed_addr global [72 x i8] c" !-<string>         Delete all the dictionary words matching <string>.\0A\00", align 1
@.str.120 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.121 = private unnamed_addr global [72 x i8] c" !<string>=<word>   This indicates that a new word (<string>) is to be\0A\00", align 1
@.str.122 = private unnamed_addr global [74 x i8] c"                    added to the dictionary.  Its definition will be the\0A\00", align 1
@.str.123 = private unnamed_addr global [74 x i8] c"                    same as that of <word>, and, if appropriate, it will\0A\00", align 1
@.str.124 = private unnamed_addr global [58 x i8] c"                    be added to the word file of <word>.\0A\00", align 1
@.str.125 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.126 = private unnamed_addr global [60 x i8] c" !<var>             Toggle the specified boolean variable.\0A\00", align 1
@.str.127 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.128 = private unnamed_addr global [57 x i8] c" !<var>=<val>       Assign that value to that variable.\0A\00", align 1
@.str.129 = private unnamed_addr global [45 x i8] c"    \22%s\22 matches nothing in the dictionary.\0A\00", align 1
@.str.130 = private unnamed_addr global [10 x i8] c"Matches:\0A\00", align 1
@.str.131 = private unnamed_addr global [11 x i8] c"          \00", align 1
@.str.132 = private unnamed_addr global [19 x i8] c"                  \00", align 1
@.str.133 = private unnamed_addr global [7 x i8] c" %5d  \00", align 1
@.str.134 = private unnamed_addr global [5 x i8] c"<%s>\00", align 1
@.str.135 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.136 = private unnamed_addr global [45 x i8] c"    \22%s\22 matches nothing in the dictionary.\0A\00", align 1
@.str.137.160 = private unnamed_addr global [12 x i8] c"Note: \22%s\22 \00", align 1
@.str.138 = private unnamed_addr global [53 x i8] c"matches the following words in the main dictionary:\0A\00", align 1
@.str.139 = private unnamed_addr global [5 x i8] c" %s \00", align 1
@.str.140 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.141 = private unnamed_addr global [11 x i8] c"Deleting:\0A\00", align 1
@.str.142 = private unnamed_addr global [5 x i8] c" %s \00", align 1
@.str.144 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.143 = private unnamed_addr global [47 x i8] c"Attempt to delete a word not in the dictonary.\00", align 1
@.str.145 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.146 = private unnamed_addr global [40 x i8] c"There is no user variable called \22%s\22.\0A\00", align 1
@.str.147 = private unnamed_addr global [14 x i8] c"%s set to %d\0A\00", align 1
@.str.148 = private unnamed_addr global [37 x i8] c"    words ending \22.Ix\22 (x a number) \00", align 1
@.str.149 = private unnamed_addr global [25 x i8] c"are reserved for idioms\0A\00", align 1
@.str.150 = private unnamed_addr global [51 x i8] c"    \22%s\22 matches words already in the dictionary:\0A\00", align 1
@.str.151 = private unnamed_addr global [4 x i8] c"%s \00", align 1
@.str.152 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.153 = private unnamed_addr global [36 x i8] c"    \22%s\22 is not in the dictionary.\0A\00", align 1
@.str.154 = private unnamed_addr global [44 x i8] c"    Please be more precise.  \22%s\22 matches:\0A\00", align 1
@.str.155 = private unnamed_addr global [4 x i8] c"%s \00", align 1
@.str.156 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.157 = private unnamed_addr global [50 x i8] c"    \22%s\22 is in the dictionary but not in a file.\0A\00", align 1
@.str.158 = private unnamed_addr global [34 x i8] c"    This word will not be saved.\0A\00", align 1
@.str.159 = private unnamed_addr global [35 x i8] c"    \22%s\22 added to the dictionary.\0A\00", align 1
@.str.160 = private unnamed_addr global [14 x i8] c"Try \22!help\22.\0A\00", align 1
@.str.161 = private unnamed_addr global [47 x i8] c"The following words are not in the dictionary:\00", align 1
@.str.162 = private unnamed_addr global [6 x i8] c" \22%s\22\00", align 1
@.str.163 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.164 = private unnamed_addr global [4 x i8] c"and\00", align 1
@.str.165 = private unnamed_addr global [3 x i8] c"or\00", align 1
@.str.166 = private unnamed_addr global [4 x i8] c"but\00", align 1
@.str.167 = private unnamed_addr global [4 x i8] c"nor\00", align 1
@.str.168 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.169 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.170 = private unnamed_addr global [7 x i8] c"either\00", align 1
@.str.171 = private unnamed_addr global [8 x i8] c"neither\00", align 1
@.str.172 = private unnamed_addr global [5 x i8] c"both\00", align 1
@.str.173 = private unnamed_addr global [4 x i8] c"not\00", align 1
@.str.174 = private unnamed_addr global [5 x i8] c"only\00", align 1
@.str.175 = private unnamed_addr global [4 x i8] c"not\00", align 1
@.str.176 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.177 = private unnamed_addr global [8 x i8] c"++++%s\0A\00", align 1
@.str.178 = private unnamed_addr global [23 x i8] c"Raw expression sizes:\0A\00", align 1
@.str.179 = private unnamed_addr global [24 x i8] c"Done expression pruning\00", align 1
@.str.180 = private unnamed_addr global [44 x i8] c"After expanding expressions into disjuncts:\00", align 1
@.str.181 = private unnamed_addr global [16 x i8] c"Built disjuncts\00", align 1
@.str.182 = private unnamed_addr global [31 x i8] c"Eliminated duplicate disjuncts\00", align 1
@.str.183 = private unnamed_addr global [54 x i8] c"\0AAfter expression pruning and duplicate elimination:\0A\00", align 1
@.str.184 = private unnamed_addr global [30 x i8] c"\0AAfter Gentle power pruning:\0A\00", align 1
@.str.185 = private unnamed_addr global [30 x i8] c"Finished gentle power pruning\00", align 1
@.str.186 = private unnamed_addr global [29 x i8] c"\0AAfter conjunction pruning:\0A\00", align 1
@.str.187 = private unnamed_addr global [25 x i8] c"Done conjunction pruning\00", align 1
@.str.188 = private unnamed_addr global [39 x i8] c"After conjunctions, disjuncts counts:\0A\00", align 1
@.str.189 = private unnamed_addr global [26 x i8] c"Constructed fat disjuncts\00", align 1
@.str.190 = private unnamed_addr global [21 x i8] c"Pruned fat disjuncts\00", align 1
@.str.191 = private unnamed_addr global [42 x i8] c"After pruning and duplicate elimination:\0A\00", align 1
@.str.192 = private unnamed_addr global [39 x i8] c"Eliminated duplicate disjuncts (again)\00", align 1
@.str.193 = private unnamed_addr global [23 x i8] c"\0AAfter power-pruning:\0A\00", align 1
@.str.194 = private unnamed_addr global [24 x i8] c"Ruthlessly power pruned\00", align 1
@.str.195 = private unnamed_addr global [40 x i8] c"Initialized fast matcher and hash table\00", align 1
@.str.196 = private unnamed_addr global [39 x i8] c"Not accepted (no linkage exists) at %s\00", align 1
@.str.197 = private unnamed_addr global [18 x i8] c"No linkages at %s\00", align 1
@.str.198 = private unnamed_addr global [56 x i8] c"Not accepted (unique linkage with P.P. violation) at %s\00", align 1
@.str.199 = private unnamed_addr global [41 x i8] c"Unique linkage with P.P. violation at %s\00", align 1
@.str.200 = private unnamed_addr global [15 x i8] c"Accepted at %s\00", align 1
@.str.201 = private unnamed_addr global [59 x i8] c"Not accepted (%d linkages, all with P.P. violations) at %s\00", align 1
@.str.202 = private unnamed_addr global [45 x i8] c"%d linkages (all with P.P. violations) at %s\00", align 1
@.str.203 = private unnamed_addr global [57 x i8] c"Accepted (%d linkages, %d with no P.P. violations) at %s\00", align 1
@.str.204 = private unnamed_addr global [17 x i8] c" (shown above)\0A\0A\00", align 1
@.str.205 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@stage_name.answer = internal global [100 x i8] zeroinitializer, align 1
@.str.206 = private unnamed_addr global [9 x i8] c"stage %d\00", align 1
@.str.207 = private unnamed_addr global [14 x i8] c"null count %d\00", align 1
@.str.208 = private unnamed_addr global [3 x i8] c"> \00", align 1
@.str.209 = private unnamed_addr global [27 x i8] c"Your sentence is too long\0A\00", align 1
@.str.210 = private unnamed_addr global [39 x i8] c"Try a sentence with at most %d words.\0A\00", align 1
@.str.211 = private unnamed_addr global [33 x i8] c"Constructed disjunct expressions\00", align 1
@.str.212 = private unnamed_addr global [17 x i8] c"Cost cutoff: %d\0A\00", align 1
@.str.213 = private unnamed_addr global [63 x i8] c"Warning: only the first %d of %d linkages will be considered.\0A\00", align 1
@.str.214 = private unnamed_addr global [19 x i8] c"Counted %d linkges\00", align 1
@.str.216 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.215 = private unnamed_addr global [34 x i8] c"None of the linkages is canonical\00", align 1
@.str.217 = private unnamed_addr global [27 x i8] c"Postprocessed all linkages\00", align 1
@.str.218 = private unnamed_addr global [13 x i8] c"  Linkage %d\00", align 1
@.str.219 = private unnamed_addr global [17 x i8] c"  Unique linkage\00", align 1
@.str.220 = private unnamed_addr global [9 x i8] c" (bad), \00", align 1
@.str.221 = private unnamed_addr global [3 x i8] c", \00", align 1
@.str.222 = private unnamed_addr global [28 x i8] c"cost vector = (%d, %d, %d)\0A\00", align 1
@.str.223 = private unnamed_addr global [28 x i8] c"(press return for another)\0A\00", align 1
@.str.224 = private unnamed_addr global [3 x i8] c"> \00", align 1
@.str.225 = private unnamed_addr global [19 x i8] c"Displayed linkages\00", align 1
@.str.226 = private unnamed_addr global [26 x i8] c"Freed all data structures\00", align 1
@.str.227 = private unnamed_addr global [36 x i8] c"Warning: %d bytes of space leaked.\0A\00", align 1
@.str.228 = private unnamed_addr global [19 x i8] c"Sentence too long\0A\00", align 1
@.str.229 = private unnamed_addr global [32 x i8] c"--- in the following sentence:\0A\00", align 1
@.str.230 = private unnamed_addr global [4 x i8] c"%c \00", align 1
@.str.231 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.232 = private unnamed_addr global [33 x i8] c"Constructed disjunct expressions\00", align 1
@.str.233 = private unnamed_addr global [4 x i8] c"%c \00", align 1
@.str.234 = private unnamed_addr global [30 x i8] c"Cost cutoff: %d  maxcost: %d\0A\00", align 1
@.str.235 = private unnamed_addr global [17 x i8] c"Counted linkages\00", align 1
@.str.236 = private unnamed_addr global [28 x i8] c"Postprocessed some linkages\00", align 1
@.str.237 = private unnamed_addr global [26 x i8] c"--- No linkage for (%s): \00", align 1
@.str.238 = private unnamed_addr global [4 x i8] c"%c \00", align 1
@.str.239 = private unnamed_addr global [30 x i8] c"--- No linkage for this (%s)\0A\00", align 1
@.str.240 = private unnamed_addr global [57 x i8] c"--- unique linkage, with post-processing violation (%s)\0A\00", align 1
@.str.241 = private unnamed_addr global [16 x i8] c"--- %d linkages\00", align 1
@.str.242 = private unnamed_addr global [38 x i8] c", all with post-processing violations\00", align 1
@.str.243 = private unnamed_addr global [7 x i8] c" (%s)\0A\00", align 1
@.str.244 = private unnamed_addr global [15 x i8] c"--- %s Input: \00", align 1
@.str.245 = private unnamed_addr global [4 x i8] c"%c \00", align 1
@.str.246 = private unnamed_addr global [18 x i8] c"--- Accepted %s:\0A\00", align 1
@.str.247 = private unnamed_addr global [16 x i8] c"--- %s Input:  \00", align 1
@.str.248 = private unnamed_addr global [4 x i8] c"%c \00", align 1
@.str.249 = private unnamed_addr global [18 x i8] c"--- Accepted %s:\0A\00", align 1
@.str.250 = private unnamed_addr global [40 x i8] c"p.p. violations: %d, disjunct cost: %d\0A\00", align 1
@.str.251 = private unnamed_addr global [15 x i8] c"--- %s Input: \00", align 1
@.str.252 = private unnamed_addr global [4 x i8] c"%c \00", align 1
@.str.253 = private unnamed_addr global [18 x i8] c"--- Accepted %s:\0A\00", align 1
@.str.254 = private unnamed_addr global [19 x i8] c"Displayed linkages\00", align 1
@.str.255 = private unnamed_addr global [26 x i8] c"Freed all data structures\00", align 1
@.str.256 = private unnamed_addr global [36 x i8] c"Warning: %d bytes of space leaked.\0A\00", align 1
@.str.257 = private unnamed_addr global [12 x i8] c"No errors!\0A\00", align 1
@.str.258 = private unnamed_addr global [12 x i8] c"One error.\0A\00", align 1
@.str.259 = private unnamed_addr global [12 x i8] c"%d errors.\0A\00", align 1
@.str.260 = private unnamed_addr global [11 x i8] c"-wordlimit\00", align 1
@.str.261 = private unnamed_addr global [3 x i8] c"%d\00", align 1
@.str.262 = private unnamed_addr global [11 x i8] c"-linklimit\00", align 1
@.str.263 = private unnamed_addr global [3 x i8] c"%d\00", align 1
@.str.264 = private unnamed_addr global [7 x i8] c"-batch\00", align 1
@.str.265 = private unnamed_addr global [76 x i8] c"Usage: %s dictionary-file [-batch] [-wordlimit number] [-linklimit number]\0A\00", align 1
@.str.266 = private unnamed_addr global [33 x i8] c"\0A Reading the dictionary files: \00", align 1
@.str.267 = private unnamed_addr global [33 x i8] c"\0A %d words stored in %d bytes\0A\0A\0A\00", align 1
@.str.268 = private unnamed_addr global [44 x i8] c"Welcome to the Link Parser -- Version 2.1\0A\0A\00", align 1
@.str.269 = private unnamed_addr global [11 x i8] c"          \00", align 1
@.str.270 = private unnamed_addr global [60 x i8] c"Copyright (C) 1991-1995 Daniel Sleator and Davy Temperley\0A\0A\00", align 1
@.str.271 = private unnamed_addr global [10 x i8] c"LEFT-WALL\00", align 1
@.str.272 = private unnamed_addr global [11 x i8] c"RIGHT-WALL\00", align 1
@.str.273 = private unnamed_addr global [12 x i8] c"POSTPROCESS\00", align 1
@.str.274 = private unnamed_addr global [19 x i8] c"ANDABLE-CONNECTORS\00", align 1
@.str.275 = private unnamed_addr global [13 x i8] c"UNKNOWN-WORD\00", align 1
@.str.276 = private unnamed_addr global [18 x i8] c"CAPITALIZED-WORDS\00", align 1
@.str.277 = private unnamed_addr global [36 x i8] c"Processing sentences in batch mode\0A\00", align 1
@.str.278 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.279 = private unnamed_addr global [37 x i8] c"Type your sentence and press Return \00", align 1
@.str.280 = private unnamed_addr global [24 x i8] c"(\22!help\22 for options).\0A\00", align 1
@.str.281 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.282 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.1.283 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.2.286 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.4.287 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.3.288 = private unnamed_addr global [2 x i8] c",\00", align 1
@.str.5.291 = private unnamed_addr global [7 x i8] c"either\00", align 1
@.str.6.292 = private unnamed_addr global [7 x i8] c"either\00", align 1
@.str.8.293 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.7.294 = private unnamed_addr global [7 x i8] c"either\00", align 1
@.str.9.295 = private unnamed_addr global [3 x i8] c"or\00", align 1
@.str.10.298 = private unnamed_addr global [8 x i8] c"neither\00", align 1
@.str.11.299 = private unnamed_addr global [4 x i8] c"nor\00", align 1
@.str.12.300 = private unnamed_addr global [8 x i8] c"neither\00", align 1
@.str.14.301 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.13.302 = private unnamed_addr global [8 x i8] c"neither\00", align 1
@.str.15.303 = private unnamed_addr global [4 x i8] c"nor\00", align 1
@.str.16.306 = private unnamed_addr global [4 x i8] c"not\00", align 1
@.str.17.307 = private unnamed_addr global [4 x i8] c"not\00", align 1
@.str.19.308 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.18.309 = private unnamed_addr global [4 x i8] c"not\00", align 1
@.str.20.310 = private unnamed_addr global [5 x i8] c"only\00", align 1
@.str.22.311 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.21.312 = private unnamed_addr global [5 x i8] c"only\00", align 1
@.str.24.313 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.23.314 = private unnamed_addr global [4 x i8] c"not\00", align 1
@.str.25.315 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.26.316 = private unnamed_addr global [4 x i8] c"but\00", align 1
@.str.27.319 = private unnamed_addr global [5 x i8] c"both\00", align 1
@.str.28.320 = private unnamed_addr global [5 x i8] c"both\00", align 1
@.str.30.321 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.29.322 = private unnamed_addr global [5 x i8] c"both\00", align 1
@.str.31.323 = private unnamed_addr global [4 x i8] c"and\00", align 1
@"\01?hMutexList@@3PAPAXA" = global [20 x i8*] zeroinitializer, align 4
@"\01?MutexFuncList@@3PAPAXA" = global [20 x i8*] zeroinitializer, align 4
@"\01?WhileEndFlag@@3PAHA" = global [20 x i32] zeroinitializer, align 4
@"\01?GlobalSignal@@3HA" = global i32 -1, align 4
@"\01?GlobalThreadID@@3HA" = global i32 -1, align 4
@"\01?thresholdForOthread@@3HA" = global i32 5, align 4
@"\01?threadNumForOthread@@3HA" = global i32 11, align 4
@"\01?FunctionGrgphForOthread@@3PAY0DOI@HA" = global [20 x [1000 x i32]] zeroinitializer, align 4
@"\01?totalnum@@3HA" = global i32 0, align 4
@"\01?CalcCallNumForOthread@@3PAY0DOI@HA" = global [20 x [1000 x i32]] zeroinitializer, align 4
@.str.324 = private unnamed_addr global [12 x i8] c"total = %d\0A\00", align 1
@.str.1.325 = private unnamed_addr global [10 x i8] c"%d-%d:%d\0A\00", align 1
@table_size = internal global i32 0, align 4
@table = internal global %struct.Table_connector** null, align 4
@.str.1.334 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.335 = private unnamed_addr global [43 x i8] c"This entry is supposed to be in the table.\00", align 1
@.str.2.338 = private unnamed_addr global [32 x i8] c"Total count with cost %d:   %d\0A\00", align 1
@CDNP_array = global [44 x %struct.connector_domain_name_pair_struct] [%struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.341, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.342, i32 0, i32 0), i32 114 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.343, i32 0, i32 0), i32 114 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.344, i32 0, i32 0), i32 109 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.345, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.346, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.347, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.348, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.349, i32 0, i32 0), i32 114 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.350, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.351, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.352, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.353, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.354, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.355, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.356, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.357, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.358, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.359, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.360, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.361, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.362, i32 0, i32 0), i32 106 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.363, i32 0, i32 0), i32 109 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.364, i32 0, i32 0), i32 106 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.365, i32 0, i32 0), i32 120 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.366, i32 0, i32 0), i32 120 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26.367, i32 0, i32 0), i32 120 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.368, i32 0, i32 0), i32 100 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.369, i32 0, i32 0), i32 100 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29.370, i32 0, i32 0), i32 100 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.371, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.372, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.373, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.374, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.375, i32 0, i32 0), i32 115 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.376, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36.377, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37.378, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38.379, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.380, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40.381, i32 0, i32 0), i32 101 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41.382, i32 0, i32 0), i32 100 }, %struct.connector_domain_name_pair_struct { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42.383, i32 0, i32 0), i32 114 }, %struct.connector_domain_name_pair_struct zeroinitializer], align 4
@.str.341 = private unnamed_addr global [3 x i8] c"Ce\00", align 1
@.str.1.342 = private unnamed_addr global [2 x i8] c"R\00", align 1
@.str.2.343 = private unnamed_addr global [3 x i8] c"Re\00", align 1
@.str.3.344 = private unnamed_addr global [2 x i8] c"W\00", align 1
@.str.4.345 = private unnamed_addr global [4 x i8] c"RSe\00", align 1
@.str.5.346 = private unnamed_addr global [3 x i8] c"Cs\00", align 1
@.str.6.347 = private unnamed_addr global [3 x i8] c"Ca\00", align 1
@.str.7.348 = private unnamed_addr global [3 x i8] c"Jr\00", align 1
@.str.8.349 = private unnamed_addr global [3 x i8] c"Mr\00", align 1
@.str.9.350 = private unnamed_addr global [3 x i8] c"Cc\00", align 1
@.str.10.351 = private unnamed_addr global [3 x i8] c"Mv\00", align 1
@.str.11.352 = private unnamed_addr global [5 x i8] c"QI#d\00", align 1
@.str.12.353 = private unnamed_addr global [5 x i8] c"BIqx\00", align 1
@.str.13.354 = private unnamed_addr global [4 x i8] c"TOn\00", align 1
@.str.14.355 = private unnamed_addr global [4 x i8] c"TOi\00", align 1
@.str.15.356 = private unnamed_addr global [4 x i8] c"MVi\00", align 1
@.str.16.357 = private unnamed_addr global [5 x i8] c"MV#o\00", align 1
@.str.17.358 = private unnamed_addr global [5 x i8] c"MV#p\00", align 1
@.str.18.359 = private unnamed_addr global [4 x i8] c"AFd\00", align 1
@.str.19.360 = private unnamed_addr global [4 x i8] c"PFc\00", align 1
@.str.20.361 = private unnamed_addr global [3 x i8] c"Mg\00", align 1
@.str.21.362 = private unnamed_addr global [3 x i8] c"Mj\00", align 1
@.str.22.363 = private unnamed_addr global [3 x i8] c"Qd\00", align 1
@.str.23.364 = private unnamed_addr global [5 x i8] c"MX#j\00", align 1
@.str.24.365 = private unnamed_addr global [4 x i8] c"TOo\00", align 1
@.str.25.366 = private unnamed_addr global [4 x i8] c"I#j\00", align 1
@.str.26.367 = private unnamed_addr global [6 x i8] c"Pa##j\00", align 1
@.str.27.368 = private unnamed_addr global [4 x i8] c"COp\00", align 1
@.str.28.369 = private unnamed_addr global [5 x i8] c"SFsx\00", align 1
@.str.29.370 = private unnamed_addr global [5 x i8] c"Ss#g\00", align 1
@.str.30.371 = private unnamed_addr global [6 x i8] c"SIs#g\00", align 1
@.str.31.372 = private unnamed_addr global [5 x i8] c"Ss#d\00", align 1
@.str.32.373 = private unnamed_addr global [4 x i8] c"Bsd\00", align 1
@.str.33.374 = private unnamed_addr global [3 x i8] c"ER\00", align 1
@.str.34.375 = private unnamed_addr global [2 x i8] c"Z\00", align 1
@.str.35.376 = private unnamed_addr global [3 x i8] c"Ma\00", align 1
@.str.36.377 = private unnamed_addr global [5 x i8] c"MX#p\00", align 1
@.str.37.378 = private unnamed_addr global [3 x i8] c"Ci\00", align 1
@.str.38.379 = private unnamed_addr global [5 x i8] c"MX#a\00", align 1
@.str.39.380 = private unnamed_addr global [3 x i8] c"Eq\00", align 1
@.str.40.381 = private unnamed_addr global [4 x i8] c"COq\00", align 1
@.str.41.382 = private unnamed_addr global [3 x i8] c"CP\00", align 1
@.str.42.383 = private unnamed_addr global [5 x i8] c"MX#r\00", align 1
@domain_array = internal global [497 x %struct.domain_struct] zeroinitializer, align 4
@.str.43.384 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@N_domains = internal global i32 0, align 4
@.str.44.385 = private unnamed_addr global [16 x i8] c"domain %d \22%s\22\0A\00", align 1
@word_links.386 = internal global [250 x %struct.List_o_links_struct*] zeroinitializer, align 4
@ignore_these_links = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.211.387, i32 0, i32 0), i8* null], align 4
@.str.211.387 = private unnamed_addr global [4 x i8] c"Xca\00", align 1
@visited.388 = internal global [250 x i32] zeroinitializer, align 4
@restricted_links = internal global [22 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212.389, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213.390, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.214.391, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.215.392, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.216.393, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.217.394, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.218.395, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.219.396, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.220.397, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.221.398, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.222.399, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.223.400, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.224.401, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.225.402, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.226.403, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227.404, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.228.405, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.229.406, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.230.407, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231.408, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.232.409, i32 0, i32 0), i8* null], align 4
@.str.212.389 = private unnamed_addr global [4 x i8] c"B#*\00", align 1
@.str.213.390 = private unnamed_addr global [5 x i8] c"D##w\00", align 1
@.str.214.391 = private unnamed_addr global [4 x i8] c"B#w\00", align 1
@.str.215.392 = private unnamed_addr global [4 x i8] c"B#d\00", align 1
@.str.216.393 = private unnamed_addr global [4 x i8] c"AFh\00", align 1
@.str.217.394 = private unnamed_addr global [4 x i8] c"MVt\00", align 1
@.str.218.395 = private unnamed_addr global [3 x i8] c"Xx\00", align 1
@.str.219.396 = private unnamed_addr global [3 x i8] c"HL\00", align 1
@.str.220.397 = private unnamed_addr global [6 x i8] c"SFsic\00", align 1
@.str.221.398 = private unnamed_addr global [4 x i8] c"AFd\00", align 1
@.str.222.399 = private unnamed_addr global [3 x i8] c"Bc\00", align 1
@.str.223.400 = private unnamed_addr global [3 x i8] c"CX\00", align 1
@.str.224.401 = private unnamed_addr global [3 x i8] c"CP\00", align 1
@.str.225.402 = private unnamed_addr global [4 x i8] c"EAh\00", align 1
@.str.226.403 = private unnamed_addr global [2 x i8] c"H\00", align 1
@.str.227.404 = private unnamed_addr global [3 x i8] c"HA\00", align 1
@.str.228.405 = private unnamed_addr global [4 x i8] c"PFc\00", align 1
@.str.229.406 = private unnamed_addr global [4 x i8] c"B#j\00", align 1
@.str.230.407 = private unnamed_addr global [3 x i8] c"Wd\00", align 1
@.str.231.408 = private unnamed_addr global [3 x i8] c"PF\00", align 1
@.str.232.409 = private unnamed_addr global [2 x i8] c"Z\00", align 1
@domain_starter_links = internal global [38 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.233.410, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234.411, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.235.412, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.236.413, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.237.414, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.238.415, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.239.416, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240.417, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.241.418, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242.419, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243.420, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.244.421, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245.422, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246.423, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247.424, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.248.425, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249.426, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.250.427, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.251.428, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.252.429, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.253.430, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.254.431, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.255.432, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.256.433, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.257.434, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.258.435, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.259.436, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.260.437, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.261.438, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.262.439, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.263.440, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.264.441, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.265.442, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.266.443, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.267.444, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.268.445, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.269.446, i32 0, i32 0), i8* null], align 4
@.str.233.410 = private unnamed_addr global [2 x i8] c"W\00", align 1
@.str.234.411 = private unnamed_addr global [3 x i8] c"Ce\00", align 1
@.str.235.412 = private unnamed_addr global [3 x i8] c"Cs\00", align 1
@.str.236.413 = private unnamed_addr global [3 x i8] c"Ca\00", align 1
@.str.237.414 = private unnamed_addr global [3 x i8] c"Cc\00", align 1
@.str.238.415 = private unnamed_addr global [3 x i8] c"Ci\00", align 1
@.str.239.416 = private unnamed_addr global [3 x i8] c"R*\00", align 1
@.str.240.417 = private unnamed_addr global [3 x i8] c"Re\00", align 1
@.str.241.418 = private unnamed_addr global [4 x i8] c"RSe\00", align 1
@.str.242.419 = private unnamed_addr global [3 x i8] c"Mr\00", align 1
@.str.243.420 = private unnamed_addr global [5 x i8] c"QI#d\00", align 1
@.str.244.421 = private unnamed_addr global [3 x i8] c"Mv\00", align 1
@.str.245.422 = private unnamed_addr global [3 x i8] c"Jr\00", align 1
@.str.246.423 = private unnamed_addr global [3 x i8] c"Mj\00", align 1
@.str.247.424 = private unnamed_addr global [3 x i8] c"Qd\00", align 1
@.str.248.425 = private unnamed_addr global [4 x i8] c"TOn\00", align 1
@.str.249.426 = private unnamed_addr global [4 x i8] c"TOi\00", align 1
@.str.250.427 = private unnamed_addr global [3 x i8] c"Mg\00", align 1
@.str.251.428 = private unnamed_addr global [4 x i8] c"MVi\00", align 1
@.str.252.429 = private unnamed_addr global [5 x i8] c"Ss#d\00", align 1
@.str.253.430 = private unnamed_addr global [4 x i8] c"Bsd\00", align 1
@.str.254.431 = private unnamed_addr global [3 x i8] c"ER\00", align 1
@.str.255.432 = private unnamed_addr global [2 x i8] c"Z\00", align 1
@.str.256.433 = private unnamed_addr global [3 x i8] c"Ma\00", align 1
@.str.257.434 = private unnamed_addr global [6 x i8] c"SIs#g\00", align 1
@.str.258.435 = private unnamed_addr global [5 x i8] c"BIqx\00", align 1
@.str.259.436 = private unnamed_addr global [5 x i8] c"MX#p\00", align 1
@.str.260.437 = private unnamed_addr global [5 x i8] c"MX#a\00", align 1
@.str.261.438 = private unnamed_addr global [5 x i8] c"MX#r\00", align 1
@.str.262.439 = private unnamed_addr global [5 x i8] c"MX#j\00", align 1
@.str.263.440 = private unnamed_addr global [5 x i8] c"MV#o\00", align 1
@.str.264.441 = private unnamed_addr global [5 x i8] c"MV#p\00", align 1
@.str.265.442 = private unnamed_addr global [3 x i8] c"Eq\00", align 1
@.str.266.443 = private unnamed_addr global [4 x i8] c"COq\00", align 1
@.str.267.444 = private unnamed_addr global [3 x i8] c"CP\00", align 1
@.str.268.445 = private unnamed_addr global [4 x i8] c"AFd\00", align 1
@.str.269.446 = private unnamed_addr global [4 x i8] c"PFc\00", align 1
@domain_contains_links = internal global [21 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.270.447, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.271.448, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.272.449, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273.450, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.274.451, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.275.452, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.276.453, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.277.454, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.278.455, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.279.456, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.280.457, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.281.458, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.282.459, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.285, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.289, i32 0, i32 0), i8* null], align 4
@.str.270.447 = private unnamed_addr global [3 x i8] c"Mg\00", align 1
@.str.271.448 = private unnamed_addr global [3 x i8] c"Mx\00", align 1
@.str.272.449 = private unnamed_addr global [4 x i8] c"Bsd\00", align 1
@.str.273.450 = private unnamed_addr global [5 x i8] c"MX#a\00", align 1
@.str.274.451 = private unnamed_addr global [3 x i8] c"Ma\00", align 1
@.str.275.452 = private unnamed_addr global [3 x i8] c"Mv\00", align 1
@.str.276.453 = private unnamed_addr global [5 x i8] c"MX#r\00", align 1
@.str.277.454 = private unnamed_addr global [5 x i8] c"Ss#d\00", align 1
@.str.278.455 = private unnamed_addr global [3 x i8] c"CP\00", align 1
@.str.279.456 = private unnamed_addr global [3 x i8] c"Ws\00", align 1
@.str.280.457 = private unnamed_addr global [3 x i8] c"Wq\00", align 1
@.str.281.458 = private unnamed_addr global [3 x i8] c"Qd\00", align 1
@.str.282.459 = private unnamed_addr global [3 x i8] c"Mj\00", align 1
@.str.283 = private unnamed_addr global [3 x i8] c"Wj\00", align 1
@.str.284 = private unnamed_addr global [3 x i8] c"Wi\00", align 1
@.str.285 = private unnamed_addr global [5 x i8] c"MX#j\00", align 1
@.str.286 = private unnamed_addr global [4 x i8] c"AFd\00", align 1
@.str.287 = private unnamed_addr global [4 x i8] c"PFc\00", align 1
@.str.288 = private unnamed_addr global [3 x i8] c"Jr\00", align 1
@.str.289 = private unnamed_addr global [3 x i8] c"Wd\00", align 1
@urfl_domain_starter_links = internal global [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.292, i32 0, i32 0), i8* null], align 4
@.str.290 = private unnamed_addr global [4 x i8] c"TOo\00", align 1
@.str.291 = private unnamed_addr global [4 x i8] c"I#j\00", align 1
@.str.292 = private unnamed_addr global [6 x i8] c"Pa##j\00", align 1
@urfl_only_domain_starter_links = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* null], align 4
@.str.293 = private unnamed_addr global [5 x i8] c"SFsx\00", align 1
@.str.294 = private unnamed_addr global [5 x i8] c"Ss#g\00", align 1
@.str.295 = private unnamed_addr global [4 x i8] c"COp\00", align 1
@.str.45.460 = private unnamed_addr global [37 x i8] c"something wrong with domain name %s\0A\00", align 1
@N_domain_trees = internal global i32 0, align 4
@.str.46.461 = private unnamed_addr global [25 x i8] c"Domain     It's parent \0A\00", align 1
@.str.47.462 = private unnamed_addr global [17 x i8] c" %3d        %3d\0A\00", align 1
@.str.48.463 = private unnamed_addr global [29 x i8] c"Link children of domain %d:\0A\00", align 1
@must_be_connected_without = internal global [8 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.302, i32 0, i32 0), i8* null], align 4
@.str.296 = private unnamed_addr global [3 x i8] c"R*\00", align 1
@.str.297 = private unnamed_addr global [3 x i8] c"Re\00", align 1
@.str.298 = private unnamed_addr global [4 x i8] c"TOt\00", align 1
@.str.299 = private unnamed_addr global [4 x i8] c"EXx\00", align 1
@.str.300 = private unnamed_addr global [3 x i8] c"HA\00", align 1
@.str.301 = private unnamed_addr global [6 x i8] c"SFsic\00", align 1
@.str.302 = private unnamed_addr global [3 x i8] c"Jr\00", align 1
@.str.49.468 = private unnamed_addr global [23 x i8] c"Connectivity violation\00", align 1
@.str.50.469 = private unnamed_addr global [23 x i8] c"Connectivity violation\00", align 1
@.str.51.470 = private unnamed_addr global [19 x i8] c"Unbounded s domain\00", align 1
@.str.52.471 = private unnamed_addr global [19 x i8] c"Unbounded r domain\00", align 1
@.str.53.472 = private unnamed_addr global [5 x i8] c"SI#*\00", align 1
@Nec_for_Inv = internal global [5 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.306, i32 0, i32 0), i8* null], align 4
@.str.303 = private unnamed_addr global [3 x i8] c"Wq\00", align 1
@.str.304 = private unnamed_addr global [3 x i8] c"Qd\00", align 1
@.str.305 = private unnamed_addr global [3 x i8] c"CQ\00", align 1
@.str.306 = private unnamed_addr global [4 x i8] c"PFc\00", align 1
@.str.54.473 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.55.474 = private unnamed_addr global [5 x i8] c"SI#i\00", align 1
@.str.56.475 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.57.476 = private unnamed_addr global [5 x i8] c"SI#x\00", align 1
@.str.58.477 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.59.478 = private unnamed_addr global [7 x i8] c"SFI##*\00", align 1
@.str.60.479 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.61.480 = private unnamed_addr global [3 x i8] c"Ws\00", align 1
@Incompat_with_Ws = internal global [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.309, i32 0, i32 0), i8* null], align 4
@.str.307 = private unnamed_addr global [4 x i8] c"B#m\00", align 1
@.str.308 = private unnamed_addr global [3 x i8] c"Ca\00", align 1
@.str.309 = private unnamed_addr global [3 x i8] c"BT\00", align 1
@.str.62.481 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.63.482 = private unnamed_addr global [3 x i8] c"Ws\00", align 1
@Nec_for_Ws_2 = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.312, i32 0, i32 0), i8* null], align 4
@.str.310 = private unnamed_addr global [5 x i8] c"D##w\00", align 1
@.str.311 = private unnamed_addr global [5 x i8] c"S##w\00", align 1
@.str.312 = private unnamed_addr global [2 x i8] c"H\00", align 1
@.str.64.483 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.65.484 = private unnamed_addr global [4 x i8] c"I#a\00", align 1
@Nec_for_Ia = internal global [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.314, i32 0, i32 0), i8* null], align 4
@.str.313 = private unnamed_addr global [4 x i8] c"B#m\00", align 1
@.str.314 = private unnamed_addr global [4 x i8] c"B#w\00", align 1
@.str.66.485 = private unnamed_addr global [22 x i8] c"incorrect use of 'to'\00", align 1
@.str.67.486 = private unnamed_addr global [3 x i8] c"Wq\00", align 1
@Nec_for_Wq = internal global [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.316, i32 0, i32 0), i8* null], align 4
@.str.315 = private unnamed_addr global [3 x i8] c"SI\00", align 1
@.str.316 = private unnamed_addr global [4 x i8] c"SFI\00", align 1
@.str.68.487 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.69.488 = private unnamed_addr global [3 x i8] c"Qd\00", align 1
@.str.70.489 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.71.490 = private unnamed_addr global [4 x i8] c"PFc\00", align 1
@.str.72.491 = private unnamed_addr global [28 x i8] c"question inversion violated\00", align 1
@.str.73.492 = private unnamed_addr global [3 x i8] c"Mj\00", align 1
@Nec_for_j = internal global [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.318, i32 0, i32 0), i8* null], align 4
@.str.317 = private unnamed_addr global [3 x i8] c"JQ\00", align 1
@.str.318 = private unnamed_addr global [3 x i8] c"Jw\00", align 1
@.str.74.493 = private unnamed_addr global [24 x i8] c"misuse of question word\00", align 1
@.str.75.494 = private unnamed_addr global [5 x i8] c"MX#j\00", align 1
@.str.76.495 = private unnamed_addr global [24 x i8] c"misuse of question word\00", align 1
@.str.77.496 = private unnamed_addr global [3 x i8] c"Wj\00", align 1
@.str.78.497 = private unnamed_addr global [24 x i8] c"misuse of question word\00", align 1
@.str.79.498 = private unnamed_addr global [3 x i8] c"JQ\00", align 1
@Mj_or_Wj = internal global [4 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.321, i32 0, i32 0), i8* null], align 4
@.str.319 = private unnamed_addr global [3 x i8] c"Mj\00", align 1
@.str.320 = private unnamed_addr global [3 x i8] c"Wj\00", align 1
@.str.321 = private unnamed_addr global [5 x i8] c"MX#j\00", align 1
@.str.80.499 = private unnamed_addr global [22 x i8] c"misuse of preposition\00", align 1
@.str.81.500 = private unnamed_addr global [3 x i8] c"Jw\00", align 1
@.str.82.501 = private unnamed_addr global [22 x i8] c"misuse of preposition\00", align 1
@.str.83.502 = private unnamed_addr global [4 x i8] c"B#j\00", align 1
@Jr = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.322, i32 0, i32 0), i8* null], align 4
@.str.322 = private unnamed_addr global [3 x i8] c"Jr\00", align 1
@.str.84.503 = private unnamed_addr global [21 x i8] c"A B*j must have a Jr\00", align 1
@.str.85.504 = private unnamed_addr global [3 x i8] c"Jr\00", align 1
@Nec_for_Jr = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.323, i32 0, i32 0), i8* null], align 4
@.str.323 = private unnamed_addr global [4 x i8] c"B#j\00", align 1
@.str.86.505 = private unnamed_addr global [22 x i8] c"A Jr must have an B*j\00", align 1
@.str.87.506 = private unnamed_addr global [4 x i8] c"EAh\00", align 1
@Nec_for_EAh = internal global [7 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.324.507, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.326, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.329, i32 0, i32 0), i8* null], align 4
@.str.324.507 = private unnamed_addr global [3 x i8] c"AF\00", align 1
@.str.325 = private unnamed_addr global [4 x i8] c"Bsm\00", align 1
@.str.326 = private unnamed_addr global [4 x i8] c"B*m\00", align 1
@.str.327 = private unnamed_addr global [3 x i8] c"Qe\00", align 1
@.str.328 = private unnamed_addr global [3 x i8] c"Ca\00", align 1
@.str.329 = private unnamed_addr global [4 x i8] c"AFm\00", align 1
@.str.88.508 = private unnamed_addr global [23 x i8] c"Incorrect use of 'how'\00", align 1
@.str.89.509 = private unnamed_addr global [4 x i8] c"EEh\00", align 1
@.str.90.510 = private unnamed_addr global [23 x i8] c"Incorrect use of 'how'\00", align 1
@.str.91.511 = private unnamed_addr global [3 x i8] c"Qe\00", align 1
@Nec_for_Qe = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.330, i32 0, i32 0), i8* null], align 4
@.str.330 = private unnamed_addr global [4 x i8] c"EEh\00", align 1
@.str.92.512 = private unnamed_addr global [24 x i8] c"Incorrect use of adverb\00", align 1
@.str.93.513 = private unnamed_addr global [4 x i8] c"THi\00", align 1
@SFiSFIi = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.333, i32 0, i32 0), i8* null], align 4
@.str.331 = private unnamed_addr global [5 x i8] c"SFsi\00", align 1
@.str.332 = private unnamed_addr global [6 x i8] c"SFIsi\00", align 1
@.str.333 = private unnamed_addr global [4 x i8] c"OXi\00", align 1
@.str.94.514 = private unnamed_addr global [20 x i8] c"THi rule 1 violated\00", align 1
@.str.95.515 = private unnamed_addr global [4 x i8] c"TSi\00", align 1
@.str.96.516 = private unnamed_addr global [20 x i8] c"TSi rule 1 violated\00", align 1
@.str.97.517 = private unnamed_addr global [4 x i8] c"QIi\00", align 1
@.str.98.518 = private unnamed_addr global [20 x i8] c"QIi rule 1 violated\00", align 1
@.str.99.519 = private unnamed_addr global [4 x i8] c"TOi\00", align 1
@.str.100.520 = private unnamed_addr global [19 x i8] c"TV rule 1 violated\00", align 1
@.str.101.521 = private unnamed_addr global [3 x i8] c"Ci\00", align 1
@.str.102.522 = private unnamed_addr global [19 x i8] c"Ci rule 1 violated\00", align 1
@.str.103.523 = private unnamed_addr global [5 x i8] c"COqi\00", align 1
@.str.104.524 = private unnamed_addr global [18 x i8] c"It rules violated\00", align 1
@.str.105.525 = private unnamed_addr global [4 x i8] c"CPi\00", align 1
@.str.106.526 = private unnamed_addr global [18 x i8] c"It rules violated\00", align 1
@.str.107.527 = private unnamed_addr global [4 x i8] c"Eqi\00", align 1
@.str.108.528 = private unnamed_addr global [18 x i8] c"It rules violated\00", align 1
@.str.109.529 = private unnamed_addr global [4 x i8] c"LEi\00", align 1
@.str.110.530 = private unnamed_addr global [20 x i8] c"THi rule 1 violated\00", align 1
@.str.111.531 = private unnamed_addr global [5 x i8] c"MVti\00", align 1
@.str.112.532 = private unnamed_addr global [20 x i8] c"THi rule 1 violated\00", align 1
@.str.113.533 = private unnamed_addr global [5 x i8] c"AFdi\00", align 1
@.str.114.534 = private unnamed_addr global [20 x i8] c"THi rule 1 violated\00", align 1
@.str.115.535 = private unnamed_addr global [4 x i8] c"O#i\00", align 1
@.str.116.536 = private unnamed_addr global [20 x i8] c"O#i rule 1 violated\00", align 1
@.str.117.537 = private unnamed_addr global [3 x i8] c"SF\00", align 1
@incompat_with_THi = internal global [13 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.335.538, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.341.539, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.345, i32 0, i32 0), i8* null], align 4
@.str.334 = private unnamed_addr global [3 x i8] c"I*\00", align 1
@.str.335.538 = private unnamed_addr global [4 x i8] c"PP*\00", align 1
@.str.336 = private unnamed_addr global [4 x i8] c"TO*\00", align 1
@.str.337 = private unnamed_addr global [4 x i8] c"Pa*\00", align 1
@.str.338 = private unnamed_addr global [4 x i8] c"Pam\00", align 1
@.str.339 = private unnamed_addr global [2 x i8] c"S\00", align 1
@.str.340 = private unnamed_addr global [3 x i8] c"SI\00", align 1
@.str.341.539 = private unnamed_addr global [4 x i8] c"Pg*\00", align 1
@.str.342 = private unnamed_addr global [4 x i8] c"Pv*\00", align 1
@.str.343 = private unnamed_addr global [4 x i8] c"LE*\00", align 1
@.str.344 = private unnamed_addr global [5 x i8] c"AFd*\00", align 1
@.str.345 = private unnamed_addr global [5 x i8] c"MVta\00", align 1
@.str.118.540 = private unnamed_addr global [22 x i8] c"There rule 1 violated\00", align 1
@.str.119.541 = private unnamed_addr global [4 x i8] c"SFI\00", align 1
@.str.120.542 = private unnamed_addr global [22 x i8] c"There rule 1 violated\00", align 1
@.str.121.543 = private unnamed_addr global [3 x i8] c"OX\00", align 1
@.str.122.544 = private unnamed_addr global [20 x i8] c"OXt rule 1 violated\00", align 1
@.str.123.545 = private unnamed_addr global [5 x i8] c"SFst\00", align 1
@Ost = internal global [7 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.346, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.348, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.350, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.351, i32 0, i32 0), i8* null], align 4
@.str.346 = private unnamed_addr global [4 x i8] c"O*t\00", align 1
@.str.347 = private unnamed_addr global [4 x i8] c"Ost\00", align 1
@.str.348 = private unnamed_addr global [4 x i8] c"Omt\00", align 1
@.str.349 = private unnamed_addr global [5 x i8] c"Bs#t\00", align 1
@.str.350 = private unnamed_addr global [5 x i8] c"B*#t\00", align 1
@.str.351 = private unnamed_addr global [5 x i8] c"Bc#t\00", align 1
@.str.124.546 = private unnamed_addr global [22 x i8] c"There rule 2 violated\00", align 1
@.str.125.547 = private unnamed_addr global [6 x i8] c"SFIst\00", align 1
@.str.126.548 = private unnamed_addr global [22 x i8] c"There rule 2 violated\00", align 1
@.str.127.549 = private unnamed_addr global [4 x i8] c"SFp\00", align 1
@Opt = internal global [7 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.357, i32 0, i32 0), i8* null], align 4
@.str.352 = private unnamed_addr global [4 x i8] c"Opt\00", align 1
@.str.353 = private unnamed_addr global [4 x i8] c"Omt\00", align 1
@.str.354 = private unnamed_addr global [4 x i8] c"O*t\00", align 1
@.str.355 = private unnamed_addr global [5 x i8] c"Bp#t\00", align 1
@.str.356 = private unnamed_addr global [5 x i8] c"B*#t\00", align 1
@.str.357 = private unnamed_addr global [5 x i8] c"Bc#t\00", align 1
@.str.128.550 = private unnamed_addr global [22 x i8] c"There rule 2 violated\00", align 1
@.str.129.551 = private unnamed_addr global [5 x i8] c"SFIp\00", align 1
@.str.130.552 = private unnamed_addr global [22 x i8] c"There rule 2 violated\00", align 1
@.str.131.553 = private unnamed_addr global [4 x i8] c"OXt\00", align 1
@Oxt = internal global [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.359, i32 0, i32 0), i8* null], align 4
@.str.358 = private unnamed_addr global [4 x i8] c"O#t\00", align 1
@.str.359 = private unnamed_addr global [5 x i8] c"B##t\00", align 1
@.str.132.554 = private unnamed_addr global [22 x i8] c"There rule 2 violated\00", align 1
@.str.133.555 = private unnamed_addr global [6 x i8] c"SFsi*\00", align 1
@Necessary_for_SF = internal global [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.360, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.364, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.370, i32 0, i32 0), i8* null], align 4
@.str.360 = private unnamed_addr global [4 x i8] c"TOi\00", align 1
@.str.361 = private unnamed_addr global [4 x i8] c"THi\00", align 1
@.str.362 = private unnamed_addr global [4 x i8] c"QIi\00", align 1
@.str.363 = private unnamed_addr global [4 x i8] c"TSi\00", align 1
@.str.364 = private unnamed_addr global [4 x i8] c"O#i\00", align 1
@.str.365 = private unnamed_addr global [3 x i8] c"Ci\00", align 1
@.str.366 = private unnamed_addr global [4 x i8] c"THb\00", align 1
@.str.367 = private unnamed_addr global [5 x i8] c"COqi\00", align 1
@.str.368 = private unnamed_addr global [4 x i8] c"CPi\00", align 1
@.str.369 = private unnamed_addr global [4 x i8] c"Eqi\00", align 1
@.str.370 = private unnamed_addr global [5 x i8] c"AFdi\00", align 1
@.str.134.556 = private unnamed_addr global [17 x i8] c"It rule violated\00", align 1
@.str.135.557 = private unnamed_addr global [6 x i8] c"SFIsi\00", align 1
@.str.136.558 = private unnamed_addr global [17 x i8] c"It rule violated\00", align 1
@.str.137.559 = private unnamed_addr global [4 x i8] c"THb\00", align 1
@Nec_for_THb = internal global [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.374, i32 0, i32 0), i8* null], align 4
@.str.371 = private unnamed_addr global [5 x i8] c"S##t\00", align 1
@.str.372 = private unnamed_addr global [6 x i8] c"SI##t\00", align 1
@.str.373 = private unnamed_addr global [5 x i8] c"SFsi\00", align 1
@.str.374 = private unnamed_addr global [6 x i8] c"SFIsi\00", align 1
@.str.138.560 = private unnamed_addr global [22 x i8] c"be-that rule violated\00", align 1
@.str.139.561 = private unnamed_addr global [4 x i8] c"BIh\00", align 1
@Nec_for_BIh = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.376, i32 0, i32 0), i8* null], align 4
@.str.375 = private unnamed_addr global [5 x i8] c"Ss#b\00", align 1
@.str.376 = private unnamed_addr global [6 x i8] c"SIs#b\00", align 1
@.str.140.562 = private unnamed_addr global [28 x i8] c"be-complement rule violated\00", align 1
@.str.141.563 = private unnamed_addr global [4 x i8] c"BIq\00", align 1
@Nec_for_BIq = internal global [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.382, i32 0, i32 0), i8* null], align 4
@.str.377 = private unnamed_addr global [5 x i8] c"S##q\00", align 1
@.str.378 = private unnamed_addr global [6 x i8] c"SI##q\00", align 1
@.str.379 = private unnamed_addr global [5 x i8] c"SFsi\00", align 1
@.str.380 = private unnamed_addr global [5 x i8] c"Ss#b\00", align 1
@.str.381 = private unnamed_addr global [6 x i8] c"SFIsi\00", align 1
@.str.382 = private unnamed_addr global [6 x i8] c"SIs#b\00", align 1
@.str.142.564 = private unnamed_addr global [28 x i8] c"be-complement rule violated\00", align 1
@.str.143.565 = private unnamed_addr global [4 x i8] c"OXi\00", align 1
@.str.144.566 = private unnamed_addr global [17 x i8] c"SF rule violated\00", align 1
@.str.145.567 = private unnamed_addr global [4 x i8] c"MVt\00", align 1
@Necessary_for_MVt = internal global [15 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.387, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.389, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.391, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.392, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.396, i32 0, i32 0), i8* null], align 4
@.str.383 = private unnamed_addr global [5 x i8] c"Dm#m\00", align 1
@.str.384 = private unnamed_addr global [4 x i8] c"EAm\00", align 1
@.str.385 = private unnamed_addr global [4 x i8] c"EEm\00", align 1
@.str.386 = private unnamed_addr global [4 x i8] c"MVm\00", align 1
@.str.387 = private unnamed_addr global [4 x i8] c"Pam\00", align 1
@.str.388 = private unnamed_addr global [5 x i8] c"Pafm\00", align 1
@.str.389 = private unnamed_addr global [4 x i8] c"AFm\00", align 1
@.str.390 = private unnamed_addr global [5 x i8] c"EB#m\00", align 1
@.str.391 = private unnamed_addr global [4 x i8] c"MVb\00", align 1
@.str.392 = private unnamed_addr global [3 x i8] c"Om\00", align 1
@.str.393 = private unnamed_addr global [4 x i8] c"Mam\00", align 1
@.str.394 = private unnamed_addr global [3 x i8] c"Am\00", align 1
@.str.395 = private unnamed_addr global [3 x i8] c"Jm\00", align 1
@.str.396 = private unnamed_addr global [5 x i8] c"Ds*m\00", align 1
@.str.146.568 = private unnamed_addr global [19 x i8] c"Than rule violated\00", align 1
@.str.147.569 = private unnamed_addr global [4 x i8] c"MVz\00", align 1
@Nec_for_MVz = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.398, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.400, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.401, i32 0, i32 0), i8* null], align 4
@.str.397 = private unnamed_addr global [5 x i8] c"D##y\00", align 1
@.str.398 = private unnamed_addr global [4 x i8] c"EAy\00", align 1
@.str.399 = private unnamed_addr global [4 x i8] c"EEy\00", align 1
@.str.400 = private unnamed_addr global [4 x i8] c"MVy\00", align 1
@.str.401 = private unnamed_addr global [5 x i8] c"EB#y\00", align 1
@.str.148.570 = private unnamed_addr global [17 x i8] c"As rule violated\00", align 1
@.str.149.571 = private unnamed_addr global [5 x i8] c"MV#a\00", align 1
@Nec_for_MVta = internal global [9 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.404, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.406, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.408, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.409, i32 0, i32 0), i8* null], align 4
@.str.402 = private unnamed_addr global [4 x i8] c"Pam\00", align 1
@.str.403 = private unnamed_addr global [5 x i8] c"Pafm\00", align 1
@.str.404 = private unnamed_addr global [4 x i8] c"EAm\00", align 1
@.str.405 = private unnamed_addr global [5 x i8] c"Ds*m\00", align 1
@.str.406 = private unnamed_addr global [4 x i8] c"EAy\00", align 1
@.str.407 = private unnamed_addr global [4 x i8] c"AFm\00", align 1
@.str.408 = private unnamed_addr global [4 x i8] c"Mam\00", align 1
@.str.409 = private unnamed_addr global [3 x i8] c"Am\00", align 1
@.str.150.572 = private unnamed_addr global [23 x i8] c"bad use of comparative\00", align 1
@.str.151.573 = private unnamed_addr global [5 x i8] c"MV#i\00", align 1
@.str.152.574 = private unnamed_addr global [23 x i8] c"bad use of comparative\00", align 1
@.str.153.575 = private unnamed_addr global [5 x i8] c"MV#o\00", align 1
@Nec_for_MVto = internal global [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.412, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.414, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.416, i32 0, i32 0), i8* null], align 4
@.str.410 = private unnamed_addr global [5 x i8] c"D##m\00", align 1
@.str.411 = private unnamed_addr global [5 x i8] c"D##y\00", align 1
@.str.412 = private unnamed_addr global [3 x i8] c"Om\00", align 1
@.str.413 = private unnamed_addr global [3 x i8] c"Oy\00", align 1
@.str.414 = private unnamed_addr global [3 x i8] c"Jm\00", align 1
@.str.415 = private unnamed_addr global [3 x i8] c"Jy\00", align 1
@.str.416 = private unnamed_addr global [3 x i8] c"Am\00", align 1
@.str.154.576 = private unnamed_addr global [23 x i8] c"bad use of comparative\00", align 1
@.str.155.577 = private unnamed_addr global [5 x i8] c"MV#p\00", align 1
@Nec_for_MVtp = internal global [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.417, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.418, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.419, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.420, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.422, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.424, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.425, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.426, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.427, i32 0, i32 0), i8* null], align 4
@.str.417 = private unnamed_addr global [4 x i8] c"EEm\00", align 1
@.str.418 = private unnamed_addr global [4 x i8] c"MVb\00", align 1
@.str.419 = private unnamed_addr global [5 x i8] c"Dm#m\00", align 1
@.str.420 = private unnamed_addr global [4 x i8] c"EEy\00", align 1
@.str.421 = private unnamed_addr global [5 x i8] c"D##y\00", align 1
@.str.422 = private unnamed_addr global [4 x i8] c"MVm\00", align 1
@.str.423 = private unnamed_addr global [3 x i8] c"Om\00", align 1
@.str.424 = private unnamed_addr global [3 x i8] c"Oy\00", align 1
@.str.425 = private unnamed_addr global [3 x i8] c"Jm\00", align 1
@.str.426 = private unnamed_addr global [3 x i8] c"Jy\00", align 1
@.str.427 = private unnamed_addr global [3 x i8] c"Am\00", align 1
@.str.156.578 = private unnamed_addr global [23 x i8] c"bad use of comparative\00", align 1
@.str.157.579 = private unnamed_addr global [5 x i8] c"Pafc\00", align 1
@EBmm = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.428, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.429, i32 0, i32 0), i8* null], align 4
@.str.428 = private unnamed_addr global [5 x i8] c"EB#m\00", align 1
@.str.429 = private unnamed_addr global [5 x i8] c"EB#y\00", align 1
@.str.158.580 = private unnamed_addr global [20 x i8] c"Than-adj 1 violated\00", align 1
@.str.159.581 = private unnamed_addr global [5 x i8] c"Pafc\00", align 1
@Pa_or_Paf = internal global [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.431, i32 0, i32 0), i8* null], align 4
@.str.430 = private unnamed_addr global [4 x i8] c"Pa*\00", align 1
@.str.431 = private unnamed_addr global [5 x i8] c"Paf*\00", align 1
@.str.160.582 = private unnamed_addr global [20 x i8] c"Than-adj 2 violated\00", align 1
@.str.161.583 = private unnamed_addr global [5 x i8] c"MVat\00", align 1
@MVm = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.432, i32 0, i32 0), i8* null], align 4
@.str.432 = private unnamed_addr global [4 x i8] c"MVm\00", align 1
@.str.162.584 = private unnamed_addr global [20 x i8] c"Than-adv 1 violated\00", align 1
@.str.163.585 = private unnamed_addr global [5 x i8] c"MVpt\00", align 1
@.str.164.586 = private unnamed_addr global [21 x i8] c"Than-prep 1 violated\00", align 1
@.str.165.587 = private unnamed_addr global [5 x i8] c"MVat\00", align 1
@MV = internal global [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.433, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.434, i32 0, i32 0), i8* null], align 4
@.str.433 = private unnamed_addr global [4 x i8] c"MVa\00", align 1
@.str.434 = private unnamed_addr global [4 x i8] c"MVp\00", align 1
@.str.166.588 = private unnamed_addr global [20 x i8] c"Than-adv 2 violated\00", align 1
@.str.167.589 = private unnamed_addr global [5 x i8] c"MVpt\00", align 1
@.str.168.590 = private unnamed_addr global [21 x i8] c"Than-prep 2 violated\00", align 1
@.str.169.591 = private unnamed_addr global [4 x i8] c"U#t\00", align 1
@.str.170.592 = private unnamed_addr global [20 x i8] c"Than-obj 2 violated\00", align 1
@.str.171.593 = private unnamed_addr global [3 x i8] c"Cc\00", align 1
@Nec_for_Cc = internal global [6 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.437, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.439, i32 0, i32 0), i8* null], align 4
@.str.435 = private unnamed_addr global [4 x i8] c"EEm\00", align 1
@.str.436 = private unnamed_addr global [4 x i8] c"EEy\00", align 1
@.str.437 = private unnamed_addr global [4 x i8] c"MVm\00", align 1
@.str.438 = private unnamed_addr global [4 x i8] c"MVb\00", align 1
@.str.439 = private unnamed_addr global [4 x i8] c"MVy\00", align 1
@.str.172.594 = private unnamed_addr global [12 x i8] c"Cc violated\00", align 1
@.str.173.595 = private unnamed_addr global [3 x i8] c"Mc\00", align 1
@Nec_for_Mc = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.440, i32 0, i32 0), i8* null], align 4
@.str.440 = private unnamed_addr global [5 x i8] c"Dm#m\00", align 1
@.str.174.596 = private unnamed_addr global [12 x i8] c"Mc violated\00", align 1
@.str.175.597 = private unnamed_addr global [5 x i8] c"Sp#c\00", align 1
@Nec_for_Sp_com = internal global [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.441, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.443, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.445, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.446, i32 0, i32 0), i8* null], align 4
@.str.441 = private unnamed_addr global [5 x i8] c"Dmcm\00", align 1
@.str.442 = private unnamed_addr global [5 x i8] c"Dmcy\00", align 1
@.str.443 = private unnamed_addr global [3 x i8] c"Om\00", align 1
@.str.444 = private unnamed_addr global [3 x i8] c"Oy\00", align 1
@.str.445 = private unnamed_addr global [3 x i8] c"Jm\00", align 1
@.str.446 = private unnamed_addr global [3 x i8] c"Jy\00", align 1
@.str.176.598 = private unnamed_addr global [16 x i8] c"Sp_com violated\00", align 1
@.str.177.599 = private unnamed_addr global [5 x i8] c"Ss#c\00", align 1
@Nec_for_Ss_com = internal global [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.447, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.448, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.449, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.450, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.451, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.452, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.453, i32 0, i32 0), i8* null], align 4
@.str.447 = private unnamed_addr global [5 x i8] c"Dmum\00", align 1
@.str.448 = private unnamed_addr global [5 x i8] c"Dmuy\00", align 1
@.str.449 = private unnamed_addr global [3 x i8] c"Om\00", align 1
@.str.450 = private unnamed_addr global [3 x i8] c"Oy\00", align 1
@.str.451 = private unnamed_addr global [3 x i8] c"Jm\00", align 1
@.str.452 = private unnamed_addr global [3 x i8] c"Jy\00", align 1
@.str.453 = private unnamed_addr global [5 x i8] c"Ds*y\00", align 1
@.str.178.600 = private unnamed_addr global [16 x i8] c"Ss_com violated\00", align 1
@.str.179.601 = private unnamed_addr global [5 x i8] c"S*ic\00", align 1
@.str.180.602 = private unnamed_addr global [16 x i8] c"Ss_com violated\00", align 1
@.str.181.603 = private unnamed_addr global [5 x i8] c"S##c\00", align 1
@Nec_for_S_com = internal global [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.454, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.455, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.456, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.457, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.458, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.459, i32 0, i32 0), i8* null], align 4
@.str.454 = private unnamed_addr global [5 x i8] c"Dm#m\00", align 1
@.str.455 = private unnamed_addr global [5 x i8] c"D##y\00", align 1
@.str.456 = private unnamed_addr global [3 x i8] c"Om\00", align 1
@.str.457 = private unnamed_addr global [3 x i8] c"Oy\00", align 1
@.str.458 = private unnamed_addr global [3 x i8] c"Jm\00", align 1
@.str.459 = private unnamed_addr global [3 x i8] c"Jy\00", align 1
@.str.182.604 = private unnamed_addr global [15 x i8] c"S_com violated\00", align 1
@.str.183.605 = private unnamed_addr global [4 x i8] c"THc\00", align 1
@Necessary_for_Thcom = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.460, i32 0, i32 0), i8* null], align 4
@.str.460 = private unnamed_addr global [3 x i8] c"TH\00", align 1
@.str.184.606 = private unnamed_addr global [31 x i8] c"That-comparative rule violated\00", align 1
@.str.185.607 = private unnamed_addr global [5 x i8] c"TOfc\00", align 1
@Necessary_for_Tocom = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.462, i32 0, i32 0), i8* null], align 4
@.str.461 = private unnamed_addr global [5 x i8] c"TO**\00", align 1
@.str.462 = private unnamed_addr global [5 x i8] c"TOf*\00", align 1
@.str.186.608 = private unnamed_addr global [29 x i8] c"To-comparative rule violated\00", align 1
@.str.187.609 = private unnamed_addr global [5 x i8] c"TOic\00", align 1
@Necessary_for_Tvcom = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.463, i32 0, i32 0), i8* null], align 4
@.str.463 = private unnamed_addr global [5 x i8] c"TOi*\00", align 1
@.str.188.610 = private unnamed_addr global [29 x i8] c"To-comparative rule violated\00", align 1
@.str.189.611 = private unnamed_addr global [5 x i8] c"TOtc\00", align 1
@Necessary_for_Tvcom_Trans = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.464, i32 0, i32 0), i8* null], align 4
@.str.464 = private unnamed_addr global [5 x i8] c"TOt*\00", align 1
@.str.190.612 = private unnamed_addr global [29 x i8] c"To-comparative rule violated\00", align 1
@.str.191.613 = private unnamed_addr global [4 x i8] c"Ma*\00", align 1
@Nec_for_Ma = internal global [13 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.465, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.466, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.467, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.468, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.470, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.474, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.476, i32 0, i32 0), i8* null], align 4
@.str.465 = private unnamed_addr global [3 x i8] c"TO\00", align 1
@.str.466 = private unnamed_addr global [4 x i8] c"TOf\00", align 1
@.str.467 = private unnamed_addr global [3 x i8] c"TH\00", align 1
@.str.468 = private unnamed_addr global [4 x i8] c"MVp\00", align 1
@.str.469 = private unnamed_addr global [4 x i8] c"TOt\00", align 1
@.str.470 = private unnamed_addr global [3 x i8] c"QI\00", align 1
@.str.471 = private unnamed_addr global [3 x i8] c"OF\00", align 1
@.str.472 = private unnamed_addr global [4 x i8] c"MVt\00", align 1
@.str.473 = private unnamed_addr global [4 x i8] c"MVz\00", align 1
@.str.474 = private unnamed_addr global [4 x i8] c"MVh\00", align 1
@.str.475 = private unnamed_addr global [4 x i8] c"Ytm\00", align 1
@.str.476 = private unnamed_addr global [3 x i8] c"Ya\00", align 1
@.str.192.614 = private unnamed_addr global [21 x i8] c"bad use of adjective\00", align 1
@.str.193.615 = private unnamed_addr global [4 x i8] c"Mam\00", align 1
@.str.194.616 = private unnamed_addr global [21 x i8] c"bad use of adjective\00", align 1
@.str.195.617 = private unnamed_addr global [5 x i8] c"MX#a\00", align 1
@.str.196.618 = private unnamed_addr global [21 x i8] c"bad use of adjective\00", align 1
@.str.197.619 = private unnamed_addr global [4 x i8] c"Ixd\00", align 1
@ZZ = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.477, i32 0, i32 0), i8* null], align 4
@.str.477 = private unnamed_addr global [3 x i8] c"ZZ\00", align 1
@.str.198.620 = private unnamed_addr global [30 x i8] c"Can't use \22do\22 with that verb\00", align 1
@.str.199.621 = private unnamed_addr global [4 x i8] c"Oxn\00", align 1
@.str.200.622 = private unnamed_addr global [37 x i8] c"Can't use a tag word after a pronoun\00", align 1
@.str.201.623 = private unnamed_addr global [2 x i8] c"S\00", align 1
@illegal_S_types = internal global [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.478, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.480, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.482, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.483, i32 0, i32 0), i8* null], align 4
@.str.478 = private unnamed_addr global [5 x i8] c"Spxi\00", align 1
@.str.479 = private unnamed_addr global [5 x i8] c"Spi*\00", align 1
@.str.480 = private unnamed_addr global [5 x i8] c"Spit\00", align 1
@.str.481 = private unnamed_addr global [5 x i8] c"Spiq\00", align 1
@.str.482 = private unnamed_addr global [5 x i8] c"Spib\00", align 1
@.str.483 = private unnamed_addr global [5 x i8] c"Spiw\00", align 1
@.str.202.624 = private unnamed_addr global [18 x i8] c"bad n-v agreement\00", align 1
@.str.203.625 = private unnamed_addr global [3 x i8] c"SI\00", align 1
@illegal_SI_types = internal global [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.484, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.486, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.488, i32 0, i32 0), i8* null], align 4
@.str.484 = private unnamed_addr global [6 x i8] c"SIpxi\00", align 1
@.str.485 = private unnamed_addr global [6 x i8] c"SIpi*\00", align 1
@.str.486 = private unnamed_addr global [6 x i8] c"SIpit\00", align 1
@.str.487 = private unnamed_addr global [6 x i8] c"SIpiq\00", align 1
@.str.488 = private unnamed_addr global [6 x i8] c"SIpib\00", align 1
@.str.204.626 = private unnamed_addr global [18 x i8] c"bad n-v agreement\00", align 1
@.str.205.627 = private unnamed_addr global [4 x i8] c"MVh\00", align 1
@Nec_for_MVh = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.489, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.490, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.491, i32 0, i32 0), i8* null], align 4
@.str.489 = private unnamed_addr global [5 x i8] c"EExk\00", align 1
@.str.490 = private unnamed_addr global [5 x i8] c"EAxk\00", align 1
@.str.491 = private unnamed_addr global [5 x i8] c"D##k\00", align 1
@.str.206.628 = private unnamed_addr global [22 x i8] c"Incorrect use of that\00", align 1
@.str.207.629 = private unnamed_addr global [5 x i8] c"MXsr\00", align 1
@Incompat_with_MXsr = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.492, i32 0, i32 0), i8* null], align 4
@.str.492 = private unnamed_addr global [5 x i8] c"Sp#w\00", align 1
@.str.208.630 = private unnamed_addr global [18 x i8] c"Bad n-v agreement\00", align 1
@.str.209.631 = private unnamed_addr global [5 x i8] c"MXpr\00", align 1
@Incompat_with_MXpr = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.493, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.494, i32 0, i32 0), i8* null], align 4
@.str.493 = private unnamed_addr global [5 x i8] c"Ss#w\00", align 1
@.str.494 = private unnamed_addr global [5 x i8] c"S#iw\00", align 1
@.str.210.632 = private unnamed_addr global [18 x i8] c"Bad n-v agreement\00", align 1
@chosen_words = common global [250 x i8*] zeroinitializer, align 4
@N_words_to_print = internal global i32 0, align 4
@center = internal global [250 x i32] zeroinitializer, align 4
@.str.635 = private unnamed_addr global [2 x i8] c"[\00", align 1
@.str.1.636 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.2.637 = private unnamed_addr global [5 x i8] c"(%s)\00", align 1
@.str.3.638 = private unnamed_addr global [2 x i8] c"]\00", align 1
@.str.4.639 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.5.640 = private unnamed_addr global [2 x i8] c"[\00", align 1
@.str.6.641 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@link_heights = internal global [497 x i32] zeroinitializer, align 4
@.str.7.642 = private unnamed_addr global [10 x i8] c"[%d %d %d\00", align 1
@.str.8.643 = private unnamed_addr global [7 x i8] c" (%s)]\00", align 1
@.str.9.644 = private unnamed_addr global [5 x i8] c" ()]\00", align 1
@.str.10.645 = private unnamed_addr global [2 x i8] c"]\00", align 1
@.str.11.646 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.12.647 = private unnamed_addr global [2 x i8] c"[\00", align 1
@N_rows = internal global i32 0, align 4
@row_starts = internal global [250 x i32] zeroinitializer, align 4
@.str.13.648 = private unnamed_addr global [4 x i8] c"%d \00", align 1
@.str.14.649 = private unnamed_addr global [3 x i8] c"]\0A\00", align 1
@.str.15.652 = private unnamed_addr global [5 x i8] c"[%s]\00", align 1
@.str.16.653 = private unnamed_addr global [6 x i8] c"/////\00", align 1
@.str.17.654 = private unnamed_addr global [6 x i8] c"/////\00", align 1
@.str.18.657 = private unnamed_addr global [8 x i8] c"xxxxxxx\00", align 1
@.str.19.658 = private unnamed_addr global [3 x i8] c"RW\00", align 1
@picture = internal global [30 x [1500 x i8]] zeroinitializer, align 1
@.str.20.659 = private unnamed_addr global [26 x i8] c"The diagram is too high.\0A\00", align 1
@.str.21.660 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@.str.22.661 = private unnamed_addr global [1 x i8] zeroinitializer, align 1
@xpicture = internal global [30 x [1500 x i8]] zeroinitializer, align 1
@.str.23.664 = private unnamed_addr global [8 x i8] c"%s(%d) \00", align 1
@.str.24.665 = private unnamed_addr global [3 x i8] c"\0A\0A\00", align 1
@.str.25.668 = private unnamed_addr global [8 x i8] c"%s[%d] \00", align 1
@.str.26.669 = private unnamed_addr global [3 x i8] c"\0A\0A\00", align 1
@.str.27.672 = private unnamed_addr global [4 x i8] c"%s \00", align 1
@.str.28.673 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@s_table_size = internal global i32 0, align 4
@table.676 = internal global %struct.Connector_struct** null, align 4
@.str.679 = private unnamed_addr global [22 x i8] c"l->r pass removed %d\0A\00", align 1
@.str.1.680 = private unnamed_addr global [22 x i8] c"r->l pass removed %d\0A\00", align 1
@dup_table_size = internal global i32 0, align 4
@dup_table = internal global %struct.Disjunct_struct** null, align 4
@.str.2.683 = private unnamed_addr global [22 x i8] c"killed %d duplicates\0A\00", align 1
@.str.3.686 = private unnamed_addr global [22 x i8] c"l->r pass removed %d\0A\00", align 1
@.str.4.687 = private unnamed_addr global [22 x i8] c"r->l pass removed %d\0A\00", align 1
@l_table_size.688 = internal global [250 x i32] zeroinitializer, align 4
@l_table.689 = internal global [250 x %struct.c_list_struct**] zeroinitializer, align 4
@r_table_size.690 = internal global [250 x i32] zeroinitializer, align 4
@r_table.691 = internal global [250 x %struct.c_list_struct**] zeroinitializer, align 4
@power_prune_mode = internal global i32 0, align 4
@power_cost = internal global i32 0, align 4
@N_changed = internal global i32 0, align 4
@.str.5.694 = private unnamed_addr global [37 x i8] c"l->r pass changed %d and deleted %d\0A\00", align 1
@.str.6.695 = private unnamed_addr global [37 x i8] c"r->l pass changed %d and deleted %d\0A\00", align 1
@.str.7.696 = private unnamed_addr global [22 x i8] c"%d power prune cost:\0A\00", align 1
@N_dict = global i32 0, align 4
@dict_root = global %struct.Dict_node_struct* null, align 4
@line_number = global i32 1, align 4
@.str.705 = private unnamed_addr global [31 x i8] c"\0AError in dictionary file: %s\0A\00", align 1
@.str.1.706 = private unnamed_addr global [19 x i8] c"line %d, tokens = \00", align 1
@token = internal global [50 x i8] zeroinitializer, align 1
@.str.2.707 = private unnamed_addr global [6 x i8] c" \22%s\22\00", align 1
@is_special = internal global i32 0, align 4
@advance.already_got_it = internal global i32 0, align 4
@.str.6.708 = private unnamed_addr global [11 x i8] c"(){};[]&|:\00", align 1
@dict_file = internal global %struct._iobuf* null, align 4
@.str.7.709 = private unnamed_addr global [15 x i8] c"Token too long\00", align 1
@.str.8.710 = private unnamed_addr global [28 x i8] c"White space inside of token\00", align 1
@.str.9.711 = private unnamed_addr global [11 x i8] c"(){};[]&|:\00", align 1
@.str.3.712 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.4.713 = private unnamed_addr global [14 x i8] c"\0AWarning: %s\0A\00", align 1
@.str.5.714 = private unnamed_addr global [31 x i8] c"line %d, current token = \22%s\22\0A\00", align 1
@.str.10.715 = private unnamed_addr global [23 x i8] c"Expecting a connector.\00", align 1
@.str.11.716 = private unnamed_addr global [38 x i8] c"A connector must end in a \22+\22 or \22-\22.\00", align 1
@.str.12.717 = private unnamed_addr global [51 x i8] c"The first letter of a connector must be in [A--Z].\00", align 1
@.str.13.718 = private unnamed_addr global [45 x i8] c"Connectors beginning with \22ID\22 are forbidden\00", align 1
@.str.14.719 = private unnamed_addr global [50 x i8] c"All letters of a connector must be alpha-numeric.\00", align 1
@lookup_list = internal global %struct.Dict_node_struct* null, align 4
@.str.15.724 = private unnamed_addr global [41 x i8] c"\0APerhaps missing + or - in a connector.\0A\00", align 1
@.str.16.725 = private unnamed_addr global [45 x i8] c"Or perhaps you forgot the suffix on a word.\0A\00", align 1
@.str.17.726 = private unnamed_addr global [48 x i8] c"Or perhaps a word is used before it is defined\0A\00", align 1
@.str.18.727 = private unnamed_addr global [17 x i8] c"Expecting a \22)\22.\00", align 1
@.str.19.728 = private unnamed_addr global [17 x i8] c"Expecting a \22}\22.\00", align 1
@.str.20.729 = private unnamed_addr global [17 x i8] c"Expecting a \22]\22.\00", align 1
@.str.21.730 = private unnamed_addr global [38 x i8] c"Connector, \22(\22, \22[\22, or \22{\22 expected.\00", align 1
@.str.22.731 = private unnamed_addr global [4 x i8] c"and\00", align 1
@.str.23.732 = private unnamed_addr global [50 x i8] c"\22and\22 and \22or\22 at the same level in an expression\00", align 1
@.str.24.733 = private unnamed_addr global [3 x i8] c"or\00", align 1
@.str.25.734 = private unnamed_addr global [50 x i8] c"\22and\22 and \22or\22 at the same level in an expression\00", align 1
@.str.26.737 = private unnamed_addr global [6 x i8] c"\22%s\22\0A\00", align 1
@.str.27.738 = private unnamed_addr global [47 x i8] c"The word shown above has been multiply defined\00", align 1
@.str.28.739 = private unnamed_addr global [35 x i8] c"*** Word \22%s\22 found near line %d.\0A\00", align 1
@.str.29.740 = private unnamed_addr global [62 x i8] c"    Words ending \22.Ix\22 (x a number) are reserved for idioms.\0A\00", align 1
@.str.30.741 = private unnamed_addr global [32 x i8] c"    This word will be ignored.\0A\00", align 1
@.str.31.742 = private unnamed_addr global [18 x i8] c"*** The word \22%s\22\00", align 1
@.str.32.743 = private unnamed_addr global [50 x i8] c" found near line %d matches the following words:\0A\00", align 1
@.str.33.744 = private unnamed_addr global [4 x i8] c" %s\00", align 1
@.str.34.745 = private unnamed_addr global [33 x i8] c"\0A    This word will be ignored.\0A\00", align 1
@.str.35.746 = private unnamed_addr global [37 x i8] c"I expected a word but didn't get it.\00", align 1
@.str.36.747 = private unnamed_addr global [38 x i8] c"Expecting \22;\22 at the end of an entry.\00", align 1
@.str.37.748 = private unnamed_addr global [16 x i8] c"NULL expression\00", align 1
@.str.38.749 = private unnamed_addr global [2 x i8] c"[\00", align 1
@.str.39.750 = private unnamed_addr global [5 x i8] c"%s%c\00", align 1
@.str.40.751 = private unnamed_addr global [3 x i8] c"] \00", align 1
@.str.41.752 = private unnamed_addr global [2 x i8] c"[\00", align 1
@.str.42.753 = private unnamed_addr global [2 x i8] c"(\00", align 1
@.str.43.754 = private unnamed_addr global [3 x i8] c"& \00", align 1
@.str.44.755 = private unnamed_addr global [4 x i8] c"or \00", align 1
@.str.45.756 = private unnamed_addr global [3 x i8] c"] \00", align 1
@.str.46.757 = private unnamed_addr global [3 x i8] c") \00", align 1
@.str.47.758 = private unnamed_addr global [5 x i8] c"%s: \00", align 1
@.str.48.759 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@to_be_deleted = internal global %struct.Dict_node_struct* null, align 4
@parent = internal global %struct.Dict_node_struct* null, align 4
@.str.50.766 = private unnamed_addr global [22 x i8] c"Assertion failed: %s\0A\00", align 1
@.str.49.767 = private unnamed_addr global [19 x i8] c"Dictionary broken?\00", align 1
@.str.51.772 = private unnamed_addr global [2 x i8] c"r\00", align 1
@.str.52.773 = private unnamed_addr global [21 x i8] c"Cannot open file %s\0A\00", align 1
@randtable = common global [256 x i32] zeroinitializer, align 4
@string_list = internal global %struct.string_node_struct* null, align 4
@.str.808 = private unnamed_addr global [3 x i8] c"%c\00", align 1
@.str.1.809 = private unnamed_addr global [3 x i8] c"%c\00", align 1
@xwhere_in_line = common global i32 0, align 4
@.str.810 = private unnamed_addr global [49 x i8] c"The dictionary contains a word that is too long.\00", align 1
@.str.1.813 = private unnamed_addr global [2 x i8] c"r\00", align 1
@.str.2.814 = private unnamed_addr global [22 x i8] c"\0ACannot open file %s\0A\00", align 1
@.str.3.815 = private unnamed_addr global [2 x i8] c"*\00", align 1
@word_file_header = internal global %struct.Word_file_struct* null, align 4
@.str.4.816 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.5.817 = private unnamed_addr global [4 x i8] c"%s \00", align 1
@.str.6.818 = private unnamed_addr global [2 x i8] c"\0A\00", align 1
@.str.7.821 = private unnamed_addr global [2 x i8] c"w\00", align 1
@.str.8.822 = private unnamed_addr global [46 x i8] c"\0ACannot open %s. Gee, this shouldn't happen.\0A\00", align 1
@.str.9.823 = private unnamed_addr global [16 x i8] c"file not saved\0A\00", align 1
@.str.10.824 = private unnamed_addr global [21 x i8] c"   saving file \22%s\22\0A\00", align 1
@largest_block = common global i32 0, align 4
@start_of_array = common global i8* null, align 4
@end_of_array = common global i8* null, align 4
@max_space_in_use = common global i32 0, align 4
@space_in_use = common global i32 0, align 4
@last_block = common global i8* null, align 4
@.str.833 = private unnamed_addr global [34 x i8] c"Not enough memory for base pool.\0A\00", align 1
@.str.1.836 = private unnamed_addr global [58 x i8] c"Attempt to allocate too big a block (more than %d bytes)\0A\00", align 1
@.str.2.837 = private unnamed_addr global [54 x i8] c"Ran out of space.  Memory requested so far: %d bytes\0A\00", align 1
@struct.BigStruct = internal global %struct.BigStruct zeroinitializer, align 4

; Function Attrs: noinline nounwind
define void @build_digraph() #0 {
entry:
  %i = alloca i32, align 4
  %link = alloca i32, align 4
  %N_fat = alloca i32, align 4
  %lp = alloca %struct.Link_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 0, i32* %N_fat, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc48, %for.end, %for.inc48, %for.end
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end50

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  store %struct.Link_struct* %arrayidx4, %struct.Link_struct** %lp, align 4
  %8 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %8, i32 0, i32 2
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 0
  %10 = load i16, i16* %label, align 4
  %conv = sext i16 %10 to i32
  store i32 %conv, i32* %i, align 4
  %11 = load i32, i32* %i, align 4
  %cmp5 = icmp slt i32 %11, -1
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3, %for.body3
  br label %for.inc48

if.end:                                           ; preds = %for.body3, %for.body3
  %call = call i8* @xalloc(i32 16)
  %12 = bitcast i8* %call to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %12, %struct.List_o_links_struct** %lol, align 4
  %13 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %13, i32 0, i32 0
  %14 = load i32, i32* %l, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %14
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx7, align 4
  %16 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %16, i32 0, i32 3
  store %struct.List_o_links_struct* %15, %struct.List_o_links_struct** %next, align 4
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %18 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %l8 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %18, i32 0, i32 0
  %19 = load i32, i32* %l8, align 4
  %arrayidx9 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %19
  store %struct.List_o_links_struct* %17, %struct.List_o_links_struct** %arrayidx9, align 4
  %20 = load i32, i32* %link, align 4
  %21 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link10 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %21, i32 0, i32 0
  store i32 %20, i32* %link10, align 4
  %22 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %22, i32 0, i32 1
  %23 = load i32, i32* %r, align 4
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %24, i32 0, i32 1
  store i32 %23, i32* %word, align 4
  %25 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %lc11 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %25, i32 0, i32 2
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %lc11, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 2
  %27 = load i8, i8* %priority, align 4
  %conv12 = sext i8 %27 to i32
  store i32 %conv12, i32* %i, align 4
  %28 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %28, 0
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end, %if.end
  %29 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %29, i32 0, i32 2
  store i32 0, i32* %dir, align 4
  br label %if.end23

if.else:                                          ; preds = %if.end, %if.end
  %30 = load i32, i32* %i, align 4
  %cmp16 = icmp eq i32 %30, 2
  br i1 %cmp16, label %if.then18, label %if.else20

if.then18:                                        ; preds = %if.else, %if.else
  %31 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir19 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %31, i32 0, i32 2
  store i32 1, i32* %dir19, align 4
  br label %if.end22

if.else20:                                        ; preds = %if.else, %if.else
  %32 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir21 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %32, i32 0, i32 2
  store i32 -1, i32* %dir21, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.then18, %if.else20, %if.then18
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then15, %if.end22, %if.then15
  %call24 = call i8* @xalloc(i32 16)
  %33 = bitcast i8* %call24 to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %33, %struct.List_o_links_struct** %lol, align 4
  %34 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %r25 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %34, i32 0, i32 1
  %35 = load i32, i32* %r25, align 4
  %arrayidx26 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %35
  %36 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx26, align 4
  %37 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next27 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %37, i32 0, i32 3
  store %struct.List_o_links_struct* %36, %struct.List_o_links_struct** %next27, align 4
  %38 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %39 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %r28 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %39, i32 0, i32 1
  %40 = load i32, i32* %r28, align 4
  %arrayidx29 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %40
  store %struct.List_o_links_struct* %38, %struct.List_o_links_struct** %arrayidx29, align 4
  %41 = load i32, i32* %link, align 4
  %42 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link30 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %42, i32 0, i32 0
  store i32 %41, i32* %link30, align 4
  %43 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %l31 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %43, i32 0, i32 0
  %44 = load i32, i32* %l31, align 4
  %45 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word32 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %45, i32 0, i32 1
  store i32 %44, i32* %word32, align 4
  %46 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %46, i32 0, i32 3
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %priority33 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %47, i32 0, i32 2
  %48 = load i8, i8* %priority33, align 4
  %conv34 = sext i8 %48 to i32
  store i32 %conv34, i32* %i, align 4
  %49 = load i32, i32* %i, align 4
  %cmp35 = icmp eq i32 %49, 0
  br i1 %cmp35, label %if.then37, label %if.else39

if.then37:                                        ; preds = %if.end23, %if.end23
  %50 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir38 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %50, i32 0, i32 2
  store i32 0, i32* %dir38, align 4
  br label %if.end47

if.else39:                                        ; preds = %if.end23, %if.end23
  %51 = load i32, i32* %i, align 4
  %cmp40 = icmp eq i32 %51, 2
  br i1 %cmp40, label %if.then42, label %if.else44

if.then42:                                        ; preds = %if.else39, %if.else39
  %52 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir43 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %52, i32 0, i32 2
  store i32 1, i32* %dir43, align 4
  br label %if.end46

if.else44:                                        ; preds = %if.else39, %if.else39
  %53 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir45 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %53, i32 0, i32 2
  store i32 -1, i32* %dir45, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then42, %if.else44, %if.then42
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then37, %if.end46, %if.then37
  br label %for.inc48

for.inc48:                                        ; preds = %if.end47, %if.then, %if.end47, %if.then
  %54 = load i32, i32* %link, align 4
  %inc49 = add nsw i32 %54, 1
  store i32 %inc49, i32* %link, align 4
  br label %for.cond1

for.end50:                                        ; preds = %for.cond1, %for.cond1
  ret void
}

; Function Attrs: noinline nounwind
define i32 @is_CON_word(i32 %w) #0 {
entry:
  %retval = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %0
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  store %struct.List_o_links_struct* %1, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 2
  %4 = load i32, i32* %dir, align 4
  %cmp1 = icmp eq i32 %4, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %5, i32 0, i32 3
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %6, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4
  ret i32 %7
}

; Function Attrs: noinline nounwind
define %struct.CON_node_struct* @build_CON_node(i32 %w) #0 {
entry:
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  %a = alloca %struct.CON_node_struct*, align 4
  %d = alloca %struct.DIS_list_struct*, align 4
  %dx = alloca %struct.DIS_list_struct*, align 4
  store i32 %w, i32* %w.addr, align 4
  store %struct.DIS_list_struct* null, %struct.DIS_list_struct** %d, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %0
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  store %struct.List_o_links_struct* %1, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 2
  %4 = load i32, i32* %dir, align 4
  %cmp1 = icmp eq i32 %4, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %call = call i8* @xalloc(i32 8)
  %5 = bitcast i8* %call to %struct.DIS_list_struct*
  store %struct.DIS_list_struct* %5, %struct.DIS_list_struct** %dx, align 4
  %6 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %d, align 4
  %7 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dx, align 4
  %next = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %7, i32 0, i32 0
  store %struct.DIS_list_struct* %6, %struct.DIS_list_struct** %next, align 4
  %8 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dx, align 4
  store %struct.DIS_list_struct* %8, %struct.DIS_list_struct** %d, align 4
  %9 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %9, i32 0, i32 1
  %10 = load i32, i32* %word, align 4
  %call2 = call %struct.DIS_node_struct* @build_DIS_node(i32 %10)
  %11 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %d, align 4
  %dn = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %11, i32 0, i32 1
  store %struct.DIS_node_struct* %call2, %struct.DIS_node_struct** %dn, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next3 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 3
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next3, align 4
  store %struct.List_o_links_struct* %13, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call4 = call i8* @xalloc(i32 12)
  %14 = bitcast i8* %call4 to %struct.CON_node_struct*
  store %struct.CON_node_struct* %14, %struct.CON_node_struct** %a, align 4
  %15 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %d, align 4
  %16 = load %struct.CON_node_struct*, %struct.CON_node_struct** %a, align 4
  %current = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %16, i32 0, i32 1
  store %struct.DIS_list_struct* %15, %struct.DIS_list_struct** %current, align 4
  %17 = load %struct.CON_node_struct*, %struct.CON_node_struct** %a, align 4
  %dl = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %17, i32 0, i32 0
  store %struct.DIS_list_struct* %15, %struct.DIS_list_struct** %dl, align 4
  %18 = load i32, i32* %w.addr, align 4
  %19 = load %struct.CON_node_struct*, %struct.CON_node_struct** %a, align 4
  %word5 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %19, i32 0, i32 2
  store i32 %18, i32* %word5, align 4
  %20 = load %struct.CON_node_struct*, %struct.CON_node_struct** %a, align 4
  ret %struct.CON_node_struct* %20
}

; Function Attrs: noinline nounwind
define %struct.DIS_node_struct* @build_DIS_node(i32 %w) #0 {
entry:
  %w.addr = alloca i32, align 4
  %dn = alloca %struct.DIS_node_struct*, align 4
  store i32 %w, i32* %w.addr, align 4
  %call = call i8* @xalloc(i32 12)
  %0 = bitcast i8* %call to %struct.DIS_node_struct*
  store %struct.DIS_node_struct* %0, %struct.DIS_node_struct** %dn, align 4
  %1 = load i32, i32* %w.addr, align 4
  %2 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %word = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %2, i32 0, i32 2
  store i32 %1, i32* %word, align 4
  %3 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %lol = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %3, i32 0, i32 1
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %lol, align 4
  %4 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %5 = load i32, i32* %w.addr, align 4
  %call1 = call %struct.CON_list_struct* @c_dfs(i32 %5, %struct.DIS_node_struct* %4, %struct.CON_list_struct* null)
  %6 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %cl = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %6, i32 0, i32 0
  store %struct.CON_list_struct* %call1, %struct.CON_list_struct** %cl, align 4
  %7 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  ret %struct.DIS_node_struct* %7
}

; Function Attrs: noinline nounwind
define %struct.CON_list_struct* @c_dfs(i32 %w, %struct.DIS_node_struct* %start_dn, %struct.CON_list_struct* %c) #0 {
entry:
  %retval = alloca %struct.CON_list_struct*, align 4
  %c.addr = alloca %struct.CON_list_struct*, align 4
  %start_dn.addr = alloca %struct.DIS_node_struct*, align 4
  %w.addr = alloca i32, align 4
  %cx = alloca %struct.CON_list_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  %lolx = alloca %struct.List_o_links_struct*, align 4
  store %struct.CON_list_struct* %c, %struct.CON_list_struct** %c.addr, align 4
  store %struct.DIS_node_struct* %start_dn, %struct.DIS_node_struct** %start_dn.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %0
  %1 = load i32, i32* %arrayidx, align 4
  %cmp = icmp ne i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %2
  %3 = load i32, i32* %arrayidx1, align 4
  %4 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %start_dn.addr, align 4
  %word = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %4, i32 0, i32 2
  %5 = load i32, i32* %word, align 4
  %cmp2 = icmp ne i32 %3, %5
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  store i32 1, i32* @structure_violation, align 4
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %6 = load %struct.CON_list_struct*, %struct.CON_list_struct** %c.addr, align 4
  store %struct.CON_list_struct* %6, %struct.CON_list_struct** %retval, align 4
  br label %return

if.end4:                                          ; preds = %entry
  %7 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %start_dn.addr, align 4
  %word5 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %7, i32 0, i32 2
  %8 = load i32, i32* %word5, align 4
  %9 = load i32, i32* %w.addr, align 4
  %arrayidx6 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %9
  store i32 %8, i32* %arrayidx6, align 4
  %10 = load i32, i32* %w.addr, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %10
  %11 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx7, align 4
  store %struct.List_o_links_struct* %11, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end4
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp8 = icmp ne %struct.List_o_links_struct* %12, null
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %13, i32 0, i32 2
  %14 = load i32, i32* %dir, align 4
  %cmp9 = icmp slt i32 %14, 0
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %for.body
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word11 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %15, i32 0, i32 1
  %16 = load i32, i32* %word11, align 4
  %arrayidx12 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %16
  %17 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp eq i32 %17, -1
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.then10
  store i32 1, i32* @structure_violation, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.then10
  br label %if.end25

if.else:                                          ; preds = %for.body
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir16 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %18, i32 0, i32 2
  %19 = load i32, i32* %dir16, align 4
  %cmp17 = icmp eq i32 %19, 0
  br i1 %cmp17, label %if.then18, label %if.end24

if.then18:                                        ; preds = %if.else
  %call = call i8* @xalloc(i32 16)
  %20 = bitcast i8* %call to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %20, %struct.List_o_links_struct** %lolx, align 4
  %21 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %start_dn.addr, align 4
  %lol19 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %21, i32 0, i32 1
  %22 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol19, align 4
  %23 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lolx, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %23, i32 0, i32 3
  store %struct.List_o_links_struct* %22, %struct.List_o_links_struct** %next, align 4
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %24, i32 0, i32 0
  %25 = load i32, i32* %link, align 4
  %26 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lolx, align 4
  %link20 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %26, i32 0, i32 0
  store i32 %25, i32* %link20, align 4
  %27 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lolx, align 4
  %28 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %start_dn.addr, align 4
  %lol21 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %28, i32 0, i32 1
  store %struct.List_o_links_struct* %27, %struct.List_o_links_struct** %lol21, align 4
  %29 = load %struct.CON_list_struct*, %struct.CON_list_struct** %c.addr, align 4
  %30 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %start_dn.addr, align 4
  %31 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word22 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %31, i32 0, i32 1
  %32 = load i32, i32* %word22, align 4
  %call23 = call %struct.CON_list_struct* @c_dfs(i32 %32, %struct.DIS_node_struct* %30, %struct.CON_list_struct* %29)
  store %struct.CON_list_struct* %call23, %struct.CON_list_struct** %c.addr, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then18, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end15
  br label %for.inc

for.inc:                                          ; preds = %if.end25
  %33 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next26 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %33, i32 0, i32 3
  %34 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next26, align 4
  store %struct.List_o_links_struct* %34, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %35 = load i32, i32* %w.addr, align 4
  %call27 = call i32 @is_CON_word(i32 %35)
  %tobool = icmp ne i32 %call27, 0
  br i1 %tobool, label %if.then28, label %if.end32

if.then28:                                        ; preds = %for.end
  %call29 = call i8* @xalloc(i32 8)
  %36 = bitcast i8* %call29 to %struct.CON_list_struct*
  store %struct.CON_list_struct* %36, %struct.CON_list_struct** %cx, align 4
  %37 = load %struct.CON_list_struct*, %struct.CON_list_struct** %c.addr, align 4
  %38 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cx, align 4
  %next30 = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %38, i32 0, i32 0
  store %struct.CON_list_struct* %37, %struct.CON_list_struct** %next30, align 4
  %39 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cx, align 4
  store %struct.CON_list_struct* %39, %struct.CON_list_struct** %c.addr, align 4
  %40 = load i32, i32* %w.addr, align 4
  %call31 = call %struct.CON_node_struct* @build_CON_node(i32 %40)
  %41 = load %struct.CON_list_struct*, %struct.CON_list_struct** %c.addr, align 4
  %cn = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %41, i32 0, i32 1
  store %struct.CON_node_struct* %call31, %struct.CON_node_struct** %cn, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %for.end
  %42 = load %struct.CON_list_struct*, %struct.CON_list_struct** %c.addr, align 4
  store %struct.CON_list_struct* %42, %struct.CON_list_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end32, %if.end
  %43 = load %struct.CON_list_struct*, %struct.CON_list_struct** %retval, align 4
  ret %struct.CON_list_struct* %43
}

; Function Attrs: noinline nounwind
define %struct.DIS_node_struct* @build_DIS_CON_tree() #0 {
entry:
  %w = alloca i32, align 4
  %dnroot = alloca %struct.DIS_node_struct*, align 4
  %dn = alloca %struct.DIS_node_struct*, align 4
  %child = alloca %struct.CON_list_struct*, align 4
  %xchild = alloca %struct.CON_list_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  %xlol = alloca %struct.List_o_links_struct*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %2
  store i32 -1, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %w, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store %struct.DIS_node_struct* null, %struct.DIS_node_struct** %dnroot, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc27, %for.end, %for.inc27, %for.end
  %4 = load i32, i32* %w, align 4
  %5 = load i32, i32* @N_words, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end29

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load i32, i32* %w, align 4
  %arrayidx4 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %6
  %7 = load i32, i32* %arrayidx4, align 4
  %cmp5 = icmp eq i32 %7, -1
  br i1 %cmp5, label %if.then, label %if.end26

if.then:                                          ; preds = %for.body3, %for.body3
  %8 = load i32, i32* %w, align 4
  %call = call %struct.DIS_node_struct* @build_DIS_node(i32 %8)
  store %struct.DIS_node_struct* %call, %struct.DIS_node_struct** %dn, align 4
  %9 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %cmp6 = icmp eq %struct.DIS_node_struct* %9, null
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then, %if.then
  %10 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  store %struct.DIS_node_struct* %10, %struct.DIS_node_struct** %dnroot, align 4
  br label %if.end

if.else:                                          ; preds = %if.then, %if.then
  %11 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %cl = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %11, i32 0, i32 0
  %12 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  store %struct.CON_list_struct* %12, %struct.CON_list_struct** %child, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc14, %if.else, %for.inc14, %if.else
  %13 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %cmp9 = icmp ne %struct.CON_list_struct* %13, null
  br i1 %cmp9, label %for.body10, label %for.end15

for.body10:                                       ; preds = %for.cond8, %for.cond8
  %14 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %next = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %14, i32 0, i32 0
  %15 = load %struct.CON_list_struct*, %struct.CON_list_struct** %next, align 4
  store %struct.CON_list_struct* %15, %struct.CON_list_struct** %xchild, align 4
  %16 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %cl11 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %16, i32 0, i32 0
  %17 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl11, align 4
  %18 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %next12 = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %18, i32 0, i32 0
  store %struct.CON_list_struct* %17, %struct.CON_list_struct** %next12, align 4
  %19 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %20 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %cl13 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %20, i32 0, i32 0
  store %struct.CON_list_struct* %19, %struct.CON_list_struct** %cl13, align 4
  br label %for.inc14

for.inc14:                                        ; preds = %for.body10, %for.body10
  %21 = load %struct.CON_list_struct*, %struct.CON_list_struct** %xchild, align 4
  store %struct.CON_list_struct* %21, %struct.CON_list_struct** %child, align 4
  br label %for.cond8

for.end15:                                        ; preds = %for.cond8, %for.cond8
  %22 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %lol16 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %22, i32 0, i32 1
  %23 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol16, align 4
  store %struct.List_o_links_struct* %23, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc24, %for.end15, %for.inc24, %for.end15
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp18 = icmp ne %struct.List_o_links_struct* %24, null
  br i1 %cmp18, label %for.body19, label %for.end25

for.body19:                                       ; preds = %for.cond17, %for.cond17
  %25 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next20 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %25, i32 0, i32 3
  %26 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next20, align 4
  store %struct.List_o_links_struct* %26, %struct.List_o_links_struct** %xlol, align 4
  %27 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %lol21 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %27, i32 0, i32 1
  %28 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol21, align 4
  %29 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next22 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %29, i32 0, i32 3
  store %struct.List_o_links_struct* %28, %struct.List_o_links_struct** %next22, align 4
  %30 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %31 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %lol23 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %31, i32 0, i32 1
  store %struct.List_o_links_struct* %30, %struct.List_o_links_struct** %lol23, align 4
  br label %for.inc24

for.inc24:                                        ; preds = %for.body19, %for.body19
  %32 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %xlol, align 4
  store %struct.List_o_links_struct* %32, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond17

for.end25:                                        ; preds = %for.cond17, %for.cond17
  %33 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %34 = bitcast %struct.DIS_node_struct* %33 to i8*
  call void @xfree(i8* %34, i32 12)
  br label %if.end

if.end:                                           ; preds = %for.end25, %if.then7, %for.end25, %if.then7
  br label %if.end26

if.end26:                                         ; preds = %if.end, %for.body3, %if.end, %for.body3
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26, %if.end26
  %35 = load i32, i32* %w, align 4
  %inc28 = add nsw i32 %35, 1
  store i32 %inc28, i32* %w, align 4
  br label %for.cond1

for.end29:                                        ; preds = %for.cond1, %for.cond1
  %36 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %struct.BigStruct_39 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 39
  store %struct.DIS_node_struct* %36, %struct.DIS_node_struct** %struct.BigStruct_39
  ret %struct.DIS_node_struct* %36
}

; Function Attrs: noinline nounwind
define i32 @advance_DIS(%struct.DIS_node_struct* %dn) #0 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.DIS_node_struct*, align 4
  %cl = alloca %struct.CON_list_struct*, align 4
  store %struct.DIS_node_struct* %dn, %struct.DIS_node_struct** %dn.addr, align 4
  %0 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %cl1 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %0, i32 0, i32 0
  %1 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl1, align 4
  store %struct.CON_list_struct* %1, %struct.CON_list_struct** %cl, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %cmp = icmp ne %struct.CON_list_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %cn = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %3, i32 0, i32 1
  %4 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn, align 4
  %call = call i32 @advance_CON(%struct.CON_node_struct* %4)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %next = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %5, i32 0, i32 0
  %6 = load %struct.CON_list_struct*, %struct.CON_list_struct** %next, align 4
  store %struct.CON_list_struct* %6, %struct.CON_list_struct** %cl, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4
  ret i32 %7
}

; Function Attrs: noinline nounwind
define i32 @advance_CON(%struct.CON_node_struct* %cn) #0 {
entry:
  %retval = alloca i32, align 4
  %cn.addr = alloca %struct.CON_node_struct*, align 4
  store %struct.CON_node_struct* %cn, %struct.CON_node_struct** %cn.addr, align 4
  %0 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %current = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %0, i32 0, i32 1
  %1 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %current, align 4
  %dn = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %1, i32 0, i32 1
  %2 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %call = call i32 @advance_DIS(%struct.DIS_node_struct* %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %3 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %current1 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %3, i32 0, i32 1
  %4 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %current1, align 4
  %next = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %4, i32 0, i32 0
  %5 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %next, align 4
  %cmp = icmp eq %struct.DIS_list_struct* %5, null
  br i1 %cmp, label %if.then2, label %if.else4

if.then2:                                         ; preds = %if.else
  %6 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %dl = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %6, i32 0, i32 0
  %7 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dl, align 4
  %8 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %current3 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %8, i32 0, i32 1
  store %struct.DIS_list_struct* %7, %struct.DIS_list_struct** %current3, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.else4:                                         ; preds = %if.else
  %9 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %current5 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %9, i32 0, i32 1
  %10 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %current5, align 4
  %next6 = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %10, i32 0, i32 0
  %11 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %next6, align 4
  %12 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %current7 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %12, i32 0, i32 1
  store %struct.DIS_list_struct* %11, %struct.DIS_list_struct** %current7, align 4
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else4, %if.then2, %if.then
  %13 = load i32, i32* %retval, align 4
  ret i32 %13
}

; Function Attrs: noinline nounwind
define void @fill_patch_array_DIS(%struct.DIS_node_struct* %dn, %struct.Links_to_patch_struct* %ltp) #0 {
entry:
  %ltp.addr = alloca %struct.Links_to_patch_struct*, align 4
  %dn.addr = alloca %struct.DIS_node_struct*, align 4
  %cl = alloca %struct.CON_list_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  %ltpx = alloca %struct.Links_to_patch_struct*, align 4
  store %struct.Links_to_patch_struct* %ltp, %struct.Links_to_patch_struct** %ltp.addr, align 4
  store %struct.DIS_node_struct* %dn, %struct.DIS_node_struct** %dn.addr, align 4
  %0 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %lol1 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %0, i32 0, i32 1
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol1, align 4
  store %struct.List_o_links_struct* %1, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 0
  %4 = load i32, i32* %link, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %4
  %used = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx, i32 0, i32 0
  store i8 1, i8* %used, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %5, i32 0, i32 3
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %6, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %cl2 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %7, i32 0, i32 0
  %8 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl2, align 4
  %cmp3 = icmp eq %struct.CON_list_struct* %8, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %9 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %cl4 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %9, i32 0, i32 0
  %10 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl4, align 4
  %cn = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %10, i32 0, i32 1
  %11 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn, align 4
  %word = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %11, i32 0, i32 2
  %12 = load i32, i32* %word, align 4
  %13 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %word5 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %13, i32 0, i32 2
  %14 = load i32, i32* %word5, align 4
  %cmp6 = icmp ne i32 %12, %14
  br i1 %cmp6, label %if.then, label %if.end24

if.then:                                          ; preds = %lor.lhs.false, %for.end
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc22, %if.then
  %15 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %cmp8 = icmp ne %struct.Links_to_patch_struct* %15, null
  br i1 %cmp8, label %for.body9, label %for.end23

for.body9:                                        ; preds = %for.cond7
  %16 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %next10 = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %16, i32 0, i32 0
  %17 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %next10, align 4
  store %struct.Links_to_patch_struct* %17, %struct.Links_to_patch_struct** %ltpx, align 4
  %18 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %link11 = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %18, i32 0, i32 1
  %19 = load i32, i32* %link11, align 4
  %arrayidx12 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %19
  %changed = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx12, i32 0, i32 1
  store i8 1, i8* %changed, align 1
  %20 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %dir = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %20, i32 0, i32 2
  %21 = load i8, i8* %dir, align 4
  %conv = sext i8 %21 to i32
  %cmp13 = icmp eq i32 %conv, 108
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %for.body9
  %22 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %word16 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %22, i32 0, i32 2
  %23 = load i32, i32* %word16, align 4
  %24 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %link17 = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %24, i32 0, i32 1
  %25 = load i32, i32* %link17, align 4
  %arrayidx18 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %25
  %newl = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx18, i32 0, i32 2
  store i32 %23, i32* %newl, align 4
  br label %if.end

if.else:                                          ; preds = %for.body9
  %26 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %word19 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %26, i32 0, i32 2
  %27 = load i32, i32* %word19, align 4
  %28 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %link20 = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %28, i32 0, i32 1
  %29 = load i32, i32* %link20, align 4
  %arrayidx21 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %29
  %newr = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx21, i32 0, i32 3
  store i32 %27, i32* %newr, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then15
  %30 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %31 = bitcast %struct.Links_to_patch_struct* %30 to i8*
  call void @xfree(i8* %31, i32 16)
  br label %for.inc22

for.inc22:                                        ; preds = %if.end
  %32 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltpx, align 4
  store %struct.Links_to_patch_struct* %32, %struct.Links_to_patch_struct** %ltp.addr, align 4
  br label %for.cond7

for.end23:                                        ; preds = %for.cond7
  br label %if.end24

if.end24:                                         ; preds = %for.end23, %lor.lhs.false
  %33 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %cl25 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %33, i32 0, i32 0
  %34 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl25, align 4
  store %struct.CON_list_struct* %34, %struct.CON_list_struct** %cl, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc31, %if.end24
  %35 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %cmp27 = icmp ne %struct.CON_list_struct* %35, null
  br i1 %cmp27, label %for.body29, label %for.end33

for.body29:                                       ; preds = %for.cond26
  %36 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %37 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %cn30 = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %37, i32 0, i32 1
  %38 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn30, align 4
  call void @fill_patch_array_CON(%struct.CON_node_struct* %38, %struct.Links_to_patch_struct* %36)
  store %struct.Links_to_patch_struct* null, %struct.Links_to_patch_struct** %ltp.addr, align 4
  br label %for.inc31

for.inc31:                                        ; preds = %for.body29
  %39 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %next32 = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %39, i32 0, i32 0
  %40 = load %struct.CON_list_struct*, %struct.CON_list_struct** %next32, align 4
  store %struct.CON_list_struct* %40, %struct.CON_list_struct** %cl, align 4
  br label %for.cond26

for.end33:                                        ; preds = %for.cond26
  ret void
}

; Function Attrs: noinline nounwind
define void @fill_patch_array_CON(%struct.CON_node_struct* %cn, %struct.Links_to_patch_struct* %ltp) #0 {
entry:
  %ltp.addr = alloca %struct.Links_to_patch_struct*, align 4
  %cn.addr = alloca %struct.CON_node_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  %ltpx = alloca %struct.Links_to_patch_struct*, align 4
  store %struct.Links_to_patch_struct* %ltp, %struct.Links_to_patch_struct** %ltp.addr, align 4
  store %struct.CON_node_struct* %cn, %struct.CON_node_struct** %cn.addr, align 4
  %0 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %word = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %0, i32 0, i32 2
  %1 = load i32, i32* %word, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %1
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  store %struct.List_o_links_struct* %2, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %4, i32 0, i32 2
  %5 = load i32, i32* %dir, align 4
  %cmp1 = icmp eq i32 %5, 0
  br i1 %cmp1, label %if.then, label %if.end10

if.then:                                          ; preds = %for.body
  %call = call i8* @xalloc(i32 16)
  %6 = bitcast i8* %call to %struct.Links_to_patch_struct*
  store %struct.Links_to_patch_struct* %6, %struct.Links_to_patch_struct** %ltpx, align 4
  %7 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %8 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltpx, align 4
  %next = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %8, i32 0, i32 0
  store %struct.Links_to_patch_struct* %7, %struct.Links_to_patch_struct** %next, align 4
  %9 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltpx, align 4
  store %struct.Links_to_patch_struct* %9, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %10 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %word2 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %10, i32 0, i32 2
  %11 = load i32, i32* %word2, align 4
  %12 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %new = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %12, i32 0, i32 3
  store i32 %11, i32* %new, align 4
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %13, i32 0, i32 0
  %14 = load i32, i32* %link, align 4
  %15 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %link3 = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %15, i32 0, i32 1
  store i32 %14, i32* %link3, align 4
  %16 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word4 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %16, i32 0, i32 1
  %17 = load i32, i32* %word4, align 4
  %18 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %word5 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %18, i32 0, i32 2
  %19 = load i32, i32* %word5, align 4
  %cmp6 = icmp sgt i32 %17, %19
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then
  %20 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %dir8 = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %20, i32 0, i32 2
  store i8 108, i8* %dir8, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %21 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %dir9 = getelementptr inbounds %struct.Links_to_patch_struct, %struct.Links_to_patch_struct* %21, i32 0, i32 2
  store i8 114, i8* %dir9, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end10

if.end10:                                         ; preds = %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end10
  %22 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next11 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %22, i32 0, i32 3
  %23 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next11, align 4
  store %struct.List_o_links_struct* %23, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct.Links_to_patch_struct*, %struct.Links_to_patch_struct** %ltp.addr, align 4
  %25 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %current = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %25, i32 0, i32 1
  %26 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %current, align 4
  %dn = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %26, i32 0, i32 1
  %27 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  call void @fill_patch_array_DIS(%struct.DIS_node_struct* %27, %struct.Links_to_patch_struct* %24)
  ret void
}

; Function Attrs: noinline nounwind
define void @free_digraph() #0 {
entry:
  %lol = alloca %struct.List_o_links_struct*, align 4
  %lolx = alloca %struct.List_o_links_struct*, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc4, %entry, %for.inc4, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %2
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  store %struct.List_o_links_struct* %3, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp2 = icmp ne %struct.List_o_links_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %5, i32 0, i32 3
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %6, %struct.List_o_links_struct** %lolx, align 4
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %8 = bitcast %struct.List_o_links_struct* %7 to i8*
  call void @xfree(i8* %8, i32 16)
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %for.body3
  %9 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lolx, align 4
  store %struct.List_o_links_struct* %9, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  br label %for.inc4

for.inc4:                                         ; preds = %for.end, %for.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end5:                                         ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_DIS_tree(%struct.DIS_node_struct* %dn) #0 {
entry:
  %dn.addr = alloca %struct.DIS_node_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  %lolx = alloca %struct.List_o_links_struct*, align 4
  %cl = alloca %struct.CON_list_struct*, align 4
  %clx = alloca %struct.CON_list_struct*, align 4
  store %struct.DIS_node_struct* %dn, %struct.DIS_node_struct** %dn.addr, align 4
  %0 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %lol1 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %0, i32 0, i32 1
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol1, align 4
  store %struct.List_o_links_struct* %1, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 3
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %4, %struct.List_o_links_struct** %lolx, align 4
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %6 = bitcast %struct.List_o_links_struct* %5 to i8*
  call void @xfree(i8* %6, i32 16)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lolx, align 4
  store %struct.List_o_links_struct* %7, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %cl2 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %8, i32 0, i32 0
  %9 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl2, align 4
  store %struct.CON_list_struct* %9, %struct.CON_list_struct** %cl, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc7, %for.end
  %10 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %cmp4 = icmp ne %struct.CON_list_struct* %10, null
  br i1 %cmp4, label %for.body5, label %for.end8

for.body5:                                        ; preds = %for.cond3
  %11 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %next6 = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %11, i32 0, i32 0
  %12 = load %struct.CON_list_struct*, %struct.CON_list_struct** %next6, align 4
  store %struct.CON_list_struct* %12, %struct.CON_list_struct** %clx, align 4
  %13 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %cn = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %13, i32 0, i32 1
  %14 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn, align 4
  call void @free_CON_tree(%struct.CON_node_struct* %14)
  %15 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  %16 = bitcast %struct.CON_list_struct* %15 to i8*
  call void @xfree(i8* %16, i32 8)
  br label %for.inc7

for.inc7:                                         ; preds = %for.body5
  %17 = load %struct.CON_list_struct*, %struct.CON_list_struct** %clx, align 4
  store %struct.CON_list_struct* %17, %struct.CON_list_struct** %cl, align 4
  br label %for.cond3

for.end8:                                         ; preds = %for.cond3
  %18 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn.addr, align 4
  %19 = bitcast %struct.DIS_node_struct* %18 to i8*
  call void @xfree(i8* %19, i32 12)
  ret void
}

; Function Attrs: noinline nounwind
define void @free_CON_tree(%struct.CON_node_struct* %cn) #0 {
entry:
  %cn.addr = alloca %struct.CON_node_struct*, align 4
  %dl = alloca %struct.DIS_list_struct*, align 4
  %dlx = alloca %struct.DIS_list_struct*, align 4
  store %struct.CON_node_struct* %cn, %struct.CON_node_struct** %cn.addr, align 4
  %0 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %dl1 = getelementptr inbounds %struct.CON_node_struct, %struct.CON_node_struct* %0, i32 0, i32 0
  %1 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dl1, align 4
  store %struct.DIS_list_struct* %1, %struct.DIS_list_struct** %dl, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dl, align 4
  %cmp = icmp ne %struct.DIS_list_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dl, align 4
  %next = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %3, i32 0, i32 0
  %4 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %next, align 4
  store %struct.DIS_list_struct* %4, %struct.DIS_list_struct** %dlx, align 4
  %5 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dl, align 4
  %dn = getelementptr inbounds %struct.DIS_list_struct, %struct.DIS_list_struct* %5, i32 0, i32 1
  %6 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  call void @free_DIS_tree(%struct.DIS_node_struct* %6)
  %7 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dl, align 4
  %8 = bitcast %struct.DIS_list_struct* %7 to i8*
  call void @xfree(i8* %8, i32 8)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load %struct.DIS_list_struct*, %struct.DIS_list_struct** %dlx, align 4
  store %struct.DIS_list_struct* %9, %struct.DIS_list_struct** %dl, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load %struct.CON_node_struct*, %struct.CON_node_struct** %cn.addr, align 4
  %11 = bitcast %struct.CON_node_struct* %10 to i8*
  call void @xfree(i8* %11, i32 12)
  ret void
}

; Function Attrs: noinline nounwind
define void @print_a_link(%struct._iobuf* %fp, i32 %link) #0 {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %link.addr = alloca i32, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %j = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %link.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  %0 = load i32, i32* %link.addr, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %0
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %1 = load i32, i32* %l, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry, %entry
  %2 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %3 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %4 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.1, i32 0, i32 0
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %3, i8* %4, i8* %5)
  br label %if.end11

if.else:                                          ; preds = %land.lhs.true, %entry, %land.lhs.true, %entry
  %6 = load i32, i32* %link.addr, align 4
  %arrayidx1 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %6
  %l2 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx1, i32 0, i32 0
  %7 = load i32, i32* %l2, align 4
  %8 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %8, 1
  %cmp3 = icmp eq i32 %7, %sub
  br i1 %cmp3, label %land.lhs.true4, label %if.else7

land.lhs.true4:                                   ; preds = %if.else, %if.else
  %9 = load i32, i32* @right_wall_defined, align 4
  %tobool5 = icmp ne i32 %9, 0
  br i1 %tobool5, label %if.then6, label %if.else7

if.then6:                                         ; preds = %land.lhs.true4, %land.lhs.true4
  %10 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %11 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.3, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.2, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %10, i8* %11, i8* %12)
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true4, %if.else, %land.lhs.true4, %if.else
  %13 = load i32, i32* %link.addr, align 4
  %arrayidx8 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %13
  %l9 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 0
  %14 = load i32, i32* %l9, align 4
  %15 = bitcast [250 x i8*]* @chosen_words to [0 x i8*]*
  %arrayidx10 = getelementptr inbounds [0 x i8*], [0 x i8*]* %15, i32 0, i32 %14
  %16 = load i8*, i8** %arrayidx10, align 4
  %17 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.4, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %17, i8* %16, i8* %18)
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then6, %if.else7, %if.then6
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then, %if.end, %if.then
  %19 = load i32, i32* %link.addr, align 4
  %arrayidx12 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %19
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx12, i32 0, i32 2
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %20, i32 0, i32 5
  %21 = load i8*, i8** %string, align 4
  %22 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %23 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.5, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %22, i8* %21, i8* %23)
  %24 = load i32, i32* %link.addr, align 4
  %arrayidx13 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %24
  %lc14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 2
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %lc14, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 0
  %26 = load i16, i16* %label, align 4
  %conv = sext i16 %26 to i32
  store i32 %conv, i32* %j, align 4
  %27 = load i32, i32* %j, align 4
  %cmp15 = icmp slt i32 %27, 0
  br i1 %cmp15, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.end11, %if.end11
  %28 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.6, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %28, i8* %29)
  br label %if.end20

if.else18:                                        ; preds = %if.end11, %if.end11
  %30 = load i32, i32* %j, align 4
  %31 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.7, i32 0, i32 0
  %call19 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %31, i8* %32, i32 %30)
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then17, %if.else18, %if.then17
  %33 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %34 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  %call21 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %33, i8* %34)
  %35 = load i32, i32* %link.addr, align 4
  %arrayidx22 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %35
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 4
  %36 = load i8*, i8** %name, align 4
  %37 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %38 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.9, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %37, i8* %36, i8* %38)
  %39 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %40 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.10, i32 0, i32 0
  %call23 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %39, i8* %40)
  %41 = load i32, i32* %link.addr, align 4
  %arrayidx24 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %41
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 3
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %string25 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 5
  %43 = load i8*, i8** %string25, align 4
  %44 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %45 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %44, i8* %43, i8* %45)
  %46 = load i32, i32* %link.addr, align 4
  %arrayidx26 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %46
  %rc27 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx26, i32 0, i32 3
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %rc27, align 4
  %label28 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %47, i32 0, i32 0
  %48 = load i16, i16* %label28, align 4
  %conv29 = sext i16 %48 to i32
  store i32 %conv29, i32* %j, align 4
  %49 = load i32, i32* %j, align 4
  %cmp30 = icmp slt i32 %49, 0
  br i1 %cmp30, label %if.then32, label %if.else34

if.then32:                                        ; preds = %if.end20, %if.end20
  %50 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %51 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.12, i32 0, i32 0
  %call33 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %50, i8* %51)
  br label %if.end36

if.else34:                                        ; preds = %if.end20, %if.end20
  %52 = load i32, i32* %j, align 4
  %53 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.13, i32 0, i32 0
  %call35 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %53, i8* %54, i32 %52)
  br label %if.end36

if.end36:                                         ; preds = %if.else34, %if.then32, %if.else34, %if.then32
  %55 = load i32, i32* %link.addr, align 4
  %arrayidx37 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %55
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx37, i32 0, i32 1
  %56 = load i32, i32* %r, align 4
  %57 = bitcast [250 x i8*]* @chosen_words to [0 x i8*]*
  %arrayidx38 = getelementptr inbounds [0 x i8*], [0 x i8*]* %57, i32 0, i32 %56
  %58 = load i8*, i8** %arrayidx38, align 4
  %59 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %60 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %call39 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %59, i8* %60, i8* %58)
  %61 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %62 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.15, i32 0, i32 0
  %call40 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %61, i8* %62)
  ret void
}

declare dllimport i32 @fprintf(%struct._iobuf*, i8*, ...) #1

; Function Attrs: noinline nounwind
define void @print_links(%struct._iobuf* %fp) #0 {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %fp.addr = alloca %struct._iobuf*, align 4
  %link = alloca i32, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %link, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %link, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %3, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body, %for.body
  %4 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.16, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %4, i8* %5)
  %6 = load i32, i32* %link, align 4
  %7 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %7, %struct._iobuf** %struct.BigStruct_11
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %6, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 6, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then, %if.end, %if.then
  %8 = load i32, i32* %link, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %link, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %9 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.17, i32 0, i32 0
  %call2 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %9, i8* %10)
  ret void
}

; Function Attrs: noinline nounwind
define void @print_links_and_domains(%struct._iobuf* %fp, %struct.PP_node_struct* %pp) #0 {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  %load_struct.BigStruct_20 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_20
  %pp.addr = alloca %struct.PP_node_struct*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %link = alloca i32, align 4
  %longest = alloca i32, align 4
  %j = alloca i32, align 4
  %d = alloca %struct.D_type_list_struct*, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  store %struct.PP_node_struct* %load_struct.BigStruct_20, %struct.PP_node_struct** %pp.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  store i32 0, i32* %longest, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry, %for.inc9, %entry
  %0 = load i32, i32* %link, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %link, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %3, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc9

if.end:                                           ; preds = %for.body, %for.body
  store i32 0, i32* %j, align 4
  %4 = load i32, i32* %link, align 4
  %5 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %5, i32 0, i32 0
  %6 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array, align 4
  %arrayidx2 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %6, i32 %4
  %7 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx2, align 4
  store %struct.D_type_list_struct* %7, %struct.D_type_list_struct** %d, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %if.end, %for.inc, %if.end
  %8 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %cmp4 = icmp ne %struct.D_type_list_struct* %8, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3, %for.cond3
  %9 = load i32, i32* %j, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %j, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body5, %for.body5
  %10 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %10, i32 0, i32 0
  %11 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next, align 4
  store %struct.D_type_list_struct* %11, %struct.D_type_list_struct** %d, align 4
  br label %for.cond3

for.end:                                          ; preds = %for.cond3, %for.cond3
  %12 = load i32, i32* %j, align 4
  %13 = load i32, i32* %longest, align 4
  %cmp6 = icmp sgt i32 %12, %13
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %for.end, %for.end
  %14 = load i32, i32* %j, align 4
  store i32 %14, i32* %longest, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %for.end, %if.then7, %for.end
  br label %for.inc9

for.inc9:                                         ; preds = %if.end8, %if.then, %if.end8, %if.then
  %15 = load i32, i32* %link, align 4
  %inc10 = add nsw i32 %15, 1
  store i32 %inc10, i32* %link, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond, %for.cond
  store i32 0, i32* %link, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc37, %for.end11, %for.inc37, %for.end11
  %16 = load i32, i32* %link, align 4
  %17 = load i32, i32* @N_links, align 4
  %cmp13 = icmp slt i32 %16, %17
  br i1 %cmp13, label %for.body14, label %for.end39

for.body14:                                       ; preds = %for.cond12, %for.cond12
  %18 = load i32, i32* %link, align 4
  %arrayidx15 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %18
  %l16 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx15, i32 0, i32 0
  %19 = load i32, i32* %l16, align 4
  %cmp17 = icmp eq i32 %19, -1
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %for.body14, %for.body14
  br label %for.inc37

if.end19:                                         ; preds = %for.body14, %for.body14
  store i32 0, i32* %j, align 4
  %20 = load i32, i32* %link, align 4
  %21 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %d_type_array20 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %21, i32 0, i32 0
  %22 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array20, align 4
  %arrayidx21 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %22, i32 %20
  %23 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx21, align 4
  store %struct.D_type_list_struct* %23, %struct.D_type_list_struct** %d, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc26, %if.end19, %for.inc26, %if.end19
  %24 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %cmp23 = icmp ne %struct.D_type_list_struct* %24, null
  br i1 %cmp23, label %for.body24, label %for.end28

for.body24:                                       ; preds = %for.cond22, %for.cond22
  %25 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %type = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %25, i32 0, i32 1
  %26 = load i32, i32* %type, align 4
  %27 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %28 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.18, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %27, i8* %28, i32 %26)
  %29 = load i32, i32* %j, align 4
  %inc25 = add nsw i32 %29, 1
  store i32 %inc25, i32* %j, align 4
  br label %for.inc26

for.inc26:                                        ; preds = %for.body24, %for.body24
  %30 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %next27 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %30, i32 0, i32 0
  %31 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next27, align 4
  store %struct.D_type_list_struct* %31, %struct.D_type_list_struct** %d, align 4
  br label %for.cond22

for.end28:                                        ; preds = %for.cond22, %for.cond22
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc33, %for.end28, %for.inc33, %for.end28
  %32 = load i32, i32* %j, align 4
  %33 = load i32, i32* %longest, align 4
  %cmp30 = icmp slt i32 %32, %33
  br i1 %cmp30, label %for.body31, label %for.end35

for.body31:                                       ; preds = %for.cond29, %for.cond29
  %34 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.19, i32 0, i32 0
  %call32 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %34, i8* %35)
  br label %for.inc33

for.inc33:                                        ; preds = %for.body31, %for.body31
  %36 = load i32, i32* %j, align 4
  %inc34 = add nsw i32 %36, 1
  store i32 %inc34, i32* %j, align 4
  br label %for.cond29

for.end35:                                        ; preds = %for.cond29, %for.cond29
  %37 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.20, i32 0, i32 0
  %call36 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %37, i8* %38)
  %39 = load i32, i32* %link, align 4
  %40 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %40, %struct._iobuf** %struct.BigStruct_11
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %39, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 6, i32 0)
  br label %for.inc37

for.inc37:                                        ; preds = %for.end35, %if.then18, %for.end35, %if.then18
  %41 = load i32, i32* %link, align 4
  %inc38 = add nsw i32 %41, 1
  store i32 %inc38, i32* %link, align 4
  br label %for.cond12

for.end39:                                        ; preds = %for.cond12, %for.cond12
  %42 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %43 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.21, i32 0, i32 0
  %call40 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %42, i8* %43)
  %44 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %v41 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %44, i32 0, i32 1
  %45 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v41, align 4
  %cmp42 = icmp ne %struct.Violation_list_struct* %45, null
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; preds = %for.end39, %for.end39
  %46 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %47 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.22, i32 0, i32 0
  %call44 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %46, i8* %47)
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %for.end39, %if.then43, %for.end39
  %48 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %v46 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %48, i32 0, i32 1
  %49 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v46, align 4
  store %struct.Violation_list_struct* %49, %struct.Violation_list_struct** %v, align 4
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc51, %if.end45, %for.inc51, %if.end45
  %50 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp48 = icmp ne %struct.Violation_list_struct* %50, null
  br i1 %cmp48, label %for.body49, label %for.end53

for.body49:                                       ; preds = %for.cond47, %for.cond47
  %51 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %string = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %51, i32 0, i32 1
  %52 = load i8*, i8** %string, align 4
  %53 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %54 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.23, i32 0, i32 0
  %call50 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %53, i8* %54, i8* %52)
  br label %for.inc51

for.inc51:                                        ; preds = %for.body49, %for.body49
  %55 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next52 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %55, i32 0, i32 0
  %56 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next52, align 4
  store %struct.Violation_list_struct* %56, %struct.Violation_list_struct** %v, align 4
  br label %for.cond47

for.end53:                                        ; preds = %for.cond47, %for.cond47
  ret void
}

; Function Attrs: noinline nounwind
define void @and_dfs_full(i32 %w) #0 {
entry:
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 %0
  %1 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 %2
  store i32 1, i32* %arrayidx1, align 4
  %3 = load i32, i32* @N_and_elements, align 4
  %arrayidx2 = getelementptr inbounds [250 x i32], [250 x i32]* @and_element_sizes, i32 0, i32 %3
  %4 = load i32, i32* %arrayidx2, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %arrayidx2, align 4
  %5 = load i32, i32* %w.addr, align 4
  %arrayidx3 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %5
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx3, align 4
  store %struct.List_o_links_struct* %6, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %7, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %8, i32 0, i32 2
  %9 = load i32, i32* %dir, align 4
  %cmp4 = icmp sge i32 %9, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %for.body
  %10 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %10, i32 0, i32 1
  %11 = load i32, i32* %word, align 4
  call void @and_dfs_full(i32 %11)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end6
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 3
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %13, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @and_dfs_commas(i32 %w) #0 {
entry:
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 %0
  %1 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 %2
  store i32 1, i32* %arrayidx1, align 4
  %3 = load i32, i32* %w.addr, align 4
  %arrayidx2 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %3
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx2, align 4
  store %struct.List_o_links_struct* %4, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %6, i32 0, i32 2
  %7 = load i32, i32* %dir, align 4
  %cmp3 = icmp eq i32 %7, 1
  br i1 %cmp3, label %if.then4, label %if.end11

if.then4:                                         ; preds = %for.body
  %8 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %8, i32 0, i32 1
  %9 = load i32, i32* %word, align 4
  %10 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %10, i32 0, i32 %9
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %11 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.24, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %arraydecay, i8* %11)
  %cmp6 = icmp eq i32 %call, 0
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then4
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word8 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 1
  %13 = load i32, i32* %word8, align 4
  call void @and_dfs_commas(i32 %13)
  br label %if.end10

if.else:                                          ; preds = %if.then4
  %14 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word9 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %14, i32 0, i32 1
  %15 = load i32, i32* %word9, align 4
  call void @and_dfs_full(i32 %15)
  %16 = load i32, i32* @N_and_elements, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* @N_and_elements, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %17, i32 0, i32 3
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %18, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %if.then
  ret void
}

declare i32 @strcmp(i8*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @and_cost() #0 {
entry:
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %j = alloca i32, align 4
  %cost = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc26, %entry, %for.inc26, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end28

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x i8]* @is_conjunction to [0 x i8]*
  %arrayidx1 = getelementptr inbounds [0 x i8], [0 x i8]* %5, i32 0, i32 %4
  %6 = load i8, i8* %arrayidx1, align 1
  %tobool = icmp ne i8 %6, 0
  br i1 %tobool, label %if.then, label %if.end25

if.then:                                          ; preds = %for.body, %for.body
  store i32 0, i32* @N_and_elements, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %if.then, %for.inc, %if.then
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* @N_words, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %9 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 %9
  store i32 0, i32* %arrayidx5, align 4
  %10 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [250 x i32], [250 x i32]* @and_element_sizes, i32 0, i32 %10
  store i32 0, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  %12 = load i32, i32* @left_wall_defined, align 4
  %tobool7 = icmp ne i32 %12, 0
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %for.end, %for.end
  %13 = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 0
  store i32 1, i32* %13, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %for.end, %if.then8, %for.end
  %14 = load i32, i32* %w, align 4
  call void @and_dfs_commas(i32 %14)
  %15 = load i32, i32* @N_and_elements, align 4
  %cmp9 = icmp sgt i32 %15, 0
  br i1 %cmp9, label %if.then10, label %if.end24

if.then10:                                        ; preds = %if.end, %if.end
  store i32 250, i32* %min, align 4
  store i32 0, i32* %max, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc21, %if.then10, %for.inc21, %if.then10
  %16 = load i32, i32* %i, align 4
  %17 = load i32, i32* @N_and_elements, align 4
  %cmp12 = icmp slt i32 %16, %17
  br i1 %cmp12, label %for.body13, label %for.end23

for.body13:                                       ; preds = %for.cond11, %for.cond11
  %18 = load i32, i32* %i, align 4
  %arrayidx14 = getelementptr inbounds [250 x i32], [250 x i32]* @and_element_sizes, i32 0, i32 %18
  %19 = load i32, i32* %arrayidx14, align 4
  store i32 %19, i32* %j, align 4
  %20 = load i32, i32* %j, align 4
  %21 = load i32, i32* %min, align 4
  %cmp15 = icmp slt i32 %20, %21
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.body13, %for.body13
  %22 = load i32, i32* %j, align 4
  store i32 %22, i32* %min, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %for.body13, %if.then16, %for.body13
  %23 = load i32, i32* %j, align 4
  %24 = load i32, i32* %max, align 4
  %cmp18 = icmp sgt i32 %23, %24
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17, %if.end17
  %25 = load i32, i32* %j, align 4
  store i32 %25, i32* %max, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end17, %if.then19, %if.end17
  br label %for.inc21

for.inc21:                                        ; preds = %if.end20, %if.end20
  %26 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %26, 1
  store i32 %inc22, i32* %i, align 4
  br label %for.cond11

for.end23:                                        ; preds = %for.cond11, %for.cond11
  %27 = load i32, i32* %max, align 4
  %28 = load i32, i32* %min, align 4
  %sub = sub nsw i32 %27, %28
  %29 = load i32, i32* %cost, align 4
  %add = add nsw i32 %29, %sub
  store i32 %add, i32* %cost, align 4
  br label %if.end24

if.end24:                                         ; preds = %for.end23, %if.end, %for.end23, %if.end
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %for.body, %if.end24, %for.body
  br label %for.inc26

for.inc26:                                        ; preds = %if.end25, %if.end25
  %30 = load i32, i32* %w, align 4
  %inc27 = add nsw i32 %30, 1
  store i32 %inc27, i32* %w, align 4
  br label %for.cond

for.end28:                                        ; preds = %for.cond, %for.cond
  %31 = load i32, i32* %cost, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %31, i32* %struct.BigStruct_32
  ret i32 %31
}

; Function Attrs: noinline nounwind
define i32 @cost_for_length(i32 %length) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %length.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %length.addr, align 4
  %0 = load i32, i32* %length.addr, align 4
  %sub = sub nsw i32 %0, 1
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %sub, i32* %struct.BigStruct_32
  ret i32 %sub
}

; Function Attrs: noinline nounwind
define i32 @link_cost() #0 {
entry:
  %lcost = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %lcost, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %3, i32 0, i32 %2
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 1
  %4 = load i32, i32* %r, align 4
  %5 = load i32, i32* %i, align 4
  %6 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %6, i32 0, i32 %5
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx1, i32 0, i32 0
  %7 = load i32, i32* %l, align 4
  %sub = sub nsw i32 %4, %7
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %sub, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 28, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %8 = load i32, i32* %lcost, align 4
  %add = add nsw i32 %8, %load_struct.BigStruct_32
  store i32 %add, i32* %lcost, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %10 = load i32, i32* %lcost, align 4
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %10, i32* %struct.BigStruct_321
  ret i32 %10
}

; Function Attrs: noinline nounwind
define i32 @disjunct_cost() #0 {
entry:
  %lcost = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %lcost, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %3, i32 0, i32 %2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  %cmp1 = icmp ne %struct.Disjunct_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %5 = load i32, i32* %i, align 4
  %6 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx2 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %6, i32 0, i32 %5
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx2, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 1
  %8 = load i16, i16* %cost, align 4
  %conv = sext i16 %8 to i32
  %9 = load i32, i32* %lcost, align 4
  %add = add nsw i32 %9, %conv
  store i32 %add, i32* %lcost, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %11 = load i32, i32* %lcost, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret i32 %11
}

; Function Attrs: noinline nounwind
define i32 @strictly_smaller_name(i8* %s, i8* %t) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %strictness = alloca i32, align 4
  %ss = alloca i32, align 4
  %tt = alloca i32, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %strictness, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end27, %if.then19, %entry, %if.end27, %if.then19, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond, %while.cond
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond, %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp3, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end, %lor.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv5 = sext i8 %6 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %while.body, %while.body
  store i32 42, i32* %ss, align 4
  br label %if.end

if.else:                                          ; preds = %while.body, %while.body
  %7 = load i8*, i8** %s.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv8 = sext i8 %8 to i32
  store i32 %conv8, i32* %ss, align 4
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %10 = load i8*, i8** %t.addr, align 4
  %11 = load i8, i8* %10, align 1
  %conv9 = sext i8 %11 to i32
  %cmp10 = icmp eq i32 %conv9, 0
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.end, %if.end
  store i32 42, i32* %tt, align 4
  br label %if.end16

if.else13:                                        ; preds = %if.end, %if.end
  %12 = load i8*, i8** %t.addr, align 4
  %13 = load i8, i8* %12, align 1
  %conv14 = sext i8 %13 to i32
  store i32 %conv14, i32* %tt, align 4
  %14 = load i8*, i8** %t.addr, align 4
  %incdec.ptr15 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr15, i8** %t.addr, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.else13, %if.then12, %if.else13, %if.then12
  %15 = load i32, i32* %ss, align 4
  %16 = load i32, i32* %tt, align 4
  %cmp17 = icmp eq i32 %15, %16
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end16, %if.end16
  br label %while.cond

if.end20:                                         ; preds = %if.end16, %if.end16
  %17 = load i32, i32* %tt, align 4
  %cmp21 = icmp eq i32 %17, 42
  br i1 %cmp21, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end20, %if.end20
  %18 = load i32, i32* %ss, align 4
  %cmp23 = icmp eq i32 %18, 94
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %lor.lhs.false, %if.end20, %lor.lhs.false, %if.end20
  %19 = load i32, i32* %strictness, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %strictness, align 4
  br label %if.end27

if.else26:                                        ; preds = %lor.lhs.false, %lor.lhs.false
  store i32 0, i32* %retval, align 4
  br label %return

if.end27:                                         ; preds = %if.then25, %if.then25
  br label %while.cond

while.end:                                        ; preds = %lor.end, %lor.end
  %20 = load i32, i32* %strictness, align 4
  %cmp28 = icmp sgt i32 %20, 0
  %conv29 = zext i1 %cmp28 to i32
  store i32 %conv29, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.else26, %while.end, %if.else26
  %21 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %21, i32* %struct.BigStruct_32
  ret i32 %21
}

; Function Attrs: noinline nounwind
define void @compute_link_names() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %3, i32 0, i32 %2
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 3
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 5
  %5 = load i8*, i8** %string, align 4
  %6 = load i32, i32* %i, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx1, i32 0, i32 2
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %string2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 5
  %9 = load i8*, i8** %string2, align 4
  %call = call i8* @intersect_strings(i8* %9, i8* %5)
  %10 = load i32, i32* %i, align 4
  %11 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %11, i32 0, i32 %10
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 4
  store i8* %call, i8** %name, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @compute_pp_link_names() #0 {
entry:
  %i = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %3, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body, %for.body
  %4 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %4
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx2, i32 0, i32 3
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %6
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 2
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %call = call i32 @match(%struct.Connector_struct* %7, %struct.Connector_struct* %5)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end, %if.end
  %8 = load i32, i32* %i, align 4
  %9 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %9, i32 0, i32 %8
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx5, i32 0, i32 4
  %10 = load i8*, i8** %name, align 4
  %11 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %11
  %name7 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx6, i32 0, i32 4
  store i8* %10, i8** %name7, align 4
  br label %if.end27

if.else:                                          ; preds = %if.end, %if.end
  %12 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %12
  %rc9 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 3
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %rc9, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 5
  %14 = load i8*, i8** %string, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx10 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %15
  %lc11 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx10, i32 0, i32 2
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %lc11, align 4
  %string12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 5
  %17 = load i8*, i8** %string12, align 4
  %call13 = call i8* @intersect_strings(i8* %17, i8* %14)
  store i8* %call13, i8** %s, align 4
  %18 = load i32, i32* %i, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx14 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %name15 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx14, i32 0, i32 4
  %20 = load i8*, i8** %name15, align 4
  %21 = load i8*, i8** %s, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %21, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %20, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 1, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool17 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool17, label %if.then18, label %if.else23

if.then18:                                        ; preds = %if.else, %if.else
  %22 = load i32, i32* %i, align 4
  %23 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %23, i32 0, i32 %22
  %name20 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx19, i32 0, i32 4
  %24 = load i8*, i8** %name20, align 4
  %25 = load i32, i32* %i, align 4
  %arrayidx21 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %25
  %name22 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx21, i32 0, i32 4
  store i8* %24, i8** %name22, align 4
  br label %if.end26

if.else23:                                        ; preds = %if.else, %if.else
  %26 = load i8*, i8** %s, align 4
  %27 = load i32, i32* %i, align 4
  %arrayidx24 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %27
  %name25 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 4
  store i8* %26, i8** %name25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else23, %if.then18, %if.else23, %if.then18
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then4, %if.end26, %if.then4
  br label %for.inc

for.inc:                                          ; preds = %if.end27, %if.then, %if.end27, %if.then
  %28 = load i32, i32* %i, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @analyze_fat_linkage(%struct.Linkage_info_struct* noalias sret %agg.result, i32 %should_print) #0 {
entry:
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  %load_struct.BigStruct_24 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  %load_struct.BigStruct_25 = load i32, i32* %struct.BigStruct_25
  %should_print.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %should_print_messages = alloca i32, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %li = alloca %struct.Linkage_info_struct, align 4
  %d_root = alloca %struct.DIS_node_struct*, align 4
  %pp = alloca %struct.PP_node_struct*, align 4
  %accum = alloca %struct.PP_node_struct*, align 4
  %dtl0 = alloca %struct.D_type_list_struct*, align 4
  %dtl1 = alloca %struct.D_type_list_struct*, align 4
  store i32 %load_struct.BigStruct_25, i32* %should_print.addr, align 4
  store i32 1, i32* %should_print_messages, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 48, i32 0)
  store i32 0, i32* @structure_violation, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 49, i32 0)
  %struct.BigStruct_39 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 39
  %load_struct.BigStruct_39 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %struct.BigStruct_39
  store %struct.DIS_node_struct* %load_struct.BigStruct_39, %struct.DIS_node_struct** %d_root, align 4
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  store i16 0, i16* %N_violations, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 55, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %conv = trunc i32 %load_struct.BigStruct_3212 to i16
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 3
  store i16 %conv, i16* %disjunct_cost, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 58, i32 0)
  %struct.BigStruct_3213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3213 = load i32, i32* %struct.BigStruct_3213
  %conv3 = trunc i32 %load_struct.BigStruct_3213 to i16
  %null_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 2
  store i16 %conv3, i16* %null_cost, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 54, i32 1)
  %struct.BigStruct_3211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3211 = load i32, i32* %struct.BigStruct_3211
  %conv5 = trunc i32 %load_struct.BigStruct_3211 to i16
  %link_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 5
  store i16 %conv5, i16* %link_cost, align 4
  %0 = load i32, i32* @structure_violation, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry, %entry
  %1 = load i32, i32* %should_print.addr, align 4
  %tobool6 = icmp ne i32 %1, 0
  br i1 %tobool6, label %land.lhs.true7, label %lor.lhs.false

land.lhs.true7:                                   ; preds = %land.lhs.true, %land.lhs.true
  %2 = load i32, i32* @display_multiple, align 4
  %tobool8 = icmp ne i32 %2, 0
  br i1 %tobool8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true7, %land.lhs.true, %entry, %land.lhs.true7, %land.lhs.true, %entry
  %3 = load i32, i32* %should_print.addr, align 4
  %tobool9 = icmp ne i32 %3, 0
  br i1 %tobool9, label %land.lhs.true10, label %if.end20

land.lhs.true10:                                  ; preds = %lor.lhs.false, %lor.lhs.false
  %4 = load i32, i32* @display_fat, align 4
  %tobool11 = icmp ne i32 %4, 0
  br i1 %tobool11, label %if.then, label %if.end20

if.then:                                          ; preds = %land.lhs.true10, %land.lhs.true7, %land.lhs.true10, %land.lhs.true7
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 56, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then, %for.inc, %if.then
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %7 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %7
  %8 = load i32, i32* %i, align 4
  %9 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %9, i32 0, i32 %8
  %10 = bitcast %struct.Link_struct* %arrayidx to i8*
  %11 = bitcast %struct.Link_struct* %arrayidx13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %10, i8* %11, i32 20, i32 4, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx15 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx15, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 41, i32 1)
  %13 = load i32, i32* @display_links, align 4
  %tobool16 = icmp ne i32 %13, 0
  br i1 %tobool16, label %if.then17, label %if.end

if.then17:                                        ; preds = %for.end, %for.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx19 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 1
  %struct.BigStruct_110 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx19, %struct._iobuf** %struct.BigStruct_110
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 51, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then17, %for.end, %if.then17, %for.end
  br label %if.end20

if.end20:                                         ; preds = %if.end, %land.lhs.true10, %lor.lhs.false, %if.end, %land.lhs.true10, %lor.lhs.false
  %14 = load i32, i32* @structure_violation, align 4
  %tobool21 = icmp ne i32 %14, 0
  br i1 %tobool21, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end20, %if.end20
  %15 = load i32, i32* @display_links, align 4
  %tobool23 = icmp ne i32 %15, 0
  br i1 %tobool23, label %land.lhs.true24, label %if.end30

land.lhs.true24:                                  ; preds = %if.then22, %if.then22
  %16 = load i32, i32* @display_bad, align 4
  %tobool25 = icmp ne i32 %16, 0
  br i1 %tobool25, label %if.then26, label %if.end30

if.then26:                                        ; preds = %land.lhs.true24, %land.lhs.true24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx28 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %17 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.25, i32 0, i32 0
  %call29 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx28, i8* %17)
  br label %if.end30

if.end30:                                         ; preds = %if.then26, %land.lhs.true24, %if.then22, %if.then26, %land.lhs.true24, %if.then22
  %N_violations31 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %18 = load i16, i16* %N_violations31, align 4
  %inc32 = add i16 %18, 1
  store i16 %inc32, i16* %N_violations31, align 4
  %and_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 4
  store i16 0, i16* %and_cost, align 2
  br label %if.end211

if.else:                                          ; preds = %if.end20, %if.end20
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 53, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv34 = trunc i32 %load_struct.BigStruct_32 to i16
  %and_cost35 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 4
  store i16 %conv34, i16* %and_cost35, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 56, i32 0)
  %call36 = call i8* @xalloc(i32 8)
  %19 = bitcast i8* %call36 to %struct.PP_node_struct*
  store %struct.PP_node_struct* %19, %struct.PP_node_struct** %accum, align 4
  %20 = load i32, i32* @N_links, align 4
  %mul = mul i32 %20, 4
  %call37 = call i8* @xalloc(i32 %mul)
  %21 = bitcast i8* %call37 to %struct.D_type_list_struct**
  %22 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %22, i32 0, i32 0
  store %struct.D_type_list_struct** %21, %struct.D_type_list_struct*** %d_type_array, align 4
  %23 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %v38 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %23, i32 0, i32 1
  store %struct.Violation_list_struct* null, %struct.Violation_list_struct** %v38, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond39

for.cond39:                                       ; preds = %for.inc45, %if.else, %for.inc45, %if.else
  %24 = load i32, i32* %i, align 4
  %25 = load i32, i32* @N_links, align 4
  %cmp40 = icmp slt i32 %24, %25
  br i1 %cmp40, label %for.body42, label %for.end47

for.body42:                                       ; preds = %for.cond39, %for.cond39
  %26 = load i32, i32* %i, align 4
  %27 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array43 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %27, i32 0, i32 0
  %28 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array43, align 4
  %arrayidx44 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %28, i32 %26
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx44, align 4
  br label %for.inc45

for.inc45:                                        ; preds = %for.body42, %for.body42
  %29 = load i32, i32* %i, align 4
  %inc46 = add nsw i32 %29, 1
  store i32 %inc46, i32* %i, align 4
  br label %for.cond39

for.end47:                                        ; preds = %for.cond39, %for.cond39
  br label %for.cond48

for.cond48:                                       ; preds = %if.end193, %for.end47, %if.end193, %for.end47
  store i32 0, i32* %i, align 4
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc61, %for.cond48, %for.inc61, %for.cond48
  %30 = load i32, i32* %i, align 4
  %31 = load i32, i32* @N_links, align 4
  %cmp50 = icmp slt i32 %30, %31
  br i1 %cmp50, label %for.body52, label %for.end63

for.body52:                                       ; preds = %for.cond49, %for.cond49
  %32 = load i32, i32* %i, align 4
  %arrayidx53 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %32
  %changed = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx53, i32 0, i32 1
  store i8 0, i8* %changed, align 1
  %33 = load i32, i32* %i, align 4
  %arrayidx54 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %33
  %used = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx54, i32 0, i32 0
  store i8 0, i8* %used, align 4
  %34 = load i32, i32* %i, align 4
  %35 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx55 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %35, i32 0, i32 %34
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx55, i32 0, i32 0
  %36 = load i32, i32* %l, align 4
  %37 = load i32, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %37
  %newl = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx56, i32 0, i32 2
  store i32 %36, i32* %newl, align 4
  %38 = load i32, i32* %i, align 4
  %39 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx57 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %39, i32 0, i32 %38
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx57, i32 0, i32 1
  %40 = load i32, i32* %r, align 4
  %41 = load i32, i32* %i, align 4
  %arrayidx58 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %41
  %newr = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx58, i32 0, i32 3
  store i32 %40, i32* %newr, align 4
  %42 = load i32, i32* %i, align 4
  %arrayidx59 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %42
  %43 = load i32, i32* %i, align 4
  %44 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx60 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %44, i32 0, i32 %43
  %45 = bitcast %struct.Link_struct* %arrayidx59 to i8*
  %46 = bitcast %struct.Link_struct* %arrayidx60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 20, i32 4, i1 false)
  br label %for.inc61

for.inc61:                                        ; preds = %for.body52, %for.body52
  %47 = load i32, i32* %i, align 4
  %inc62 = add nsw i32 %47, 1
  store i32 %inc62, i32* %i, align 4
  br label %for.cond49

for.end63:                                        ; preds = %for.cond49, %for.cond49
  %48 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %d_root, align 4
  call void @fill_patch_array_DIS(%struct.DIS_node_struct* %48, %struct.Links_to_patch_struct* null)
  store i32 0, i32* %i, align 4
  br label %for.cond64

for.cond64:                                       ; preds = %for.inc103, %for.end63, %for.inc103, %for.end63
  %49 = load i32, i32* %i, align 4
  %50 = load i32, i32* @N_links, align 4
  %cmp65 = icmp slt i32 %49, %50
  br i1 %cmp65, label %for.body67, label %for.end105

for.body67:                                       ; preds = %for.cond64, %for.cond64
  %51 = load i32, i32* %i, align 4
  %arrayidx68 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %51
  %changed69 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx68, i32 0, i32 1
  %52 = load i8, i8* %changed69, align 1
  %conv70 = sext i8 %52 to i32
  %tobool71 = icmp ne i32 %conv70, 0
  br i1 %tobool71, label %if.then77, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %for.body67, %for.body67
  %53 = load i32, i32* %i, align 4
  %arrayidx73 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %53
  %used74 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx73, i32 0, i32 0
  %54 = load i8, i8* %used74, align 4
  %conv75 = sext i8 %54 to i32
  %tobool76 = icmp ne i32 %conv75, 0
  br i1 %tobool76, label %if.then77, label %if.else86

if.then77:                                        ; preds = %lor.lhs.false72, %for.body67, %lor.lhs.false72, %for.body67
  %55 = load i32, i32* %i, align 4
  %arrayidx78 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %55
  %newl79 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx78, i32 0, i32 2
  %56 = load i32, i32* %newl79, align 4
  %57 = load i32, i32* %i, align 4
  %arrayidx80 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %57
  %l81 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx80, i32 0, i32 0
  store i32 %56, i32* %l81, align 4
  %58 = load i32, i32* %i, align 4
  %arrayidx82 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %58
  %newr83 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx82, i32 0, i32 3
  %59 = load i32, i32* %newr83, align 4
  %60 = load i32, i32* %i, align 4
  %arrayidx84 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %60
  %r85 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx84, i32 0, i32 1
  store i32 %59, i32* %r85, align 4
  br label %if.end102

if.else86:                                        ; preds = %lor.lhs.false72, %lor.lhs.false72
  %61 = load i32, i32* %i, align 4
  %62 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx87 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %62, i32 0, i32 %61
  %l88 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx87, i32 0, i32 0
  %63 = load i32, i32* %l88, align 4
  %arrayidx89 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %63
  %64 = load i32, i32* %arrayidx89, align 4
  %cmp90 = icmp ne i32 %64, -1
  br i1 %cmp90, label %land.lhs.true92, label %if.end101

land.lhs.true92:                                  ; preds = %if.else86, %if.else86
  %65 = load i32, i32* %i, align 4
  %66 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx93 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %66, i32 0, i32 %65
  %r94 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx93, i32 0, i32 1
  %67 = load i32, i32* %r94, align 4
  %arrayidx95 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %67
  %68 = load i32, i32* %arrayidx95, align 4
  %cmp96 = icmp ne i32 %68, -1
  br i1 %cmp96, label %if.then98, label %if.end101

if.then98:                                        ; preds = %land.lhs.true92, %land.lhs.true92
  %69 = load i32, i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %69
  %l100 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx99, i32 0, i32 0
  store i32 -1, i32* %l100, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.then98, %land.lhs.true92, %if.else86, %if.then98, %land.lhs.true92, %if.else86
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then77, %if.end101, %if.then77
  br label %for.inc103

for.inc103:                                       ; preds = %if.end102, %if.end102
  %70 = load i32, i32* %i, align 4
  %inc104 = add nsw i32 %70, 1
  store i32 %inc104, i32* %i, align 4
  br label %for.cond64

for.end105:                                       ; preds = %for.cond64, %for.cond64
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 9, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 7, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 23, i32 1)
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  %load_struct.BigStruct_36 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_36
  store %struct.PP_node_struct* %load_struct.BigStruct_36, %struct.PP_node_struct** %pp, align 4
  %71 = load i32, i32* @display_multiple, align 4
  %tobool107 = icmp ne i32 %71, 0
  br i1 %tobool107, label %land.lhs.true108, label %if.end113

land.lhs.true108:                                 ; preds = %for.end105, %for.end105
  %72 = load i32, i32* %should_print.addr, align 4
  %tobool109 = icmp ne i32 %72, 0
  br i1 %tobool109, label %if.then110, label %if.end113

if.then110:                                       ; preds = %land.lhs.true108, %land.lhs.true108
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_383 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_383
  %arrayidx112 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_383, i32 1
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx112, %struct._iobuf** %struct.BigStruct_19
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 41, i32 1)
  br label %if.end113

if.end113:                                        ; preds = %if.then110, %land.lhs.true108, %for.end105, %if.then110, %land.lhs.true108, %for.end105
  %73 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %v114 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %73, i32 0, i32 1
  %74 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v114, align 4
  %cmp115 = icmp eq %struct.Violation_list_struct* %74, null
  br i1 %cmp115, label %if.then117, label %if.else178

if.then117:                                       ; preds = %if.end113, %if.end113
  store i32 0, i32* %i, align 4
  br label %for.cond118

for.cond118:                                      ; preds = %for.inc161, %if.then117, %for.inc161, %if.then117
  %75 = load i32, i32* %i, align 4
  %76 = load i32, i32* @N_links, align 4
  %cmp119 = icmp slt i32 %75, %76
  br i1 %cmp119, label %for.body121, label %for.end163

for.body121:                                      ; preds = %for.cond118, %for.cond118
  %77 = load i32, i32* %i, align 4
  %arrayidx122 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %77
  %l123 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx122, i32 0, i32 0
  %78 = load i32, i32* %l123, align 4
  %cmp124 = icmp eq i32 %78, -1
  br i1 %cmp124, label %if.then126, label %if.end127

if.then126:                                       ; preds = %for.body121, %for.body121
  br label %for.inc161

if.end127:                                        ; preds = %for.body121, %for.body121
  %79 = load i32, i32* %i, align 4
  %80 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array128 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %80, i32 0, i32 0
  %81 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array128, align 4
  %arrayidx129 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %81, i32 %79
  %82 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx129, align 4
  %cmp130 = icmp eq %struct.D_type_list_struct* %82, null
  br i1 %cmp130, label %if.then132, label %if.else139

if.then132:                                       ; preds = %if.end127, %if.end127
  %83 = load i32, i32* %i, align 4
  %84 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %d_type_array133 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %84, i32 0, i32 0
  %85 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array133, align 4
  %arrayidx134 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %85, i32 %83
  %86 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx134, align 4
  %87 = load i32, i32* %i, align 4
  %88 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array135 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %88, i32 0, i32 0
  %89 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array135, align 4
  %arrayidx136 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %89, i32 %87
  store %struct.D_type_list_struct* %86, %struct.D_type_list_struct** %arrayidx136, align 4
  %90 = load i32, i32* %i, align 4
  %91 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %d_type_array137 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %91, i32 0, i32 0
  %92 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array137, align 4
  %arrayidx138 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %92, i32 %90
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx138, align 4
  br label %if.end160

if.else139:                                       ; preds = %if.end127, %if.end127
  %93 = load i32, i32* %i, align 4
  %94 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %d_type_array140 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %94, i32 0, i32 0
  %95 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array140, align 4
  %arrayidx141 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %95, i32 %93
  %96 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx141, align 4
  store %struct.D_type_list_struct* %96, %struct.D_type_list_struct** %dtl0, align 4
  %97 = load i32, i32* %i, align 4
  %98 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array142 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %98, i32 0, i32 0
  %99 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array142, align 4
  %arrayidx143 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %99, i32 %97
  %100 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx143, align 4
  store %struct.D_type_list_struct* %100, %struct.D_type_list_struct** %dtl1, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else139, %while.body, %if.else139
  %101 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %cmp144 = icmp ne %struct.D_type_list_struct* %101, null
  br i1 %cmp144, label %land.lhs.true146, label %land.end

land.lhs.true146:                                 ; preds = %while.cond, %while.cond
  %102 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %cmp147 = icmp ne %struct.D_type_list_struct* %102, null
  br i1 %cmp147, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true146, %land.lhs.true146
  %103 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %type = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %103, i32 0, i32 1
  %104 = load i32, i32* %type, align 4
  %105 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %type149 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %105, i32 0, i32 1
  %106 = load i32, i32* %type149, align 4
  %cmp150 = icmp eq i32 %104, %106
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true146, %while.cond, %land.rhs, %land.lhs.true146, %while.cond
  %107 = phi i1 [ false, %land.lhs.true146 ], [ false, %while.cond ], [ %cmp150, %land.rhs ]
  br i1 %107, label %while.body, label %while.end

while.body:                                       ; preds = %land.end, %land.end
  %108 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %108, i32 0, i32 0
  %109 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next, align 4
  store %struct.D_type_list_struct* %109, %struct.D_type_list_struct** %dtl0, align 4
  %110 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %next152 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %110, i32 0, i32 0
  %111 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next152, align 4
  store %struct.D_type_list_struct* %111, %struct.D_type_list_struct** %dtl1, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end, %land.end
  %112 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %cmp153 = icmp ne %struct.D_type_list_struct* %112, null
  br i1 %cmp153, label %if.then158, label %lor.lhs.false155

lor.lhs.false155:                                 ; preds = %while.end, %while.end
  %113 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %cmp156 = icmp ne %struct.D_type_list_struct* %113, null
  br i1 %cmp156, label %if.then158, label %if.end159

if.then158:                                       ; preds = %lor.lhs.false155, %while.end, %lor.lhs.false155, %while.end
  br label %for.end163

if.end159:                                        ; preds = %lor.lhs.false155, %lor.lhs.false155
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then132, %if.end159, %if.then132
  br label %for.inc161

for.inc161:                                       ; preds = %if.end160, %if.then126, %if.end160, %if.then126
  %114 = load i32, i32* %i, align 4
  %inc162 = add nsw i32 %114, 1
  store i32 %inc162, i32* %i, align 4
  br label %for.cond118

for.end163:                                       ; preds = %if.then158, %for.cond118, %if.then158, %for.cond118
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* @N_links, align 4
  %cmp164 = icmp ne i32 %115, %116
  br i1 %cmp164, label %if.then166, label %if.end177

if.then166:                                       ; preds = %for.end163, %for.end163
  %117 = load i32, i32* @display_links, align 4
  %tobool167 = icmp ne i32 %117, 0
  br i1 %tobool167, label %land.lhs.true168, label %if.end176

land.lhs.true168:                                 ; preds = %if.then166, %if.then166
  %118 = load i32, i32* %should_print_messages, align 4
  %tobool169 = icmp ne i32 %118, 0
  br i1 %tobool169, label %if.then170, label %if.end176

if.then170:                                       ; preds = %land.lhs.true168, %land.lhs.true168
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  %arrayidx172 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_384, i32 1
  %119 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.26, i32 0, i32 0
  %call173 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx172, i8* %119)
  %N_violations174 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %120 = load i16, i16* %N_violations174, align 4
  %inc175 = add i16 %120, 1
  store i16 %inc175, i16* %N_violations174, align 4
  br label %if.end176

if.end176:                                        ; preds = %if.then170, %land.lhs.true168, %if.then166, %if.then170, %land.lhs.true168, %if.then166
  %121 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %121, %struct.PP_node_struct** %struct.BigStruct_20
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  br label %for.end194

if.end177:                                        ; preds = %for.end163, %for.end163
  br label %if.end189

if.else178:                                       ; preds = %if.end113, %if.end113
  %122 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %v179 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %122, i32 0, i32 1
  %123 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v179, align 4
  store %struct.Violation_list_struct* %123, %struct.Violation_list_struct** %v, align 4
  br label %for.cond180

for.cond180:                                      ; preds = %for.inc186, %if.else178, %for.inc186, %if.else178
  %124 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp181 = icmp ne %struct.Violation_list_struct* %124, null
  br i1 %cmp181, label %for.body183, label %for.end188

for.body183:                                      ; preds = %for.cond180, %for.cond180
  %N_violations184 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %125 = load i16, i16* %N_violations184, align 4
  %inc185 = add i16 %125, 1
  store i16 %inc185, i16* %N_violations184, align 4
  br label %for.inc186

for.inc186:                                       ; preds = %for.body183, %for.body183
  %126 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next187 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %126, i32 0, i32 0
  %127 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next187, align 4
  store %struct.Violation_list_struct* %127, %struct.Violation_list_struct** %v, align 4
  br label %for.cond180

for.end188:                                       ; preds = %for.cond180, %for.cond180
  br label %if.end189

if.end189:                                        ; preds = %for.end188, %if.end177, %for.end188, %if.end177
  %128 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %struct.BigStruct_207 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %128, %struct.PP_node_struct** %struct.BigStruct_207
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  %129 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %d_root, align 4
  %call190 = call i32 @advance_DIS(%struct.DIS_node_struct* %129)
  %tobool191 = icmp ne i32 %call190, 0
  br i1 %tobool191, label %if.end193, label %if.then192

if.then192:                                       ; preds = %if.end189, %if.end189
  br label %for.end194

if.end193:                                        ; preds = %if.end189, %if.end189
  br label %for.cond48

for.end194:                                       ; preds = %if.then192, %if.end176, %if.then192, %if.end176
  %130 = load i32, i32* @display_on, align 4
  %tobool195 = icmp ne i32 %130, 0
  br i1 %tobool195, label %land.lhs.true196, label %if.end210

land.lhs.true196:                                 ; preds = %for.end194, %for.end194
  %N_violations197 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %131 = load i16, i16* %N_violations197, align 4
  %conv198 = sext i16 %131 to i32
  %cmp199 = icmp ne i32 %conv198, 0
  br i1 %cmp199, label %land.lhs.true201, label %if.end210

land.lhs.true201:                                 ; preds = %land.lhs.true196, %land.lhs.true196
  %132 = load i32, i32* @verbosity, align 4
  %cmp202 = icmp sgt i32 %132, 1
  br i1 %cmp202, label %land.lhs.true204, label %if.end210

land.lhs.true204:                                 ; preds = %land.lhs.true201, %land.lhs.true201
  %133 = load i32, i32* %should_print_messages, align 4
  %tobool205 = icmp ne i32 %133, 0
  br i1 %tobool205, label %if.then206, label %if.end210

if.then206:                                       ; preds = %land.lhs.true204, %land.lhs.true204
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_385 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_385
  %arrayidx208 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_385, i32 1
  %134 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.27, i32 0, i32 0
  %call209 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx208, i8* %134)
  br label %if.end210

if.end210:                                        ; preds = %if.then206, %land.lhs.true204, %land.lhs.true201, %land.lhs.true196, %for.end194, %if.then206, %land.lhs.true204, %land.lhs.true201, %land.lhs.true196, %for.end194
  %135 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %struct.BigStruct_208 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %135, %struct.PP_node_struct** %struct.BigStruct_208
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.end30, %if.end210, %if.end30
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 50, i32 0)
  %136 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %d_root, align 4
  call void @free_DIS_tree(%struct.DIS_node_struct* %136)
  %137 = load i32, i32* %should_print.addr, align 4
  %tobool212 = icmp ne i32 %137, 0
  br i1 %tobool212, label %if.then213, label %if.end217

if.then213:                                       ; preds = %if.end211, %if.end211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_386 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_386
  %arrayidx215 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_386, i32 1
  %struct.BigStruct_114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx215, %struct._iobuf** %struct.BigStruct_114
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_3215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3215 = load i32, i32* %struct.BigStruct_3215
  br label %if.end217

if.end217:                                        ; preds = %if.then213, %if.end211, %if.then213, %if.end211
  %138 = bitcast %struct.Linkage_info_struct* %load_struct.BigStruct_24 to i8*
  %139 = bitcast %struct.Linkage_info_struct* %li to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %138, i8* %139, i32 16, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @null_cost() #0 {
entry:
  %0 = load i32, i32* @N_null, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %0, i32* %struct.BigStruct_32
  ret i32 %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2

declare dllimport %struct._iobuf* @__iob_func() #1

declare dllimport i32 @fflush(%struct._iobuf*) #1

; Function Attrs: noinline nounwind
define void @analyze_thin_linkage(%struct.Linkage_info_struct* noalias sret %agg.result, i32 %should_print) #0 {
entry:
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  %load_struct.BigStruct_24 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  %load_struct.BigStruct_25 = load i32, i32* %struct.BigStruct_25
  %should_print.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %li = alloca %struct.Linkage_info_struct, align 4
  %pp = alloca %struct.PP_node_struct*, align 4
  store i32 %load_struct.BigStruct_25, i32* %should_print.addr, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 56, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %3 = load i32, i32* %i, align 4
  %4 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %4, i32 0, i32 %3
  %5 = bitcast %struct.Link_struct* %arrayidx to i8*
  %6 = bitcast %struct.Link_struct* %arrayidx1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %5, i8* %6, i32 20, i32 4, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 23, i32 1)
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  %load_struct.BigStruct_36 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_36
  store %struct.PP_node_struct* %load_struct.BigStruct_36, %struct.PP_node_struct** %pp, align 4
  %8 = load i32, i32* @display_fat, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end, %for.end
  %9 = load i32, i32* @display_multiple, align 4
  %tobool2 = icmp ne i32 %9, 0
  br i1 %tobool2, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.end, %lor.lhs.false, %for.end
  %10 = load i32, i32* %should_print.addr, align 4
  %tobool3 = icmp ne i32 %10, 0
  br i1 %tobool3, label %if.then, label %if.end10

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx5 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx5, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 41, i32 1)
  %11 = load i32, i32* @display_links, align 4
  %tobool6 = icmp ne i32 %11, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then, %if.then
  %12 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx9 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 1
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx9, %struct._iobuf** %struct.BigStruct_13
  %struct.BigStruct_204 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %12, %struct.PP_node_struct** %struct.BigStruct_204
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 52, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then, %if.then7, %if.then
  br label %if.end10

if.end10:                                         ; preds = %if.end, %land.lhs.true, %lor.lhs.false, %if.end, %land.lhs.true, %lor.lhs.false
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  store i16 0, i16* %N_violations, align 4
  %and_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 4
  store i16 0, i16* %and_cost, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 55, i32 0)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %conv = trunc i32 %load_struct.BigStruct_325 to i16
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 3
  store i16 %conv, i16* %disjunct_cost, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 58, i32 0)
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_326 = load i32, i32* %struct.BigStruct_326
  %conv13 = trunc i32 %load_struct.BigStruct_326 to i16
  %null_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 2
  store i16 %conv13, i16* %null_cost, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 54, i32 1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv15 = trunc i32 %load_struct.BigStruct_32 to i16
  %link_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 5
  store i16 %conv15, i16* %link_cost, align 4
  %13 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %v16 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %13, i32 0, i32 1
  %14 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v16, align 4
  store %struct.Violation_list_struct* %14, %struct.Violation_list_struct** %v, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc23, %if.end10, %for.inc23, %if.end10
  %15 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp18 = icmp ne %struct.Violation_list_struct* %15, null
  br i1 %cmp18, label %for.body20, label %for.end24

for.body20:                                       ; preds = %for.cond17, %for.cond17
  %N_violations21 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %16 = load i16, i16* %N_violations21, align 4
  %inc22 = add i16 %16, 1
  store i16 %inc22, i16* %N_violations21, align 4
  br label %for.inc23

for.inc23:                                        ; preds = %for.body20, %for.body20
  %17 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %17, i32 0, i32 0
  %18 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next, align 4
  store %struct.Violation_list_struct* %18, %struct.Violation_list_struct** %v, align 4
  br label %for.cond17

for.end24:                                        ; preds = %for.cond17, %for.cond17
  %19 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %19, %struct.PP_node_struct** %struct.BigStruct_20
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  %20 = load i32, i32* %should_print.addr, align 4
  %tobool25 = icmp ne i32 %20, 0
  br i1 %tobool25, label %if.then26, label %if.end30

if.then26:                                        ; preds = %for.end24, %for.end24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx28 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %struct.BigStruct_17 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx28, %struct._iobuf** %struct.BigStruct_17
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_328 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_328 = load i32, i32* %struct.BigStruct_328
  br label %if.end30

if.end30:                                         ; preds = %if.then26, %for.end24, %if.then26, %for.end24
  %21 = bitcast %struct.Linkage_info_struct* %load_struct.BigStruct_24 to i8*
  %22 = bitcast %struct.Linkage_info_struct* %li to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %21, i8* %22, i32 16, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind
define void @init_LT() #0 {
entry:
  store i32 200, i32* @LT_bound, align 4
  store i32 0, i32* @LT_size, align 4
  %0 = load i32, i32* @LT_bound, align 4
  %mul = mul i32 %0, 4
  %call = call i8* @xalloc(i32 %mul)
  %1 = bitcast i8* %call to %struct.Disjunct_struct**
  store %struct.Disjunct_struct** %1, %struct.Disjunct_struct*** @label_table, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @grow_LT() #0 {
entry:
  %i = alloca i32, align 4
  %new_table = alloca %struct.Disjunct_struct**, align 4
  %new_LT_bound = alloca i32, align 4
  %0 = load i32, i32* @LT_bound, align 4
  %mul = mul nsw i32 3, %0
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %new_LT_bound, align 4
  %1 = load i32, i32* %new_LT_bound, align 4
  %mul1 = mul i32 %1, 4
  %call = call i8* @xalloc(i32 %mul1)
  %2 = bitcast i8* %call to %struct.Disjunct_struct**
  store %struct.Disjunct_struct** %2, %struct.Disjunct_struct*** %new_table, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* @LT_bound, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4
  %6 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %6, i32 %5
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  %8 = load i32, i32* %i, align 4
  %9 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** %new_table, align 4
  %arrayidx2 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %9, i32 %8
  store %struct.Disjunct_struct* %7, %struct.Disjunct_struct** %arrayidx2, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc7, %for.end
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %new_LT_bound, align 4
  %cmp4 = icmp slt i32 %11, %12
  br i1 %cmp4, label %for.body5, label %for.end9

for.body5:                                        ; preds = %for.cond3
  %13 = load i32, i32* %i, align 4
  %14 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** %new_table, align 4
  %arrayidx6 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %14, i32 %13
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %arrayidx6, align 4
  br label %for.inc7

for.inc7:                                         ; preds = %for.body5
  %15 = load i32, i32* %i, align 4
  %inc8 = add nsw i32 %15, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond3

for.end9:                                         ; preds = %for.cond3
  %16 = load i32, i32* @LT_bound, align 4
  %mul10 = mul i32 %16, 4
  %17 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %18 = bitcast %struct.Disjunct_struct** %17 to i8*
  call void @xfree(i8* %18, i32 %mul10)
  %19 = load i32, i32* %new_LT_bound, align 4
  store i32 %19, i32* @LT_bound, align 4
  %20 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** %new_table, align 4
  store %struct.Disjunct_struct** %20, %struct.Disjunct_struct*** @label_table, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @init_HT() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1024
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %1
  store %struct.label_node_struct* null, %struct.label_node_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %2 = load i32, i32* %i, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_HT() #0 {
entry:
  %i = alloca i32, align 4
  %la = alloca %struct.label_node_struct*, align 4
  %la1 = alloca %struct.label_node_struct*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry, %for.inc5, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1024
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %1
  %2 = load %struct.label_node_struct*, %struct.label_node_struct** %arrayidx, align 4
  store %struct.label_node_struct* %2, %struct.label_node_struct** %la, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %3 = load %struct.label_node_struct*, %struct.label_node_struct** %la, align 4
  %cmp2 = icmp ne %struct.label_node_struct* %3, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %4 = load %struct.label_node_struct*, %struct.label_node_struct** %la, align 4
  %next = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %4, i32 0, i32 1
  %5 = load %struct.label_node_struct*, %struct.label_node_struct** %next, align 4
  store %struct.label_node_struct* %5, %struct.label_node_struct** %la1, align 4
  %6 = load %struct.label_node_struct*, %struct.label_node_struct** %la, align 4
  %7 = bitcast %struct.label_node_struct* %6 to i8*
  call void @xfree(i8* %7, i32 8)
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %for.body3
  %8 = load %struct.label_node_struct*, %struct.label_node_struct** %la1, align 4
  store %struct.label_node_struct* %8, %struct.label_node_struct** %la, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  %9 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %9
  store %struct.label_node_struct* null, %struct.label_node_struct** %arrayidx4, align 4
  br label %for.inc5

for.inc5:                                         ; preds = %for.end, %for.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end6:                                         ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_LT() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @LT_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %3, i32 %2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %4)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %6 = load i32, i32* @LT_bound, align 4
  %mul = mul i32 %6, 4
  %7 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %8 = bitcast %struct.Disjunct_struct** %7 to i8*
  call void @xfree(i8* %8, i32 %mul)
  store i32 0, i32* @LT_bound, align 4
  store i32 0, i32* @LT_size, align 4
  store %struct.Disjunct_struct** null, %struct.Disjunct_struct*** @label_table, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @free_AND_tables() #0 {
entry:
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 105, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 104, i32 10)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @and_connector_hash(%struct.Connector_struct* %c, i32 %i) #0 {
entry:
  %i.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %s = alloca i8*, align 4
  store i32 %i, i32* %i.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 5
  %1 = load i8*, i8** %string, align 4
  store i8* %1, i8** %s, align 4
  %2 = load i32, i32* %i.addr, align 4
  %3 = load i32, i32* %i.addr, align 4
  %shl = shl i32 %3, 1
  %add = add nsw i32 %2, %shl
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 0
  %5 = load i16, i16* %label, align 4
  %conv = sext i16 %5 to i32
  %6 = load i32, i32* %i.addr, align 4
  %add1 = add nsw i32 %conv, %6
  %and = and i32 %add1, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %7 = load i32, i32* %arrayidx, align 4
  %add2 = add i32 %add, %7
  store i32 %add2, i32* %i.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %8 = load i8*, i8** %s, align 4
  %9 = load i8, i8* %8, align 1
  %conv3 = sext i8 %9 to i32
  %call = call i32 @isupper_Package(i32 %conv3)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %i.addr, align 4
  %11 = load i32, i32* %i.addr, align 4
  %shl4 = shl i32 %11, 1
  %add5 = add nsw i32 %10, %shl4
  %12 = load i8*, i8** %s, align 4
  %13 = load i8, i8* %12, align 1
  %conv6 = sext i8 %13 to i32
  %14 = load i32, i32* %i.addr, align 4
  %add7 = add nsw i32 %conv6, %14
  %and8 = and i32 %add7, 255
  %arrayidx9 = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and8
  %15 = load i32, i32* %arrayidx9, align 4
  %add10 = add i32 %add5, %15
  store i32 %add10, i32* %i.addr, align 4
  %16 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %17 = load i32, i32* %i.addr, align 4
  %and11 = and i32 %17, 1023
  ret i32 %and11
}

declare dllimport i32 @isupper(i32) #1

; Function Attrs: noinline nounwind
define i32 @and_hash_disjunct(%struct.Disjunct_struct* %d) #0 {
entry:
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  %e = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %d, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %call = call i32 @and_connector_hash(%struct.Connector_struct* %4, i32 %3)
  store i32 %call, i32* %i, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %i, align 4
  %shl = shl i32 %8, 1
  %add = add nsw i32 %7, %shl
  %9 = load i32, i32* %i, align 4
  %and = and i32 %9, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %10 = load i32, i32* %arrayidx, align 4
  %add1 = add i32 %add, %10
  store i32 %add1, i32* %i, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %11, i32 0, i32 5
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %12, %struct.Connector_struct** %e, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc6, %for.end
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp3 = icmp ne %struct.Connector_struct* %13, null
  br i1 %cmp3, label %for.body4, label %for.end8

for.body4:                                        ; preds = %for.cond2
  %14 = load i32, i32* %i, align 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %call5 = call i32 @and_connector_hash(%struct.Connector_struct* %15, i32 %14)
  store i32 %call5, i32* %i, align 4
  br label %for.inc6

for.inc6:                                         ; preds = %for.body4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %next7, align 4
  store %struct.Connector_struct* %17, %struct.Connector_struct** %e, align 4
  br label %for.cond2

for.end8:                                         ; preds = %for.cond2
  %18 = load i32, i32* %i, align 4
  %and9 = and i32 %18, 1023
  ret i32 %and9
}

; Function Attrs: noinline nounwind
define i32 @andable_hash(i8* %s, i32 %d) #0 {
entry:
  %d.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i32, i32* %d.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %s.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %call = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %i, align 4
  %shl = shl i32 %4, 1
  %add = add nsw i32 %3, %shl
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv1 = sext i8 %6 to i32
  %7 = load i32, i32* %i, align 4
  %add2 = add nsw i32 %conv1, %7
  %and = and i32 %add2, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %8 = load i32, i32* %arrayidx, align 4
  %add3 = add i32 %add, %8
  store i32 %add3, i32* %i, align 4
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* @N_andable_hash_table, align 4
  %sub = sub nsw i32 %11, 1
  %and4 = and i32 %10, %sub
  ret i32 %and4
}

; Function Attrs: noinline nounwind
define void @fill_andable_hash_table(%struct.Exp_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Exp_struct*, align 4
  %l = alloca %struct.E_list_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %h = alloca i32, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %0, i32 0, i32 0
  %1 = load i8, i8* %type, align 4
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i8* @xalloc(i32 16)
  %2 = bitcast i8* %call to %struct.Connector_struct*
  store %struct.Connector_struct* %2, %struct.Connector_struct** %c, align 4
  %3 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %3, i32 0, i32 4
  %string = bitcast %union.anon* %u to i8**
  %4 = load i8*, i8** %string, align 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 5
  store i8* %4, i8** %string2, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 0
  store i16 -1, i16* %label, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %dir = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %8, i32 0, i32 2
  %9 = load i8, i8* %dir, align 2
  %conv3 = sext i8 %9 to i16
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 1
  store i16 %conv3, i16* %word, align 2
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 1
  %12 = load i16, i16* %word4, align 2
  %conv5 = sext i16 %12 to i32
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 5
  %14 = load i8*, i8** %string6, align 4
  %call7 = call i32 @andable_hash(i8* %14, i32 %conv5)
  store i32 %call7, i32* %h, align 4
  %15 = load i32, i32* %h, align 4
  %16 = load %struct.Connector_struct**, %struct.Connector_struct*** @andable_hash_table, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %16, i32 %15
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx, align 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 4
  store %struct.Connector_struct* %17, %struct.Connector_struct** %next, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %20 = load i32, i32* %h, align 4
  %21 = load %struct.Connector_struct**, %struct.Connector_struct*** @andable_hash_table, align 4
  %arrayidx8 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %21, i32 %20
  store %struct.Connector_struct* %19, %struct.Connector_struct** %arrayidx8, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %22 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u9 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %22, i32 0, i32 4
  %l10 = bitcast %union.anon* %u9 to %struct.E_list_struct**
  %23 = load %struct.E_list_struct*, %struct.E_list_struct** %l10, align 4
  store %struct.E_list_struct* %23, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %24 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %cmp11 = icmp ne %struct.E_list_struct* %24, null
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %e13 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %25, i32 0, i32 1
  %26 = load %struct.Exp_struct*, %struct.Exp_struct** %e13, align 4
  call void @fill_andable_hash_table(%struct.Exp_struct* %26)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %next14 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %27, i32 0, i32 0
  %28 = load %struct.E_list_struct*, %struct.E_list_struct** %next14, align 4
  store %struct.E_list_struct* %28, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @init_andable_hash_table() #0 {
entry:
  %i = alloca i32, align 4
  %e = alloca %struct.Exp_struct*, align 4
  %0 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.28, i32 0, i32 0
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %call, i32 0, i32 2
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  store %struct.Exp_struct* %1, %struct.Exp_struct** %e, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  %call1 = call i32 @size_of_expression(%struct.Exp_struct* %2)
  %call2 = call i32 @next_power_of_two_up(i32 %call1)
  store i32 %call2, i32* @N_andable_hash_table, align 4
  %3 = load i32, i32* @N_andable_hash_table, align 4
  %mul = mul i32 %3, 4
  %call3 = call i8* @xalloc(i32 %mul)
  %4 = bitcast i8* %call3 to %struct.Connector_struct**
  store %struct.Connector_struct** %4, %struct.Connector_struct*** @andable_hash_table, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @N_andable_hash_table, align 4
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %7 = load i32, i32* %i, align 4
  %8 = load %struct.Connector_struct**, %struct.Connector_struct*** @andable_hash_table, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %8, i32 %7
  store %struct.Connector_struct* null, %struct.Connector_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  call void @fill_andable_hash_table(%struct.Exp_struct* %10)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @is_andable_connector(%struct.Connector_struct* %c, i32 %d) #0 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %h = alloca i32, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  store i32 %d, i32* %d.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load i32, i32* @andable_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %d.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 5
  %3 = load i8*, i8** %string, align 4
  %call = call i32 @andable_hash(i8* %3, i32 %1)
  store i32 %call, i32* %h, align 4
  %4 = load i32, i32* %h, align 4
  %5 = load %struct.Connector_struct**, %struct.Connector_struct*** @andable_hash_table, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %5, i32 %4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %c1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp = icmp ne %struct.Connector_struct* %7, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %call1 = call i32 @match(%struct.Connector_struct* %9, %struct.Connector_struct* %8)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %for.body
  %10 = load i32, i32* %d.addr, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 1
  %12 = load i16, i16* %word, align 2
  %conv = sext i16 %12 to i32
  %cmp3 = icmp eq i32 %10, %conv
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end6
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %c1, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then5, %if.then
  %15 = load i32, i32* %retval, align 4
  ret i32 %15
}

; Function Attrs: noinline nounwind
define i32 @is_appropriate(%struct.Disjunct_struct* %d) #0 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %d, %struct.Disjunct_struct** %d.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 5
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %c, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %call = call i32 @is_andable_connector(%struct.Connector_struct* %3, i32 43)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %c, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc8, %for.end
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %8, null
  br i1 %cmp2, label %for.body3, label %for.end10

for.body3:                                        ; preds = %for.cond1
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %call4 = call i32 @is_andable_connector(%struct.Connector_struct* %9, i32 45)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %for.body3
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %for.body3
  br label %for.inc8

for.inc8:                                         ; preds = %if.end7
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next9 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %next9, align 4
  store %struct.Connector_struct* %11, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.end10:                                        ; preds = %for.cond1
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end10, %if.then6, %if.then
  %12 = load i32, i32* %retval, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind
define i32 @connector_types_equal(%struct.Connector_struct* %c1, %struct.Connector_struct* %c2) #0 {
entry:
  %retval = alloca i32, align 4
  %c2.addr = alloca %struct.Connector_struct*, align 4
  %c1.addr = alloca %struct.Connector_struct*, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  store %struct.Connector_struct* %c2, %struct.Connector_struct** %c2.addr, align 4
  store %struct.Connector_struct* %c1, %struct.Connector_struct** %c1.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %label1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 0
  %3 = load i16, i16* %label1, align 4
  %conv2 = sext i16 %3 to i32
  %cmp = icmp ne i32 %conv, %conv2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 5
  %5 = load i8*, i8** %string, align 4
  store i8* %5, i8** %s, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %string4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 5
  %7 = load i8*, i8** %string4, align 4
  store i8* %7, i8** %t, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end14, %if.end
  %8 = load i8*, i8** %s, align 4
  %9 = load i8, i8* %8, align 1
  %conv5 = sext i8 %9 to i32
  %call = call i32 @isupper_Package(i32 %conv5)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %10 = load i8*, i8** %t, align 4
  %11 = load i8, i8* %10, align 1
  %conv6 = sext i8 %11 to i32
  %call7 = call i32 @isupper_Package(i32 %conv6)
  %tobool8 = icmp ne i32 %call7, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %12 = phi i1 [ true, %while.cond ], [ %tobool8, %lor.rhs ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %13 = load i8*, i8** %s, align 4
  %14 = load i8, i8* %13, align 1
  %conv9 = sext i8 %14 to i32
  %15 = load i8*, i8** %t, align 4
  %16 = load i8, i8* %15, align 1
  %conv10 = sext i8 %16 to i32
  %cmp11 = icmp ne i32 %conv9, %conv10
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %while.body
  %17 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  %18 = load i8*, i8** %t, align 4
  %incdec.ptr15 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr15, i8** %t, align 4
  br label %while.cond

while.end:                                        ; preds = %lor.end
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then13, %if.then
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define i32 @disjunct_types_equal(%struct.Disjunct_struct* %d1, %struct.Disjunct_struct* %d2) #0 {
entry:
  %retval = alloca i32, align 4
  %d2.addr = alloca %struct.Disjunct_struct*, align 4
  %d1.addr = alloca %struct.Disjunct_struct*, align 4
  %e1 = alloca %struct.Connector_struct*, align 4
  %e2 = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %d2, %struct.Disjunct_struct** %d2.addr, align 4
  store %struct.Disjunct_struct* %d1, %struct.Disjunct_struct** %d1.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %e1, align 4
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %left1, align 4
  store %struct.Connector_struct* %3, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp = icmp ne %struct.Connector_struct* %4, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %5, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call = call i32 @connector_types_equal(%struct.Connector_struct* %8, %struct.Connector_struct* %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %e1, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %next3, align 4
  store %struct.Connector_struct* %12, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then, %land.end
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %13, null
  br i1 %cmp4, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp5 = icmp ne %struct.Connector_struct* %14, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false, %while.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %lor.lhs.false
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 5
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %16, %struct.Connector_struct** %e1, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %right8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 5
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %right8, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.cond9:                                      ; preds = %if.end18, %if.end7
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp10 = icmp ne %struct.Connector_struct* %19, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond9
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %20, null
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond9
  %21 = phi i1 [ false, %while.cond9 ], [ %cmp12, %land.rhs11 ]
  br i1 %21, label %while.body14, label %while.end21

while.body14:                                     ; preds = %land.end13
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call15 = call i32 @connector_types_equal(%struct.Connector_struct* %23, %struct.Connector_struct* %22)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %while.body14
  br label %while.end21

if.end18:                                         ; preds = %while.body14
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %next19, align 4
  store %struct.Connector_struct* %25, %struct.Connector_struct** %e1, align 4
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next20 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %next20, align 4
  store %struct.Connector_struct* %27, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.end21:                                      ; preds = %if.then17, %land.end13
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp22 = icmp ne %struct.Connector_struct* %28, null
  br i1 %cmp22, label %if.then25, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %while.end21
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp24 = icmp ne %struct.Connector_struct* %29, null
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %lor.lhs.false23, %while.end21
  store i32 0, i32* %retval, align 4
  br label %return

if.end26:                                         ; preds = %lor.lhs.false23
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then25, %if.then6
  %30 = load i32, i32* %retval, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind
define i8* @intersect_strings(i8* %s, i8* %t) #0 {
entry:
  %retval = alloca i8*, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %d = alloca i32, align 4
  %u = alloca i8*, align 4
  %u0 = alloca i8*, align 4
  %s0 = alloca i8*, align 4
  store i8* %t, i8** %t.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %t.addr, align 4
  %1 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strcmp_Package(i8* %1, i8* %0)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %s.addr, align 4
  store i8* %2, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s.addr, align 4
  %call1 = call i32 @strlen_Package(i8* %3)
  store i32 %call1, i32* %i, align 4
  %4 = load i8*, i8** %t.addr, align 4
  %call2 = call i32 @strlen_Package(i8* %4)
  store i32 %call2, i32* %j, align 4
  %5 = load i32, i32* %j, align 4
  %6 = load i32, i32* %i, align 4
  %cmp3 = icmp sgt i32 %5, %6
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %7 = load i8*, i8** %s.addr, align 4
  store i8* %7, i8** %u, align 4
  %8 = load i8*, i8** %t.addr, align 4
  store i8* %8, i8** %s.addr, align 4
  %9 = load i8*, i8** %u, align 4
  store i8* %9, i8** %t.addr, align 4
  %10 = load i32, i32* %j, align 4
  store i32 %10, i32* %len, align 4
  br label %if.end5

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4
  store i32 %11, i32* %len, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %12 = load i32, i32* %len, align 4
  %add = add nsw i32 %12, 1
  %call6 = call i8* @xalloc(i32 %add)
  store i8* %call6, i8** %u, align 4
  store i8* %call6, i8** %u0, align 4
  store i32 0, i32* %d, align 4
  %13 = load i8*, i8** %s.addr, align 4
  store i8* %13, i8** %s0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end24, %if.end5
  %14 = load i8*, i8** %t.addr, align 4
  %15 = load i8, i8* %14, align 1
  %conv = sext i8 %15 to i32
  %cmp7 = icmp ne i32 %conv, 0
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %16 = load i8*, i8** %s.addr, align 4
  %17 = load i8, i8* %16, align 1
  %conv9 = sext i8 %17 to i32
  %18 = load i8*, i8** %t.addr, align 4
  %19 = load i8, i8* %18, align 1
  %conv10 = sext i8 %19 to i32
  %cmp11 = icmp eq i32 %conv9, %conv10
  br i1 %cmp11, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %20 = load i8*, i8** %t.addr, align 4
  %21 = load i8, i8* %20, align 1
  %conv13 = sext i8 %21 to i32
  %cmp14 = icmp eq i32 %conv13, 42
  br i1 %cmp14, label %if.then16, label %if.else17

if.then16:                                        ; preds = %lor.lhs.false, %while.body
  %22 = load i8*, i8** %s.addr, align 4
  %23 = load i8, i8* %22, align 1
  %24 = load i8*, i8** %u, align 4
  store i8 %23, i8* %24, align 1
  br label %if.end24

if.else17:                                        ; preds = %lor.lhs.false
  %25 = load i32, i32* %d, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %d, align 4
  %26 = load i8*, i8** %s.addr, align 4
  %27 = load i8, i8* %26, align 1
  %conv18 = sext i8 %27 to i32
  %cmp19 = icmp eq i32 %conv18, 42
  br i1 %cmp19, label %if.then21, label %if.else22

if.then21:                                        ; preds = %if.else17
  %28 = load i8*, i8** %t.addr, align 4
  %29 = load i8, i8* %28, align 1
  %30 = load i8*, i8** %u, align 4
  store i8 %29, i8* %30, align 1
  br label %if.end23

if.else22:                                        ; preds = %if.else17
  %31 = load i8*, i8** %u, align 4
  store i8 94, i8* %31, align 1
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %32 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %33 = load i8*, i8** %t.addr, align 4
  %incdec.ptr25 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr25, i8** %t.addr, align 4
  %34 = load i8*, i8** %u, align 4
  %incdec.ptr26 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr26, i8** %u, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %35 = load i32, i32* %d, align 4
  %cmp27 = icmp eq i32 %35, 0
  br i1 %cmp27, label %if.then29, label %if.else31

if.then29:                                        ; preds = %while.end
  %36 = load i32, i32* %len, align 4
  %add30 = add nsw i32 %36, 1
  %37 = load i8*, i8** %u0, align 4
  call void @xfree(i8* %37, i32 %add30)
  %38 = load i8*, i8** %s0, align 4
  store i8* %38, i8** %retval, align 4
  br label %return

if.else31:                                        ; preds = %while.end
  %39 = load i8*, i8** %s.addr, align 4
  %40 = load i8*, i8** %u, align 4
  %call32 = call i8* @strcpy_Package(i8* %40, i8* %39)
  %41 = load i32, i32* %len, align 4
  %add33 = add nsw i32 %41, 1
  %42 = load i8*, i8** %u0, align 4
  call void @free_this_string_later(i8* %42, i32 %add33)
  %43 = load i8*, i8** %u0, align 4
  store i8* %43, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.else31, %if.then29, %if.then
  %44 = load i8*, i8** %retval, align 4
  ret i8* %44
}

declare i32 @strlen(i8*) #1

declare i8* @strcpy(i8*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @connectors_equal_AND(%struct.Connector_struct* %c1, %struct.Connector_struct* %c2) #0 {
entry:
  %c2.addr = alloca %struct.Connector_struct*, align 4
  %c1.addr = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %c2, %struct.Connector_struct** %c2.addr, align 4
  store %struct.Connector_struct* %c1, %struct.Connector_struct** %c1.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %label1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 0
  %3 = load i16, i16* %label1, align 4
  %conv2 = sext i16 %3 to i32
  %cmp = icmp eq i32 %conv, %conv2
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 3
  %5 = load i8, i8* %multi, align 1
  %conv4 = sext i8 %5 to i32
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %multi5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 3
  %7 = load i8, i8* %multi5, align 1
  %conv6 = sext i8 %7 to i32
  %cmp7 = icmp eq i32 %conv4, %conv6
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 5
  %9 = load i8*, i8** %string, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %string9 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 5
  %11 = load i8*, i8** %string9, align 4
  %call = call i32 @strcmp_Package(i8* %11, i8* %9)
  %cmp10 = icmp eq i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp10, %land.rhs ]
  %land.ext = zext i1 %12 to i32
  ret i32 %land.ext
}

; Function Attrs: noinline nounwind
define i32 @disjuncts_equal_AND(%struct.Disjunct_struct* %d1, %struct.Disjunct_struct* %d2) #0 {
entry:
  %retval = alloca i32, align 4
  %d2.addr = alloca %struct.Disjunct_struct*, align 4
  %d1.addr = alloca %struct.Disjunct_struct*, align 4
  %e1 = alloca %struct.Connector_struct*, align 4
  %e2 = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %d2, %struct.Disjunct_struct** %d2.addr, align 4
  store %struct.Disjunct_struct* %d1, %struct.Disjunct_struct** %d1.addr, align 4
  %0 = load i32, i32* @STAT_calls_to_equality_test, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @STAT_calls_to_equality_test, align 4
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %2, %struct.Connector_struct** %e1, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left1, align 4
  store %struct.Connector_struct* %4, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp = icmp ne %struct.Connector_struct* %5, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %6, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %7, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call = call i32 @connectors_equal_AND(%struct.Connector_struct* %9, %struct.Connector_struct* %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %11, %struct.Connector_struct** %e1, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 4
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %next3, align 4
  store %struct.Connector_struct* %13, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then, %land.end
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %14, null
  br i1 %cmp4, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp5 = icmp ne %struct.Connector_struct* %15, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false, %while.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %lor.lhs.false
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 5
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %17, %struct.Connector_struct** %e1, align 4
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %right8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 5
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %right8, align 4
  store %struct.Connector_struct* %19, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.cond9:                                      ; preds = %if.end18, %if.end7
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp10 = icmp ne %struct.Connector_struct* %20, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond9
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %21, null
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond9
  %22 = phi i1 [ false, %while.cond9 ], [ %cmp12, %land.rhs11 ]
  br i1 %22, label %while.body14, label %while.end21

while.body14:                                     ; preds = %land.end13
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call15 = call i32 @connectors_equal_AND(%struct.Connector_struct* %24, %struct.Connector_struct* %23)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %while.body14
  br label %while.end21

if.end18:                                         ; preds = %while.body14
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 4
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %next19, align 4
  store %struct.Connector_struct* %26, %struct.Connector_struct** %e1, align 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next20 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %next20, align 4
  store %struct.Connector_struct* %28, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.end21:                                      ; preds = %if.then17, %land.end13
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp22 = icmp ne %struct.Connector_struct* %29, null
  br i1 %cmp22, label %if.then25, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %while.end21
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp24 = icmp ne %struct.Connector_struct* %30, null
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %lor.lhs.false23, %while.end21
  store i32 0, i32* %retval, align 4
  br label %return

if.end26:                                         ; preds = %lor.lhs.false23
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then25, %if.then6
  %31 = load i32, i32* %retval, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @intersect_disjuncts(%struct.Disjunct_struct* %d1, %struct.Disjunct_struct* %d2) #0 {
entry:
  %d2.addr = alloca %struct.Disjunct_struct*, align 4
  %d1.addr = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  %c2 = alloca %struct.Connector_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %d2, %struct.Disjunct_struct** %d2.addr, align 4
  store %struct.Disjunct_struct* %d1, %struct.Disjunct_struct** %d1.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %call = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %0)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d, align 4
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %2, %struct.Connector_struct** %c, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left1, align 4
  store %struct.Connector_struct* %4, %struct.Connector_struct** %c1, align 4
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %left2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %5, i32 0, i32 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %left2, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %c2, align 4
  br label %while.cond

while.cond:                                       ; preds = %land.end, %entry
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp = icmp ne %struct.Connector_struct* %7, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 5
  %9 = load i8*, i8** %string, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 5
  %11 = load i8*, i8** %string3, align 4
  %call4 = call i8* @intersect_strings(i8* %11, i8* %9)
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 5
  store i8* %call4, i8** %string5, align 4
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 3
  %14 = load i8, i8* %multi, align 1
  %conv = sext i8 %14 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.body
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %multi6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %15, i32 0, i32 3
  %16 = load i8, i8* %multi6, align 1
  %conv7 = sext i8 %16 to i32
  %tobool8 = icmp ne i32 %conv7, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.body
  %17 = phi i1 [ false, %while.body ], [ %tobool8, %land.rhs ]
  %land.ext = zext i1 %17 to i32
  %conv9 = trunc i32 %land.ext to i8
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %multi10 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 3
  store i8 %conv9, i8* %multi10, align 1
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %20, %struct.Connector_struct** %c, align 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %21, i32 0, i32 4
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %next11, align 4
  store %struct.Connector_struct* %22, %struct.Connector_struct** %c1, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %next12, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %c2, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %25 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %25, i32 0, i32 5
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %26, %struct.Connector_struct** %c, align 4
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %right13 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %27, i32 0, i32 5
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %right13, align 4
  store %struct.Connector_struct* %28, %struct.Connector_struct** %c1, align 4
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %right14 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %29, i32 0, i32 5
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %right14, align 4
  store %struct.Connector_struct* %30, %struct.Connector_struct** %c2, align 4
  br label %while.cond15

while.cond15:                                     ; preds = %land.end30, %while.end
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp16 = icmp ne %struct.Connector_struct* %31, null
  br i1 %cmp16, label %while.body18, label %while.end37

while.body18:                                     ; preds = %while.cond15
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %string19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %32, i32 0, i32 5
  %33 = load i8*, i8** %string19, align 4
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string20 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %34, i32 0, i32 5
  %35 = load i8*, i8** %string20, align 4
  %call21 = call i8* @intersect_strings(i8* %35, i8* %33)
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string22 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %36, i32 0, i32 5
  store i8* %call21, i8** %string22, align 4
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi23 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 3
  %38 = load i8, i8* %multi23, align 1
  %conv24 = sext i8 %38 to i32
  %tobool25 = icmp ne i32 %conv24, 0
  br i1 %tobool25, label %land.rhs26, label %land.end30

land.rhs26:                                       ; preds = %while.body18
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %multi27 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %39, i32 0, i32 3
  %40 = load i8, i8* %multi27, align 1
  %conv28 = sext i8 %40 to i32
  %tobool29 = icmp ne i32 %conv28, 0
  br label %land.end30

land.end30:                                       ; preds = %land.rhs26, %while.body18
  %41 = phi i1 [ false, %while.body18 ], [ %tobool29, %land.rhs26 ]
  %land.ext31 = zext i1 %41 to i32
  %conv32 = trunc i32 %land.ext31 to i8
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %multi33 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 3
  store i8 %conv32, i8* %multi33, align 1
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next34 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %43, i32 0, i32 4
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %next34, align 4
  store %struct.Connector_struct* %44, %struct.Connector_struct** %c, align 4
  %45 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next35 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %45, i32 0, i32 4
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %next35, align 4
  store %struct.Connector_struct* %46, %struct.Connector_struct** %c1, align 4
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next36 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %47, i32 0, i32 4
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %next36, align 4
  store %struct.Connector_struct* %48, %struct.Connector_struct** %c2, align 4
  br label %while.cond15

while.end37:                                      ; preds = %while.cond15
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  ret %struct.Disjunct_struct* %49
}

; Function Attrs: noinline nounwind
define void @put_disjunct_into_table(%struct.Disjunct_struct* %d) #0 {
entry:
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %di = alloca %struct.Disjunct_struct*, align 4
  %d_copy = alloca %struct.Disjunct_struct*, align 4
  %lp = alloca %struct.label_node_struct*, align 4
  %h = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.Disjunct_struct* %d, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d1, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call = call i32 @and_hash_disjunct(%struct.Disjunct_struct* %0)
  store i32 %call, i32* %h, align 4
  %1 = load i32, i32* %h, align 4
  %arrayidx = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %1
  %2 = load %struct.label_node_struct*, %struct.label_node_struct** %arrayidx, align 4
  store %struct.label_node_struct* %2, %struct.label_node_struct** %lp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %cmp = icmp ne %struct.label_node_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %label = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %4, i32 0, i32 0
  %5 = load i32, i32* %label, align 4
  %6 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx1 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %6, i32 %5
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx1, align 4
  store %struct.Disjunct_struct* %7, %struct.Disjunct_struct** %d1, align 4
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call2 = call i32 @disjunct_types_equal(%struct.Disjunct_struct* %9, %struct.Disjunct_struct* %8)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %next = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %10, i32 0, i32 1
  %11 = load %struct.label_node_struct*, %struct.label_node_struct** %next, align 4
  store %struct.label_node_struct* %11, %struct.label_node_struct** %lp, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %cmp3 = icmp ne %struct.label_node_struct* %12, null
  br i1 %cmp3, label %if.then4, label %if.else49

if.then4:                                         ; preds = %for.end
  br label %while.cond

while.cond:                                       ; preds = %if.end9, %if.then4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp5 = icmp ne %struct.Disjunct_struct* %13, null
  br i1 %cmp5, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call6 = call i32 @disjuncts_equal_AND(%struct.Disjunct_struct* %15, %struct.Disjunct_struct* %14)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %while.body
  br label %if.end64

if.end9:                                          ; preds = %while.body
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next10 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 0
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next10, align 4
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %d1, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call11 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %18)
  store %struct.Disjunct_struct* %call11, %struct.Disjunct_struct** %d_copy, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 1
  store i16 0, i16* %cost, align 4
  %20 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %label12 = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %20, i32 0, i32 0
  %21 = load i32, i32* %label12, align 4
  store i32 %21, i32* %k, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d2, align 4
  %22 = load i32, i32* %k, align 4
  %23 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx13 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %23, i32 %22
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx13, align 4
  store %struct.Disjunct_struct* %24, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc19, %while.end
  %25 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp15 = icmp ne %struct.Disjunct_struct* %25, null
  br i1 %cmp15, label %for.body16, label %for.end21

for.body16:                                       ; preds = %for.cond14
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %call17 = call %struct.Disjunct_struct* @intersect_disjuncts(%struct.Disjunct_struct* %27, %struct.Disjunct_struct* %26)
  store %struct.Disjunct_struct* %call17, %struct.Disjunct_struct** %di, align 4
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %di, align 4
  %next18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %29, i32 0, i32 0
  store %struct.Disjunct_struct* %28, %struct.Disjunct_struct** %next18, align 4
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %di, align 4
  store %struct.Disjunct_struct* %30, %struct.Disjunct_struct** %d2, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body16
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next20 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 0
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next20, align 4
  store %struct.Disjunct_struct* %32, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond14

for.end21:                                        ; preds = %for.cond14
  %33 = load i32, i32* %k, align 4
  %34 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx22 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %34, i32 %33
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx22, align 4
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %next23 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %36, i32 0, i32 0
  store %struct.Disjunct_struct* %35, %struct.Disjunct_struct** %next23, align 4
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %38 = load i32, i32* %k, align 4
  %39 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx24 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %39, i32 %38
  store %struct.Disjunct_struct* %37, %struct.Disjunct_struct** %arrayidx24, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc47, %for.end21
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %cmp26 = icmp ne %struct.Disjunct_struct* %40, null
  br i1 %cmp26, label %for.body27, label %for.end48

for.body27:                                       ; preds = %for.cond25
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next28 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %41, i32 0, i32 0
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next28, align 4
  store %struct.Disjunct_struct* %42, %struct.Disjunct_struct** %di, align 4
  %43 = load i32, i32* %k, align 4
  %44 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx29 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %44, i32 %43
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx29, align 4
  store %struct.Disjunct_struct* %45, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc37, %for.body27
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp31 = icmp ne %struct.Disjunct_struct* %46, null
  br i1 %cmp31, label %for.body32, label %for.end39

for.body32:                                       ; preds = %for.cond30
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call33 = call i32 @disjuncts_equal_AND(%struct.Disjunct_struct* %48, %struct.Disjunct_struct* %47)
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %for.body32
  br label %for.end39

if.end36:                                         ; preds = %for.body32
  br label %for.inc37

for.inc37:                                        ; preds = %if.end36
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next38 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %49, i32 0, i32 0
  %50 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next38, align 4
  store %struct.Disjunct_struct* %50, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond30

for.end39:                                        ; preds = %if.then35, %for.cond30
  %51 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp40 = icmp eq %struct.Disjunct_struct* %51, null
  br i1 %cmp40, label %if.then41, label %if.else

if.then41:                                        ; preds = %for.end39
  %52 = load i32, i32* @STAT_N_disjuncts, align 4
  %inc = add nsw i32 %52, 1
  store i32 %inc, i32* @STAT_N_disjuncts, align 4
  %53 = load i32, i32* %k, align 4
  %54 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx42 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %54, i32 %53
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx42, align 4
  %56 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next43 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %56, i32 0, i32 0
  store %struct.Disjunct_struct* %55, %struct.Disjunct_struct** %next43, align 4
  %57 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %58 = load i32, i32* %k, align 4
  %59 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx44 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %59, i32 %58
  store %struct.Disjunct_struct* %57, %struct.Disjunct_struct** %arrayidx44, align 4
  br label %if.end46

if.else:                                          ; preds = %for.end39
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next45 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %60, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next45, align 4
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %61)
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then41
  br label %for.inc47

for.inc47:                                        ; preds = %if.end46
  %62 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %di, align 4
  store %struct.Disjunct_struct* %62, %struct.Disjunct_struct** %d2, align 4
  br label %for.cond25

for.end48:                                        ; preds = %for.cond25
  br label %if.end64

if.else49:                                        ; preds = %for.end
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call50 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %63)
  store %struct.Disjunct_struct* %call50, %struct.Disjunct_struct** %d_copy, align 4
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %cost51 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %64, i32 0, i32 1
  store i16 0, i16* %cost51, align 4
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %next52 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %65, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next52, align 4
  %66 = load i32, i32* @LT_size, align 4
  %67 = load i32, i32* @LT_bound, align 4
  %cmp53 = icmp eq i32 %66, %67
  br i1 %cmp53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.else49
  call void @grow_LT()
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %if.else49
  %call56 = call i8* @xalloc(i32 8)
  %68 = bitcast i8* %call56 to %struct.label_node_struct*
  store %struct.label_node_struct* %68, %struct.label_node_struct** %lp, align 4
  %69 = load i32, i32* %h, align 4
  %arrayidx57 = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %69
  %70 = load %struct.label_node_struct*, %struct.label_node_struct** %arrayidx57, align 4
  %71 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %next58 = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %71, i32 0, i32 1
  store %struct.label_node_struct* %70, %struct.label_node_struct** %next58, align 4
  %72 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %73 = load i32, i32* %h, align 4
  %arrayidx59 = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %73
  store %struct.label_node_struct* %72, %struct.label_node_struct** %arrayidx59, align 4
  %74 = load i32, i32* @LT_size, align 4
  %75 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %label60 = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %75, i32 0, i32 0
  store i32 %74, i32* %label60, align 4
  %76 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %77 = load i32, i32* @LT_size, align 4
  %78 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx61 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %78, i32 %77
  store %struct.Disjunct_struct* %76, %struct.Disjunct_struct** %arrayidx61, align 4
  %79 = load i32, i32* @LT_size, align 4
  %inc62 = add nsw i32 %79, 1
  store i32 %inc62, i32* @LT_size, align 4
  %80 = load i32, i32* @STAT_N_disjuncts, align 4
  %inc63 = add nsw i32 %80, 1
  store i32 %inc63, i32* @STAT_N_disjuncts, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.end55, %for.end48, %if.then8
  ret void
}

; Function Attrs: noinline nounwind
define void @extract_all_fat_links(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %cl = alloca %struct.Connector_struct*, align 4
  %cr = alloca %struct.Connector_struct*, align 4
  %tl = alloca %struct.Connector_struct*, align 4
  %tr = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %tl, align 4
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left1, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 5
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %4, %struct.Connector_struct** %cr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %cmp = icmp ne %struct.Connector_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %tr, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next2, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call = call i32 @is_appropriate(%struct.Disjunct_struct* %9)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @put_disjunct_into_table(%struct.Disjunct_struct* %10)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 4
  store %struct.Connector_struct* %11, %struct.Connector_struct** %next3, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next4, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %cr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left5 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %left5, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 5
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %right6, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %tr, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right7, align 4
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %left8, align 4
  store %struct.Connector_struct* %21, %struct.Connector_struct** %cl, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc19, %for.end, %for.inc19, %for.end
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %cmp10 = icmp ne %struct.Connector_struct* %22, null
  br i1 %cmp10, label %for.body11, label %for.end21

for.body11:                                       ; preds = %for.cond9, %for.cond9
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %next12, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %tl, align 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next13, align 4
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call14 = call i32 @is_appropriate(%struct.Disjunct_struct* %26)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.body11, %for.body11
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @put_disjunct_into_table(%struct.Disjunct_struct* %27)
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %for.body11, %if.then16, %for.body11
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next18 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %29, i32 0, i32 4
  store %struct.Connector_struct* %28, %struct.Connector_struct** %next18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %if.end17, %if.end17
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next20 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %30, i32 0, i32 4
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %next20, align 4
  store %struct.Connector_struct* %31, %struct.Connector_struct** %cl, align 4
  br label %for.cond9

for.end21:                                        ; preds = %for.cond9, %for.cond9
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right22 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %33, i32 0, i32 5
  store %struct.Connector_struct* %32, %struct.Connector_struct** %right22, align 4
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left23 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %34, i32 0, i32 4
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %left23, align 4
  store %struct.Connector_struct* %35, %struct.Connector_struct** %cl, align 4
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc44, %for.end21, %for.inc44, %for.end21
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %cmp25 = icmp ne %struct.Connector_struct* %36, null
  br i1 %cmp25, label %for.body26, label %for.end46

for.body26:                                       ; preds = %for.cond24, %for.cond24
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right27 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %37, i32 0, i32 5
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %right27, align 4
  store %struct.Connector_struct* %38, %struct.Connector_struct** %cr, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc41, %for.body26, %for.inc41, %for.body26
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %cmp29 = icmp ne %struct.Connector_struct* %39, null
  br i1 %cmp29, label %for.body30, label %for.end43

for.body30:                                       ; preds = %for.cond28, %for.cond28
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next31 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %40, i32 0, i32 4
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %next31, align 4
  store %struct.Connector_struct* %41, %struct.Connector_struct** %tl, align 4
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next32 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 4
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %next32, align 4
  store %struct.Connector_struct* %43, %struct.Connector_struct** %tr, align 4
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next33 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %44, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next33, align 4
  %45 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next34 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %45, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next34, align 4
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call35 = call i32 @is_appropriate(%struct.Disjunct_struct* %46)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %for.body30, %for.body30
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @put_disjunct_into_table(%struct.Disjunct_struct* %47)
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %for.body30, %if.then37, %for.body30
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next39 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %49, i32 0, i32 4
  store %struct.Connector_struct* %48, %struct.Connector_struct** %next39, align 4
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next40 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  store %struct.Connector_struct* %50, %struct.Connector_struct** %next40, align 4
  br label %for.inc41

for.inc41:                                        ; preds = %if.end38, %if.end38
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next42 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %52, i32 0, i32 4
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %next42, align 4
  store %struct.Connector_struct* %53, %struct.Connector_struct** %cr, align 4
  br label %for.cond28

for.end43:                                        ; preds = %for.cond28, %for.cond28
  br label %for.inc44

for.inc44:                                        ; preds = %for.end43, %for.end43
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next45 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %54, i32 0, i32 4
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %next45, align 4
  store %struct.Connector_struct* %55, %struct.Connector_struct** %cl, align 4
  br label %for.cond24

for.end46:                                        ; preds = %for.cond24, %for.cond24
  ret void
}

; Function Attrs: noinline nounwind
define i8* @stick_in_one_connector(i8* %s, %struct.Connector_struct* %c, i32 %len) #0 {
entry:
  %len.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %s.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  store i32 %len, i32* %len.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 5
  %1 = load i8*, i8** %string, align 4
  store i8* %1, i8** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %t, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %call = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end
  %5 = load i8*, i8** %t, align 4
  %6 = load i8, i8* %5, align 1
  %conv1 = sext i8 %6 to i32
  %cmp = icmp ne i32 %conv1, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %t, align 4
  %incdec.ptr3 = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr3, i8** %t, align 4
  %8 = load i8, i8* %7, align 1
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr4 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr4, i8** %s.addr, align 4
  store i8 %8, i8* %9, align 1
  %10 = load i32, i32* %len.addr, align 4
  %dec = add nsw i32 %10, -1
  store i32 %dec, i32* %len.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond5

while.cond5:                                      ; preds = %while.body8, %while.end
  %11 = load i32, i32* %len.addr, align 4
  %cmp6 = icmp sgt i32 %11, 0
  br i1 %cmp6, label %while.body8, label %while.end11

while.body8:                                      ; preds = %while.cond5
  %12 = load i8*, i8** %s.addr, align 4
  %incdec.ptr9 = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr9, i8** %s.addr, align 4
  store i8 42, i8* %12, align 1
  %13 = load i32, i32* %len.addr, align 4
  %dec10 = add nsw i32 %13, -1
  store i32 %dec10, i32* %len.addr, align 4
  br label %while.cond5

while.end11:                                      ; preds = %while.cond5
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 3
  %15 = load i8, i8* %multi, align 1
  %tobool12 = icmp ne i8 %15, 0
  br i1 %tobool12, label %if.then, label %if.else

if.then:                                          ; preds = %while.end11
  %16 = load i8*, i8** %s.addr, align 4
  %incdec.ptr13 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr13, i8** %s.addr, align 4
  store i8 42, i8* %16, align 1
  br label %if.end

if.else:                                          ; preds = %while.end11
  %17 = load i8*, i8** %s.addr, align 4
  %incdec.ptr14 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr14, i8** %s.addr, align 4
  store i8 94, i8* %17, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i8*, i8** %s.addr, align 4
  store i8 0, i8* %18, align 1
  %19 = load i8*, i8** %s.addr, align 4
  ret i8* %19
}

; Function Attrs: noinline nounwind
define void @compute_matchers_for_a_label(i32 %k) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %k.addr = alloca i32, align 4
  %lengths = alloca i32*, align 4
  %N_connectors = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tot_len = alloca i32, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %s = alloca i8*, align 4
  %os = alloca i8*, align 4
  store i32 %load_struct.BigStruct_0, i32* %k.addr, align 4
  %0 = load i32, i32* %k.addr, align 4
  %1 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %1, i32 %0
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %d, align 4
  store i32 0, i32* %N_connectors, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %4, %struct.Connector_struct** %c, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp = icmp ne %struct.Connector_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %N_connectors, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %N_connectors, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %8, %struct.Connector_struct** %c, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 5
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc5, %for.end, %for.inc5, %for.end
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %11, null
  br i1 %cmp2, label %for.body3, label %for.end7

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %12 = load i32, i32* %N_connectors, align 4
  %inc4 = add nsw i32 %12, 1
  store i32 %inc4, i32* %N_connectors, align 4
  br label %for.inc5

for.inc5:                                         ; preds = %for.body3, %for.body3
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next6, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.end7:                                         ; preds = %for.cond1, %for.cond1
  %15 = load i32, i32* %N_connectors, align 4
  %mul = mul i32 %15, 4
  %call = call i8* @xalloc(i32 %mul)
  %16 = bitcast i8* %call to i32*
  store i32* %16, i32** %lengths, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc12, %for.end7, %for.inc12, %for.end7
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %N_connectors, align 4
  %cmp9 = icmp slt i32 %17, %18
  br i1 %cmp9, label %for.body10, label %for.end14

for.body10:                                       ; preds = %for.cond8, %for.cond8
  %19 = load i32, i32* %i, align 4
  %20 = load i32*, i32** %lengths, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %20, i32 %19
  store i32 0, i32* %arrayidx11, align 4
  br label %for.inc12

for.inc12:                                        ; preds = %for.body10, %for.body10
  %21 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %21, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond8

for.end14:                                        ; preds = %for.cond8, %for.cond8
  br label %while.cond

while.cond:                                       ; preds = %for.end55, %for.end14, %for.end55, %for.end14
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp15 = icmp ne %struct.Disjunct_struct* %22, null
  br i1 %cmp15, label %while.body, label %while.end57

while.body:                                       ; preds = %while.cond, %while.cond
  store i32 0, i32* %i, align 4
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %23, i32 0, i32 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %left16, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %c, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc29, %while.body, %for.inc29, %while.body
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp18 = icmp ne %struct.Connector_struct* %25, null
  br i1 %cmp18, label %for.body19, label %for.end31

for.body19:                                       ; preds = %for.cond17, %for.cond17
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 5
  %27 = load i8*, i8** %string, align 4
  store i8* %27, i8** %s, align 4
  br label %while.cond20

while.cond20:                                     ; preds = %while.body22, %for.body19, %while.body22, %for.body19
  %28 = load i8*, i8** %s, align 4
  %29 = load i8, i8* %28, align 1
  %conv = sext i8 %29 to i32
  %call21 = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call21, 0
  br i1 %tobool, label %while.body22, label %while.end

while.body22:                                     ; preds = %while.cond20, %while.cond20
  %30 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %while.cond20

while.end:                                        ; preds = %while.cond20, %while.cond20
  %31 = load i8*, i8** %s, align 4
  %call23 = call i32 @strlen_Package(i8* %31)
  store i32 %call23, i32* %j, align 4
  %32 = load i32, i32* %j, align 4
  %33 = load i32, i32* %i, align 4
  %34 = load i32*, i32** %lengths, align 4
  %arrayidx24 = getelementptr inbounds i32, i32* %34, i32 %33
  %35 = load i32, i32* %arrayidx24, align 4
  %cmp25 = icmp sgt i32 %32, %35
  br i1 %cmp25, label %if.then, label %if.end

if.then:                                          ; preds = %while.end, %while.end
  %36 = load i32, i32* %j, align 4
  %37 = load i32, i32* %i, align 4
  %38 = load i32*, i32** %lengths, align 4
  %arrayidx27 = getelementptr inbounds i32, i32* %38, i32 %37
  store i32 %36, i32* %arrayidx27, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end, %if.then, %while.end
  %39 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %39, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.inc29

for.inc29:                                        ; preds = %if.end, %if.end
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next30 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %40, i32 0, i32 4
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %next30, align 4
  store %struct.Connector_struct* %41, %struct.Connector_struct** %c, align 4
  br label %for.cond17

for.end31:                                        ; preds = %for.cond17, %for.cond17
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right32 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %42, i32 0, i32 5
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %right32, align 4
  store %struct.Connector_struct* %43, %struct.Connector_struct** %c, align 4
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc53, %for.end31, %for.inc53, %for.end31
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp34 = icmp ne %struct.Connector_struct* %44, null
  br i1 %cmp34, label %for.body36, label %for.end55

for.body36:                                       ; preds = %for.cond33, %for.cond33
  %45 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string37 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %45, i32 0, i32 5
  %46 = load i8*, i8** %string37, align 4
  store i8* %46, i8** %s, align 4
  br label %while.cond38

while.cond38:                                     ; preds = %while.body42, %for.body36, %while.body42, %for.body36
  %47 = load i8*, i8** %s, align 4
  %48 = load i8, i8* %47, align 1
  %conv39 = sext i8 %48 to i32
  %call40 = call i32 @isupper_Package(i32 %conv39)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %while.body42, label %while.end44

while.body42:                                     ; preds = %while.cond38, %while.cond38
  %49 = load i8*, i8** %s, align 4
  %incdec.ptr43 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %incdec.ptr43, i8** %s, align 4
  br label %while.cond38

while.end44:                                      ; preds = %while.cond38, %while.cond38
  %50 = load i8*, i8** %s, align 4
  %call45 = call i32 @strlen_Package(i8* %50)
  store i32 %call45, i32* %j, align 4
  %51 = load i32, i32* %j, align 4
  %52 = load i32, i32* %i, align 4
  %53 = load i32*, i32** %lengths, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %53, i32 %52
  %54 = load i32, i32* %arrayidx46, align 4
  %cmp47 = icmp sgt i32 %51, %54
  br i1 %cmp47, label %if.then49, label %if.end51

if.then49:                                        ; preds = %while.end44, %while.end44
  %55 = load i32, i32* %j, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load i32*, i32** %lengths, align 4
  %arrayidx50 = getelementptr inbounds i32, i32* %57, i32 %56
  store i32 %55, i32* %arrayidx50, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %while.end44, %if.then49, %while.end44
  %58 = load i32, i32* %i, align 4
  %inc52 = add nsw i32 %58, 1
  store i32 %inc52, i32* %i, align 4
  br label %for.inc53

for.inc53:                                        ; preds = %if.end51, %if.end51
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next54 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %59, i32 0, i32 4
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %next54, align 4
  store %struct.Connector_struct* %60, %struct.Connector_struct** %c, align 4
  br label %for.cond33

for.end55:                                        ; preds = %for.cond33, %for.cond33
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next56 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %61, i32 0, i32 0
  %62 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next56, align 4
  store %struct.Disjunct_struct* %62, %struct.Disjunct_struct** %d, align 4
  br label %while.cond

while.end57:                                      ; preds = %while.cond, %while.cond
  store i32 0, i32* %tot_len, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc64, %while.end57, %for.inc64, %while.end57
  %63 = load i32, i32* %i, align 4
  %64 = load i32, i32* %N_connectors, align 4
  %cmp59 = icmp slt i32 %63, %64
  br i1 %cmp59, label %for.body61, label %for.end66

for.body61:                                       ; preds = %for.cond58, %for.cond58
  %65 = load i32, i32* %i, align 4
  %66 = load i32*, i32** %lengths, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %66, i32 %65
  %67 = load i32, i32* %arrayidx62, align 4
  %add = add nsw i32 %67, 1
  %68 = load i32, i32* %tot_len, align 4
  %add63 = add nsw i32 %68, %add
  store i32 %add63, i32* %tot_len, align 4
  br label %for.inc64

for.inc64:                                        ; preds = %for.body61, %for.body61
  %69 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %69, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond58

for.end66:                                        ; preds = %for.cond58, %for.cond58
  %70 = load i32, i32* %k.addr, align 4
  %71 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx67 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %71, i32 %70
  %72 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx67, align 4
  store %struct.Disjunct_struct* %72, %struct.Disjunct_struct** %d, align 4
  br label %for.cond68

for.cond68:                                       ; preds = %for.inc98, %for.end66, %for.inc98, %for.end66
  %73 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp69 = icmp ne %struct.Disjunct_struct* %73, null
  br i1 %cmp69, label %for.body71, label %for.end100

for.body71:                                       ; preds = %for.cond68, %for.cond68
  store i32 0, i32* %i, align 4
  %74 = load i32, i32* %tot_len, align 4
  %add72 = add nsw i32 %74, 1
  %call73 = call i8* @xalloc(i32 %add72)
  store i8* %call73, i8** %s, align 4
  store i8* %call73, i8** %os, align 4
  %75 = load i32, i32* %tot_len, align 4
  %add74 = add nsw i32 %75, 1
  %76 = load i8*, i8** %s, align 4
  call void @free_this_string_later(i8* %76, i32 %add74)
  %77 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left75 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %77, i32 0, i32 4
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %left75, align 4
  store %struct.Connector_struct* %78, %struct.Connector_struct** %c, align 4
  br label %for.cond76

for.cond76:                                       ; preds = %for.inc83, %for.body71, %for.inc83, %for.body71
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp77 = icmp ne %struct.Connector_struct* %79, null
  br i1 %cmp77, label %for.body79, label %for.end85

for.body79:                                       ; preds = %for.cond76, %for.cond76
  %80 = load i32, i32* %i, align 4
  %81 = load i32*, i32** %lengths, align 4
  %arrayidx80 = getelementptr inbounds i32, i32* %81, i32 %80
  %82 = load i32, i32* %arrayidx80, align 4
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %84 = load i8*, i8** %s, align 4
  %call81 = call i8* @stick_in_one_connector(i8* %84, %struct.Connector_struct* %83, i32 %82)
  store i8* %call81, i8** %s, align 4
  %85 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %85, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body79, %for.body79
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next84 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %86, i32 0, i32 4
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %next84, align 4
  store %struct.Connector_struct* %87, %struct.Connector_struct** %c, align 4
  br label %for.cond76

for.end85:                                        ; preds = %for.cond76, %for.cond76
  %88 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right86 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %88, i32 0, i32 5
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %right86, align 4
  store %struct.Connector_struct* %89, %struct.Connector_struct** %c, align 4
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc94, %for.end85, %for.inc94, %for.end85
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp88 = icmp ne %struct.Connector_struct* %90, null
  br i1 %cmp88, label %for.body90, label %for.end96

for.body90:                                       ; preds = %for.cond87, %for.cond87
  %91 = load i32, i32* %i, align 4
  %92 = load i32*, i32** %lengths, align 4
  %arrayidx91 = getelementptr inbounds i32, i32* %92, i32 %91
  %93 = load i32, i32* %arrayidx91, align 4
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %95 = load i8*, i8** %s, align 4
  %call92 = call i8* @stick_in_one_connector(i8* %95, %struct.Connector_struct* %94, i32 %93)
  store i8* %call92, i8** %s, align 4
  %96 = load i32, i32* %i, align 4
  %inc93 = add nsw i32 %96, 1
  store i32 %inc93, i32* %i, align 4
  br label %for.inc94

for.inc94:                                        ; preds = %for.body90, %for.body90
  %97 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next95 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %97, i32 0, i32 4
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %next95, align 4
  store %struct.Connector_struct* %98, %struct.Connector_struct** %c, align 4
  br label %for.cond87

for.end96:                                        ; preds = %for.cond87, %for.cond87
  %99 = load i8*, i8** %os, align 4
  %100 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %string97 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %100, i32 0, i32 3
  store i8* %99, i8** %string97, align 4
  br label %for.inc98

for.inc98:                                        ; preds = %for.end96, %for.end96
  %101 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next99 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %101, i32 0, i32 0
  %102 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next99, align 4
  store %struct.Disjunct_struct* %102, %struct.Disjunct_struct** %d, align 4
  br label %for.cond68

for.end100:                                       ; preds = %for.cond68, %for.cond68
  %103 = load i32, i32* %N_connectors, align 4
  %mul101 = mul i32 %103, 4
  %104 = load i32*, i32** %lengths, align 4
  %105 = bitcast i32* %104 to i8*
  call void @xfree(i8* %105, i32 %mul101)
  ret void
}

; Function Attrs: noinline nounwind
define void @build_conjunction_tables() #0 {
entry:
  %w = alloca i32, align 4
  %k = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 103, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 102, i32 10)
  store i32 0, i32* @STAT_calls_to_equality_test, align 4
  store i32 0, i32* @STAT_N_disjuncts, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry, %for.inc5, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 30, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  br label %for.inc5

for.inc5:                                         ; preds = %for.end, %for.end
  %9 = load i32, i32* %w, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end6:                                         ; preds = %for.cond, %for.cond
  store i32 0, i32* %k, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc10, %for.end6, %for.inc10, %for.end6
  %10 = load i32, i32* %k, align 4
  %11 = load i32, i32* @LT_size, align 4
  %cmp8 = icmp slt i32 %10, %11
  br i1 %cmp8, label %for.body9, label %for.end12

for.body9:                                        ; preds = %for.cond7, %for.cond7
  %12 = load i32, i32* %k, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %12, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 61, i32 0)
  br label %for.inc10

for.inc10:                                        ; preds = %for.body9, %for.body9
  %13 = load i32, i32* %k, align 4
  %inc11 = add nsw i32 %13, 1
  store i32 %inc11, i32* %k, align 4
  br label %for.cond7

for.end12:                                        ; preds = %for.cond7, %for.cond7
  ret void
}

; Function Attrs: noinline nounwind
define void @print_AND_statistics() #0 {
entry:
  %0 = load i32, i32* @LT_size, align 4
  %1 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.1.31, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1, i32 %0)
  %2 = load i32, i32* @STAT_N_disjuncts, align 4
  %3 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.2.32, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %3, i32 %2)
  %4 = load i32, i32* @STAT_N_disjuncts, align 4
  %conv = sitofp i32 %4 to float
  %5 = load i32, i32* @LT_size, align 4
  %conv2 = sitofp i32 %5 to float
  %div = fdiv float %conv, %conv2
  %conv3 = fpext float %div to double
  %6 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.3.33, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %6, double %conv3)
  %7 = load i32, i32* @STAT_calls_to_equality_test, align 4
  %8 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.4.34, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %8, i32 %7)
  ret void
}

declare dllimport i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind
define void @connector_for_disjunct(%struct.Disjunct_struct* %d, %struct.Connector_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Connector_struct*, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %h = alloca i32, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %lp = alloca %struct.label_node_struct*, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  store %struct.Disjunct_struct* %d, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d1, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call = call i32 @and_hash_disjunct(%struct.Disjunct_struct* %0)
  store i32 %call, i32* %h, align 4
  %1 = load i32, i32* %h, align 4
  %arrayidx = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %1
  %2 = load %struct.label_node_struct*, %struct.label_node_struct** %arrayidx, align 4
  store %struct.label_node_struct* %2, %struct.label_node_struct** %lp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %cmp = icmp ne %struct.label_node_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %label = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %4, i32 0, i32 0
  %5 = load i32, i32* %label, align 4
  %6 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx1 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %6, i32 %5
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx1, align 4
  store %struct.Disjunct_struct* %7, %struct.Disjunct_struct** %d1, align 4
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call2 = call i32 @disjunct_types_equal(%struct.Disjunct_struct* %9, %struct.Disjunct_struct* %8)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %next = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %10, i32 0, i32 1
  %11 = load %struct.label_node_struct*, %struct.label_node_struct** %next, align 4
  store %struct.label_node_struct* %11, %struct.label_node_struct** %lp, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %cmp3 = icmp ne %struct.label_node_struct* %12, null
  br i1 %cmp3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %for.end
  %13 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.6.35, i32 0, i32 0
  %14 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.5.36, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %13, i8* %14)
  call void @exit_Package(i32 1) #5
  unreachable

if.end6:                                          ; preds = %for.end
  br label %while.cond

while.cond:                                       ; preds = %if.end11, %if.end6
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp7 = icmp ne %struct.Disjunct_struct* %15, null
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call8 = call i32 @disjuncts_equal_AND(%struct.Disjunct_struct* %17, %struct.Disjunct_struct* %16)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %while.body
  br label %while.end

if.end11:                                         ; preds = %while.body
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 0
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next12, align 4
  store %struct.Disjunct_struct* %19, %struct.Disjunct_struct** %d1, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then10, %while.cond
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp13 = icmp ne %struct.Disjunct_struct* %20, null
  br i1 %cmp13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %while.end
  %21 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.8.37, i32 0, i32 0
  %22 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.7.38, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printf(i8* %21, i8* %22)
  call void @exit_Package(i32 1) #5
  unreachable

if.end16:                                         ; preds = %while.end
  %23 = load %struct.label_node_struct*, %struct.label_node_struct** %lp, align 4
  %label17 = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %23, i32 0, i32 0
  %24 = load i32, i32* %label17, align 4
  %conv = trunc i32 %24 to i16
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %label18 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 0
  store i16 %conv, i16* %label18, align 4
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 3
  %27 = load i8*, i8** %string, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %28, i32 0, i32 5
  store i8* %27, i8** %string19, align 4
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %29, i32 0, i32 2
  store i8 1, i8* %priority, align 4
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %30, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  ret void
}

; Function Attrs: noreturn
declare dllimport void @exit(i32) #3

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @build_fat_link_substitutions(%struct.Disjunct_struct* %d) #0 {
entry:
  %retval = alloca %struct.Disjunct_struct*, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %cl = alloca %struct.Connector_struct*, align 4
  %cr = alloca %struct.Connector_struct*, align 4
  %tl = alloca %struct.Connector_struct*, align 4
  %tr = alloca %struct.Connector_struct*, align 4
  %wc = alloca %struct.Connector_struct*, align 4
  %work_connector = alloca %struct.Connector_struct, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %wd = alloca %struct.Disjunct_struct*, align 4
  %work_disjunct = alloca %struct.Disjunct_struct, align 4
  %d_list = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %d, %struct.Disjunct_struct** %d.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp eq %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store %struct.Disjunct_struct* %work_disjunct, %struct.Disjunct_struct** %wd, align 4
  store %struct.Connector_struct* %work_connector, %struct.Connector_struct** %wc, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_list, align 4
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %3 = bitcast %struct.Disjunct_struct* %1 to i8*
  %4 = bitcast %struct.Disjunct_struct* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %3, i8* %4, i32 20, i32 4, i1 false)
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %5, i32 0, i32 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %tl, align 4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left1, align 4
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %8, i32 0, i32 5
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %cr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %10, null
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %12, %struct.Connector_struct** %tr, align 4
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next3, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call = call i32 @is_appropriate(%struct.Disjunct_struct* %14)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then4, label %if.end15

if.then4:                                         ; preds = %for.body
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @connector_for_disjunct(%struct.Disjunct_struct* %16, %struct.Connector_struct* %15)
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left5 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 4
  store %struct.Connector_struct* %17, %struct.Connector_struct** %left5, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 5
  store %struct.Connector_struct* %19, %struct.Connector_struct** %right6, align 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %next7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 4
  store %struct.Connector_struct* %21, %struct.Connector_struct** %next7, align 4
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call8 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %23)
  store %struct.Disjunct_struct* %call8, %struct.Disjunct_struct** %d1, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %25 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next9 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %25, i32 0, i32 0
  store %struct.Disjunct_struct* %24, %struct.Disjunct_struct** %next9, align 4
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %26, %struct.Disjunct_struct** %d_list, align 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left10 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %28, i32 0, i32 4
  store %struct.Connector_struct* %27, %struct.Connector_struct** %left10, align 4
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %next11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %30, i32 0, i32 4
  store %struct.Connector_struct* %29, %struct.Connector_struct** %next11, align 4
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %32, i32 0, i32 5
  store %struct.Connector_struct* %31, %struct.Connector_struct** %right12, align 4
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call13 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %33)
  store %struct.Disjunct_struct* %call13, %struct.Disjunct_struct** %d1, align 4
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next14 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 0
  store %struct.Disjunct_struct* %34, %struct.Disjunct_struct** %next14, align 4
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %36, %struct.Disjunct_struct** %d_list, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then4, %for.body
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next16 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %38, i32 0, i32 4
  store %struct.Connector_struct* %37, %struct.Connector_struct** %next16, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end15
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next17 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %39, i32 0, i32 4
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %next17, align 4
  store %struct.Connector_struct* %40, %struct.Connector_struct** %cr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %42, i32 0, i32 4
  store %struct.Connector_struct* %41, %struct.Connector_struct** %left18, align 4
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right19 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %43, i32 0, i32 5
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %right19, align 4
  store %struct.Connector_struct* %44, %struct.Connector_struct** %tr, align 4
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right20 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right20, align 4
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left21 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %46, i32 0, i32 4
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %left21, align 4
  store %struct.Connector_struct* %47, %struct.Connector_struct** %cl, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc42, %for.end
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %cmp23 = icmp ne %struct.Connector_struct* %48, null
  br i1 %cmp23, label %for.body24, label %for.end44

for.body24:                                       ; preds = %for.cond22
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next25 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %49, i32 0, i32 4
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %next25, align 4
  store %struct.Connector_struct* %50, %struct.Connector_struct** %tl, align 4
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next26 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next26, align 4
  %52 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call27 = call i32 @is_appropriate(%struct.Disjunct_struct* %52)
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.then29, label %if.end40

if.then29:                                        ; preds = %for.body24
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %54 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @connector_for_disjunct(%struct.Disjunct_struct* %54, %struct.Connector_struct* %53)
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %56 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left30 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %56, i32 0, i32 4
  store %struct.Connector_struct* %55, %struct.Connector_struct** %left30, align 4
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right31 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %58, i32 0, i32 5
  store %struct.Connector_struct* %57, %struct.Connector_struct** %right31, align 4
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %next32 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %60, i32 0, i32 4
  store %struct.Connector_struct* %59, %struct.Connector_struct** %next32, align 4
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call33 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %61)
  store %struct.Disjunct_struct* %call33, %struct.Disjunct_struct** %d1, align 4
  %62 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next34 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %63, i32 0, i32 0
  store %struct.Disjunct_struct* %62, %struct.Disjunct_struct** %next34, align 4
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %64, %struct.Disjunct_struct** %d_list, align 4
  %65 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %66 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left35 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %66, i32 0, i32 4
  store %struct.Connector_struct* %65, %struct.Connector_struct** %left35, align 4
  %67 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %next36 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %68, i32 0, i32 4
  store %struct.Connector_struct* %67, %struct.Connector_struct** %next36, align 4
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %70 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right37 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %70, i32 0, i32 5
  store %struct.Connector_struct* %69, %struct.Connector_struct** %right37, align 4
  %71 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call38 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %71)
  store %struct.Disjunct_struct* %call38, %struct.Disjunct_struct** %d1, align 4
  %72 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %73 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next39 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %73, i32 0, i32 0
  store %struct.Disjunct_struct* %72, %struct.Disjunct_struct** %next39, align 4
  %74 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %74, %struct.Disjunct_struct** %d_list, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then29, %for.body24
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %76 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next41 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %76, i32 0, i32 4
  store %struct.Connector_struct* %75, %struct.Connector_struct** %next41, align 4
  br label %for.inc42

for.inc42:                                        ; preds = %if.end40
  %77 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next43 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %77, i32 0, i32 4
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %next43, align 4
  store %struct.Connector_struct* %78, %struct.Connector_struct** %cl, align 4
  br label %for.cond22

for.end44:                                        ; preds = %for.cond22
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %80 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right45 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %80, i32 0, i32 5
  store %struct.Connector_struct* %79, %struct.Connector_struct** %right45, align 4
  %81 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left46 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %81, i32 0, i32 4
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %left46, align 4
  store %struct.Connector_struct* %82, %struct.Connector_struct** %cl, align 4
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc77, %for.end44
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %cmp48 = icmp ne %struct.Connector_struct* %83, null
  br i1 %cmp48, label %for.body49, label %for.end79

for.body49:                                       ; preds = %for.cond47
  %84 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right50 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %84, i32 0, i32 5
  %85 = load %struct.Connector_struct*, %struct.Connector_struct** %right50, align 4
  store %struct.Connector_struct* %85, %struct.Connector_struct** %cr, align 4
  br label %for.cond51

for.cond51:                                       ; preds = %for.inc74, %for.body49
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %cmp52 = icmp ne %struct.Connector_struct* %86, null
  br i1 %cmp52, label %for.body53, label %for.end76

for.body53:                                       ; preds = %for.cond51
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next54 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %87, i32 0, i32 4
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %next54, align 4
  store %struct.Connector_struct* %88, %struct.Connector_struct** %tl, align 4
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next55 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %89, i32 0, i32 4
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %next55, align 4
  store %struct.Connector_struct* %90, %struct.Connector_struct** %tr, align 4
  %91 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next56 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %91, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next56, align 4
  %92 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next57 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %92, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next57, align 4
  %93 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call58 = call i32 @is_appropriate(%struct.Disjunct_struct* %93)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.then60, label %if.end71

if.then60:                                        ; preds = %for.body53
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %95 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @connector_for_disjunct(%struct.Disjunct_struct* %95, %struct.Connector_struct* %94)
  %96 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %97 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left61 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %97, i32 0, i32 4
  store %struct.Connector_struct* %96, %struct.Connector_struct** %left61, align 4
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %99 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right62 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %99, i32 0, i32 5
  store %struct.Connector_struct* %98, %struct.Connector_struct** %right62, align 4
  %100 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %101 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %next63 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %101, i32 0, i32 4
  store %struct.Connector_struct* %100, %struct.Connector_struct** %next63, align 4
  %102 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call64 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %102)
  store %struct.Disjunct_struct* %call64, %struct.Disjunct_struct** %d1, align 4
  %103 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %104 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next65 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %104, i32 0, i32 0
  store %struct.Disjunct_struct* %103, %struct.Disjunct_struct** %next65, align 4
  %105 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %105, %struct.Disjunct_struct** %d_list, align 4
  %106 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %107 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left66 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %107, i32 0, i32 4
  store %struct.Connector_struct* %106, %struct.Connector_struct** %left66, align 4
  %108 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %109 = load %struct.Connector_struct*, %struct.Connector_struct** %wc, align 4
  %next67 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %109, i32 0, i32 4
  store %struct.Connector_struct* %108, %struct.Connector_struct** %next67, align 4
  %110 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %111 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right68 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %111, i32 0, i32 5
  store %struct.Connector_struct* %110, %struct.Connector_struct** %right68, align 4
  %112 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call69 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %112)
  store %struct.Disjunct_struct* %call69, %struct.Disjunct_struct** %d1, align 4
  %113 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %114 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next70 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %114, i32 0, i32 0
  store %struct.Disjunct_struct* %113, %struct.Disjunct_struct** %next70, align 4
  %115 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %115, %struct.Disjunct_struct** %d_list, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then60, %for.body53
  %116 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %117 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next72 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %117, i32 0, i32 4
  store %struct.Connector_struct* %116, %struct.Connector_struct** %next72, align 4
  %118 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %119 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next73 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %119, i32 0, i32 4
  store %struct.Connector_struct* %118, %struct.Connector_struct** %next73, align 4
  br label %for.inc74

for.inc74:                                        ; preds = %if.end71
  %120 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next75 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %120, i32 0, i32 4
  %121 = load %struct.Connector_struct*, %struct.Connector_struct** %next75, align 4
  store %struct.Connector_struct* %121, %struct.Connector_struct** %cr, align 4
  br label %for.cond51

for.end76:                                        ; preds = %for.cond51
  br label %for.inc77

for.inc77:                                        ; preds = %for.end76
  %122 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next78 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %122, i32 0, i32 4
  %123 = load %struct.Connector_struct*, %struct.Connector_struct** %next78, align 4
  store %struct.Connector_struct* %123, %struct.Connector_struct** %cl, align 4
  br label %for.cond47

for.end79:                                        ; preds = %for.cond47
  %124 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  store %struct.Disjunct_struct* %124, %struct.Disjunct_struct** %retval, align 4
  br label %return

return:                                           ; preds = %for.end79, %if.then
  %125 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %retval, align 4
  ret %struct.Disjunct_struct* %125
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @explode_disjunct_list(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call = call %struct.Disjunct_struct* @build_fat_link_substitutions(%struct.Disjunct_struct* %1)
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call1 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %2, %struct.Disjunct_struct* %call)
  store %struct.Disjunct_struct* %call1, %struct.Disjunct_struct** %d1, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 0
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %5
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @build_COMMA_disjunct_list() #0 {
entry:
  %lab = alloca i32, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %work_disjunct = alloca %struct.Disjunct_struct, align 4
  %wd = alloca %struct.Disjunct_struct*, align 4
  %work_connector1 = alloca %struct.Connector_struct, align 4
  %work_connector2 = alloca %struct.Connector_struct, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  %c2 = alloca %struct.Connector_struct*, align 4
  %work_connector3 = alloca %struct.Connector_struct, align 4
  %c3 = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %work_connector1, %struct.Connector_struct** %c1, align 4
  store %struct.Connector_struct* %work_connector2, %struct.Connector_struct** %c2, align 4
  store %struct.Connector_struct* %work_connector3, %struct.Connector_struct** %c3, align 4
  store %struct.Disjunct_struct* %work_disjunct, %struct.Disjunct_struct** %wd, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d1, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %next1, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %3, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next2, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 2
  store i8 2, i8* %priority, align 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 2
  store i8 2, i8* %priority3, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %priority4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 2
  store i8 1, i8* %priority4, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %multi5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 3
  store i8 0, i8* %multi5, align 1
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 3
  store i8 0, i8* %multi6, align 1
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %11, i32 0, i32 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %left, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 5
  store %struct.Connector_struct* %12, %struct.Connector_struct** %right, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 3
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.9.39, i32 0, i32 0
  store i8* %15, i8** %string, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %next7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next7, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 1
  store i16 0, i16* %cost, align 4
  store i32 0, i32* %lab, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc19, %entry, %for.inc19, %entry
  %18 = load i32, i32* %lab, align 4
  %19 = load i32, i32* @LT_size, align 4
  %cmp = icmp slt i32 %18, %19
  br i1 %cmp, label %for.body, label %for.end20

for.body:                                         ; preds = %for.cond, %for.cond
  %20 = load i32, i32* %lab, align 4
  %21 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %21, i32 %20
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %22, %struct.Disjunct_struct** %d, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp9 = icmp ne %struct.Disjunct_struct* %23, null
  br i1 %cmp9, label %for.body10, label %for.end

for.body10:                                       ; preds = %for.cond8, %for.cond8
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %string11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 3
  %25 = load i8*, i8** %string11, align 4
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %string12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 5
  store i8* %25, i8** %string12, align 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %string13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 5
  store i8* %25, i8** %string13, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string14 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %28, i32 0, i32 5
  store i8* %25, i8** %string14, align 4
  %29 = load i32, i32* %lab, align 4
  %conv = trunc i32 %29 to i16
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %30, i32 0, i32 0
  store i16 %conv, i16* %label, align 4
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %label15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %31, i32 0, i32 0
  store i16 %conv, i16* %label15, align 4
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label16 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %32, i32 0, i32 0
  store i16 %conv, i16* %label16, align 4
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %33)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d2, align 4
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next17 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 0
  store %struct.Disjunct_struct* %34, %struct.Disjunct_struct** %next17, align 4
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %36, %struct.Disjunct_struct** %d1, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body10, %for.body10
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %37, i32 0, i32 0
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next18, align 4
  store %struct.Disjunct_struct* %38, %struct.Disjunct_struct** %d, align 4
  br label %for.cond8

for.end:                                          ; preds = %for.cond8, %for.cond8
  br label %for.inc19

for.inc19:                                        ; preds = %for.end, %for.end
  %39 = load i32, i32* %lab, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %lab, align 4
  br label %for.cond

for.end20:                                        ; preds = %for.cond, %for.cond
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %40, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %40
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @build_AND_disjunct_list(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %lab = alloca i32, align 4
  %d_list = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d3 = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %d_copy = alloca %struct.Disjunct_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  %c2 = alloca %struct.Connector_struct*, align 4
  %c3 = alloca %struct.Connector_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_list, align 4
  store i32 0, i32* %lab, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc52, %entry, %for.inc52, %entry
  %0 = load i32, i32* %lab, align 4
  %1 = load i32, i32* @LT_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end53

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %lab, align 4
  %3 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %3, i32 %2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc49, %for.body, %for.inc49, %for.body
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp2 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp2, label %for.body3, label %for.end51

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call = call %struct.Disjunct_struct* @build_fat_link_substitutions(%struct.Disjunct_struct* %6)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d1, align 4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call4 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %7)
  store %struct.Disjunct_struct* %call4, %struct.Disjunct_struct** %d_copy, align 4
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 0
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %next, align 4
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  store %struct.Disjunct_struct* %10, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc47, %for.body3, %for.inc47, %for.body3
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp6 = icmp ne %struct.Disjunct_struct* %11, null
  br i1 %cmp6, label %for.body7, label %for.end48

for.body7:                                        ; preds = %for.cond5, %for.cond5
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 0
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next8, align 4
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %d3, align 4
  %call9 = call i8* @xalloc(i32 16)
  %14 = bitcast i8* %call9 to %struct.Connector_struct*
  store %struct.Connector_struct* %14, %struct.Connector_struct** %c1, align 4
  %call10 = call i8* @xalloc(i32 16)
  %15 = bitcast i8* %call10 to %struct.Connector_struct*
  store %struct.Connector_struct* %15, %struct.Connector_struct** %c2, align 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next11, align 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next12, align 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 2
  store i8 2, i8* %priority, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 2
  store i8 2, i8* %priority13, align 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %20, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi14 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %21, i32 0, i32 3
  store i8 0, i8* %multi14, align 1
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 3
  %23 = load i8*, i8** %string, align 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %string15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 5
  store i8* %23, i8** %string15, align 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string16 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 5
  store i8* %23, i8** %string16, align 4
  %26 = load i32, i32* %lab, align 4
  %conv = trunc i32 %26 to i16
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 0
  store i16 %conv, i16* %label, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label17 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %28, i32 0, i32 0
  store i16 %conv, i16* %label17, align 4
  %29 = load i8*, i8** %s.addr, align 4
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %string18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 3
  store i8* %29, i8** %string18, align 4
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 5
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp19 = icmp eq %struct.Connector_struct* %32, null
  br i1 %cmp19, label %if.then, label %if.else

if.then:                                          ; preds = %for.body7, %for.body7
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right21 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %34, i32 0, i32 5
  store %struct.Connector_struct* %33, %struct.Connector_struct** %right21, align 4
  br label %if.end

if.else:                                          ; preds = %for.body7, %for.body7
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right22 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 5
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %right22, align 4
  store %struct.Connector_struct* %36, %struct.Connector_struct** %c3, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc, %if.else, %for.inc, %if.else
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next24 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 4
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %next24, align 4
  %cmp25 = icmp ne %struct.Connector_struct* %38, null
  br i1 %cmp25, label %for.body27, label %for.end

for.body27:                                       ; preds = %for.cond23, %for.cond23
  br label %for.inc

for.inc:                                          ; preds = %for.body27, %for.body27
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next28 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %39, i32 0, i32 4
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %next28, align 4
  store %struct.Connector_struct* %40, %struct.Connector_struct** %c3, align 4
  br label %for.cond23

for.end:                                          ; preds = %for.cond23, %for.cond23
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next29 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 4
  store %struct.Connector_struct* %41, %struct.Connector_struct** %next29, align 4
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then, %for.end, %if.then
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %43, i32 0, i32 4
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp30 = icmp eq %struct.Connector_struct* %44, null
  br i1 %cmp30, label %if.then32, label %if.else34

if.then32:                                        ; preds = %if.end, %if.end
  %45 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left33 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %46, i32 0, i32 4
  store %struct.Connector_struct* %45, %struct.Connector_struct** %left33, align 4
  br label %if.end45

if.else34:                                        ; preds = %if.end, %if.end
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left35 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 4
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %left35, align 4
  store %struct.Connector_struct* %48, %struct.Connector_struct** %c3, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc41, %if.else34, %for.inc41, %if.else34
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next37 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %49, i32 0, i32 4
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %next37, align 4
  %cmp38 = icmp ne %struct.Connector_struct* %50, null
  br i1 %cmp38, label %for.body40, label %for.end43

for.body40:                                       ; preds = %for.cond36, %for.cond36
  br label %for.inc41

for.inc41:                                        ; preds = %for.body40, %for.body40
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next42 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %next42, align 4
  store %struct.Connector_struct* %52, %struct.Connector_struct** %c3, align 4
  br label %for.cond36

for.end43:                                        ; preds = %for.cond36, %for.cond36
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next44 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %54, i32 0, i32 4
  store %struct.Connector_struct* %53, %struct.Connector_struct** %next44, align 4
  br label %if.end45

if.end45:                                         ; preds = %for.end43, %if.then32, %for.end43, %if.then32
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %56 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next46 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %56, i32 0, i32 0
  store %struct.Disjunct_struct* %55, %struct.Disjunct_struct** %next46, align 4
  %57 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %57, %struct.Disjunct_struct** %d_list, align 4
  br label %for.inc47

for.inc47:                                        ; preds = %if.end45, %if.end45
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d3, align 4
  store %struct.Disjunct_struct* %58, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond5

for.end48:                                        ; preds = %for.cond5, %for.cond5
  br label %for.inc49

for.inc49:                                        ; preds = %for.end48, %for.end48
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next50 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %59, i32 0, i32 0
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next50, align 4
  store %struct.Disjunct_struct* %60, %struct.Disjunct_struct** %d, align 4
  br label %for.cond1

for.end51:                                        ; preds = %for.cond1, %for.cond1
  br label %for.inc52

for.inc52:                                        ; preds = %for.end51, %for.end51
  %61 = load i32, i32* %lab, align 4
  %inc = add nsw i32 %61, 1
  store i32 %inc, i32* %lab, align 4
  br label %for.cond

for.end53:                                        ; preds = %for.cond, %for.cond
  %62 = load i8*, i8** %s.addr, align 4
  %63 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.10.40, i32 0, i32 0
  %call54 = call i32 @strcmp_Package(i8* %62, i8* %63)
  %cmp55 = icmp eq i32 %call54, 0
  br i1 %cmp55, label %if.then57, label %if.else149

if.then57:                                        ; preds = %for.end53, %for.end53
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  store %struct.Disjunct_struct* %64, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc146, %if.then57, %for.inc146, %if.then57
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp59 = icmp ne %struct.Disjunct_struct* %65, null
  br i1 %cmp59, label %for.body61, label %for.end148

for.body61:                                       ; preds = %for.cond58, %for.cond58
  %66 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right62 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %66, i32 0, i32 5
  %67 = load %struct.Connector_struct*, %struct.Connector_struct** %right62, align 4
  store %struct.Connector_struct* %67, %struct.Connector_struct** %c1, align 4
  br label %for.cond63

for.cond63:                                       ; preds = %for.inc97, %for.body61, %for.inc97, %for.body61
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp64 = icmp ne %struct.Connector_struct* %68, null
  br i1 %cmp64, label %for.body66, label %for.end99

for.body66:                                       ; preds = %for.cond63, %for.cond63
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string67 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %69, i32 0, i32 5
  %70 = load i8*, i8** %string67, align 4
  %arrayidx68 = getelementptr inbounds i8, i8* %70, i32 0
  %71 = load i8, i8* %arrayidx68, align 1
  %conv69 = sext i8 %71 to i32
  %cmp70 = icmp eq i32 %conv69, 83
  br i1 %cmp70, label %land.lhs.true, label %if.end96

land.lhs.true:                                    ; preds = %for.body66, %for.body66
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string72 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %72, i32 0, i32 5
  %73 = load i8*, i8** %string72, align 4
  %arrayidx73 = getelementptr inbounds i8, i8* %73, i32 1
  %74 = load i8, i8* %arrayidx73, align 1
  %conv74 = sext i8 %74 to i32
  %cmp75 = icmp eq i32 %conv74, 94
  br i1 %cmp75, label %if.then94, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %land.lhs.true
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string77 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %75, i32 0, i32 5
  %76 = load i8*, i8** %string77, align 4
  %arrayidx78 = getelementptr inbounds i8, i8* %76, i32 1
  %77 = load i8, i8* %arrayidx78, align 1
  %conv79 = sext i8 %77 to i32
  %cmp80 = icmp eq i32 %conv79, 115
  br i1 %cmp80, label %if.then94, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %lor.lhs.false, %lor.lhs.false
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string83 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %78, i32 0, i32 5
  %79 = load i8*, i8** %string83, align 4
  %arrayidx84 = getelementptr inbounds i8, i8* %79, i32 1
  %80 = load i8, i8* %arrayidx84, align 1
  %conv85 = sext i8 %80 to i32
  %cmp86 = icmp eq i32 %conv85, 112
  br i1 %cmp86, label %if.then94, label %lor.lhs.false88

lor.lhs.false88:                                  ; preds = %lor.lhs.false82, %lor.lhs.false82
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string89 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %81, i32 0, i32 5
  %82 = load i8*, i8** %string89, align 4
  %arrayidx90 = getelementptr inbounds i8, i8* %82, i32 1
  %83 = load i8, i8* %arrayidx90, align 1
  %conv91 = sext i8 %83 to i32
  %cmp92 = icmp eq i32 %conv91, 0
  br i1 %cmp92, label %if.then94, label %if.end96

if.then94:                                        ; preds = %lor.lhs.false88, %lor.lhs.false82, %lor.lhs.false, %land.lhs.true, %lor.lhs.false88, %lor.lhs.false82, %lor.lhs.false, %land.lhs.true
  %84 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string95 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %84, i32 0, i32 5
  %85 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.11.41, i32 0, i32 0
  store i8* %85, i8** %string95, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %lor.lhs.false88, %for.body66, %if.then94, %lor.lhs.false88, %for.body66
  br label %for.inc97

for.inc97:                                        ; preds = %if.end96, %if.end96
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next98 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %86, i32 0, i32 4
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %next98, align 4
  store %struct.Connector_struct* %87, %struct.Connector_struct** %c1, align 4
  br label %for.cond63

for.end99:                                        ; preds = %for.cond63, %for.cond63
  %88 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left100 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %88, i32 0, i32 4
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %left100, align 4
  store %struct.Connector_struct* %89, %struct.Connector_struct** %c1, align 4
  br label %for.cond101

for.cond101:                                      ; preds = %for.inc143, %for.end99, %for.inc143, %for.end99
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp102 = icmp ne %struct.Connector_struct* %90, null
  br i1 %cmp102, label %for.body104, label %for.end145

for.body104:                                      ; preds = %for.cond101, %for.cond101
  %91 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string105 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %91, i32 0, i32 5
  %92 = load i8*, i8** %string105, align 4
  %arrayidx106 = getelementptr inbounds i8, i8* %92, i32 0
  %93 = load i8, i8* %arrayidx106, align 1
  %conv107 = sext i8 %93 to i32
  %cmp108 = icmp eq i32 %conv107, 83
  br i1 %cmp108, label %land.lhs.true110, label %if.end142

land.lhs.true110:                                 ; preds = %for.body104, %for.body104
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string111 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %94, i32 0, i32 5
  %95 = load i8*, i8** %string111, align 4
  %arrayidx112 = getelementptr inbounds i8, i8* %95, i32 1
  %96 = load i8, i8* %arrayidx112, align 1
  %conv113 = sext i8 %96 to i32
  %cmp114 = icmp eq i32 %conv113, 73
  br i1 %cmp114, label %land.lhs.true116, label %if.end142

land.lhs.true116:                                 ; preds = %land.lhs.true110, %land.lhs.true110
  %97 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string117 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %97, i32 0, i32 5
  %98 = load i8*, i8** %string117, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %98, i32 2
  %99 = load i8, i8* %arrayidx118, align 1
  %conv119 = sext i8 %99 to i32
  %cmp120 = icmp eq i32 %conv119, 94
  br i1 %cmp120, label %if.then140, label %lor.lhs.false122

lor.lhs.false122:                                 ; preds = %land.lhs.true116, %land.lhs.true116
  %100 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string123 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %100, i32 0, i32 5
  %101 = load i8*, i8** %string123, align 4
  %arrayidx124 = getelementptr inbounds i8, i8* %101, i32 2
  %102 = load i8, i8* %arrayidx124, align 1
  %conv125 = sext i8 %102 to i32
  %cmp126 = icmp eq i32 %conv125, 115
  br i1 %cmp126, label %if.then140, label %lor.lhs.false128

lor.lhs.false128:                                 ; preds = %lor.lhs.false122, %lor.lhs.false122
  %103 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string129 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %103, i32 0, i32 5
  %104 = load i8*, i8** %string129, align 4
  %arrayidx130 = getelementptr inbounds i8, i8* %104, i32 2
  %105 = load i8, i8* %arrayidx130, align 1
  %conv131 = sext i8 %105 to i32
  %cmp132 = icmp eq i32 %conv131, 112
  br i1 %cmp132, label %if.then140, label %lor.lhs.false134

lor.lhs.false134:                                 ; preds = %lor.lhs.false128, %lor.lhs.false128
  %106 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string135 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %106, i32 0, i32 5
  %107 = load i8*, i8** %string135, align 4
  %arrayidx136 = getelementptr inbounds i8, i8* %107, i32 2
  %108 = load i8, i8* %arrayidx136, align 1
  %conv137 = sext i8 %108 to i32
  %cmp138 = icmp eq i32 %conv137, 0
  br i1 %cmp138, label %if.then140, label %if.end142

if.then140:                                       ; preds = %lor.lhs.false134, %lor.lhs.false128, %lor.lhs.false122, %land.lhs.true116, %lor.lhs.false134, %lor.lhs.false128, %lor.lhs.false122, %land.lhs.true116
  %109 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string141 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %109, i32 0, i32 5
  %110 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.12.42, i32 0, i32 0
  store i8* %110, i8** %string141, align 4
  br label %if.end142

if.end142:                                        ; preds = %if.then140, %lor.lhs.false134, %land.lhs.true110, %for.body104, %if.then140, %lor.lhs.false134, %land.lhs.true110, %for.body104
  br label %for.inc143

for.inc143:                                       ; preds = %if.end142, %if.end142
  %111 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next144 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %111, i32 0, i32 4
  %112 = load %struct.Connector_struct*, %struct.Connector_struct** %next144, align 4
  store %struct.Connector_struct* %112, %struct.Connector_struct** %c1, align 4
  br label %for.cond101

for.end145:                                       ; preds = %for.cond101, %for.cond101
  br label %for.inc146

for.inc146:                                       ; preds = %for.end145, %for.end145
  %113 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next147 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %113, i32 0, i32 0
  %114 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next147, align 4
  store %struct.Disjunct_struct* %114, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond58

for.end148:                                       ; preds = %for.cond58, %for.cond58
  br label %if.end240

if.else149:                                       ; preds = %for.end53, %for.end53
  %115 = load i8*, i8** %s.addr, align 4
  %116 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.13.43, i32 0, i32 0
  %call150 = call i32 @strcmp_Package(i8* %115, i8* %116)
  %cmp151 = icmp eq i32 %call150, 0
  br i1 %cmp151, label %if.then157, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %if.else149, %if.else149
  %117 = load i8*, i8** %s.addr, align 4
  %118 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.14.44, i32 0, i32 0
  %call154 = call i32 @strcmp_Package(i8* %117, i8* %118)
  %cmp155 = icmp eq i32 %call154, 0
  br i1 %cmp155, label %if.then157, label %if.end239

if.then157:                                       ; preds = %lor.lhs.false153, %if.else149, %lor.lhs.false153, %if.else149
  %119 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  store %struct.Disjunct_struct* %119, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond158

for.cond158:                                      ; preds = %for.inc236, %if.then157, %for.inc236, %if.then157
  %120 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp159 = icmp ne %struct.Disjunct_struct* %120, null
  br i1 %cmp159, label %for.body161, label %for.end238

for.body161:                                      ; preds = %for.cond158, %for.cond158
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right162 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %121, i32 0, i32 5
  %122 = load %struct.Connector_struct*, %struct.Connector_struct** %right162, align 4
  store %struct.Connector_struct* %122, %struct.Connector_struct** %c1, align 4
  br label %for.cond163

for.cond163:                                      ; preds = %for.inc193, %for.body161, %for.inc193, %for.body161
  %123 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp164 = icmp ne %struct.Connector_struct* %123, null
  br i1 %cmp164, label %for.body166, label %for.end195

for.body166:                                      ; preds = %for.cond163, %for.cond163
  %124 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string167 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %124, i32 0, i32 5
  %125 = load i8*, i8** %string167, align 4
  %arrayidx168 = getelementptr inbounds i8, i8* %125, i32 0
  %126 = load i8, i8* %arrayidx168, align 1
  %conv169 = sext i8 %126 to i32
  %cmp170 = icmp eq i32 %conv169, 83
  br i1 %cmp170, label %land.lhs.true172, label %if.end192

land.lhs.true172:                                 ; preds = %for.body166, %for.body166
  %127 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string173 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %127, i32 0, i32 5
  %128 = load i8*, i8** %string173, align 4
  %arrayidx174 = getelementptr inbounds i8, i8* %128, i32 1
  %129 = load i8, i8* %arrayidx174, align 1
  %conv175 = sext i8 %129 to i32
  %cmp176 = icmp eq i32 %conv175, 94
  br i1 %cmp176, label %if.then190, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %land.lhs.true172, %land.lhs.true172
  %130 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string179 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %130, i32 0, i32 5
  %131 = load i8*, i8** %string179, align 4
  %arrayidx180 = getelementptr inbounds i8, i8* %131, i32 1
  %132 = load i8, i8* %arrayidx180, align 1
  %conv181 = sext i8 %132 to i32
  %cmp182 = icmp eq i32 %conv181, 115
  br i1 %cmp182, label %if.then190, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %lor.lhs.false178, %lor.lhs.false178
  %133 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string185 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %133, i32 0, i32 5
  %134 = load i8*, i8** %string185, align 4
  %arrayidx186 = getelementptr inbounds i8, i8* %134, i32 1
  %135 = load i8, i8* %arrayidx186, align 1
  %conv187 = sext i8 %135 to i32
  %cmp188 = icmp eq i32 %conv187, 112
  br i1 %cmp188, label %if.then190, label %if.end192

if.then190:                                       ; preds = %lor.lhs.false184, %lor.lhs.false178, %land.lhs.true172, %lor.lhs.false184, %lor.lhs.false178, %land.lhs.true172
  %136 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string191 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %136, i32 0, i32 5
  %137 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.15.45, i32 0, i32 0
  store i8* %137, i8** %string191, align 4
  br label %if.end192

if.end192:                                        ; preds = %if.then190, %lor.lhs.false184, %for.body166, %if.then190, %lor.lhs.false184, %for.body166
  br label %for.inc193

for.inc193:                                       ; preds = %if.end192, %if.end192
  %138 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next194 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %138, i32 0, i32 4
  %139 = load %struct.Connector_struct*, %struct.Connector_struct** %next194, align 4
  store %struct.Connector_struct* %139, %struct.Connector_struct** %c1, align 4
  br label %for.cond163

for.end195:                                       ; preds = %for.cond163, %for.cond163
  %140 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left196 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %140, i32 0, i32 4
  %141 = load %struct.Connector_struct*, %struct.Connector_struct** %left196, align 4
  store %struct.Connector_struct* %141, %struct.Connector_struct** %c1, align 4
  br label %for.cond197

for.cond197:                                      ; preds = %for.inc233, %for.end195, %for.inc233, %for.end195
  %142 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp198 = icmp ne %struct.Connector_struct* %142, null
  br i1 %cmp198, label %for.body200, label %for.end235

for.body200:                                      ; preds = %for.cond197, %for.cond197
  %143 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string201 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %143, i32 0, i32 5
  %144 = load i8*, i8** %string201, align 4
  %arrayidx202 = getelementptr inbounds i8, i8* %144, i32 0
  %145 = load i8, i8* %arrayidx202, align 1
  %conv203 = sext i8 %145 to i32
  %cmp204 = icmp eq i32 %conv203, 83
  br i1 %cmp204, label %land.lhs.true206, label %if.end232

land.lhs.true206:                                 ; preds = %for.body200, %for.body200
  %146 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string207 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %146, i32 0, i32 5
  %147 = load i8*, i8** %string207, align 4
  %arrayidx208 = getelementptr inbounds i8, i8* %147, i32 1
  %148 = load i8, i8* %arrayidx208, align 1
  %conv209 = sext i8 %148 to i32
  %cmp210 = icmp eq i32 %conv209, 73
  br i1 %cmp210, label %land.lhs.true212, label %if.end232

land.lhs.true212:                                 ; preds = %land.lhs.true206, %land.lhs.true206
  %149 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string213 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %149, i32 0, i32 5
  %150 = load i8*, i8** %string213, align 4
  %arrayidx214 = getelementptr inbounds i8, i8* %150, i32 2
  %151 = load i8, i8* %arrayidx214, align 1
  %conv215 = sext i8 %151 to i32
  %cmp216 = icmp eq i32 %conv215, 94
  br i1 %cmp216, label %if.then230, label %lor.lhs.false218

lor.lhs.false218:                                 ; preds = %land.lhs.true212, %land.lhs.true212
  %152 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string219 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %152, i32 0, i32 5
  %153 = load i8*, i8** %string219, align 4
  %arrayidx220 = getelementptr inbounds i8, i8* %153, i32 2
  %154 = load i8, i8* %arrayidx220, align 1
  %conv221 = sext i8 %154 to i32
  %cmp222 = icmp eq i32 %conv221, 115
  br i1 %cmp222, label %if.then230, label %lor.lhs.false224

lor.lhs.false224:                                 ; preds = %lor.lhs.false218, %lor.lhs.false218
  %155 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string225 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %155, i32 0, i32 5
  %156 = load i8*, i8** %string225, align 4
  %arrayidx226 = getelementptr inbounds i8, i8* %156, i32 2
  %157 = load i8, i8* %arrayidx226, align 1
  %conv227 = sext i8 %157 to i32
  %cmp228 = icmp eq i32 %conv227, 112
  br i1 %cmp228, label %if.then230, label %if.end232

if.then230:                                       ; preds = %lor.lhs.false224, %lor.lhs.false218, %land.lhs.true212, %lor.lhs.false224, %lor.lhs.false218, %land.lhs.true212
  %158 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string231 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %158, i32 0, i32 5
  %159 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.16.46, i32 0, i32 0
  store i8* %159, i8** %string231, align 4
  br label %if.end232

if.end232:                                        ; preds = %if.then230, %lor.lhs.false224, %land.lhs.true206, %for.body200, %if.then230, %lor.lhs.false224, %land.lhs.true206, %for.body200
  br label %for.inc233

for.inc233:                                       ; preds = %if.end232, %if.end232
  %160 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next234 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %160, i32 0, i32 4
  %161 = load %struct.Connector_struct*, %struct.Connector_struct** %next234, align 4
  store %struct.Connector_struct* %161, %struct.Connector_struct** %c1, align 4
  br label %for.cond197

for.end235:                                       ; preds = %for.cond197, %for.cond197
  br label %for.inc236

for.inc236:                                       ; preds = %for.end235, %for.end235
  %162 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next237 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %162, i32 0, i32 0
  %163 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next237, align 4
  store %struct.Disjunct_struct* %163, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond158

for.end238:                                       ; preds = %for.cond158, %for.cond158
  br label %if.end239

if.end239:                                        ; preds = %for.end238, %lor.lhs.false153, %for.end238, %lor.lhs.false153
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %for.end148, %if.end239, %for.end148
  %164 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %164, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %164
}

; Function Attrs: noinline nounwind
define i32 @set_has_fat_down() #0 {
entry:
  %link = alloca i32, align 4
  %w = alloca i32, align 4
  %N_fat = alloca i32, align 4
  store i32 0, i32* %N_fat, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %2
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %w, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc20, %for.end, %for.inc20, %for.end
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end22

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 2
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 2
  %9 = load i8, i8* %priority, align 4
  %conv = sext i8 %9 to i32
  %cmp5 = icmp eq i32 %conv, 2
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %for.body3, %for.body3
  %10 = load i32, i32* %N_fat, align 4
  %inc7 = add nsw i32 %10, 1
  store i32 %inc7, i32* %N_fat, align 4
  %11 = load i32, i32* %link, align 4
  %12 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %12, i32 0, i32 %11
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 0
  %13 = load i32, i32* %l, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %13
  store i8 1, i8* %arrayidx9, align 1
  br label %if.end19

if.else:                                          ; preds = %for.body3, %for.body3
  %14 = load i32, i32* %link, align 4
  %15 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %15, i32 0, i32 %14
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx10, i32 0, i32 3
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %priority11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 2
  %17 = load i8, i8* %priority11, align 4
  %conv12 = sext i8 %17 to i32
  %cmp13 = icmp eq i32 %conv12, 2
  br i1 %cmp13, label %if.then15, label %if.end

if.then15:                                        ; preds = %if.else, %if.else
  %18 = load i32, i32* %N_fat, align 4
  %inc16 = add nsw i32 %18, 1
  store i32 %inc16, i32* %N_fat, align 4
  %19 = load i32, i32* %link, align 4
  %20 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %20, i32 0, i32 %19
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %21 = load i32, i32* %r, align 4
  %arrayidx18 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %21
  store i8 1, i8* %arrayidx18, align 1
  br label %if.end

if.end:                                           ; preds = %if.then15, %if.else, %if.then15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then, %if.end, %if.then
  br label %for.inc20

for.inc20:                                        ; preds = %if.end19, %if.end19
  %22 = load i32, i32* %link, align 4
  %inc21 = add nsw i32 %22, 1
  store i32 %inc21, i32* %link, align 4
  br label %for.cond1

for.end22:                                        ; preds = %for.cond1, %for.cond1
  %23 = load i32, i32* %N_fat, align 4
  %cmp23 = icmp sgt i32 %23, 0
  %conv24 = zext i1 %cmp23 to i32
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %conv24, i32* %struct.BigStruct_32
  ret i32 %conv24
}

; Function Attrs: noinline nounwind
define void @free_image_array() #0 {
entry:
  %w = alloca i32, align 4
  %in = alloca %struct.Image_node_struct*, align 4
  %inx = alloca %struct.Image_node_struct*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc4, %entry, %for.inc4, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %2
  %3 = load %struct.Image_node_struct*, %struct.Image_node_struct** %arrayidx, align 4
  store %struct.Image_node_struct* %3, %struct.Image_node_struct** %in, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %4 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %cmp2 = icmp ne %struct.Image_node_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %5 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %next = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %5, i32 0, i32 0
  %6 = load %struct.Image_node_struct*, %struct.Image_node_struct** %next, align 4
  store %struct.Image_node_struct* %6, %struct.Image_node_struct** %inx, align 4
  %7 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %8 = bitcast %struct.Image_node_struct* %7 to i8*
  call void @xfree(i8* %8, i32 12)
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %for.body3
  %9 = load %struct.Image_node_struct*, %struct.Image_node_struct** %inx, align 4
  store %struct.Image_node_struct* %9, %struct.Image_node_struct** %in, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  br label %for.inc4

for.inc4:                                         ; preds = %for.end, %for.end
  %10 = load i32, i32* %w, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end5:                                         ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @build_image_array() #0 {
entry:
  %link = alloca i32, align 4
  %end = alloca i32, align 4
  %word = alloca i32, align 4
  %this_end_con = alloca %struct.Connector_struct*, align 4
  %other_end_con = alloca %struct.Connector_struct*, align 4
  %upcon = alloca %struct.Connector_struct*, align 4
  %updiscon = alloca %struct.Connector_struct*, align 4
  %clist = alloca %struct.Connector_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %updis = alloca %struct.Disjunct_struct*, align 4
  %in = alloca %struct.Image_node_struct*, align 4
  store i32 0, i32* %word, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %word, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %word, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %2
  store %struct.Image_node_struct* null, %struct.Image_node_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %word, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %word, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 -1, i32* %end, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc116, %for.end, %for.inc116, %for.end
  %4 = load i32, i32* %end, align 4
  %cmp2 = icmp sle i32 %4, 1
  br i1 %cmp2, label %for.body3, label %for.end117

for.body3:                                        ; preds = %for.cond1, %for.cond1
  store i32 0, i32* %link, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc113, %for.body3, %for.inc113, %for.body3
  %5 = load i32, i32* %link, align 4
  %6 = load i32, i32* @N_links, align 4
  %cmp5 = icmp slt i32 %5, %6
  br i1 %cmp5, label %for.body6, label %for.end115

for.body6:                                        ; preds = %for.cond4, %for.cond4
  %7 = load i32, i32* %end, align 4
  %cmp7 = icmp slt i32 %7, 0
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %for.body6, %for.body6
  %8 = load i32, i32* %link, align 4
  %9 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %9, i32 0, i32 %8
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 0
  %10 = load i32, i32* %l, align 4
  store i32 %10, i32* %word, align 4
  %11 = load i32, i32* %word, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %11
  %12 = load i8, i8* %arrayidx9, align 1
  %tobool = icmp ne i8 %12, 0
  br i1 %tobool, label %if.end, label %if.then10

if.then10:                                        ; preds = %if.then, %if.then
  br label %for.inc113

if.end:                                           ; preds = %if.then, %if.then
  %13 = load i32, i32* %link, align 4
  %14 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx11 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %14, i32 0, i32 %13
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx11, i32 0, i32 2
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %this_end_con, align 4
  %16 = load i32, i32* %link, align 4
  %17 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx12 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %17, i32 0, i32 %16
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx12, i32 0, i32 3
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %other_end_con, align 4
  %19 = load i32, i32* %word, align 4
  %20 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %20, i32 0, i32 %19
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx13, align 4
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %dis, align 4
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 5
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %23, %struct.Connector_struct** %clist, align 4
  br label %if.end24

if.else:                                          ; preds = %for.body6, %for.body6
  %24 = load i32, i32* %link, align 4
  %25 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx14 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %25, i32 0, i32 %24
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx14, i32 0, i32 1
  %26 = load i32, i32* %r, align 4
  store i32 %26, i32* %word, align 4
  %27 = load i32, i32* %word, align 4
  %arrayidx15 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %27
  %28 = load i8, i8* %arrayidx15, align 1
  %tobool16 = icmp ne i8 %28, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.else, %if.else
  br label %for.inc113

if.end18:                                         ; preds = %if.else, %if.else
  %29 = load i32, i32* %link, align 4
  %30 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %30, i32 0, i32 %29
  %rc20 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx19, i32 0, i32 3
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %rc20, align 4
  store %struct.Connector_struct* %31, %struct.Connector_struct** %this_end_con, align 4
  %32 = load i32, i32* %link, align 4
  %33 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx21 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %33, i32 0, i32 %32
  %lc22 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx21, i32 0, i32 2
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %lc22, align 4
  store %struct.Connector_struct* %34, %struct.Connector_struct** %other_end_con, align 4
  %35 = load i32, i32* %word, align 4
  %36 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %36, i32 0, i32 %35
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx23, align 4
  store %struct.Disjunct_struct* %37, %struct.Disjunct_struct** %dis, align 4
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %38, i32 0, i32 4
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %39, %struct.Connector_struct** %clist, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.end18, %if.end, %if.end18, %if.end
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %40, i32 0, i32 2
  %41 = load i8, i8* %priority, align 4
  %conv = sext i8 %41 to i32
  %cmp25 = icmp eq i32 %conv, 2
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end24, %if.end24
  br label %for.inc113

if.end28:                                         ; preds = %if.end24, %if.end24
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 0
  %43 = load i16, i16* %label, align 4
  %conv29 = sext i16 %43 to i32
  %cmp30 = icmp ne i32 %conv29, -1
  br i1 %cmp30, label %land.lhs.true, label %if.end37

land.lhs.true:                                    ; preds = %if.end28, %if.end28
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %label32 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %44, i32 0, i32 0
  %45 = load i16, i16* %label32, align 4
  %conv33 = sext i16 %45 to i32
  %cmp34 = icmp slt i32 %conv33, 0
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %land.lhs.true, %land.lhs.true
  br label %for.inc113

if.end37:                                         ; preds = %land.lhs.true, %if.end28, %land.lhs.true, %if.end28
  %call = call i8* @xalloc(i32 12)
  %46 = bitcast i8* %call to %struct.Image_node_struct*
  store %struct.Image_node_struct* %46, %struct.Image_node_struct** %in, align 4
  %47 = load i32, i32* %word, align 4
  %arrayidx38 = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %47
  %48 = load %struct.Image_node_struct*, %struct.Image_node_struct** %arrayidx38, align 4
  %49 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %next = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %49, i32 0, i32 0
  store %struct.Image_node_struct* %48, %struct.Image_node_struct** %next, align 4
  %50 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %51 = load i32, i32* %word, align 4
  %arrayidx39 = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %51
  store %struct.Image_node_struct* %50, %struct.Image_node_struct** %arrayidx39, align 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %other_end_con, align 4
  %53 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %53, i32 0, i32 1
  store %struct.Connector_struct* %52, %struct.Connector_struct** %c, align 4
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %priority40 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %54, i32 0, i32 2
  %55 = load i8, i8* %priority40, align 4
  %conv41 = sext i8 %55 to i32
  %cmp42 = icmp eq i32 %conv41, 1
  br i1 %cmp42, label %if.then44, label %if.else45

if.then44:                                        ; preds = %if.end37, %if.end37
  %56 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %56, i32 0, i32 2
  store i32 0, i32* %place, align 4
  br label %if.end112

if.else45:                                        ; preds = %if.end37, %if.end37
  %57 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place46 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %57, i32 0, i32 2
  store i32 1, i32* %place46, align 4
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left47 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %58, i32 0, i32 4
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %left47, align 4
  %cmp48 = icmp ne %struct.Connector_struct* %59, null
  br i1 %cmp48, label %land.lhs.true50, label %if.else58

land.lhs.true50:                                  ; preds = %if.else45, %if.else45
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left51 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %60, i32 0, i32 4
  %61 = load %struct.Connector_struct*, %struct.Connector_struct** %left51, align 4
  %priority52 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %61, i32 0, i32 2
  %62 = load i8, i8* %priority52, align 4
  %conv53 = sext i8 %62 to i32
  %cmp54 = icmp eq i32 %conv53, 1
  br i1 %cmp54, label %if.then56, label %if.else58

if.then56:                                        ; preds = %land.lhs.true50, %land.lhs.true50
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left57 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %63, i32 0, i32 4
  %64 = load %struct.Connector_struct*, %struct.Connector_struct** %left57, align 4
  store %struct.Connector_struct* %64, %struct.Connector_struct** %upcon, align 4
  br label %if.end72

if.else58:                                        ; preds = %land.lhs.true50, %if.else45, %land.lhs.true50, %if.else45
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right59 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %65, i32 0, i32 5
  %66 = load %struct.Connector_struct*, %struct.Connector_struct** %right59, align 4
  %cmp60 = icmp ne %struct.Connector_struct* %66, null
  br i1 %cmp60, label %land.lhs.true62, label %if.else70

land.lhs.true62:                                  ; preds = %if.else58, %if.else58
  %67 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right63 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %67, i32 0, i32 5
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %right63, align 4
  %priority64 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %68, i32 0, i32 2
  %69 = load i8, i8* %priority64, align 4
  %conv65 = sext i8 %69 to i32
  %cmp66 = icmp eq i32 %conv65, 1
  br i1 %cmp66, label %if.then68, label %if.else70

if.then68:                                        ; preds = %land.lhs.true62, %land.lhs.true62
  %70 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %70, i32 0, i32 5
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %right69, align 4
  store %struct.Connector_struct* %71, %struct.Connector_struct** %upcon, align 4
  br label %if.end71

if.else70:                                        ; preds = %land.lhs.true62, %if.else58, %land.lhs.true62, %if.else58
  store %struct.Connector_struct* null, %struct.Connector_struct** %upcon, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.else70, %if.then68, %if.else70, %if.then68
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then56, %if.end71, %if.then56
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %cmp73 = icmp ne %struct.Connector_struct* %72, null
  br i1 %cmp73, label %if.then75, label %if.end94

if.then75:                                        ; preds = %if.end72, %if.end72
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label76 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %73, i32 0, i32 0
  %74 = load i16, i16* %label76, align 4
  %idxprom = sext i16 %74 to i32
  %75 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx77 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %75, i32 %idxprom
  %76 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx77, align 4
  store %struct.Disjunct_struct* %76, %struct.Disjunct_struct** %updis, align 4
  %77 = load i32, i32* %end, align 4
  %cmp78 = icmp sgt i32 %77, 0
  br i1 %cmp78, label %if.then80, label %if.else82

if.then80:                                        ; preds = %if.then75, %if.then75
  %78 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %left81 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %78, i32 0, i32 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %left81, align 4
  store %struct.Connector_struct* %79, %struct.Connector_struct** %updiscon, align 4
  br label %if.end84

if.else82:                                        ; preds = %if.then75, %if.then75
  %80 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %right83 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %80, i32 0, i32 5
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %right83, align 4
  store %struct.Connector_struct* %81, %struct.Connector_struct** %updiscon, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.then80, %if.else82, %if.then80
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc91, %if.end84, %for.inc91, %if.end84
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %cmp86 = icmp ne %struct.Connector_struct* %82, null
  br i1 %cmp86, label %for.body88, label %for.end93

for.body88:                                       ; preds = %for.cond85, %for.cond85
  %83 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place89 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %83, i32 0, i32 2
  %84 = load i32, i32* %place89, align 4
  %inc90 = add nsw i32 %84, 1
  store i32 %inc90, i32* %place89, align 4
  br label %for.inc91

for.inc91:                                        ; preds = %for.body88, %for.body88
  %85 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %next92 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %85, i32 0, i32 4
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %next92, align 4
  store %struct.Connector_struct* %86, %struct.Connector_struct** %updiscon, align 4
  br label %for.cond85

for.end93:                                        ; preds = %for.cond85, %for.cond85
  br label %if.end94

if.end94:                                         ; preds = %for.end93, %if.end72, %for.end93, %if.end72
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc107, %if.end94, %for.inc107, %if.end94
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %cmp96 = icmp ne %struct.Connector_struct* %87, %88
  br i1 %cmp96, label %for.body98, label %for.end109

for.body98:                                       ; preds = %for.cond95, %for.cond95
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %label99 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %89, i32 0, i32 0
  %90 = load i16, i16* %label99, align 4
  %conv100 = sext i16 %90 to i32
  %cmp101 = icmp slt i32 %conv100, 0
  br i1 %cmp101, label %if.then103, label %if.end106

if.then103:                                       ; preds = %for.body98, %for.body98
  %91 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place104 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %91, i32 0, i32 2
  %92 = load i32, i32* %place104, align 4
  %inc105 = add nsw i32 %92, 1
  store i32 %inc105, i32* %place104, align 4
  br label %if.end106

if.end106:                                        ; preds = %if.then103, %for.body98, %if.then103, %for.body98
  br label %for.inc107

for.inc107:                                       ; preds = %if.end106, %if.end106
  %93 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %next108 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %93, i32 0, i32 4
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %next108, align 4
  store %struct.Connector_struct* %94, %struct.Connector_struct** %clist, align 4
  br label %for.cond95

for.end109:                                       ; preds = %for.cond95, %for.cond95
  %95 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place110 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %95, i32 0, i32 2
  %96 = load i32, i32* %place110, align 4
  %97 = load i32, i32* %end, align 4
  %sub = sub nsw i32 0, %97
  %mul = mul nsw i32 %96, %sub
  %98 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place111 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %98, i32 0, i32 2
  store i32 %mul, i32* %place111, align 4
  br label %if.end112

if.end112:                                        ; preds = %for.end109, %if.then44, %for.end109, %if.then44
  br label %for.inc113

for.inc113:                                       ; preds = %if.end112, %if.then36, %if.then27, %if.then17, %if.then10, %if.end112, %if.then36, %if.then27, %if.then17, %if.then10
  %99 = load i32, i32* %link, align 4
  %inc114 = add nsw i32 %99, 1
  store i32 %inc114, i32* %link, align 4
  br label %for.cond4

for.end115:                                       ; preds = %for.cond4, %for.cond4
  br label %for.inc116

for.inc116:                                       ; preds = %for.end115, %for.end115
  %100 = load i32, i32* %end, align 4
  %add = add nsw i32 %100, 2
  store i32 %add, i32* %end, align 4
  br label %for.cond1

for.end117:                                       ; preds = %for.cond1, %for.cond1
  ret void
}

; Function Attrs: noinline nounwind
define i32 @strictly_smaller(i8* %s, i8* %t) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %strictness = alloca i32, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %strictness, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond, %for.cond
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond, %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; preds = %land.end, %land.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv5 = sext i8 %6 to i32
  %7 = load i8*, i8** %t.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv6 = sext i8 %8 to i32
  %cmp7 = icmp eq i32 %conv5, %conv6
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body, %for.body
  %9 = load i8*, i8** %t.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv9, 42
  br i1 %cmp10, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end, %if.end
  %11 = load i8*, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv12 = sext i8 %12 to i32
  %cmp13 = icmp eq i32 %conv12, 94
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %lor.lhs.false, %if.end, %lor.lhs.false, %if.end
  %13 = load i32, i32* %strictness, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %strictness, align 4
  br label %if.end16

if.else:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  store i32 0, i32* %retval, align 4
  br label %return

if.end16:                                         ; preds = %if.then15, %if.then15
  br label %for.inc

for.inc:                                          ; preds = %if.end16, %if.then, %if.end16, %if.then
  %14 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %15 = load i8*, i8** %t.addr, align 4
  %incdec.ptr17 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr17, i8** %t.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end, %land.end
  %16 = load i8*, i8** %s.addr, align 4
  %17 = load i8, i8* %16, align 1
  %conv18 = sext i8 %17 to i32
  %cmp19 = icmp ne i32 %conv18, 0
  br i1 %cmp19, label %if.then25, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %for.end, %for.end
  %18 = load i8*, i8** %t.addr, align 4
  %19 = load i8, i8* %18, align 1
  %conv22 = sext i8 %19 to i32
  %cmp23 = icmp ne i32 %conv22, 0
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %lor.lhs.false21, %for.end, %lor.lhs.false21, %for.end
  %20 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.18.47, i32 0, i32 0
  %21 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.17.48, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %20, i8* %21)
  call void @exit_Package(i32 1) #5
  unreachable

if.end26:                                         ; preds = %lor.lhs.false21, %lor.lhs.false21
  %22 = load i32, i32* %strictness, align 4
  %cmp27 = icmp sgt i32 %22, 0
  %conv28 = zext i1 %cmp27 to i32
  store i32 %conv28, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.else, %if.end26, %if.else
  %23 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %23, i32* %struct.BigStruct_32
  ret i32 %23
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @find_subdisjunct(%struct.Disjunct_struct* %dis, i32 %label) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %label.addr = alloca i32, align 4
  %dis.addr = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %cx = alloca %struct.Connector_struct*, align 4
  %cy = alloca %struct.Connector_struct*, align 4
  store i32 %load_struct.BigStruct_5, i32* %label.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %dis.addr, align 4
  %0 = load i32, i32* %label.addr, align 4
  %1 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %1, i32 %0
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc43, %entry, %for.inc43, %entry
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end45

for.body:                                         ; preds = %for.cond, %for.cond
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %cx, align 4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %left1, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %cy, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp3 = icmp ne %struct.Connector_struct* %8, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 5
  %10 = load i8*, i8** %string, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %string5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 5
  %12 = load i8*, i8** %string5, align 4
  %call = call i32 @strcmp_Package(i8* %12, i8* %10)
  %cmp6 = icmp ne i32 %call, 0
  br i1 %cmp6, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body4, %for.body4
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 3
  %14 = load i8, i8* %multi, align 1
  %conv = sext i8 %14 to i32
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %multi7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %15, i32 0, i32 3
  %16 = load i8, i8* %multi7, align 1
  %conv8 = sext i8 %16 to i32
  %cmp9 = icmp ne i32 %conv, %conv8
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body4, %lor.lhs.false, %for.body4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false, %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %cx, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %next11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %next11, align 4
  store %struct.Connector_struct* %20, %struct.Connector_struct** %cy, align 4
  br label %for.cond2

for.end:                                          ; preds = %if.then, %for.cond2, %if.then, %for.cond2
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %21, null
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %for.end, %for.end
  br label %for.inc43

if.end15:                                         ; preds = %for.end, %for.end
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 5
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %23, %struct.Connector_struct** %cx, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis.addr, align 4
  %right16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 5
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %right16, align 4
  store %struct.Connector_struct* %25, %struct.Connector_struct** %cy, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc35, %if.end15, %for.inc35, %if.end15
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp18 = icmp ne %struct.Connector_struct* %26, null
  br i1 %cmp18, label %for.body20, label %for.end38

for.body20:                                       ; preds = %for.cond17, %for.cond17
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %string21 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 5
  %28 = load i8*, i8** %string21, align 4
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %string22 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %29, i32 0, i32 5
  %30 = load i8*, i8** %string22, align 4
  %call23 = call i32 @strcmp_Package(i8* %30, i8* %28)
  %cmp24 = icmp ne i32 %call23, 0
  br i1 %cmp24, label %if.then33, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %for.body20, %for.body20
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %multi27 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %31, i32 0, i32 3
  %32 = load i8, i8* %multi27, align 1
  %conv28 = sext i8 %32 to i32
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %multi29 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %33, i32 0, i32 3
  %34 = load i8, i8* %multi29, align 1
  %conv30 = sext i8 %34 to i32
  %cmp31 = icmp ne i32 %conv28, %conv30
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %lor.lhs.false26, %for.body20, %lor.lhs.false26, %for.body20
  br label %for.end38

if.end34:                                         ; preds = %lor.lhs.false26, %lor.lhs.false26
  br label %for.inc35

for.inc35:                                        ; preds = %if.end34, %if.end34
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %next36 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %35, i32 0, i32 4
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %next36, align 4
  store %struct.Connector_struct* %36, %struct.Connector_struct** %cx, align 4
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %next37 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 4
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %next37, align 4
  store %struct.Connector_struct* %38, %struct.Connector_struct** %cy, align 4
  br label %for.cond17

for.end38:                                        ; preds = %if.then33, %for.cond17, %if.then33, %for.cond17
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp39 = icmp eq %struct.Connector_struct* %39, null
  br i1 %cmp39, label %if.then41, label %if.end42

if.then41:                                        ; preds = %for.end38, %for.end38
  br label %for.end45

if.end42:                                         ; preds = %for.end38, %for.end38
  br label %for.inc43

for.inc43:                                        ; preds = %if.end42, %if.then14, %if.end42, %if.then14
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next44 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %40, i32 0, i32 0
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next44, align 4
  store %struct.Disjunct_struct* %41, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.end45:                                        ; preds = %if.then41, %for.cond, %if.then41, %for.cond
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp46 = icmp ne %struct.Disjunct_struct* %42, null
  br i1 %cmp46, label %if.end50, label %if.then48

if.then48:                                        ; preds = %for.end45, %for.end45
  %43 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.20.49, i32 0, i32 0
  %44 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.19.50, i32 0, i32 0
  %call49 = call i32 (i8*, ...) @printf(i8* %43, i8* %44)
  call void @exit_Package(i32 1) #5
  unreachable

if.end50:                                         ; preds = %for.end45, %for.end45
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %45, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %45
}

; Function Attrs: noinline nounwind
define i32 @is_canonical_linkage() #0 {
entry:
  %w = alloca i32, align 4
  %d_label = alloca i32, align 4
  %place = alloca i32, align 4
  %d_c = alloca %struct.Connector_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %dummy_connector = alloca %struct.Connector_struct, align 4
  %upcon = alloca %struct.Connector_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %chosen_d = alloca %struct.Disjunct_struct*, align 4
  %in = alloca %struct.Image_node_struct*, align 4
  store i32 0, i32* %d_label, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 2
  store i8 1, i8* %priority, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 66, i32 0)
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc130, %entry, %for.inc130, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end132

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc130

if.end:                                           ; preds = %for.body, %for.body
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %5, i32 0, i32 %4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx1, align 4
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %chosen_d, align 4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %8, %struct.Connector_struct** %d_c, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %if.end, %for.inc, %if.end
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %cmp3 = icmp ne %struct.Connector_struct* %9, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %priority5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 2
  %11 = load i8, i8* %priority5, align 4
  %conv = sext i8 %11 to i32
  %cmp6 = icmp eq i32 %conv, 2
  br i1 %cmp6, label %if.then8, label %if.end10

if.then8:                                         ; preds = %for.body4, %for.body4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 0
  %13 = load i16, i16* %label, align 4
  %conv9 = sext i16 %13 to i32
  store i32 %conv9, i32* %d_label, align 4
  br label %for.end

if.end10:                                         ; preds = %for.body4, %for.body4
  br label %for.inc

for.inc:                                          ; preds = %if.end10, %if.end10
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %d_c, align 4
  br label %for.cond2

for.end:                                          ; preds = %if.then8, %for.cond2, %if.then8, %for.cond2
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %cmp11 = icmp ne %struct.Connector_struct* %16, null
  br i1 %cmp11, label %if.end14, label %if.then13

if.then13:                                        ; preds = %for.end, %for.end
  %17 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.22.51, i32 0, i32 0
  %18 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.21.52, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %17, i8* %18)
  call void @exit_Package(i32 1) #5
  unreachable

if.end14:                                         ; preds = %for.end, %for.end
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left15 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %left15, align 4
  %cmp16 = icmp ne %struct.Connector_struct* %20, null
  br i1 %cmp16, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end14, %if.end14
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 4
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %left18, align 4
  %priority19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 2
  %23 = load i8, i8* %priority19, align 4
  %conv20 = sext i8 %23 to i32
  %cmp21 = icmp eq i32 %conv20, 1
  br i1 %cmp21, label %if.then23, label %if.else

if.then23:                                        ; preds = %land.lhs.true, %land.lhs.true
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left24 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %left24, align 4
  store %struct.Connector_struct* %25, %struct.Connector_struct** %upcon, align 4
  br label %if.end37

if.else:                                          ; preds = %land.lhs.true, %if.end14, %land.lhs.true, %if.end14
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 5
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp25 = icmp ne %struct.Connector_struct* %27, null
  br i1 %cmp25, label %land.lhs.true27, label %if.else35

land.lhs.true27:                                  ; preds = %if.else, %if.else
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %right28 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %28, i32 0, i32 5
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %right28, align 4
  %priority29 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %29, i32 0, i32 2
  %30 = load i8, i8* %priority29, align 4
  %conv30 = sext i8 %30 to i32
  %cmp31 = icmp eq i32 %conv30, 1
  br i1 %cmp31, label %if.then33, label %if.else35

if.then33:                                        ; preds = %land.lhs.true27, %land.lhs.true27
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %right34 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 5
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %right34, align 4
  store %struct.Connector_struct* %32, %struct.Connector_struct** %upcon, align 4
  br label %if.end36

if.else35:                                        ; preds = %land.lhs.true27, %if.else, %land.lhs.true27, %if.else
  store %struct.Connector_struct* null, %struct.Connector_struct** %upcon, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.then33, %if.else35, %if.then33
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then23, %if.end36, %if.then23
  %33 = load i32, i32* %d_label, align 4
  %34 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx38 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %34, i32 %33
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx38, align 4
  store %struct.Disjunct_struct* %35, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond39

for.cond39:                                       ; preds = %for.inc123, %if.end37, %for.inc123, %if.end37
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp40 = icmp ne %struct.Disjunct_struct* %36, null
  br i1 %cmp40, label %for.body42, label %for.end125

for.body42:                                       ; preds = %for.cond39, %for.cond39
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 5
  %38 = load i8*, i8** %string, align 4
  %39 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %string43 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %39, i32 0, i32 3
  %40 = load i8*, i8** %string43, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %40, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %38, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 8, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool45 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; preds = %for.body42, %for.body42
  br label %for.inc123

if.end47:                                         ; preds = %for.body42, %for.body42
  %41 = load i32, i32* %w, align 4
  %arrayidx48 = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %41
  %42 = load %struct.Image_node_struct*, %struct.Image_node_struct** %arrayidx48, align 4
  store %struct.Image_node_struct* %42, %struct.Image_node_struct** %in, align 4
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc116, %if.end47, %for.inc116, %if.end47
  %43 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %cmp50 = icmp ne %struct.Image_node_struct* %43, null
  br i1 %cmp50, label %for.body52, label %for.end118

for.body52:                                       ; preds = %for.cond49, %for.cond49
  %44 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place53 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %44, i32 0, i32 2
  %45 = load i32, i32* %place53, align 4
  store i32 %45, i32* %place, align 4
  %46 = load i32, i32* %place, align 4
  %cmp54 = icmp eq i32 %46, 0
  br i1 %cmp54, label %if.then56, label %if.else83

if.then56:                                        ; preds = %for.body52, %for.body52
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %cmp57 = icmp ne %struct.Connector_struct* %47, null
  br i1 %cmp57, label %if.end61, label %if.then59

if.then59:                                        ; preds = %if.then56, %if.then56
  %48 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.24.53, i32 0, i32 0
  %49 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.23.54, i32 0, i32 0
  %call60 = call i32 (i8*, ...) @printf(i8* %48, i8* %49)
  call void @exit_Package(i32 1) #5
  unreachable

if.end61:                                         ; preds = %if.then56, %if.then56
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label62 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %50, i32 0, i32 0
  %51 = load i16, i16* %label62, align 4
  %label63 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 0
  store i16 %51, i16* %label63, align 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label64 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %52, i32 0, i32 0
  %53 = load i16, i16* %label64, align 4
  %conv65 = sext i16 %53 to i32
  %54 = load i32, i32* %d_label, align 4
  %cmp66 = icmp eq i32 %conv65, %54
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.end61, %if.end61
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %string69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %55, i32 0, i32 3
  %56 = load i8*, i8** %string69, align 4
  %string70 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 5
  store i8* %56, i8** %string70, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.end61, %if.end61
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label72 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %57, i32 0, i32 0
  %58 = load i16, i16* %label72, align 4
  %conv73 = sext i16 %58 to i32
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %59, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %conv73, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 2, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %string75 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %load_struct.BigStruct_33, i32 0, i32 3
  %60 = load i8*, i8** %string75, align 4
  %string76 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 5
  store i8* %60, i8** %string76, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.else71, %if.then68, %if.else71, %if.then68
  %61 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c78 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %61, i32 0, i32 1
  %62 = load %struct.Connector_struct*, %struct.Connector_struct** %c78, align 4
  %call79 = call i32 @match(%struct.Connector_struct* %dummy_connector, %struct.Connector_struct* %62)
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.end82, label %if.then81

if.then81:                                        ; preds = %if.end77, %if.end77
  br label %for.end118

if.end82:                                         ; preds = %if.end77, %if.end77
  br label %if.end115

if.else83:                                        ; preds = %for.body52, %for.body52
  %63 = load i32, i32* %place, align 4
  %cmp84 = icmp sgt i32 %63, 0
  br i1 %cmp84, label %if.then86, label %if.else100

if.then86:                                        ; preds = %if.else83, %if.else83
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right87 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %64, i32 0, i32 5
  %65 = load %struct.Connector_struct*, %struct.Connector_struct** %right87, align 4
  store %struct.Connector_struct* %65, %struct.Connector_struct** %c, align 4
  br label %for.cond88

for.cond88:                                       ; preds = %for.inc93, %if.then86, %for.inc93, %if.then86
  %66 = load i32, i32* %place, align 4
  %cmp89 = icmp sgt i32 %66, 1
  br i1 %cmp89, label %for.body91, label %for.end94

for.body91:                                       ; preds = %for.cond88, %for.cond88
  %67 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next92 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %67, i32 0, i32 4
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %next92, align 4
  store %struct.Connector_struct* %68, %struct.Connector_struct** %c, align 4
  br label %for.inc93

for.inc93:                                        ; preds = %for.body91, %for.body91
  %69 = load i32, i32* %place, align 4
  %dec = add nsw i32 %69, -1
  store i32 %dec, i32* %place, align 4
  br label %for.cond88

for.end94:                                        ; preds = %for.cond88, %for.cond88
  %70 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c95 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %70, i32 0, i32 1
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %c95, align 4
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %call96 = call i32 @match(%struct.Connector_struct* %72, %struct.Connector_struct* %71)
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %if.end99, label %if.then98

if.then98:                                        ; preds = %for.end94, %for.end94
  br label %for.end118

if.end99:                                         ; preds = %for.end94, %for.end94
  br label %if.end114

if.else100:                                       ; preds = %if.else83, %if.else83
  %73 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left101 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %73, i32 0, i32 4
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %left101, align 4
  store %struct.Connector_struct* %74, %struct.Connector_struct** %c, align 4
  br label %for.cond102

for.cond102:                                      ; preds = %for.inc107, %if.else100, %for.inc107, %if.else100
  %75 = load i32, i32* %place, align 4
  %cmp103 = icmp slt i32 %75, -1
  br i1 %cmp103, label %for.body105, label %for.end108

for.body105:                                      ; preds = %for.cond102, %for.cond102
  %76 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next106 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %76, i32 0, i32 4
  %77 = load %struct.Connector_struct*, %struct.Connector_struct** %next106, align 4
  store %struct.Connector_struct* %77, %struct.Connector_struct** %c, align 4
  br label %for.inc107

for.inc107:                                       ; preds = %for.body105, %for.body105
  %78 = load i32, i32* %place, align 4
  %inc = add nsw i32 %78, 1
  store i32 %inc, i32* %place, align 4
  br label %for.cond102

for.end108:                                       ; preds = %for.cond102, %for.cond102
  %79 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c109 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %79, i32 0, i32 1
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %c109, align 4
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %call110 = call i32 @match(%struct.Connector_struct* %81, %struct.Connector_struct* %80)
  %tobool111 = icmp ne i32 %call110, 0
  br i1 %tobool111, label %if.end113, label %if.then112

if.then112:                                       ; preds = %for.end108, %for.end108
  br label %for.end118

if.end113:                                        ; preds = %for.end108, %for.end108
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end99, %if.end113, %if.end99
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end82, %if.end114, %if.end82
  br label %for.inc116

for.inc116:                                       ; preds = %if.end115, %if.end115
  %82 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %next117 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %82, i32 0, i32 0
  %83 = load %struct.Image_node_struct*, %struct.Image_node_struct** %next117, align 4
  store %struct.Image_node_struct* %83, %struct.Image_node_struct** %in, align 4
  br label %for.cond49

for.end118:                                       ; preds = %if.then112, %if.then98, %if.then81, %for.cond49, %if.then112, %if.then98, %if.then81, %for.cond49
  %84 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %cmp119 = icmp eq %struct.Image_node_struct* %84, null
  br i1 %cmp119, label %if.then121, label %if.end122

if.then121:                                       ; preds = %for.end118, %for.end118
  br label %for.end125

if.end122:                                        ; preds = %for.end118, %for.end118
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122, %if.then46, %if.end122, %if.then46
  %85 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next124 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %85, i32 0, i32 0
  %86 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next124, align 4
  store %struct.Disjunct_struct* %86, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond39

for.end125:                                       ; preds = %if.then121, %for.cond39, %if.then121, %for.cond39
  %87 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp126 = icmp ne %struct.Disjunct_struct* %87, null
  br i1 %cmp126, label %if.then128, label %if.end129

if.then128:                                       ; preds = %for.end125, %for.end125
  br label %for.end132

if.end129:                                        ; preds = %for.end125, %for.end125
  br label %for.inc130

for.inc130:                                       ; preds = %if.end129, %if.then, %if.end129, %if.then
  %88 = load i32, i32* %w, align 4
  %inc131 = add nsw i32 %88, 1
  store i32 %inc131, i32* %w, align 4
  br label %for.cond

for.end132:                                       ; preds = %if.then128, %for.cond, %if.then128, %for.cond
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 31, i32 0)
  %89 = load i32, i32* %w, align 4
  %90 = load i32, i32* @N_words, align 4
  %cmp133 = icmp eq i32 %89, %90
  %conv134 = zext i1 %cmp133 to i32
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %conv134, i32* %struct.BigStruct_321
  ret i32 %conv134
}

; Function Attrs: noinline nounwind
define void @compute_pp_link_array_connectors() #0 {
entry:
  %link = alloca i32, align 4
  %end = alloca i32, align 4
  %word = alloca i32, align 4
  %place = alloca i32, align 4
  %this_end_con = alloca %struct.Connector_struct*, align 4
  %upcon = alloca %struct.Connector_struct*, align 4
  %updiscon = alloca %struct.Connector_struct*, align 4
  %clist = alloca %struct.Connector_struct*, align 4
  %con = alloca %struct.Connector_struct*, align 4
  %mycon = alloca %struct.Connector_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %updis = alloca %struct.Disjunct_struct*, align 4
  %mydis = alloca %struct.Disjunct_struct*, align 4
  store i32 -1, i32* %end, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc173, %entry, %for.inc173, %entry
  %0 = load i32, i32* %end, align 4
  %cmp = icmp sle i32 %0, 1
  br i1 %cmp, label %for.body, label %for.end174

for.body:                                         ; preds = %for.cond, %for.cond
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc170, %for.body, %for.inc170, %for.body
  %1 = load i32, i32* %link, align 4
  %2 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %1, %2
  br i1 %cmp2, label %for.body3, label %for.end172

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %3 = load i32, i32* %link, align 4
  %4 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %4, i32 0, i32 %3
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %5 = load i32, i32* %l, align 4
  %cmp4 = icmp eq i32 %5, -1
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3, %for.body3
  br label %for.inc170

if.end:                                           ; preds = %for.body3, %for.body3
  %6 = load i32, i32* %end, align 4
  %cmp5 = icmp slt i32 %6, 0
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end, %if.end
  %7 = load i32, i32* %link, align 4
  %8 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx7 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %8, i32 0, i32 %7
  %l8 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx7, i32 0, i32 0
  %9 = load i32, i32* %l8, align 4
  store i32 %9, i32* %word, align 4
  %10 = load i32, i32* %word, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %10
  %11 = load i8, i8* %arrayidx9, align 1
  %tobool = icmp ne i8 %11, 0
  br i1 %tobool, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.then6, %if.then6
  br label %for.inc170

if.end11:                                         ; preds = %if.then6, %if.then6
  %12 = load i32, i32* %link, align 4
  %13 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx12 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %13, i32 0, i32 %12
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx12, i32 0, i32 2
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %this_end_con, align 4
  %15 = load i32, i32* %word, align 4
  %16 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %16, i32 0, i32 %15
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx13, align 4
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %dis, align 4
  %18 = load i32, i32* %link, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx14 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %l15 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx14, i32 0, i32 0
  %20 = load i32, i32* %l15, align 4
  %21 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx16 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %21, i32 0, i32 %20
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx16, align 4
  store %struct.Disjunct_struct* %22, %struct.Disjunct_struct** %mydis, align 4
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %23, i32 0, i32 5
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %clist, align 4
  br label %if.end27

if.else:                                          ; preds = %if.end, %if.end
  %25 = load i32, i32* %link, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %27 = load i32, i32* %r, align 4
  store i32 %27, i32* %word, align 4
  %28 = load i32, i32* %word, align 4
  %arrayidx18 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %28
  %29 = load i8, i8* %arrayidx18, align 1
  %tobool19 = icmp ne i8 %29, 0
  br i1 %tobool19, label %if.end21, label %if.then20

if.then20:                                        ; preds = %if.else, %if.else
  br label %for.inc170

if.end21:                                         ; preds = %if.else, %if.else
  %30 = load i32, i32* %link, align 4
  %31 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %31, i32 0, i32 %30
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 3
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  store %struct.Connector_struct* %32, %struct.Connector_struct** %this_end_con, align 4
  %33 = load i32, i32* %word, align 4
  %34 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %34, i32 0, i32 %33
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx23, align 4
  store %struct.Disjunct_struct* %35, %struct.Disjunct_struct** %dis, align 4
  %36 = load i32, i32* %link, align 4
  %37 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx24 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %37, i32 0, i32 %36
  %r25 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 1
  %38 = load i32, i32* %r25, align 4
  %39 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx26 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %39, i32 0, i32 %38
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx26, align 4
  store %struct.Disjunct_struct* %40, %struct.Disjunct_struct** %mydis, align 4
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %41, i32 0, i32 4
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %42, %struct.Connector_struct** %clist, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.end21, %if.end11, %if.end21, %if.end11
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %43, i32 0, i32 0
  %44 = load i16, i16* %label, align 4
  %conv = sext i16 %44 to i32
  %cmp28 = icmp ne i32 %conv, -1
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end27, %if.end27
  br label %for.inc170

if.end31:                                         ; preds = %if.end27, %if.end27
  store i32 0, i32* %place, align 4
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left32 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 4
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %left32, align 4
  %cmp33 = icmp ne %struct.Connector_struct* %46, null
  br i1 %cmp33, label %land.lhs.true, label %if.else41

land.lhs.true:                                    ; preds = %if.end31, %if.end31
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left35 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 4
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %left35, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %48, i32 0, i32 2
  %49 = load i8, i8* %priority, align 4
  %conv36 = sext i8 %49 to i32
  %cmp37 = icmp eq i32 %conv36, 1
  br i1 %cmp37, label %if.then39, label %if.else41

if.then39:                                        ; preds = %land.lhs.true, %land.lhs.true
  %50 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left40 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %50, i32 0, i32 4
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %left40, align 4
  store %struct.Connector_struct* %51, %struct.Connector_struct** %upcon, align 4
  br label %if.end55

if.else41:                                        ; preds = %land.lhs.true, %if.end31, %land.lhs.true, %if.end31
  %52 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right42 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %52, i32 0, i32 5
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %right42, align 4
  %cmp43 = icmp ne %struct.Connector_struct* %53, null
  br i1 %cmp43, label %land.lhs.true45, label %if.else53

land.lhs.true45:                                  ; preds = %if.else41, %if.else41
  %54 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right46 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %54, i32 0, i32 5
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %right46, align 4
  %priority47 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %55, i32 0, i32 2
  %56 = load i8, i8* %priority47, align 4
  %conv48 = sext i8 %56 to i32
  %cmp49 = icmp eq i32 %conv48, 1
  br i1 %cmp49, label %if.then51, label %if.else53

if.then51:                                        ; preds = %land.lhs.true45, %land.lhs.true45
  %57 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right52 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %57, i32 0, i32 5
  %58 = load %struct.Connector_struct*, %struct.Connector_struct** %right52, align 4
  store %struct.Connector_struct* %58, %struct.Connector_struct** %upcon, align 4
  br label %if.end54

if.else53:                                        ; preds = %land.lhs.true45, %if.else41, %land.lhs.true45, %if.else41
  store %struct.Connector_struct* null, %struct.Connector_struct** %upcon, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %if.then51, %if.else53, %if.then51
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then39, %if.end54, %if.then39
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %cmp56 = icmp ne %struct.Connector_struct* %59, null
  br i1 %cmp56, label %if.then58, label %if.end72

if.then58:                                        ; preds = %if.end55, %if.end55
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label59 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %60, i32 0, i32 0
  %61 = load i16, i16* %label59, align 4
  %idxprom = sext i16 %61 to i32
  %62 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx60 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %62, i32 %idxprom
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx60, align 4
  store %struct.Disjunct_struct* %63, %struct.Disjunct_struct** %updis, align 4
  %64 = load i32, i32* %end, align 4
  %cmp61 = icmp sgt i32 %64, 0
  br i1 %cmp61, label %if.then63, label %if.else65

if.then63:                                        ; preds = %if.then58, %if.then58
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %left64 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %65, i32 0, i32 4
  %66 = load %struct.Connector_struct*, %struct.Connector_struct** %left64, align 4
  store %struct.Connector_struct* %66, %struct.Connector_struct** %updiscon, align 4
  br label %if.end67

if.else65:                                        ; preds = %if.then58, %if.then58
  %67 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %right66 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %67, i32 0, i32 5
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %right66, align 4
  store %struct.Connector_struct* %68, %struct.Connector_struct** %updiscon, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then63, %if.else65, %if.then63
  br label %for.cond68

for.cond68:                                       ; preds = %for.inc, %if.end67, %for.inc, %if.end67
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %cmp69 = icmp ne %struct.Connector_struct* %69, null
  br i1 %cmp69, label %for.body71, label %for.end

for.body71:                                       ; preds = %for.cond68, %for.cond68
  %70 = load i32, i32* %place, align 4
  %inc = add nsw i32 %70, 1
  store i32 %inc, i32* %place, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body71, %for.body71
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %71, i32 0, i32 4
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %72, %struct.Connector_struct** %updiscon, align 4
  br label %for.cond68

for.end:                                          ; preds = %for.cond68, %for.cond68
  br label %if.end72

if.end72:                                         ; preds = %for.end, %if.end55, %for.end, %if.end55
  br label %for.cond73

for.cond73:                                       ; preds = %for.inc84, %if.end72, %for.inc84, %if.end72
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %cmp74 = icmp ne %struct.Connector_struct* %73, %74
  br i1 %cmp74, label %for.body76, label %for.end86

for.body76:                                       ; preds = %for.cond73, %for.cond73
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %label77 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %75, i32 0, i32 0
  %76 = load i16, i16* %label77, align 4
  %conv78 = sext i16 %76 to i32
  %cmp79 = icmp slt i32 %conv78, 0
  br i1 %cmp79, label %if.then81, label %if.end83

if.then81:                                        ; preds = %for.body76, %for.body76
  %77 = load i32, i32* %place, align 4
  %inc82 = add nsw i32 %77, 1
  store i32 %inc82, i32* %place, align 4
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %for.body76, %if.then81, %for.body76
  br label %for.inc84

for.inc84:                                        ; preds = %if.end83, %if.end83
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %next85 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %78, i32 0, i32 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %next85, align 4
  store %struct.Connector_struct* %79, %struct.Connector_struct** %clist, align 4
  br label %for.cond73

for.end86:                                        ; preds = %for.cond73, %for.cond73
  %80 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %left87 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %80, i32 0, i32 4
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %left87, align 4
  %cmp88 = icmp ne %struct.Connector_struct* %81, null
  br i1 %cmp88, label %land.lhs.true90, label %if.else98

land.lhs.true90:                                  ; preds = %for.end86, %for.end86
  %82 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %left91 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %82, i32 0, i32 4
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %left91, align 4
  %priority92 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %83, i32 0, i32 2
  %84 = load i8, i8* %priority92, align 4
  %conv93 = sext i8 %84 to i32
  %cmp94 = icmp eq i32 %conv93, 1
  br i1 %cmp94, label %if.then96, label %if.else98

if.then96:                                        ; preds = %land.lhs.true90, %land.lhs.true90
  %85 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %left97 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %85, i32 0, i32 4
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %left97, align 4
  store %struct.Connector_struct* %86, %struct.Connector_struct** %mycon, align 4
  br label %if.end123

if.else98:                                        ; preds = %land.lhs.true90, %for.end86, %land.lhs.true90, %for.end86
  %87 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %right99 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %87, i32 0, i32 5
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %right99, align 4
  %cmp100 = icmp ne %struct.Connector_struct* %88, null
  br i1 %cmp100, label %land.lhs.true102, label %if.else110

land.lhs.true102:                                 ; preds = %if.else98, %if.else98
  %89 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %right103 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %89, i32 0, i32 5
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %right103, align 4
  %priority104 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %90, i32 0, i32 2
  %91 = load i8, i8* %priority104, align 4
  %conv105 = sext i8 %91 to i32
  %cmp106 = icmp eq i32 %conv105, 1
  br i1 %cmp106, label %if.then108, label %if.else110

if.then108:                                       ; preds = %land.lhs.true102, %land.lhs.true102
  %92 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %right109 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %92, i32 0, i32 5
  %93 = load %struct.Connector_struct*, %struct.Connector_struct** %right109, align 4
  store %struct.Connector_struct* %93, %struct.Connector_struct** %mycon, align 4
  br label %if.end122

if.else110:                                       ; preds = %land.lhs.true102, %if.else98, %land.lhs.true102, %if.else98
  %94 = load i32, i32* %word, align 4
  %95 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.25.57, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %95, i32 %94)
  %96 = load i32, i32* %link, align 4
  %97 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx111 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %97, i32 0, i32 %96
  %r112 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx111, i32 0, i32 1
  %98 = load i32, i32* %r112, align 4
  %99 = load i32, i32* %link, align 4
  %100 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx113 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %100, i32 0, i32 %99
  %l114 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx113, i32 0, i32 0
  %101 = load i32, i32* %l114, align 4
  %102 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.26.58, i32 0, i32 0
  %call115 = call i32 (i8*, ...) @printf(i8* %102, i32 %101, i32 %98)
  %103 = load i32, i32* %link, align 4
  %104 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx116 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %104, i32 0, i32 %103
  %r117 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx116, i32 0, i32 1
  %105 = load i32, i32* %r117, align 4
  %106 = load i32, i32* %link, align 4
  %107 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx118 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %107, i32 0, i32 %106
  %l119 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx118, i32 0, i32 0
  %108 = load i32, i32* %l119, align 4
  %109 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.27.59, i32 0, i32 0
  %call120 = call i32 (i8*, ...) @printf(i8* %109, i32 %108, i32 %105)
  %110 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.29, i32 0, i32 0
  %111 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.28.60, i32 0, i32 0
  %call121 = call i32 (i8*, ...) @printf(i8* %110, i8* %111)
  call void @exit_Package(i32 1) #5
  unreachable

if.end122:                                        ; preds = %if.then108, %if.then108
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then96, %if.end122, %if.then96
  %112 = load %struct.Connector_struct*, %struct.Connector_struct** %mycon, align 4
  %label124 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %112, i32 0, i32 0
  %113 = load i16, i16* %label124, align 4
  %idxprom125 = sext i16 %113 to i32
  %114 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx126 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %114, i32 %idxprom125
  %115 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx126, align 4
  store %struct.Disjunct_struct* %115, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond127

for.cond127:                                      ; preds = %for.inc136, %if.end123, %for.inc136, %if.end123
  %116 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp128 = icmp ne %struct.Disjunct_struct* %116, null
  br i1 %cmp128, label %for.body130, label %for.end138

for.body130:                                      ; preds = %for.cond127, %for.cond127
  %117 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %117, i32 0, i32 3
  %118 = load i8*, i8** %string, align 4
  %119 = load %struct.Connector_struct*, %struct.Connector_struct** %mycon, align 4
  %string131 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %119, i32 0, i32 5
  %120 = load i8*, i8** %string131, align 4
  %cmp132 = icmp eq i8* %118, %120
  br i1 %cmp132, label %if.then134, label %if.end135

if.then134:                                       ; preds = %for.body130, %for.body130
  br label %for.end138

if.end135:                                        ; preds = %for.body130, %for.body130
  br label %for.inc136

for.inc136:                                       ; preds = %if.end135, %if.end135
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next137 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %121, i32 0, i32 0
  %122 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next137, align 4
  store %struct.Disjunct_struct* %122, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond127

for.end138:                                       ; preds = %if.then134, %for.cond127, %if.then134, %for.cond127
  %123 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp139 = icmp ne %struct.Disjunct_struct* %123, null
  br i1 %cmp139, label %if.end143, label %if.then141

if.then141:                                       ; preds = %for.end138, %for.end138
  %124 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.31, i32 0, i32 0
  %125 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.30, i32 0, i32 0
  %call142 = call i32 (i8*, ...) @printf(i8* %124, i8* %125)
  call void @exit_Package(i32 1) #5
  unreachable

if.end143:                                        ; preds = %for.end138, %for.end138
  %126 = load i32, i32* %end, align 4
  %cmp144 = icmp slt i32 %126, 0
  br i1 %cmp144, label %if.then146, label %if.else157

if.then146:                                       ; preds = %if.end143, %if.end143
  %127 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right147 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %127, i32 0, i32 5
  %128 = load %struct.Connector_struct*, %struct.Connector_struct** %right147, align 4
  store %struct.Connector_struct* %128, %struct.Connector_struct** %con, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc152, %if.then146, %for.inc152, %if.then146
  %129 = load i32, i32* %place, align 4
  %cmp149 = icmp sgt i32 %129, 0
  br i1 %cmp149, label %for.body151, label %for.end154

for.body151:                                      ; preds = %for.cond148, %for.cond148
  br label %for.inc152

for.inc152:                                       ; preds = %for.body151, %for.body151
  %130 = load i32, i32* %place, align 4
  %dec = add nsw i32 %130, -1
  store i32 %dec, i32* %place, align 4
  %131 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %next153 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %131, i32 0, i32 4
  %132 = load %struct.Connector_struct*, %struct.Connector_struct** %next153, align 4
  store %struct.Connector_struct* %132, %struct.Connector_struct** %con, align 4
  br label %for.cond148

for.end154:                                       ; preds = %for.cond148, %for.cond148
  %133 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %134 = load i32, i32* %link, align 4
  %135 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx155 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %135, i32 0, i32 %134
  %lc156 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx155, i32 0, i32 2
  store %struct.Connector_struct* %133, %struct.Connector_struct** %lc156, align 4
  br label %if.end169

if.else157:                                       ; preds = %if.end143, %if.end143
  %136 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left158 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %136, i32 0, i32 4
  %137 = load %struct.Connector_struct*, %struct.Connector_struct** %left158, align 4
  store %struct.Connector_struct* %137, %struct.Connector_struct** %con, align 4
  br label %for.cond159

for.cond159:                                      ; preds = %for.inc163, %if.else157, %for.inc163, %if.else157
  %138 = load i32, i32* %place, align 4
  %cmp160 = icmp sgt i32 %138, 0
  br i1 %cmp160, label %for.body162, label %for.end166

for.body162:                                      ; preds = %for.cond159, %for.cond159
  br label %for.inc163

for.inc163:                                       ; preds = %for.body162, %for.body162
  %139 = load i32, i32* %place, align 4
  %dec164 = add nsw i32 %139, -1
  store i32 %dec164, i32* %place, align 4
  %140 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %next165 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %140, i32 0, i32 4
  %141 = load %struct.Connector_struct*, %struct.Connector_struct** %next165, align 4
  store %struct.Connector_struct* %141, %struct.Connector_struct** %con, align 4
  br label %for.cond159

for.end166:                                       ; preds = %for.cond159, %for.cond159
  %142 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %143 = load i32, i32* %link, align 4
  %144 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx167 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %144, i32 0, i32 %143
  %rc168 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx167, i32 0, i32 3
  store %struct.Connector_struct* %142, %struct.Connector_struct** %rc168, align 4
  br label %if.end169

if.end169:                                        ; preds = %for.end166, %for.end154, %for.end166, %for.end154
  br label %for.inc170

for.inc170:                                       ; preds = %if.end169, %if.then30, %if.then20, %if.then10, %if.then, %if.end169, %if.then30, %if.then20, %if.then10, %if.then
  %145 = load i32, i32* %link, align 4
  %inc171 = add nsw i32 %145, 1
  store i32 %inc171, i32* %link, align 4
  br label %for.cond1

for.end172:                                       ; preds = %for.cond1, %for.cond1
  br label %for.inc173

for.inc173:                                       ; preds = %for.end172, %for.end172
  %146 = load i32, i32* %end, align 4
  %add = add nsw i32 %146, 2
  store i32 %add, i32* %end, align 4
  br label %for.cond

for.end174:                                       ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define %struct.Tconnector_struct* @copy_Tconnectors(%struct.Tconnector_struct* %c) #0 {
entry:
  %retval = alloca %struct.Tconnector_struct*, align 4
  %c.addr = alloca %struct.Tconnector_struct*, align 4
  %c1 = alloca %struct.Tconnector_struct*, align 4
  store %struct.Tconnector_struct* %c, %struct.Tconnector_struct** %c.addr, align 4
  %0 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c.addr, align 4
  %cmp = icmp eq %struct.Tconnector_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.Tconnector_struct* null, %struct.Tconnector_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @xalloc(i32 12)
  %1 = bitcast i8* %call to %struct.Tconnector_struct*
  store %struct.Tconnector_struct* %1, %struct.Tconnector_struct** %c1, align 4
  %2 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c1, align 4
  %3 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c.addr, align 4
  %4 = bitcast %struct.Tconnector_struct* %2 to i8*
  %5 = bitcast %struct.Tconnector_struct* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %4, i8* %5, i32 12, i32 4, i1 false)
  %6 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %6, i32 0, i32 2
  %7 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next, align 4
  %call1 = call %struct.Tconnector_struct* @copy_Tconnectors(%struct.Tconnector_struct* %7)
  %8 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c1, align 4
  %next2 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %8, i32 0, i32 2
  store %struct.Tconnector_struct* %call1, %struct.Tconnector_struct** %next2, align 4
  %9 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c1, align 4
  store %struct.Tconnector_struct* %9, %struct.Tconnector_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %retval, align 4
  ret %struct.Tconnector_struct* %10
}

; Function Attrs: noinline nounwind
define void @free_Tconnectors(%struct.Tconnector_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Tconnector_struct*, align 4
  %n = alloca %struct.Tconnector_struct*, align 4
  store %struct.Tconnector_struct* %e, %struct.Tconnector_struct** %e.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Tconnector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %1, i32 0, i32 2
  %2 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next, align 4
  store %struct.Tconnector_struct* %2, %struct.Tconnector_struct** %n, align 4
  %3 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %4 = bitcast %struct.Tconnector_struct* %3 to i8*
  call void @xfree(i8* %4, i32 12)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %n, align 4
  store %struct.Tconnector_struct* %5, %struct.Tconnector_struct** %e.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_clause_list(%struct.clause_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.clause_struct*, align 4
  %c1 = alloca %struct.clause_struct*, align 4
  store %struct.clause_struct* %c, %struct.clause_struct** %c.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %cmp = icmp ne %struct.clause_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %1, i32 0, i32 0
  %2 = load %struct.clause_struct*, %struct.clause_struct** %next, align 4
  store %struct.clause_struct* %2, %struct.clause_struct** %c1, align 4
  %3 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %c2 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %3, i32 0, i32 3
  %4 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c2, align 4
  call void @free_Tconnectors(%struct.Tconnector_struct* %4)
  %5 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %6 = bitcast %struct.clause_struct* %5 to i8*
  call void @xfree(i8* %6, i32 16)
  %7 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  store %struct.clause_struct* %7, %struct.clause_struct** %c.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind
define %struct.clause_struct* @copy_clause(%struct.clause_struct* %d) #0 {
entry:
  %retval = alloca %struct.clause_struct*, align 4
  %d.addr = alloca %struct.clause_struct*, align 4
  %d1 = alloca %struct.clause_struct*, align 4
  store %struct.clause_struct* %d, %struct.clause_struct** %d.addr, align 4
  %0 = load %struct.clause_struct*, %struct.clause_struct** %d.addr, align 4
  %cmp = icmp eq %struct.clause_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.clause_struct* null, %struct.clause_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @xalloc(i32 16)
  %1 = bitcast i8* %call to %struct.clause_struct*
  store %struct.clause_struct* %1, %struct.clause_struct** %d1, align 4
  %2 = load %struct.clause_struct*, %struct.clause_struct** %d1, align 4
  %3 = load %struct.clause_struct*, %struct.clause_struct** %d.addr, align 4
  %4 = bitcast %struct.clause_struct* %2 to i8*
  %5 = bitcast %struct.clause_struct* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %4, i8* %5, i32 16, i32 4, i1 false)
  %6 = load %struct.clause_struct*, %struct.clause_struct** %d1, align 4
  %next = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %6, i32 0, i32 0
  store %struct.clause_struct* null, %struct.clause_struct** %next, align 4
  %7 = load %struct.clause_struct*, %struct.clause_struct** %d.addr, align 4
  %c = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %7, i32 0, i32 3
  %8 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c, align 4
  %call1 = call %struct.Tconnector_struct* @copy_Tconnectors(%struct.Tconnector_struct* %8)
  %9 = load %struct.clause_struct*, %struct.clause_struct** %d1, align 4
  %c2 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %9, i32 0, i32 3
  store %struct.Tconnector_struct* %call1, %struct.Tconnector_struct** %c2, align 4
  %10 = load %struct.clause_struct*, %struct.clause_struct** %d1, align 4
  store %struct.clause_struct* %10, %struct.clause_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct.clause_struct*, %struct.clause_struct** %retval, align 4
  ret %struct.clause_struct* %11
}

; Function Attrs: noinline nounwind
define %struct.Tconnector_struct* @Treverse(%struct.Tconnector_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Tconnector_struct*, align 4
  %head = alloca %struct.Tconnector_struct*, align 4
  %x = alloca %struct.Tconnector_struct*, align 4
  store %struct.Tconnector_struct* %e, %struct.Tconnector_struct** %e.addr, align 4
  store %struct.Tconnector_struct* null, %struct.Tconnector_struct** %head, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Tconnector_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %1, i32 0, i32 2
  %2 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next, align 4
  store %struct.Tconnector_struct* %2, %struct.Tconnector_struct** %x, align 4
  %3 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %head, align 4
  %4 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next1 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %4, i32 0, i32 2
  store %struct.Tconnector_struct* %3, %struct.Tconnector_struct** %next1, align 4
  %5 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  store %struct.Tconnector_struct* %5, %struct.Tconnector_struct** %head, align 4
  %6 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %x, align 4
  store %struct.Tconnector_struct* %6, %struct.Tconnector_struct** %e.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %head, align 4
  ret %struct.Tconnector_struct* %7
}

; Function Attrs: noinline nounwind
define %struct.Connector_struct* @reverse(%struct.Connector_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Connector_struct*, align 4
  %head = alloca %struct.Connector_struct*, align 4
  %x = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %e, %struct.Connector_struct** %e.addr, align 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %head, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Connector_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %2, %struct.Connector_struct** %x, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %head, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %next1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 4
  store %struct.Connector_struct* %3, %struct.Connector_struct** %next1, align 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %head, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %x, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %e.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %head, align 4
  ret %struct.Connector_struct* %7
}

; Function Attrs: noinline nounwind
define %struct.Tconnector_struct* @catenate(%struct.Tconnector_struct* %e1, %struct.Tconnector_struct* %e2) #0 {
entry:
  %e2.addr = alloca %struct.Tconnector_struct*, align 4
  %e1.addr = alloca %struct.Tconnector_struct*, align 4
  %e = alloca %struct.Tconnector_struct*, align 4
  %head = alloca %struct.Tconnector_struct*, align 4
  store %struct.Tconnector_struct* %e2, %struct.Tconnector_struct** %e2.addr, align 4
  store %struct.Tconnector_struct* %e1, %struct.Tconnector_struct** %e1.addr, align 4
  store %struct.Tconnector_struct* null, %struct.Tconnector_struct** %head, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e1.addr, align 4
  %cmp = icmp ne %struct.Tconnector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i8* @xalloc(i32 12)
  %1 = bitcast i8* %call to %struct.Tconnector_struct*
  store %struct.Tconnector_struct* %1, %struct.Tconnector_struct** %e, align 4
  %2 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e, align 4
  %3 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e1.addr, align 4
  %4 = bitcast %struct.Tconnector_struct* %2 to i8*
  %5 = bitcast %struct.Tconnector_struct* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %4, i8* %5, i32 12, i32 4, i1 false)
  %6 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %head, align 4
  %7 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %7, i32 0, i32 2
  store %struct.Tconnector_struct* %6, %struct.Tconnector_struct** %next, align 4
  %8 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e, align 4
  store %struct.Tconnector_struct* %8, %struct.Tconnector_struct** %head, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e1.addr, align 4
  %next1 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %9, i32 0, i32 2
  %10 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next1, align 4
  store %struct.Tconnector_struct* %10, %struct.Tconnector_struct** %e1.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc7, %for.end
  %11 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e2.addr, align 4
  %cmp3 = icmp ne %struct.Tconnector_struct* %11, null
  br i1 %cmp3, label %for.body4, label %for.end9

for.body4:                                        ; preds = %for.cond2
  %call5 = call i8* @xalloc(i32 12)
  %12 = bitcast i8* %call5 to %struct.Tconnector_struct*
  store %struct.Tconnector_struct* %12, %struct.Tconnector_struct** %e, align 4
  %13 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e, align 4
  %14 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e2.addr, align 4
  %15 = bitcast %struct.Tconnector_struct* %13 to i8*
  %16 = bitcast %struct.Tconnector_struct* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %15, i8* %16, i32 12, i32 4, i1 false)
  %17 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %head, align 4
  %18 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e, align 4
  %next6 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %18, i32 0, i32 2
  store %struct.Tconnector_struct* %17, %struct.Tconnector_struct** %next6, align 4
  %19 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e, align 4
  store %struct.Tconnector_struct* %19, %struct.Tconnector_struct** %head, align 4
  br label %for.inc7

for.inc7:                                         ; preds = %for.body4
  %20 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e2.addr, align 4
  %next8 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %20, i32 0, i32 2
  %21 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next8, align 4
  store %struct.Tconnector_struct* %21, %struct.Tconnector_struct** %e2.addr, align 4
  br label %for.cond2

for.end9:                                         ; preds = %for.cond2
  %22 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %head, align 4
  %call10 = call %struct.Tconnector_struct* @Treverse(%struct.Tconnector_struct* %22)
  ret %struct.Tconnector_struct* %call10
}

; Function Attrs: noinline nounwind
define %struct.Tconnector_struct* @build_terminal(%struct.Exp_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Exp_struct*, align 4
  %c = alloca %struct.Tconnector_struct*, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %call = call i8* @xalloc(i32 12)
  %0 = bitcast i8* %call to %struct.Tconnector_struct*
  store %struct.Tconnector_struct* %0, %struct.Tconnector_struct** %c, align 4
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %1, i32 0, i32 4
  %string = bitcast %union.anon* %u to i8**
  %2 = load i8*, i8** %string, align 4
  %3 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c, align 4
  %string1 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %3, i32 0, i32 3
  store i8* %2, i8** %string1, align 4
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %multi = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %4, i32 0, i32 3
  %5 = load i8, i8* %multi, align 1
  %6 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c, align 4
  %multi2 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %6, i32 0, i32 0
  store i8 %5, i8* %multi2, align 4
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %dir = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %7, i32 0, i32 2
  %8 = load i8, i8* %dir, align 2
  %9 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c, align 4
  %dir3 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %9, i32 0, i32 1
  store i8 %8, i8* %dir3, align 1
  %10 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %10, i32 0, i32 2
  store %struct.Tconnector_struct* null, %struct.Tconnector_struct** %next, align 4
  %11 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c, align 4
  ret %struct.Tconnector_struct* %11
}

; Function Attrs: noinline nounwind
define i32 @maxcost_of_expression(%struct.Exp_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Exp_struct*, align 4
  %e_list = alloca %struct.E_list_struct*, align 4
  %m = alloca i32, align 4
  %m1 = alloca i32, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  store i32 0, i32* %m, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %0, i32 0, i32 0
  %1 = load i8, i8* %type, align 4
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type2 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 0
  %3 = load i8, i8* %type2, align 4
  %conv3 = sext i8 %3 to i32
  %cmp4 = icmp eq i32 %conv3, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %4, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  %5 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  store %struct.E_list_struct* %5, %struct.E_list_struct** %e_list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %cmp6 = icmp ne %struct.E_list_struct* %6, null
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %e8 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %7, i32 0, i32 1
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %e8, align 4
  %call = call i32 @maxcost_of_expression(%struct.Exp_struct* %8)
  store i32 %call, i32* %m1, align 4
  %9 = load i32, i32* %m, align 4
  %10 = load i32, i32* %m1, align 4
  %cmp9 = icmp sgt i32 %9, %10
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %11 = load i32, i32* %m, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %12 = load i32, i32* %m1, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ %12, %cond.false ]
  store i32 %cond, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %13 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %13, i32 0, i32 0
  %14 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  store %struct.E_list_struct* %14, %struct.E_list_struct** %e_list, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %lor.lhs.false
  %15 = load i32, i32* %m, align 4
  %16 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %16, i32 0, i32 1
  %17 = load i8, i8* %cost, align 1
  %conv11 = zext i8 %17 to i32
  %add = add nsw i32 %15, %conv11
  ret i32 %add
}

; Function Attrs: noinline nounwind
define i32 @maxcost_of_sentence() #0 {
entry:
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  %m = alloca i32, align 4
  %m1 = alloca i32, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry, %for.inc6, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end7

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call i32 @maxcost_of_expression(%struct.Exp_struct* %7)
  store i32 %call, i32* %m1, align 4
  %8 = load i32, i32* %m, align 4
  %9 = load i32, i32* %m1, align 4
  %cmp5 = icmp sgt i32 %8, %9
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body4, %for.body4
  %10 = load i32, i32* %m, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body4, %for.body4
  %11 = load i32, i32* %m1, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true, %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ]
  store i32 %cond, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end, %cond.end
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %12, i32 0, i32 2
  %13 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %13, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  br label %for.inc6

for.inc6:                                         ; preds = %for.end, %for.end
  %14 = load i32, i32* %w, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end7:                                         ; preds = %for.cond, %for.cond
  %15 = load i32, i32* %m, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %15, i32* %struct.BigStruct_32
  ret i32 %15
}

; Function Attrs: noinline nounwind
define %struct.clause_struct* @build_clause(%struct.Exp_struct* %e, i32 %cost_cutoff) #0 {
entry:
  %cost_cutoff.addr = alloca i32, align 4
  %e.addr = alloca %struct.Exp_struct*, align 4
  %c = alloca %struct.clause_struct*, align 4
  %c1 = alloca %struct.clause_struct*, align 4
  %c2 = alloca %struct.clause_struct*, align 4
  %c3 = alloca %struct.clause_struct*, align 4
  %c4 = alloca %struct.clause_struct*, align 4
  %c_head = alloca %struct.clause_struct*, align 4
  %e_list = alloca %struct.E_list_struct*, align 4
  store i32 %cost_cutoff, i32* %cost_cutoff.addr, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  store %struct.clause_struct* null, %struct.clause_struct** %c, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Exp_struct* %0, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1.61, i32 0, i32 0
  %2 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.62, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1, i8* %2)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %entry
  %3 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %3, i32 0, i32 0
  %4 = load i8, i8* %type, align 4
  %conv = sext i8 %4 to i32
  %cmp1 = icmp eq i32 %conv, 1
  br i1 %cmp1, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @xalloc(i32 16)
  %5 = bitcast i8* %call4 to %struct.clause_struct*
  store %struct.clause_struct* %5, %struct.clause_struct** %c1, align 4
  %6 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %c5 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %6, i32 0, i32 3
  store %struct.Tconnector_struct* null, %struct.Tconnector_struct** %c5, align 4
  %7 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %next = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %7, i32 0, i32 0
  store %struct.clause_struct* null, %struct.clause_struct** %next, align 4
  %8 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %cost = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %8, i32 0, i32 1
  store i32 0, i32* %cost, align 4
  %9 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %maxcost = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %9, i32 0, i32 2
  store i32 0, i32* %maxcost, align 4
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %10, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  %11 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  store %struct.E_list_struct* %11, %struct.E_list_struct** %e_list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc38, %if.then3
  %12 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %cmp6 = icmp ne %struct.E_list_struct* %12, null
  br i1 %cmp6, label %for.body, label %for.end40

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %cost_cutoff.addr, align 4
  %14 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %e8 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %14, i32 0, i32 1
  %15 = load %struct.Exp_struct*, %struct.Exp_struct** %e8, align 4
  %call9 = call %struct.clause_struct* @build_clause(%struct.Exp_struct* %15, i32 %13)
  store %struct.clause_struct* %call9, %struct.clause_struct** %c2, align 4
  store %struct.clause_struct* null, %struct.clause_struct** %c_head, align 4
  %16 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  store %struct.clause_struct* %16, %struct.clause_struct** %c3, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc35, %for.body
  %17 = load %struct.clause_struct*, %struct.clause_struct** %c3, align 4
  %cmp11 = icmp ne %struct.clause_struct* %17, null
  br i1 %cmp11, label %for.body13, label %for.end37

for.body13:                                       ; preds = %for.cond10
  %18 = load %struct.clause_struct*, %struct.clause_struct** %c2, align 4
  store %struct.clause_struct* %18, %struct.clause_struct** %c4, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc, %for.body13
  %19 = load %struct.clause_struct*, %struct.clause_struct** %c4, align 4
  %cmp15 = icmp ne %struct.clause_struct* %19, null
  br i1 %cmp15, label %for.body17, label %for.end

for.body17:                                       ; preds = %for.cond14
  %call18 = call i8* @xalloc(i32 16)
  %20 = bitcast i8* %call18 to %struct.clause_struct*
  store %struct.clause_struct* %20, %struct.clause_struct** %c, align 4
  %21 = load %struct.clause_struct*, %struct.clause_struct** %c3, align 4
  %cost19 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %21, i32 0, i32 1
  %22 = load i32, i32* %cost19, align 4
  %23 = load %struct.clause_struct*, %struct.clause_struct** %c4, align 4
  %cost20 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %23, i32 0, i32 1
  %24 = load i32, i32* %cost20, align 4
  %add = add nsw i32 %22, %24
  %25 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %cost21 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %25, i32 0, i32 1
  store i32 %add, i32* %cost21, align 4
  %26 = load %struct.clause_struct*, %struct.clause_struct** %c3, align 4
  %maxcost22 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %26, i32 0, i32 2
  %27 = load i32, i32* %maxcost22, align 4
  %28 = load %struct.clause_struct*, %struct.clause_struct** %c4, align 4
  %maxcost23 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %28, i32 0, i32 2
  %29 = load i32, i32* %maxcost23, align 4
  %cmp24 = icmp sgt i32 %27, %29
  br i1 %cmp24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body17
  %30 = load %struct.clause_struct*, %struct.clause_struct** %c3, align 4
  %maxcost26 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %30, i32 0, i32 2
  %31 = load i32, i32* %maxcost26, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body17
  %32 = load %struct.clause_struct*, %struct.clause_struct** %c4, align 4
  %maxcost27 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %32, i32 0, i32 2
  %33 = load i32, i32* %maxcost27, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %31, %cond.true ], [ %33, %cond.false ]
  %34 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %maxcost28 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %34, i32 0, i32 2
  store i32 %cond, i32* %maxcost28, align 4
  %35 = load %struct.clause_struct*, %struct.clause_struct** %c4, align 4
  %c29 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %35, i32 0, i32 3
  %36 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c29, align 4
  %37 = load %struct.clause_struct*, %struct.clause_struct** %c3, align 4
  %c30 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %37, i32 0, i32 3
  %38 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c30, align 4
  %call31 = call %struct.Tconnector_struct* @catenate(%struct.Tconnector_struct* %38, %struct.Tconnector_struct* %36)
  %39 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %c32 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %39, i32 0, i32 3
  store %struct.Tconnector_struct* %call31, %struct.Tconnector_struct** %c32, align 4
  %40 = load %struct.clause_struct*, %struct.clause_struct** %c_head, align 4
  %41 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %next33 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %41, i32 0, i32 0
  store %struct.clause_struct* %40, %struct.clause_struct** %next33, align 4
  %42 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  store %struct.clause_struct* %42, %struct.clause_struct** %c_head, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %43 = load %struct.clause_struct*, %struct.clause_struct** %c4, align 4
  %next34 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %43, i32 0, i32 0
  %44 = load %struct.clause_struct*, %struct.clause_struct** %next34, align 4
  store %struct.clause_struct* %44, %struct.clause_struct** %c4, align 4
  br label %for.cond14

for.end:                                          ; preds = %for.cond14
  br label %for.inc35

for.inc35:                                        ; preds = %for.end
  %45 = load %struct.clause_struct*, %struct.clause_struct** %c3, align 4
  %next36 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %45, i32 0, i32 0
  %46 = load %struct.clause_struct*, %struct.clause_struct** %next36, align 4
  store %struct.clause_struct* %46, %struct.clause_struct** %c3, align 4
  br label %for.cond10

for.end37:                                        ; preds = %for.cond10
  %47 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  call void @free_clause_list(%struct.clause_struct* %47)
  %48 = load %struct.clause_struct*, %struct.clause_struct** %c2, align 4
  call void @free_clause_list(%struct.clause_struct* %48)
  %49 = load %struct.clause_struct*, %struct.clause_struct** %c_head, align 4
  store %struct.clause_struct* %49, %struct.clause_struct** %c1, align 4
  br label %for.inc38

for.inc38:                                        ; preds = %for.end37
  %50 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %next39 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %50, i32 0, i32 0
  %51 = load %struct.E_list_struct*, %struct.E_list_struct** %next39, align 4
  store %struct.E_list_struct* %51, %struct.E_list_struct** %e_list, align 4
  br label %for.cond

for.end40:                                        ; preds = %for.cond
  %52 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  store %struct.clause_struct* %52, %struct.clause_struct** %c, align 4
  br label %if.end77

if.else:                                          ; preds = %if.end
  %53 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type41 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %53, i32 0, i32 0
  %54 = load i8, i8* %type41, align 4
  %conv42 = sext i8 %54 to i32
  %cmp43 = icmp eq i32 %conv42, 0
  br i1 %cmp43, label %if.then45, label %if.else61

if.then45:                                        ; preds = %if.else
  store %struct.clause_struct* null, %struct.clause_struct** %c, align 4
  %55 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u46 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %55, i32 0, i32 4
  %l47 = bitcast %union.anon* %u46 to %struct.E_list_struct**
  %56 = load %struct.E_list_struct*, %struct.E_list_struct** %l47, align 4
  store %struct.E_list_struct* %56, %struct.E_list_struct** %e_list, align 4
  br label %for.cond48

for.cond48:                                       ; preds = %for.inc58, %if.then45
  %57 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %cmp49 = icmp ne %struct.E_list_struct* %57, null
  br i1 %cmp49, label %for.body51, label %for.end60

for.body51:                                       ; preds = %for.cond48
  %58 = load i32, i32* %cost_cutoff.addr, align 4
  %59 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %e52 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %59, i32 0, i32 1
  %60 = load %struct.Exp_struct*, %struct.Exp_struct** %e52, align 4
  %call53 = call %struct.clause_struct* @build_clause(%struct.Exp_struct* %60, i32 %58)
  store %struct.clause_struct* %call53, %struct.clause_struct** %c1, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body51
  %61 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %cmp54 = icmp ne %struct.clause_struct* %61, null
  br i1 %cmp54, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %62 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %next56 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %62, i32 0, i32 0
  %63 = load %struct.clause_struct*, %struct.clause_struct** %next56, align 4
  store %struct.clause_struct* %63, %struct.clause_struct** %c3, align 4
  %64 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %65 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %next57 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %65, i32 0, i32 0
  store %struct.clause_struct* %64, %struct.clause_struct** %next57, align 4
  %66 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  store %struct.clause_struct* %66, %struct.clause_struct** %c, align 4
  %67 = load %struct.clause_struct*, %struct.clause_struct** %c3, align 4
  store %struct.clause_struct* %67, %struct.clause_struct** %c1, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %for.inc58

for.inc58:                                        ; preds = %while.end
  %68 = load %struct.E_list_struct*, %struct.E_list_struct** %e_list, align 4
  %next59 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %68, i32 0, i32 0
  %69 = load %struct.E_list_struct*, %struct.E_list_struct** %next59, align 4
  store %struct.E_list_struct* %69, %struct.E_list_struct** %e_list, align 4
  br label %for.cond48

for.end60:                                        ; preds = %for.cond48
  br label %if.end76

if.else61:                                        ; preds = %if.else
  %70 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type62 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %70, i32 0, i32 0
  %71 = load i8, i8* %type62, align 4
  %conv63 = sext i8 %71 to i32
  %cmp64 = icmp eq i32 %conv63, 2
  br i1 %cmp64, label %if.then66, label %if.else73

if.then66:                                        ; preds = %if.else61
  %call67 = call i8* @xalloc(i32 16)
  %72 = bitcast i8* %call67 to %struct.clause_struct*
  store %struct.clause_struct* %72, %struct.clause_struct** %c, align 4
  %73 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %call68 = call %struct.Tconnector_struct* @build_terminal(%struct.Exp_struct* %73)
  %74 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %c69 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %74, i32 0, i32 3
  store %struct.Tconnector_struct* %call68, %struct.Tconnector_struct** %c69, align 4
  %75 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %cost70 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %75, i32 0, i32 1
  store i32 0, i32* %cost70, align 4
  %76 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %maxcost71 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %76, i32 0, i32 2
  store i32 0, i32* %maxcost71, align 4
  %77 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %next72 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %77, i32 0, i32 0
  store %struct.clause_struct* null, %struct.clause_struct** %next72, align 4
  br label %if.end75

if.else73:                                        ; preds = %if.else61
  %78 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.3.63, i32 0, i32 0
  %79 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.2.64, i32 0, i32 0
  %call74 = call i32 (i8*, ...) @printf(i8* %78, i8* %79)
  call void @exit_Package(i32 1) #5
  unreachable

if.end75:                                         ; preds = %if.then66
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %for.end60
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %for.end40
  %80 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  store %struct.clause_struct* %80, %struct.clause_struct** %c1, align 4
  br label %for.cond78

for.cond78:                                       ; preds = %for.inc90, %if.end77
  %81 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %cmp79 = icmp ne %struct.clause_struct* %81, null
  br i1 %cmp79, label %for.body81, label %for.end92

for.body81:                                       ; preds = %for.cond78
  %82 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %cost82 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %82, i32 0, i32 1
  %83 = load i8, i8* %cost82, align 1
  %conv83 = zext i8 %83 to i32
  %84 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %cost84 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %84, i32 0, i32 1
  %85 = load i32, i32* %cost84, align 4
  %add85 = add nsw i32 %85, %conv83
  store i32 %add85, i32* %cost84, align 4
  %86 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %cost86 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %86, i32 0, i32 1
  %87 = load i8, i8* %cost86, align 1
  %conv87 = zext i8 %87 to i32
  %88 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %maxcost88 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %88, i32 0, i32 2
  %89 = load i32, i32* %maxcost88, align 4
  %add89 = add nsw i32 %89, %conv87
  store i32 %add89, i32* %maxcost88, align 4
  br label %for.inc90

for.inc90:                                        ; preds = %for.body81
  %90 = load %struct.clause_struct*, %struct.clause_struct** %c1, align 4
  %next91 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %90, i32 0, i32 0
  %91 = load %struct.clause_struct*, %struct.clause_struct** %next91, align 4
  store %struct.clause_struct* %91, %struct.clause_struct** %c1, align 4
  br label %for.cond78

for.end92:                                        ; preds = %for.cond78
  %92 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  ret %struct.clause_struct* %92
}

; Function Attrs: noinline nounwind
define void @print_connector_list(%struct.Connector_struct* %e) #0 {
entry:
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  %load_struct.BigStruct_6 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_6
  %e.addr = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_6, %struct.Connector_struct** %e.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Connector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %1, i32 0, i32 5
  %2 = load i8*, i8** %string, align 4
  %3 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.4.65, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %3, i8* %2)
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 0
  %5 = load i16, i16* %label, align 4
  %conv = sext i16 %5 to i32
  %cmp1 = icmp ne i32 %conv, -1
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body, %for.body
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %label3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 0
  %7 = load i16, i16* %label3, align 4
  %conv4 = sext i16 %7 to i32
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.5.66, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %8, i32 %conv4)
  br label %if.end

if.else:                                          ; preds = %for.body, %for.body
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.6.67, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %9)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %cmp7 = icmp ne %struct.Connector_struct* %11, null
  br i1 %cmp7, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end, %if.end
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.7.68, i32 0, i32 0
  %call10 = call i32 (i8*, ...) @printf(i8* %12)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end, %if.then9, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end11, %if.end11
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %next12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next12, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %e.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @print_Tconnector_list(%struct.Tconnector_struct* %e) #0 {
entry:
  %struct.BigStruct_31 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 31
  %load_struct.BigStruct_31 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %struct.BigStruct_31
  %e.addr = alloca %struct.Tconnector_struct*, align 4
  store %struct.Tconnector_struct* %load_struct.BigStruct_31, %struct.Tconnector_struct** %e.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Tconnector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %multi = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %1, i32 0, i32 0
  %2 = load i8, i8* %multi, align 4
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %3 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.8.69, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  %4 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %string = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %4, i32 0, i32 3
  %5 = load i8*, i8** %string, align 4
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.9.70, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %6, i8* %5)
  %7 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %dir = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %7, i32 0, i32 1
  %8 = load i8, i8* %dir, align 1
  %conv = sext i8 %8 to i32
  %9 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.10.71, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %9, i32 %conv)
  %10 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %10, i32 0, i32 2
  %11 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next, align 4
  %cmp3 = icmp ne %struct.Tconnector_struct* %11, null
  br i1 %cmp3, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end, %if.end
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.11.72, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %12)
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end, %if.then5, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end7, %if.end7
  %13 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next8 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %13, i32 0, i32 2
  %14 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next8, align 4
  store %struct.Tconnector_struct* %14, %struct.Tconnector_struct** %e.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @print_clause_list(%struct.clause_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.clause_struct*, align 4
  store %struct.clause_struct* %c, %struct.clause_struct** %c.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %cmp = icmp ne %struct.clause_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.12.73, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1)
  %2 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %maxcost = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %2, i32 0, i32 2
  %3 = load i32, i32* %maxcost, align 4
  %4 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %cost = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %4, i32 0, i32 1
  %5 = load i32, i32* %cost, align 4
  %6 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.13.74, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %6, i32 %5, i32 %3)
  %7 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %c2 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %7, i32 0, i32 3
  %8 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c2, align 4
  %struct.BigStruct_31 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 31
  store %struct.Tconnector_struct* %8, %struct.Tconnector_struct** %struct.BigStruct_31
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 191, i32 10)
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.14.75, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %9)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load %struct.clause_struct*, %struct.clause_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %10, i32 0, i32 0
  %11 = load %struct.clause_struct*, %struct.clause_struct** %next, align 4
  store %struct.clause_struct* %11, %struct.clause_struct** %c.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @print_disjunct_list(%struct.Disjunct_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %c, %struct.Disjunct_struct** %c.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 3
  %2 = load i8*, i8** %string, align 4
  %3 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.15.76, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %3, i8* %2)
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 1
  %5 = load i16, i16* %cost, align 4
  %conv = sext i16 %5 to i32
  %6 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.16.77, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %6, i32 %conv)
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %struct.BigStruct_61 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %8, %struct.Connector_struct** %struct.BigStruct_61
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 190, i32 10)
  %9 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.17.78, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %9)
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 5
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %11, %struct.Connector_struct** %struct.BigStruct_6
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 190, i32 10)
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.18.79, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %12)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 0
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %14, %struct.Disjunct_struct** %c.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define %struct.Connector_struct* @extract_connectors(%struct.Tconnector_struct* %e, i32 %c) #0 {
entry:
  %retval = alloca %struct.Connector_struct*, align 4
  %c.addr = alloca i32, align 4
  %e.addr = alloca %struct.Tconnector_struct*, align 4
  %e1 = alloca %struct.Connector_struct*, align 4
  store i32 %c, i32* %c.addr, align 4
  store %struct.Tconnector_struct* %e, %struct.Tconnector_struct** %e.addr, align 4
  %0 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %cmp = icmp eq %struct.Tconnector_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.Connector_struct* null, %struct.Connector_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %dir = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %1, i32 0, i32 1
  %2 = load i8, i8* %dir, align 1
  %conv = sext i8 %2 to i32
  %3 = load i32, i32* %c.addr, align 4
  %cmp1 = icmp eq i32 %conv, %3
  br i1 %cmp1, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %call = call i8* @xalloc(i32 16)
  %4 = bitcast i8* %call to %struct.Connector_struct*
  store %struct.Connector_struct* %4, %struct.Connector_struct** %e1, align 4
  %5 = load i32, i32* %c.addr, align 4
  %6 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %6, i32 0, i32 2
  %7 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next, align 4
  %call4 = call %struct.Connector_struct* @extract_connectors(%struct.Tconnector_struct* %7, i32 %5)
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  store %struct.Connector_struct* %call4, %struct.Connector_struct** %next5, align 4
  %9 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %multi = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %9, i32 0, i32 0
  %10 = load i8, i8* %multi, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %multi6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 3
  store i8 %10, i8* %multi6, align 1
  %12 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %string = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %12, i32 0, i32 3
  %13 = load i8*, i8** %string, align 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %string7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 5
  store i8* %13, i8** %string7, align 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %15, i32 0, i32 0
  store i16 -1, i16* %label, align 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 1
  store i16 0, i16* %word, align 2
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end
  %19 = load i32, i32* %c.addr, align 4
  %20 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next8 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %20, i32 0, i32 2
  %21 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next8, align 4
  %call9 = call %struct.Connector_struct* @extract_connectors(%struct.Tconnector_struct* %21, i32 %19)
  store %struct.Connector_struct* %call9, %struct.Connector_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then3, %if.then
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %retval, align 4
  ret %struct.Connector_struct* %22
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @build_disjunct(%struct.clause_struct* %cl, i8* %string, i32 %cost_cutoff) #0 {
entry:
  %cost_cutoff.addr = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %cl.addr = alloca %struct.clause_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %ndis = alloca %struct.Disjunct_struct*, align 4
  store i32 %cost_cutoff, i32* %cost_cutoff.addr, align 4
  store i8* %string, i8** %string.addr, align 4
  store %struct.clause_struct* %cl, %struct.clause_struct** %cl.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.clause_struct*, %struct.clause_struct** %cl.addr, align 4
  %cmp = icmp ne %struct.clause_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.clause_struct*, %struct.clause_struct** %cl.addr, align 4
  %maxcost = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %1, i32 0, i32 2
  %2 = load i32, i32* %maxcost, align 4
  %3 = load i32, i32* %cost_cutoff.addr, align 4
  %cmp1 = icmp sle i32 %2, %3
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %call = call i8* @xalloc(i32 20)
  %4 = bitcast i8* %call to %struct.Disjunct_struct*
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %ndis, align 4
  %5 = load %struct.clause_struct*, %struct.clause_struct** %cl.addr, align 4
  %c = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %5, i32 0, i32 3
  %6 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c, align 4
  %call2 = call %struct.Connector_struct* @extract_connectors(%struct.Tconnector_struct* %6, i32 45)
  %call3 = call %struct.Connector_struct* @reverse(%struct.Connector_struct* %call2)
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ndis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  store %struct.Connector_struct* %call3, %struct.Connector_struct** %left, align 4
  %8 = load %struct.clause_struct*, %struct.clause_struct** %cl.addr, align 4
  %c4 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %8, i32 0, i32 3
  %9 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %c4, align 4
  %call5 = call %struct.Connector_struct* @extract_connectors(%struct.Tconnector_struct* %9, i32 43)
  %call6 = call %struct.Connector_struct* @reverse(%struct.Connector_struct* %call5)
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ndis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 5
  store %struct.Connector_struct* %call6, %struct.Connector_struct** %right, align 4
  %11 = load i8*, i8** %string.addr, align 4
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ndis, align 4
  %string7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 3
  store i8* %11, i8** %string7, align 4
  %13 = load %struct.clause_struct*, %struct.clause_struct** %cl.addr, align 4
  %cost = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %13, i32 0, i32 1
  %14 = load i32, i32* %cost, align 4
  %conv = trunc i32 %14 to i16
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ndis, align 4
  %cost8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 1
  store i16 %conv, i16* %cost8, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ndis, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 0
  store %struct.Disjunct_struct* %16, %struct.Disjunct_struct** %next, align 4
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ndis, align 4
  store %struct.Disjunct_struct* %18, %struct.Disjunct_struct** %dis, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %19 = load %struct.clause_struct*, %struct.clause_struct** %cl.addr, align 4
  %next9 = getelementptr inbounds %struct.clause_struct, %struct.clause_struct* %19, i32 0, i32 0
  %20 = load %struct.clause_struct*, %struct.clause_struct** %next9, align 4
  store %struct.clause_struct* %20, %struct.clause_struct** %cl.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  ret %struct.Disjunct_struct* %21
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @build_disjuncts_for_X_node(%struct.X_node_struct* %x, i32 %cost_cutoff) #0 {
entry:
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  %load_struct.BigStruct_14 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_14
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  %load_struct.BigStruct_15 = load i32, i32* %struct.BigStruct_15
  %cost_cutoff.addr = alloca i32, align 4
  %x.addr = alloca %struct.X_node_struct*, align 4
  %c = alloca %struct.clause_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  store i32 %load_struct.BigStruct_15, i32* %cost_cutoff.addr, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_14, %struct.X_node_struct** %x.addr, align 4
  %0 = load i32, i32* %cost_cutoff.addr, align 4
  %1 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %1, i32 0, i32 1
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call %struct.clause_struct* @build_clause(%struct.Exp_struct* %2, i32 %0)
  store %struct.clause_struct* %call, %struct.clause_struct** %c, align 4
  %3 = load i32, i32* %cost_cutoff.addr, align 4
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %string = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %4, i32 0, i32 0
  %5 = load i8*, i8** %string, align 4
  %6 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %call1 = call %struct.Disjunct_struct* @build_disjunct(%struct.clause_struct* %6, i8* %5, i32 %3)
  store %struct.Disjunct_struct* %call1, %struct.Disjunct_struct** %dis, align 4
  %7 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  call void @free_clause_list(%struct.clause_struct* %7)
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %8
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @build_disjuncts_for_dict_node(%struct.Dict_node_struct* %dn) #0 {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %c = alloca %struct.clause_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %0, i32 0, i32 2
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call %struct.clause_struct* @build_clause(%struct.Exp_struct* %1, i32 1000)
  store %struct.clause_struct* %call, %struct.clause_struct** %c, align 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 0
  %3 = load i8*, i8** %string, align 4
  %4 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %call1 = call %struct.Disjunct_struct* @build_disjunct(%struct.clause_struct* %4, i8* %3, i32 1000)
  store %struct.Disjunct_struct* %call1, %struct.Disjunct_struct** %dis, align 4
  %5 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  call void @free_clause_list(%struct.clause_struct* %5)
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %6
}

; Function Attrs: noinline nounwind
define %struct.X_node_struct* @build_word_expressions(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %x = alloca %struct.X_node_struct*, align 4
  %y = alloca %struct.X_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  store %struct.Dict_node_struct* %call, %struct.Dict_node_struct** %dn, align 4
  store %struct.X_node_struct* null, %struct.X_node_struct** %x, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry, %while.body, %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %1, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %call1 = call i8* @xalloc(i32 12)
  %2 = bitcast i8* %call1 to %struct.X_node_struct*
  store %struct.X_node_struct* %2, %struct.X_node_struct** %y, align 4
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %y, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %4, i32 0, i32 2
  store %struct.X_node_struct* %3, %struct.X_node_struct** %next, align 4
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %y, align 4
  store %struct.X_node_struct* %5, %struct.X_node_struct** %x, align 4
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 2
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call2 = call %struct.Exp_struct* @copy_Exp(%struct.Exp_struct* %7)
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp3 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %8, i32 0, i32 1
  store %struct.Exp_struct* %call2, %struct.Exp_struct** %exp3, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %9, i32 0, i32 0
  %10 = load i8*, i8** %string, align 4
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %string4 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %11, i32 0, i32 0
  store i8* %10, i8** %string4, align 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %12, i32 0, i32 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %14 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  store %struct.X_node_struct* %14, %struct.X_node_struct** %struct.BigStruct_40
  ret %struct.X_node_struct* %14
}

; Function Attrs: noinline nounwind
define void @build_sentence_disjuncts(i32 %cost_cutoff) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %cost_cutoff.addr = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %cost_cutoff.addr, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc8, %entry, %for.inc8, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end9

for.body:                                         ; preds = %for.cond, %for.cond
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d, align 4
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %7 = load i32, i32* %cost_cutoff.addr, align 4
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %8, %struct.X_node_struct** %struct.BigStruct_14
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  store i32 %7, i32* %struct.BigStruct_15
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 32, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %call5 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct* %6)
  store %struct.Disjunct_struct* %call5, %struct.Disjunct_struct** %d, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %12 = load i32, i32* %w, align 4
  %13 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %13, i32 0, i32 %12
  %d7 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx6, i32 0, i32 2
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %d7, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.end, %for.end
  %14 = load i32, i32* %w, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end9:                                         ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @issue_link(%struct.Disjunct_struct* %ld, %struct.Disjunct_struct* %rd, i32 %lw, i32 %rw, %struct.Connector_struct* %lc, %struct.Connector_struct* %rc) #0 {
entry:
  %rc.addr = alloca %struct.Connector_struct*, align 4
  %lc.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %rd.addr = alloca %struct.Disjunct_struct*, align 4
  %ld.addr = alloca %struct.Disjunct_struct*, align 4
  store %struct.Connector_struct* %rc, %struct.Connector_struct** %rc.addr, align 4
  store %struct.Connector_struct* %lc, %struct.Connector_struct** %lc.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  store %struct.Disjunct_struct* %rd, %struct.Disjunct_struct** %rd.addr, align 4
  store %struct.Disjunct_struct* %ld, %struct.Disjunct_struct** %ld.addr, align 4
  %0 = load i32, i32* %lw.addr, align 4
  %1 = load i32, i32* @N_links, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @link_array, i32 0, i32 %1
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  store i32 %0, i32* %l, align 4
  %2 = load i32, i32* %rw.addr, align 4
  %3 = load i32, i32* @N_links, align 4
  %arrayidx1 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @link_array, i32 0, i32 %3
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx1, i32 0, i32 1
  store i32 %2, i32* %r, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %5 = load i32, i32* @N_links, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @link_array, i32 0, i32 %5
  %lc3 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx2, i32 0, i32 2
  store %struct.Connector_struct* %4, %struct.Connector_struct** %lc3, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %7 = load i32, i32* @N_links, align 4
  %arrayidx4 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @link_array, i32 0, i32 %7
  %rc5 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 3
  store %struct.Connector_struct* %6, %struct.Connector_struct** %rc5, align 4
  %8 = load i32, i32* @N_links, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* @N_links, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  %10 = load i32, i32* %lw.addr, align 4
  %arrayidx6 = getelementptr inbounds [250 x %struct.Disjunct_struct*], [250 x %struct.Disjunct_struct*]* @chosen_disjuncts, i32 0, i32 %10
  store %struct.Disjunct_struct* %9, %struct.Disjunct_struct** %arrayidx6, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %12 = load i32, i32* %rw.addr, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.Disjunct_struct*], [250 x %struct.Disjunct_struct*]* @chosen_disjuncts, i32 0, i32 %12
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %arrayidx7, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i32 @magic(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost) #0 {
entry:
  %retval = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %count = alloca i32, align 4
  store i32 %cost, i32* %cost.addr, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %cost.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %4 = load i32, i32* %rw.addr, align 4
  %5 = load i32, i32* %lw.addr, align 4
  %call = call i32 @table_lookup(i32 %5, i32 %4, %struct.Connector_struct* %3, %struct.Connector_struct* %2, i32 %1)
  store i32 %call, i32* %count, align 4
  %6 = load i32, i32* %count, align 4
  %cmp1 = icmp slt i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end
  %7 = load i32, i32* %count, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then2, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define void @list_links(%struct.Disjunct_struct* %ld, %struct.Disjunct_struct* %rd, i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost, i32 %index) #0 {
entry:
  %index.addr = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %rd.addr = alloca %struct.Disjunct_struct*, align 4
  %ld.addr = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %leftcount = alloca i32, align 4
  %rightcount = alloca i32, align 4
  %total = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %delta = alloca i32, align 4
  %lml = alloca i32, align 4
  %lmr = alloca i32, align 4
  %rml = alloca i32, align 4
  %rmr = alloca i32, align 4
  %lc = alloca i32, align 4
  %rc = alloca i32, align 4
  %lindex = alloca i32, align 4
  %rindex = alloca i32, align 4
  %lcost = alloca i32, align 4
  %rcost = alloca i32, align 4
  %w = alloca i32, align 4
  %start_word = alloca i32, align 4
  %end_word = alloca i32, align 4
  %m = alloca %struct.Match_node_struct*, align 4
  %m1 = alloca %struct.Match_node_struct*, align 4
  store i32 %index, i32* %index.addr, align 4
  store i32 %cost, i32* %cost.addr, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  store %struct.Disjunct_struct* %rd, %struct.Disjunct_struct** %rd.addr, align 4
  store %struct.Disjunct_struct* %ld, %struct.Disjunct_struct** %ld.addr, align 4
  store i32 0, i32* %lml, align 4
  store i32 0, i32* %lmr, align 4
  store i32 0, i32* %rml, align 4
  store i32 0, i32* %rmr, align 4
  %0 = load i32, i32* %rw.addr, align 4
  %1 = load i32, i32* %lw.addr, align 4
  %add = add nsw i32 1, %1
  %cmp = icmp eq i32 %0, %add
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %2, null
  br i1 %cmp1, label %land.lhs.true, label %if.then5

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp2 = icmp eq %struct.Connector_struct* %3, null
  br i1 %cmp2, label %land.lhs.true3, label %if.then5

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %index.addr, align 4
  %cmp4 = icmp eq i32 %4, 0
  br i1 %cmp4, label %if.end, label %if.then5

if.then5:                                         ; preds = %land.lhs.true3, %land.lhs.true, %if.then
  %5 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1.86, i32 0, i32 0
  %6 = getelementptr inbounds [42 x i8], [42 x i8]* @.str.87, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %5, i8* %6)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %land.lhs.true3
  br label %for.end540

if.end6:                                          ; preds = %entry
  %7 = load i32, i32* %cost.addr, align 4
  %cmp7 = icmp slt i32 %7, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  br label %for.end540

if.end9:                                          ; preds = %if.end6
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp10 = icmp eq %struct.Connector_struct* %8, null
  br i1 %cmp10, label %land.lhs.true11, label %if.end44

land.lhs.true11:                                  ; preds = %if.end9
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp12 = icmp eq %struct.Connector_struct* %9, null
  br i1 %cmp12, label %if.then13, label %if.end44

if.then13:                                        ; preds = %land.lhs.true11
  store i32 0, i32* %total, align 4
  %10 = load i32, i32* %lw.addr, align 4
  %add14 = add nsw i32 %10, 1
  store i32 %add14, i32* %w, align 4
  %11 = load i32, i32* %w, align 4
  %12 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %12, i32 0, i32 %11
  %d15 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d15, align 4
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then13
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp16 = icmp ne %struct.Disjunct_struct* %14, null
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp17 = icmp eq %struct.Connector_struct* %16, null
  br i1 %cmp17, label %if.then18, label %if.end31

if.then18:                                        ; preds = %for.body
  %17 = load i32, i32* %cost.addr, align 4
  %sub = sub nsw i32 %17, 1
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 5
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %21 = load i32, i32* %rw.addr, align 4
  %22 = load i32, i32* %w, align 4
  %call19 = call i32 @magic(i32 %22, i32 %21, %struct.Connector_struct* %20, %struct.Connector_struct* %18, i32 %sub)
  store i32 %call19, i32* %i, align 4
  %23 = load i32, i32* %i, align 4
  %24 = load i32, i32* %total, align 4
  %add20 = add nsw i32 %24, %23
  store i32 %add20, i32* %total, align 4
  %25 = load i32, i32* %total, align 4
  %26 = load i32, i32* %i, align 4
  %sub21 = sub nsw i32 %25, %26
  %27 = load i32, i32* %index.addr, align 4
  %cmp22 = icmp sle i32 %sub21, %27
  br i1 %cmp22, label %land.lhs.true23, label %if.end30

land.lhs.true23:                                  ; preds = %if.then18
  %28 = load i32, i32* %total, align 4
  %29 = load i32, i32* %index.addr, align 4
  %cmp24 = icmp sgt i32 %28, %29
  br i1 %cmp24, label %if.then25, label %if.end30

if.then25:                                        ; preds = %land.lhs.true23
  %30 = load i32, i32* %index.addr, align 4
  %31 = load i32, i32* %total, align 4
  %sub26 = sub nsw i32 %30, %31
  %32 = load i32, i32* %i, align 4
  %add27 = add nsw i32 %sub26, %32
  %33 = load i32, i32* %cost.addr, align 4
  %sub28 = sub nsw i32 %33, 1
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right29 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 5
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %right29, align 4
  %37 = load i32, i32* %rw.addr, align 4
  %38 = load i32, i32* %w, align 4
  %39 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %40, %struct.Disjunct_struct* %39, i32 %38, i32 %37, %struct.Connector_struct* %36, %struct.Connector_struct* %34, i32 %sub28, i32 %add27)
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %land.lhs.true23, %if.then18
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end31
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %41, i32 0, i32 0
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %42, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %cost.addr, align 4
  %sub32 = sub nsw i32 %43, 1
  %44 = load i32, i32* %rw.addr, align 4
  %45 = load i32, i32* %w, align 4
  %call33 = call i32 @magic(i32 %45, i32 %44, %struct.Connector_struct* null, %struct.Connector_struct* null, i32 %sub32)
  store i32 %call33, i32* %i, align 4
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* %total, align 4
  %add34 = add nsw i32 %47, %46
  store i32 %add34, i32* %total, align 4
  %48 = load i32, i32* %total, align 4
  %49 = load i32, i32* %i, align 4
  %sub35 = sub nsw i32 %48, %49
  %50 = load i32, i32* %index.addr, align 4
  %cmp36 = icmp sle i32 %sub35, %50
  br i1 %cmp36, label %land.lhs.true37, label %if.end43

land.lhs.true37:                                  ; preds = %for.end
  %51 = load i32, i32* %total, align 4
  %52 = load i32, i32* %index.addr, align 4
  %cmp38 = icmp sgt i32 %51, %52
  br i1 %cmp38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %land.lhs.true37
  %53 = load i32, i32* %index.addr, align 4
  %54 = load i32, i32* %total, align 4
  %sub40 = sub nsw i32 %53, %54
  %55 = load i32, i32* %i, align 4
  %add41 = add nsw i32 %sub40, %55
  %56 = load i32, i32* %cost.addr, align 4
  %sub42 = sub nsw i32 %56, 1
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %58 = load i32, i32* %rw.addr, align 4
  %59 = load i32, i32* %w, align 4
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  call void @list_links(%struct.Disjunct_struct* null, %struct.Disjunct_struct* %60, i32 %59, i32 %58, %struct.Connector_struct* null, %struct.Connector_struct* %57, i32 %sub42, i32 %add41)
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %land.lhs.true37, %for.end
  br label %for.end540

if.end44:                                         ; preds = %land.lhs.true11, %if.end9
  store i32 0, i32* %total, align 4
  %61 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp45 = icmp eq %struct.Connector_struct* %61, null
  br i1 %cmp45, label %if.then46, label %if.else

if.then46:                                        ; preds = %if.end44
  %62 = load i32, i32* %lw.addr, align 4
  %add47 = add nsw i32 %62, 1
  store i32 %add47, i32* %start_word, align 4
  br label %if.end48

if.else:                                          ; preds = %if.end44
  %63 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %63, i32 0, i32 1
  %64 = load i16, i16* %word, align 2
  %conv = sext i16 %64 to i32
  store i32 %conv, i32* %start_word, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then46
  %65 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp49 = icmp eq %struct.Connector_struct* %65, null
  br i1 %cmp49, label %if.then51, label %if.else58

if.then51:                                        ; preds = %if.end48
  %66 = load i32, i32* %rw.addr, align 4
  %sub52 = sub nsw i32 %66, 1
  %67 = load i32, i32* %lw.addr, align 4
  %68 = load i32, i32* @maxlinklength, align 4
  %add53 = add nsw i32 %67, %68
  %cmp54 = icmp slt i32 %sub52, %add53
  br i1 %cmp54, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then51
  %69 = load i32, i32* %rw.addr, align 4
  %sub56 = sub nsw i32 %69, 1
  br label %cond.end

cond.false:                                       ; preds = %if.then51
  %70 = load i32, i32* %lw.addr, align 4
  %71 = load i32, i32* @maxlinklength, align 4
  %add57 = add nsw i32 %70, %71
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub56, %cond.true ], [ %add57, %cond.false ]
  store i32 %cond, i32* %end_word, align 4
  br label %if.end61

if.else58:                                        ; preds = %if.end48
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %word59 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %72, i32 0, i32 1
  %73 = load i16, i16* %word59, align 2
  %conv60 = sext i16 %73 to i32
  store i32 %conv60, i32* %end_word, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.else58, %cond.end
  %74 = load i32, i32* %start_word, align 4
  store i32 %74, i32* %w, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc538, %if.end61
  %75 = load i32, i32* %w, align 4
  %76 = load i32, i32* %end_word, align 4
  %cmp63 = icmp sle i32 %75, %76
  br i1 %cmp63, label %for.body65, label %for.end540

for.body65:                                       ; preds = %for.cond62
  %77 = load i32, i32* %rw.addr, align 4
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %79 = load i32, i32* %lw.addr, align 4
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %81 = load i32, i32* %w, align 4
  %call66 = call %struct.Match_node_struct* @form_match_list(i32 %81, %struct.Connector_struct* %80, i32 %79, %struct.Connector_struct* %78, i32 %77)
  store %struct.Match_node_struct* %call66, %struct.Match_node_struct** %m, align 4
  store %struct.Match_node_struct* %call66, %struct.Match_node_struct** %m1, align 4
  br label %for.cond67

for.cond67:                                       ; preds = %for.inc535, %for.body65
  %82 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %cmp68 = icmp ne %struct.Match_node_struct* %82, null
  br i1 %cmp68, label %for.body70, label %for.end537

for.body70:                                       ; preds = %for.cond67
  %83 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %d71 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %83, i32 0, i32 1
  %84 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d71, align 4
  store %struct.Disjunct_struct* %84, %struct.Disjunct_struct** %d, align 4
  store i32 0, i32* %lcost, align 4
  br label %for.cond72

for.cond72:                                       ; preds = %for.inc533, %for.body70
  %85 = load i32, i32* %lcost, align 4
  %86 = load i32, i32* %cost.addr, align 4
  %cmp73 = icmp sle i32 %85, %86
  br i1 %cmp73, label %for.body75, label %for.end534

for.body75:                                       ; preds = %for.cond72
  %87 = load i32, i32* %cost.addr, align 4
  %88 = load i32, i32* %lcost, align 4
  %sub76 = sub nsw i32 %87, %88
  store i32 %sub76, i32* %rcost, align 4
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp77 = icmp ne %struct.Connector_struct* %89, null
  br i1 %cmp77, label %land.lhs.true79, label %if.else117

land.lhs.true79:                                  ; preds = %for.body75
  %90 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left80 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %90, i32 0, i32 4
  %91 = load %struct.Connector_struct*, %struct.Connector_struct** %left80, align 4
  %cmp81 = icmp ne %struct.Connector_struct* %91, null
  br i1 %cmp81, label %land.lhs.true83, label %if.else117

land.lhs.true83:                                  ; preds = %land.lhs.true79
  %92 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left84 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %92, i32 0, i32 4
  %93 = load %struct.Connector_struct*, %struct.Connector_struct** %left84, align 4
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %call85 = call i32 @match(%struct.Connector_struct* %94, %struct.Connector_struct* %93)
  %tobool = icmp ne i32 %call85, 0
  br i1 %tobool, label %if.then86, label %if.else117

if.then86:                                        ; preds = %land.lhs.true83
  %95 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %95, i32 0, i32 3
  %96 = load i8, i8* %multi, align 1
  %conv87 = sext i8 %96 to i32
  store i32 %conv87, i32* %lml, align 4
  %97 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left88 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %97, i32 0, i32 4
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %left88, align 4
  %multi89 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %98, i32 0, i32 3
  %99 = load i8, i8* %multi89, align 1
  %conv90 = sext i8 %99 to i32
  store i32 %conv90, i32* %lmr, align 4
  %100 = load i32, i32* %lcost, align 4
  %101 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left91 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %101, i32 0, i32 4
  %102 = load %struct.Connector_struct*, %struct.Connector_struct** %left91, align 4
  %next92 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %102, i32 0, i32 4
  %103 = load %struct.Connector_struct*, %struct.Connector_struct** %next92, align 4
  %104 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next93 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %104, i32 0, i32 4
  %105 = load %struct.Connector_struct*, %struct.Connector_struct** %next93, align 4
  %106 = load i32, i32* %w, align 4
  %107 = load i32, i32* %lw.addr, align 4
  %call94 = call i32 @magic(i32 %107, i32 %106, %struct.Connector_struct* %105, %struct.Connector_struct* %103, i32 %100)
  store i32 %call94, i32* %leftcount, align 4
  %108 = load i32, i32* %lml, align 4
  %tobool95 = icmp ne i32 %108, 0
  br i1 %tobool95, label %if.then96, label %if.end101

if.then96:                                        ; preds = %if.then86
  %109 = load i32, i32* %lcost, align 4
  %110 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left97 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %110, i32 0, i32 4
  %111 = load %struct.Connector_struct*, %struct.Connector_struct** %left97, align 4
  %next98 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %111, i32 0, i32 4
  %112 = load %struct.Connector_struct*, %struct.Connector_struct** %next98, align 4
  %113 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %114 = load i32, i32* %w, align 4
  %115 = load i32, i32* %lw.addr, align 4
  %call99 = call i32 @magic(i32 %115, i32 %114, %struct.Connector_struct* %113, %struct.Connector_struct* %112, i32 %109)
  %116 = load i32, i32* %leftcount, align 4
  %add100 = add nsw i32 %116, %call99
  store i32 %add100, i32* %leftcount, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.then96, %if.then86
  %117 = load i32, i32* %lmr, align 4
  %tobool102 = icmp ne i32 %117, 0
  br i1 %tobool102, label %if.then103, label %if.end108

if.then103:                                       ; preds = %if.end101
  %118 = load i32, i32* %lcost, align 4
  %119 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left104 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %119, i32 0, i32 4
  %120 = load %struct.Connector_struct*, %struct.Connector_struct** %left104, align 4
  %121 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next105 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %121, i32 0, i32 4
  %122 = load %struct.Connector_struct*, %struct.Connector_struct** %next105, align 4
  %123 = load i32, i32* %w, align 4
  %124 = load i32, i32* %lw.addr, align 4
  %call106 = call i32 @magic(i32 %124, i32 %123, %struct.Connector_struct* %122, %struct.Connector_struct* %120, i32 %118)
  %125 = load i32, i32* %leftcount, align 4
  %add107 = add nsw i32 %125, %call106
  store i32 %add107, i32* %leftcount, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.then103, %if.end101
  %126 = load i32, i32* %lml, align 4
  %tobool109 = icmp ne i32 %126, 0
  br i1 %tobool109, label %land.lhs.true110, label %if.end116

land.lhs.true110:                                 ; preds = %if.end108
  %127 = load i32, i32* %lmr, align 4
  %tobool111 = icmp ne i32 %127, 0
  br i1 %tobool111, label %if.then112, label %if.end116

if.then112:                                       ; preds = %land.lhs.true110
  %128 = load i32, i32* %lcost, align 4
  %129 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left113 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %129, i32 0, i32 4
  %130 = load %struct.Connector_struct*, %struct.Connector_struct** %left113, align 4
  %131 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %132 = load i32, i32* %w, align 4
  %133 = load i32, i32* %lw.addr, align 4
  %call114 = call i32 @magic(i32 %133, i32 %132, %struct.Connector_struct* %131, %struct.Connector_struct* %130, i32 %128)
  %134 = load i32, i32* %leftcount, align 4
  %add115 = add nsw i32 %134, %call114
  store i32 %add115, i32* %leftcount, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.then112, %land.lhs.true110, %if.end108
  br label %if.end118

if.else117:                                       ; preds = %land.lhs.true83, %land.lhs.true79, %for.body75
  store i32 0, i32* %leftcount, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.else117, %if.end116
  %135 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right119 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %135, i32 0, i32 5
  %136 = load %struct.Connector_struct*, %struct.Connector_struct** %right119, align 4
  %cmp120 = icmp ne %struct.Connector_struct* %136, null
  br i1 %cmp120, label %land.lhs.true122, label %if.else161

land.lhs.true122:                                 ; preds = %if.end118
  %137 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp123 = icmp ne %struct.Connector_struct* %137, null
  br i1 %cmp123, label %land.lhs.true125, label %if.else161

land.lhs.true125:                                 ; preds = %land.lhs.true122
  %138 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %139 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right126 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %139, i32 0, i32 5
  %140 = load %struct.Connector_struct*, %struct.Connector_struct** %right126, align 4
  %call127 = call i32 @match(%struct.Connector_struct* %140, %struct.Connector_struct* %138)
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %if.then129, label %if.else161

if.then129:                                       ; preds = %land.lhs.true125
  %141 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right130 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %141, i32 0, i32 5
  %142 = load %struct.Connector_struct*, %struct.Connector_struct** %right130, align 4
  %multi131 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %142, i32 0, i32 3
  %143 = load i8, i8* %multi131, align 1
  %conv132 = sext i8 %143 to i32
  store i32 %conv132, i32* %rml, align 4
  %144 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi133 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %144, i32 0, i32 3
  %145 = load i8, i8* %multi133, align 1
  %conv134 = sext i8 %145 to i32
  store i32 %conv134, i32* %rmr, align 4
  %146 = load i32, i32* %rcost, align 4
  %147 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next135 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %147, i32 0, i32 4
  %148 = load %struct.Connector_struct*, %struct.Connector_struct** %next135, align 4
  %149 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right136 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %149, i32 0, i32 5
  %150 = load %struct.Connector_struct*, %struct.Connector_struct** %right136, align 4
  %next137 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %150, i32 0, i32 4
  %151 = load %struct.Connector_struct*, %struct.Connector_struct** %next137, align 4
  %152 = load i32, i32* %rw.addr, align 4
  %153 = load i32, i32* %w, align 4
  %call138 = call i32 @magic(i32 %153, i32 %152, %struct.Connector_struct* %151, %struct.Connector_struct* %148, i32 %146)
  store i32 %call138, i32* %rightcount, align 4
  %154 = load i32, i32* %rml, align 4
  %tobool139 = icmp ne i32 %154, 0
  br i1 %tobool139, label %if.then140, label %if.end145

if.then140:                                       ; preds = %if.then129
  %155 = load i32, i32* %rcost, align 4
  %156 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next141 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %156, i32 0, i32 4
  %157 = load %struct.Connector_struct*, %struct.Connector_struct** %next141, align 4
  %158 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right142 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %158, i32 0, i32 5
  %159 = load %struct.Connector_struct*, %struct.Connector_struct** %right142, align 4
  %160 = load i32, i32* %rw.addr, align 4
  %161 = load i32, i32* %w, align 4
  %call143 = call i32 @magic(i32 %161, i32 %160, %struct.Connector_struct* %159, %struct.Connector_struct* %157, i32 %155)
  %162 = load i32, i32* %rightcount, align 4
  %add144 = add nsw i32 %162, %call143
  store i32 %add144, i32* %rightcount, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.then140, %if.then129
  %163 = load i32, i32* %rmr, align 4
  %tobool146 = icmp ne i32 %163, 0
  br i1 %tobool146, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.end145
  %164 = load i32, i32* %rcost, align 4
  %165 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %166 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right148 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %166, i32 0, i32 5
  %167 = load %struct.Connector_struct*, %struct.Connector_struct** %right148, align 4
  %next149 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %167, i32 0, i32 4
  %168 = load %struct.Connector_struct*, %struct.Connector_struct** %next149, align 4
  %169 = load i32, i32* %rw.addr, align 4
  %170 = load i32, i32* %w, align 4
  %call150 = call i32 @magic(i32 %170, i32 %169, %struct.Connector_struct* %168, %struct.Connector_struct* %165, i32 %164)
  %171 = load i32, i32* %rightcount, align 4
  %add151 = add nsw i32 %171, %call150
  store i32 %add151, i32* %rightcount, align 4
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.end145
  %172 = load i32, i32* %rml, align 4
  %tobool153 = icmp ne i32 %172, 0
  br i1 %tobool153, label %land.lhs.true154, label %if.end160

land.lhs.true154:                                 ; preds = %if.end152
  %173 = load i32, i32* %rmr, align 4
  %tobool155 = icmp ne i32 %173, 0
  br i1 %tobool155, label %if.then156, label %if.end160

if.then156:                                       ; preds = %land.lhs.true154
  %174 = load i32, i32* %rcost, align 4
  %175 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %176 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right157 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %176, i32 0, i32 5
  %177 = load %struct.Connector_struct*, %struct.Connector_struct** %right157, align 4
  %178 = load i32, i32* %rw.addr, align 4
  %179 = load i32, i32* %w, align 4
  %call158 = call i32 @magic(i32 %179, i32 %178, %struct.Connector_struct* %177, %struct.Connector_struct* %175, i32 %174)
  %180 = load i32, i32* %rightcount, align 4
  %add159 = add nsw i32 %180, %call158
  store i32 %add159, i32* %rightcount, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.then156, %land.lhs.true154, %if.end152
  br label %if.end162

if.else161:                                       ; preds = %land.lhs.true125, %land.lhs.true122, %if.end118
  store i32 0, i32* %rightcount, align 4
  br label %if.end162

if.end162:                                        ; preds = %if.else161, %if.end160
  %181 = load i32, i32* %leftcount, align 4
  %182 = load i32, i32* %rightcount, align 4
  %mul = mul nsw i32 %181, %182
  store i32 %mul, i32* %i, align 4
  %183 = load i32, i32* %i, align 4
  %184 = load i32, i32* %total, align 4
  %add163 = add nsw i32 %184, %183
  store i32 %add163, i32* %total, align 4
  %185 = load i32, i32* %total, align 4
  %186 = load i32, i32* %i, align 4
  %sub164 = sub nsw i32 %185, %186
  %187 = load i32, i32* %index.addr, align 4
  %cmp165 = icmp sle i32 %sub164, %187
  br i1 %cmp165, label %land.lhs.true167, label %if.end329

land.lhs.true167:                                 ; preds = %if.end162
  %188 = load i32, i32* %total, align 4
  %189 = load i32, i32* %index.addr, align 4
  %cmp168 = icmp sgt i32 %188, %189
  br i1 %cmp168, label %if.then170, label %if.end329

if.then170:                                       ; preds = %land.lhs.true167
  %190 = load i32, i32* %index.addr, align 4
  %191 = load i32, i32* %total, align 4
  %sub171 = sub nsw i32 %190, %191
  %192 = load i32, i32* %i, align 4
  %add172 = add nsw i32 %sub171, %192
  store i32 %add172, i32* %x, align 4
  %193 = load i32, i32* %x, align 4
  %194 = load i32, i32* %rightcount, align 4
  %div = sdiv i32 %193, %194
  store i32 %div, i32* %lindex, align 4
  %195 = load i32, i32* %x, align 4
  %196 = load i32, i32* %rightcount, align 4
  %rem = srem i32 %195, %196
  store i32 %rem, i32* %rindex, align 4
  store i32 0, i32* %lc, align 4
  %197 = load i32, i32* %lcost, align 4
  %198 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left173 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %198, i32 0, i32 4
  %199 = load %struct.Connector_struct*, %struct.Connector_struct** %left173, align 4
  %next174 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %199, i32 0, i32 4
  %200 = load %struct.Connector_struct*, %struct.Connector_struct** %next174, align 4
  %201 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next175 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %201, i32 0, i32 4
  %202 = load %struct.Connector_struct*, %struct.Connector_struct** %next175, align 4
  %203 = load i32, i32* %w, align 4
  %204 = load i32, i32* %lw.addr, align 4
  %call176 = call i32 @magic(i32 %204, i32 %203, %struct.Connector_struct* %202, %struct.Connector_struct* %200, i32 %197)
  store i32 %call176, i32* %delta, align 4
  %205 = load i32, i32* %delta, align 4
  %206 = load i32, i32* %lc, align 4
  %add177 = add nsw i32 %206, %205
  store i32 %add177, i32* %lc, align 4
  %207 = load i32, i32* %lc, align 4
  %208 = load i32, i32* %lindex, align 4
  %cmp178 = icmp sgt i32 %207, %208
  br i1 %cmp178, label %if.then180, label %if.end187

if.then180:                                       ; preds = %if.then170
  %209 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left181 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %209, i32 0, i32 4
  %210 = load %struct.Connector_struct*, %struct.Connector_struct** %left181, align 4
  %211 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %212 = load i32, i32* %w, align 4
  %213 = load i32, i32* %lw.addr, align 4
  %214 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %215 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %215, %struct.Disjunct_struct* %214, i32 %213, i32 %212, %struct.Connector_struct* %211, %struct.Connector_struct* %210)
  %216 = load i32, i32* %lindex, align 4
  %217 = load i32, i32* %lc, align 4
  %sub182 = sub nsw i32 %216, %217
  %218 = load i32, i32* %delta, align 4
  %add183 = add nsw i32 %sub182, %218
  %219 = load i32, i32* %lcost, align 4
  %220 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left184 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %220, i32 0, i32 4
  %221 = load %struct.Connector_struct*, %struct.Connector_struct** %left184, align 4
  %next185 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %221, i32 0, i32 4
  %222 = load %struct.Connector_struct*, %struct.Connector_struct** %next185, align 4
  %223 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next186 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %223, i32 0, i32 4
  %224 = load %struct.Connector_struct*, %struct.Connector_struct** %next186, align 4
  %225 = load i32, i32* %w, align 4
  %226 = load i32, i32* %lw.addr, align 4
  %227 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %228 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %228, %struct.Disjunct_struct* %227, i32 %226, i32 %225, %struct.Connector_struct* %224, %struct.Connector_struct* %222, i32 %219, i32 %add183)
  br label %if.end187

if.end187:                                        ; preds = %if.then180, %if.then170
  %229 = load i32, i32* %lml, align 4
  %tobool188 = icmp ne i32 %229, 0
  br i1 %tobool188, label %if.then189, label %if.else193

if.then189:                                       ; preds = %if.end187
  %230 = load i32, i32* %lcost, align 4
  %231 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left190 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %231, i32 0, i32 4
  %232 = load %struct.Connector_struct*, %struct.Connector_struct** %left190, align 4
  %next191 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %232, i32 0, i32 4
  %233 = load %struct.Connector_struct*, %struct.Connector_struct** %next191, align 4
  %234 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %235 = load i32, i32* %w, align 4
  %236 = load i32, i32* %lw.addr, align 4
  %call192 = call i32 @magic(i32 %236, i32 %235, %struct.Connector_struct* %234, %struct.Connector_struct* %233, i32 %230)
  store i32 %call192, i32* %delta, align 4
  br label %if.end194

if.else193:                                       ; preds = %if.end187
  store i32 0, i32* %delta, align 4
  br label %if.end194

if.end194:                                        ; preds = %if.else193, %if.then189
  %237 = load i32, i32* %delta, align 4
  %238 = load i32, i32* %lc, align 4
  %add195 = add nsw i32 %238, %237
  store i32 %add195, i32* %lc, align 4
  %239 = load i32, i32* %lc, align 4
  %240 = load i32, i32* %delta, align 4
  %sub196 = sub nsw i32 %239, %240
  %241 = load i32, i32* %lindex, align 4
  %cmp197 = icmp sle i32 %sub196, %241
  br i1 %cmp197, label %land.lhs.true199, label %if.end208

land.lhs.true199:                                 ; preds = %if.end194
  %242 = load i32, i32* %lc, align 4
  %243 = load i32, i32* %lindex, align 4
  %cmp200 = icmp sgt i32 %242, %243
  br i1 %cmp200, label %if.then202, label %if.end208

if.then202:                                       ; preds = %land.lhs.true199
  %244 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left203 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %244, i32 0, i32 4
  %245 = load %struct.Connector_struct*, %struct.Connector_struct** %left203, align 4
  %246 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %247 = load i32, i32* %w, align 4
  %248 = load i32, i32* %lw.addr, align 4
  %249 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %250 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %250, %struct.Disjunct_struct* %249, i32 %248, i32 %247, %struct.Connector_struct* %246, %struct.Connector_struct* %245)
  %251 = load i32, i32* %lindex, align 4
  %252 = load i32, i32* %lc, align 4
  %sub204 = sub nsw i32 %251, %252
  %253 = load i32, i32* %delta, align 4
  %add205 = add nsw i32 %sub204, %253
  %254 = load i32, i32* %lcost, align 4
  %255 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left206 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %255, i32 0, i32 4
  %256 = load %struct.Connector_struct*, %struct.Connector_struct** %left206, align 4
  %next207 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %256, i32 0, i32 4
  %257 = load %struct.Connector_struct*, %struct.Connector_struct** %next207, align 4
  %258 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %259 = load i32, i32* %w, align 4
  %260 = load i32, i32* %lw.addr, align 4
  %261 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %262 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %262, %struct.Disjunct_struct* %261, i32 %260, i32 %259, %struct.Connector_struct* %258, %struct.Connector_struct* %257, i32 %254, i32 %add205)
  br label %if.end208

if.end208:                                        ; preds = %if.then202, %land.lhs.true199, %if.end194
  %263 = load i32, i32* %lmr, align 4
  %tobool209 = icmp ne i32 %263, 0
  br i1 %tobool209, label %if.then210, label %if.else214

if.then210:                                       ; preds = %if.end208
  %264 = load i32, i32* %lcost, align 4
  %265 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left211 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %265, i32 0, i32 4
  %266 = load %struct.Connector_struct*, %struct.Connector_struct** %left211, align 4
  %267 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next212 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %267, i32 0, i32 4
  %268 = load %struct.Connector_struct*, %struct.Connector_struct** %next212, align 4
  %269 = load i32, i32* %w, align 4
  %270 = load i32, i32* %lw.addr, align 4
  %call213 = call i32 @magic(i32 %270, i32 %269, %struct.Connector_struct* %268, %struct.Connector_struct* %266, i32 %264)
  store i32 %call213, i32* %delta, align 4
  br label %if.end215

if.else214:                                       ; preds = %if.end208
  store i32 0, i32* %delta, align 4
  br label %if.end215

if.end215:                                        ; preds = %if.else214, %if.then210
  %271 = load i32, i32* %delta, align 4
  %272 = load i32, i32* %lc, align 4
  %add216 = add nsw i32 %272, %271
  store i32 %add216, i32* %lc, align 4
  %273 = load i32, i32* %lc, align 4
  %274 = load i32, i32* %delta, align 4
  %sub217 = sub nsw i32 %273, %274
  %275 = load i32, i32* %lindex, align 4
  %cmp218 = icmp sle i32 %sub217, %275
  br i1 %cmp218, label %land.lhs.true220, label %if.end229

land.lhs.true220:                                 ; preds = %if.end215
  %276 = load i32, i32* %lc, align 4
  %277 = load i32, i32* %lindex, align 4
  %cmp221 = icmp sgt i32 %276, %277
  br i1 %cmp221, label %if.then223, label %if.end229

if.then223:                                       ; preds = %land.lhs.true220
  %278 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left224 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %278, i32 0, i32 4
  %279 = load %struct.Connector_struct*, %struct.Connector_struct** %left224, align 4
  %280 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %281 = load i32, i32* %w, align 4
  %282 = load i32, i32* %lw.addr, align 4
  %283 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %284 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %284, %struct.Disjunct_struct* %283, i32 %282, i32 %281, %struct.Connector_struct* %280, %struct.Connector_struct* %279)
  %285 = load i32, i32* %lindex, align 4
  %286 = load i32, i32* %lc, align 4
  %sub225 = sub nsw i32 %285, %286
  %287 = load i32, i32* %delta, align 4
  %add226 = add nsw i32 %sub225, %287
  %288 = load i32, i32* %lcost, align 4
  %289 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left227 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %289, i32 0, i32 4
  %290 = load %struct.Connector_struct*, %struct.Connector_struct** %left227, align 4
  %291 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next228 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %291, i32 0, i32 4
  %292 = load %struct.Connector_struct*, %struct.Connector_struct** %next228, align 4
  %293 = load i32, i32* %w, align 4
  %294 = load i32, i32* %lw.addr, align 4
  %295 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %296 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %296, %struct.Disjunct_struct* %295, i32 %294, i32 %293, %struct.Connector_struct* %292, %struct.Connector_struct* %290, i32 %288, i32 %add226)
  br label %if.end229

if.end229:                                        ; preds = %if.then223, %land.lhs.true220, %if.end215
  %297 = load i32, i32* %lml, align 4
  %tobool230 = icmp ne i32 %297, 0
  br i1 %tobool230, label %land.lhs.true231, label %if.else236

land.lhs.true231:                                 ; preds = %if.end229
  %298 = load i32, i32* %lmr, align 4
  %tobool232 = icmp ne i32 %298, 0
  br i1 %tobool232, label %if.then233, label %if.else236

if.then233:                                       ; preds = %land.lhs.true231
  %299 = load i32, i32* %lcost, align 4
  %300 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left234 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %300, i32 0, i32 4
  %301 = load %struct.Connector_struct*, %struct.Connector_struct** %left234, align 4
  %302 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %303 = load i32, i32* %w, align 4
  %304 = load i32, i32* %lw.addr, align 4
  %call235 = call i32 @magic(i32 %304, i32 %303, %struct.Connector_struct* %302, %struct.Connector_struct* %301, i32 %299)
  store i32 %call235, i32* %delta, align 4
  br label %if.end237

if.else236:                                       ; preds = %land.lhs.true231, %if.end229
  store i32 0, i32* %delta, align 4
  br label %if.end237

if.end237:                                        ; preds = %if.else236, %if.then233
  %305 = load i32, i32* %delta, align 4
  %306 = load i32, i32* %lc, align 4
  %add238 = add nsw i32 %306, %305
  store i32 %add238, i32* %lc, align 4
  %307 = load i32, i32* %lc, align 4
  %308 = load i32, i32* %delta, align 4
  %sub239 = sub nsw i32 %307, %308
  %309 = load i32, i32* %lindex, align 4
  %cmp240 = icmp sle i32 %sub239, %309
  br i1 %cmp240, label %land.lhs.true242, label %if.end250

land.lhs.true242:                                 ; preds = %if.end237
  %310 = load i32, i32* %lc, align 4
  %311 = load i32, i32* %lindex, align 4
  %cmp243 = icmp sgt i32 %310, %311
  br i1 %cmp243, label %if.then245, label %if.end250

if.then245:                                       ; preds = %land.lhs.true242
  %312 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left246 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %312, i32 0, i32 4
  %313 = load %struct.Connector_struct*, %struct.Connector_struct** %left246, align 4
  %314 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %315 = load i32, i32* %w, align 4
  %316 = load i32, i32* %lw.addr, align 4
  %317 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %318 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %318, %struct.Disjunct_struct* %317, i32 %316, i32 %315, %struct.Connector_struct* %314, %struct.Connector_struct* %313)
  %319 = load i32, i32* %lindex, align 4
  %320 = load i32, i32* %lc, align 4
  %sub247 = sub nsw i32 %319, %320
  %321 = load i32, i32* %delta, align 4
  %add248 = add nsw i32 %sub247, %321
  %322 = load i32, i32* %lcost, align 4
  %323 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left249 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %323, i32 0, i32 4
  %324 = load %struct.Connector_struct*, %struct.Connector_struct** %left249, align 4
  %325 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %326 = load i32, i32* %w, align 4
  %327 = load i32, i32* %lw.addr, align 4
  %328 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %329 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %329, %struct.Disjunct_struct* %328, i32 %327, i32 %326, %struct.Connector_struct* %325, %struct.Connector_struct* %324, i32 %322, i32 %add248)
  br label %if.end250

if.end250:                                        ; preds = %if.then245, %land.lhs.true242, %if.end237
  store i32 0, i32* %rc, align 4
  %330 = load i32, i32* %rcost, align 4
  %331 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next251 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %331, i32 0, i32 4
  %332 = load %struct.Connector_struct*, %struct.Connector_struct** %next251, align 4
  %333 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right252 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %333, i32 0, i32 5
  %334 = load %struct.Connector_struct*, %struct.Connector_struct** %right252, align 4
  %next253 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %334, i32 0, i32 4
  %335 = load %struct.Connector_struct*, %struct.Connector_struct** %next253, align 4
  %336 = load i32, i32* %rw.addr, align 4
  %337 = load i32, i32* %w, align 4
  %call254 = call i32 @magic(i32 %337, i32 %336, %struct.Connector_struct* %335, %struct.Connector_struct* %332, i32 %330)
  store i32 %call254, i32* %delta, align 4
  %338 = load i32, i32* %delta, align 4
  %339 = load i32, i32* %rc, align 4
  %add255 = add nsw i32 %339, %338
  store i32 %add255, i32* %rc, align 4
  %340 = load i32, i32* %rc, align 4
  %341 = load i32, i32* %rindex, align 4
  %cmp256 = icmp sgt i32 %340, %341
  br i1 %cmp256, label %if.then258, label %if.end265

if.then258:                                       ; preds = %if.end250
  %342 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %343 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right259 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %343, i32 0, i32 5
  %344 = load %struct.Connector_struct*, %struct.Connector_struct** %right259, align 4
  %345 = load i32, i32* %rw.addr, align 4
  %346 = load i32, i32* %w, align 4
  %347 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %348 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %348, %struct.Disjunct_struct* %347, i32 %346, i32 %345, %struct.Connector_struct* %344, %struct.Connector_struct* %342)
  %349 = load i32, i32* %rindex, align 4
  %350 = load i32, i32* %rc, align 4
  %sub260 = sub nsw i32 %349, %350
  %351 = load i32, i32* %delta, align 4
  %add261 = add nsw i32 %sub260, %351
  %352 = load i32, i32* %rcost, align 4
  %353 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next262 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %353, i32 0, i32 4
  %354 = load %struct.Connector_struct*, %struct.Connector_struct** %next262, align 4
  %355 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right263 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %355, i32 0, i32 5
  %356 = load %struct.Connector_struct*, %struct.Connector_struct** %right263, align 4
  %next264 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %356, i32 0, i32 4
  %357 = load %struct.Connector_struct*, %struct.Connector_struct** %next264, align 4
  %358 = load i32, i32* %rw.addr, align 4
  %359 = load i32, i32* %w, align 4
  %360 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %361 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %361, %struct.Disjunct_struct* %360, i32 %359, i32 %358, %struct.Connector_struct* %357, %struct.Connector_struct* %354, i32 %352, i32 %add261)
  br label %if.end265

if.end265:                                        ; preds = %if.then258, %if.end250
  %362 = load i32, i32* %rml, align 4
  %tobool266 = icmp ne i32 %362, 0
  br i1 %tobool266, label %if.then267, label %if.else271

if.then267:                                       ; preds = %if.end265
  %363 = load i32, i32* %rcost, align 4
  %364 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next268 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %364, i32 0, i32 4
  %365 = load %struct.Connector_struct*, %struct.Connector_struct** %next268, align 4
  %366 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right269 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %366, i32 0, i32 5
  %367 = load %struct.Connector_struct*, %struct.Connector_struct** %right269, align 4
  %368 = load i32, i32* %rw.addr, align 4
  %369 = load i32, i32* %w, align 4
  %call270 = call i32 @magic(i32 %369, i32 %368, %struct.Connector_struct* %367, %struct.Connector_struct* %365, i32 %363)
  store i32 %call270, i32* %delta, align 4
  br label %if.end272

if.else271:                                       ; preds = %if.end265
  store i32 0, i32* %delta, align 4
  br label %if.end272

if.end272:                                        ; preds = %if.else271, %if.then267
  %370 = load i32, i32* %delta, align 4
  %371 = load i32, i32* %rc, align 4
  %add273 = add nsw i32 %371, %370
  store i32 %add273, i32* %rc, align 4
  %372 = load i32, i32* %rc, align 4
  %373 = load i32, i32* %delta, align 4
  %sub274 = sub nsw i32 %372, %373
  %374 = load i32, i32* %rindex, align 4
  %cmp275 = icmp sle i32 %sub274, %374
  br i1 %cmp275, label %land.lhs.true277, label %if.end286

land.lhs.true277:                                 ; preds = %if.end272
  %375 = load i32, i32* %rc, align 4
  %376 = load i32, i32* %rindex, align 4
  %cmp278 = icmp sgt i32 %375, %376
  br i1 %cmp278, label %if.then280, label %if.end286

if.then280:                                       ; preds = %land.lhs.true277
  %377 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %378 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right281 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %378, i32 0, i32 5
  %379 = load %struct.Connector_struct*, %struct.Connector_struct** %right281, align 4
  %380 = load i32, i32* %rw.addr, align 4
  %381 = load i32, i32* %w, align 4
  %382 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %383 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %383, %struct.Disjunct_struct* %382, i32 %381, i32 %380, %struct.Connector_struct* %379, %struct.Connector_struct* %377)
  %384 = load i32, i32* %rindex, align 4
  %385 = load i32, i32* %rc, align 4
  %sub282 = sub nsw i32 %384, %385
  %386 = load i32, i32* %delta, align 4
  %add283 = add nsw i32 %sub282, %386
  %387 = load i32, i32* %rcost, align 4
  %388 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next284 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %388, i32 0, i32 4
  %389 = load %struct.Connector_struct*, %struct.Connector_struct** %next284, align 4
  %390 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right285 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %390, i32 0, i32 5
  %391 = load %struct.Connector_struct*, %struct.Connector_struct** %right285, align 4
  %392 = load i32, i32* %rw.addr, align 4
  %393 = load i32, i32* %w, align 4
  %394 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %395 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %395, %struct.Disjunct_struct* %394, i32 %393, i32 %392, %struct.Connector_struct* %391, %struct.Connector_struct* %389, i32 %387, i32 %add283)
  br label %if.end286

if.end286:                                        ; preds = %if.then280, %land.lhs.true277, %if.end272
  %396 = load i32, i32* %rmr, align 4
  %tobool287 = icmp ne i32 %396, 0
  br i1 %tobool287, label %if.then288, label %if.else292

if.then288:                                       ; preds = %if.end286
  %397 = load i32, i32* %rcost, align 4
  %398 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %399 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right289 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %399, i32 0, i32 5
  %400 = load %struct.Connector_struct*, %struct.Connector_struct** %right289, align 4
  %next290 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %400, i32 0, i32 4
  %401 = load %struct.Connector_struct*, %struct.Connector_struct** %next290, align 4
  %402 = load i32, i32* %rw.addr, align 4
  %403 = load i32, i32* %w, align 4
  %call291 = call i32 @magic(i32 %403, i32 %402, %struct.Connector_struct* %401, %struct.Connector_struct* %398, i32 %397)
  store i32 %call291, i32* %delta, align 4
  br label %if.end293

if.else292:                                       ; preds = %if.end286
  store i32 0, i32* %delta, align 4
  br label %if.end293

if.end293:                                        ; preds = %if.else292, %if.then288
  %404 = load i32, i32* %delta, align 4
  %405 = load i32, i32* %rc, align 4
  %add294 = add nsw i32 %405, %404
  store i32 %add294, i32* %rc, align 4
  %406 = load i32, i32* %rc, align 4
  %407 = load i32, i32* %delta, align 4
  %sub295 = sub nsw i32 %406, %407
  %408 = load i32, i32* %rindex, align 4
  %cmp296 = icmp sle i32 %sub295, %408
  br i1 %cmp296, label %land.lhs.true298, label %if.end307

land.lhs.true298:                                 ; preds = %if.end293
  %409 = load i32, i32* %rc, align 4
  %410 = load i32, i32* %rindex, align 4
  %cmp299 = icmp sgt i32 %409, %410
  br i1 %cmp299, label %if.then301, label %if.end307

if.then301:                                       ; preds = %land.lhs.true298
  %411 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %412 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right302 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %412, i32 0, i32 5
  %413 = load %struct.Connector_struct*, %struct.Connector_struct** %right302, align 4
  %414 = load i32, i32* %rw.addr, align 4
  %415 = load i32, i32* %w, align 4
  %416 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %417 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %417, %struct.Disjunct_struct* %416, i32 %415, i32 %414, %struct.Connector_struct* %413, %struct.Connector_struct* %411)
  %418 = load i32, i32* %rindex, align 4
  %419 = load i32, i32* %rc, align 4
  %sub303 = sub nsw i32 %418, %419
  %420 = load i32, i32* %delta, align 4
  %add304 = add nsw i32 %sub303, %420
  %421 = load i32, i32* %rcost, align 4
  %422 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %423 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right305 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %423, i32 0, i32 5
  %424 = load %struct.Connector_struct*, %struct.Connector_struct** %right305, align 4
  %next306 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %424, i32 0, i32 4
  %425 = load %struct.Connector_struct*, %struct.Connector_struct** %next306, align 4
  %426 = load i32, i32* %rw.addr, align 4
  %427 = load i32, i32* %w, align 4
  %428 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %429 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %429, %struct.Disjunct_struct* %428, i32 %427, i32 %426, %struct.Connector_struct* %425, %struct.Connector_struct* %422, i32 %421, i32 %add304)
  br label %if.end307

if.end307:                                        ; preds = %if.then301, %land.lhs.true298, %if.end293
  %430 = load i32, i32* %rml, align 4
  %tobool308 = icmp ne i32 %430, 0
  br i1 %tobool308, label %land.lhs.true309, label %if.else314

land.lhs.true309:                                 ; preds = %if.end307
  %431 = load i32, i32* %rmr, align 4
  %tobool310 = icmp ne i32 %431, 0
  br i1 %tobool310, label %if.then311, label %if.else314

if.then311:                                       ; preds = %land.lhs.true309
  %432 = load i32, i32* %rcost, align 4
  %433 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %434 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right312 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %434, i32 0, i32 5
  %435 = load %struct.Connector_struct*, %struct.Connector_struct** %right312, align 4
  %436 = load i32, i32* %rw.addr, align 4
  %437 = load i32, i32* %w, align 4
  %call313 = call i32 @magic(i32 %437, i32 %436, %struct.Connector_struct* %435, %struct.Connector_struct* %433, i32 %432)
  store i32 %call313, i32* %delta, align 4
  br label %if.end315

if.else314:                                       ; preds = %land.lhs.true309, %if.end307
  store i32 0, i32* %delta, align 4
  br label %if.end315

if.end315:                                        ; preds = %if.else314, %if.then311
  %438 = load i32, i32* %delta, align 4
  %439 = load i32, i32* %rc, align 4
  %add316 = add nsw i32 %439, %438
  store i32 %add316, i32* %rc, align 4
  %440 = load i32, i32* %rc, align 4
  %441 = load i32, i32* %delta, align 4
  %sub317 = sub nsw i32 %440, %441
  %442 = load i32, i32* %rindex, align 4
  %cmp318 = icmp sle i32 %sub317, %442
  br i1 %cmp318, label %land.lhs.true320, label %if.end328

land.lhs.true320:                                 ; preds = %if.end315
  %443 = load i32, i32* %rc, align 4
  %444 = load i32, i32* %rindex, align 4
  %cmp321 = icmp sgt i32 %443, %444
  br i1 %cmp321, label %if.then323, label %if.end328

if.then323:                                       ; preds = %land.lhs.true320
  %445 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %446 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right324 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %446, i32 0, i32 5
  %447 = load %struct.Connector_struct*, %struct.Connector_struct** %right324, align 4
  %448 = load i32, i32* %rw.addr, align 4
  %449 = load i32, i32* %w, align 4
  %450 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %451 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %451, %struct.Disjunct_struct* %450, i32 %449, i32 %448, %struct.Connector_struct* %447, %struct.Connector_struct* %445)
  %452 = load i32, i32* %rindex, align 4
  %453 = load i32, i32* %rc, align 4
  %sub325 = sub nsw i32 %452, %453
  %454 = load i32, i32* %delta, align 4
  %add326 = add nsw i32 %sub325, %454
  %455 = load i32, i32* %rcost, align 4
  %456 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %457 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right327 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %457, i32 0, i32 5
  %458 = load %struct.Connector_struct*, %struct.Connector_struct** %right327, align 4
  %459 = load i32, i32* %rw.addr, align 4
  %460 = load i32, i32* %w, align 4
  %461 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %462 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %462, %struct.Disjunct_struct* %461, i32 %460, i32 %459, %struct.Connector_struct* %458, %struct.Connector_struct* %456, i32 %455, i32 %add326)
  br label %if.end328

if.end328:                                        ; preds = %if.then323, %land.lhs.true320, %if.end315
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %land.lhs.true167, %if.end162
  %463 = load i32, i32* %leftcount, align 4
  %cmp330 = icmp sgt i32 %463, 0
  br i1 %cmp330, label %if.then332, label %if.else336

if.then332:                                       ; preds = %if.end329
  %464 = load i32, i32* %leftcount, align 4
  %465 = load i32, i32* %rcost, align 4
  %466 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %467 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right333 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %467, i32 0, i32 5
  %468 = load %struct.Connector_struct*, %struct.Connector_struct** %right333, align 4
  %469 = load i32, i32* %rw.addr, align 4
  %470 = load i32, i32* %w, align 4
  %call334 = call i32 @magic(i32 %470, i32 %469, %struct.Connector_struct* %468, %struct.Connector_struct* %466, i32 %465)
  %mul335 = mul nsw i32 %464, %call334
  store i32 %mul335, i32* %i, align 4
  br label %if.end337

if.else336:                                       ; preds = %if.end329
  store i32 0, i32* %i, align 4
  br label %if.end337

if.end337:                                        ; preds = %if.else336, %if.then332
  %471 = load i32, i32* %i, align 4
  %472 = load i32, i32* %total, align 4
  %add338 = add nsw i32 %472, %471
  store i32 %add338, i32* %total, align 4
  %473 = load i32, i32* %total, align 4
  %474 = load i32, i32* %i, align 4
  %sub339 = sub nsw i32 %473, %474
  %475 = load i32, i32* %index.addr, align 4
  %cmp340 = icmp sle i32 %sub339, %475
  br i1 %cmp340, label %land.lhs.true342, label %if.end429

land.lhs.true342:                                 ; preds = %if.end337
  %476 = load i32, i32* %total, align 4
  %477 = load i32, i32* %index.addr, align 4
  %cmp343 = icmp sgt i32 %476, %477
  br i1 %cmp343, label %if.then345, label %if.end429

if.then345:                                       ; preds = %land.lhs.true342
  %478 = load i32, i32* %index.addr, align 4
  %479 = load i32, i32* %total, align 4
  %sub346 = sub nsw i32 %478, %479
  %480 = load i32, i32* %i, align 4
  %add347 = add nsw i32 %sub346, %480
  store i32 %add347, i32* %x, align 4
  %481 = load i32, i32* %x, align 4
  %482 = load i32, i32* %leftcount, align 4
  %rem348 = srem i32 %481, %482
  store i32 %rem348, i32* %lindex, align 4
  %483 = load i32, i32* %x, align 4
  %484 = load i32, i32* %leftcount, align 4
  %div349 = sdiv i32 %483, %484
  store i32 %div349, i32* %rindex, align 4
  store i32 0, i32* %lc, align 4
  %485 = load i32, i32* %lcost, align 4
  %486 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left350 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %486, i32 0, i32 4
  %487 = load %struct.Connector_struct*, %struct.Connector_struct** %left350, align 4
  %next351 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %487, i32 0, i32 4
  %488 = load %struct.Connector_struct*, %struct.Connector_struct** %next351, align 4
  %489 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next352 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %489, i32 0, i32 4
  %490 = load %struct.Connector_struct*, %struct.Connector_struct** %next352, align 4
  %491 = load i32, i32* %w, align 4
  %492 = load i32, i32* %lw.addr, align 4
  %call353 = call i32 @magic(i32 %492, i32 %491, %struct.Connector_struct* %490, %struct.Connector_struct* %488, i32 %485)
  store i32 %call353, i32* %delta, align 4
  %493 = load i32, i32* %delta, align 4
  %494 = load i32, i32* %lc, align 4
  %add354 = add nsw i32 %494, %493
  store i32 %add354, i32* %lc, align 4
  %495 = load i32, i32* %lc, align 4
  %496 = load i32, i32* %lindex, align 4
  %cmp355 = icmp sgt i32 %495, %496
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then345
  %497 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left358 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %497, i32 0, i32 4
  %498 = load %struct.Connector_struct*, %struct.Connector_struct** %left358, align 4
  %499 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %500 = load i32, i32* %w, align 4
  %501 = load i32, i32* %lw.addr, align 4
  %502 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %503 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %503, %struct.Disjunct_struct* %502, i32 %501, i32 %500, %struct.Connector_struct* %499, %struct.Connector_struct* %498)
  %504 = load i32, i32* %lindex, align 4
  %505 = load i32, i32* %lc, align 4
  %sub359 = sub nsw i32 %504, %505
  %506 = load i32, i32* %delta, align 4
  %add360 = add nsw i32 %sub359, %506
  %507 = load i32, i32* %lcost, align 4
  %508 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left361 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %508, i32 0, i32 4
  %509 = load %struct.Connector_struct*, %struct.Connector_struct** %left361, align 4
  %next362 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %509, i32 0, i32 4
  %510 = load %struct.Connector_struct*, %struct.Connector_struct** %next362, align 4
  %511 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next363 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %511, i32 0, i32 4
  %512 = load %struct.Connector_struct*, %struct.Connector_struct** %next363, align 4
  %513 = load i32, i32* %w, align 4
  %514 = load i32, i32* %lw.addr, align 4
  %515 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %516 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %516, %struct.Disjunct_struct* %515, i32 %514, i32 %513, %struct.Connector_struct* %512, %struct.Connector_struct* %510, i32 %507, i32 %add360)
  br label %if.end364

if.end364:                                        ; preds = %if.then357, %if.then345
  %517 = load i32, i32* %lml, align 4
  %tobool365 = icmp ne i32 %517, 0
  br i1 %tobool365, label %if.then366, label %if.else370

if.then366:                                       ; preds = %if.end364
  %518 = load i32, i32* %lcost, align 4
  %519 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left367 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %519, i32 0, i32 4
  %520 = load %struct.Connector_struct*, %struct.Connector_struct** %left367, align 4
  %next368 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %520, i32 0, i32 4
  %521 = load %struct.Connector_struct*, %struct.Connector_struct** %next368, align 4
  %522 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %523 = load i32, i32* %w, align 4
  %524 = load i32, i32* %lw.addr, align 4
  %call369 = call i32 @magic(i32 %524, i32 %523, %struct.Connector_struct* %522, %struct.Connector_struct* %521, i32 %518)
  store i32 %call369, i32* %delta, align 4
  br label %if.end371

if.else370:                                       ; preds = %if.end364
  store i32 0, i32* %delta, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.else370, %if.then366
  %525 = load i32, i32* %delta, align 4
  %526 = load i32, i32* %lc, align 4
  %add372 = add nsw i32 %526, %525
  store i32 %add372, i32* %lc, align 4
  %527 = load i32, i32* %lc, align 4
  %528 = load i32, i32* %delta, align 4
  %sub373 = sub nsw i32 %527, %528
  %529 = load i32, i32* %lindex, align 4
  %cmp374 = icmp sle i32 %sub373, %529
  br i1 %cmp374, label %land.lhs.true376, label %if.end385

land.lhs.true376:                                 ; preds = %if.end371
  %530 = load i32, i32* %lc, align 4
  %531 = load i32, i32* %lindex, align 4
  %cmp377 = icmp sgt i32 %530, %531
  br i1 %cmp377, label %if.then379, label %if.end385

if.then379:                                       ; preds = %land.lhs.true376
  %532 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left380 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %532, i32 0, i32 4
  %533 = load %struct.Connector_struct*, %struct.Connector_struct** %left380, align 4
  %534 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %535 = load i32, i32* %w, align 4
  %536 = load i32, i32* %lw.addr, align 4
  %537 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %538 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %538, %struct.Disjunct_struct* %537, i32 %536, i32 %535, %struct.Connector_struct* %534, %struct.Connector_struct* %533)
  %539 = load i32, i32* %lindex, align 4
  %540 = load i32, i32* %lc, align 4
  %sub381 = sub nsw i32 %539, %540
  %541 = load i32, i32* %delta, align 4
  %add382 = add nsw i32 %sub381, %541
  %542 = load i32, i32* %lcost, align 4
  %543 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left383 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %543, i32 0, i32 4
  %544 = load %struct.Connector_struct*, %struct.Connector_struct** %left383, align 4
  %next384 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %544, i32 0, i32 4
  %545 = load %struct.Connector_struct*, %struct.Connector_struct** %next384, align 4
  %546 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %547 = load i32, i32* %w, align 4
  %548 = load i32, i32* %lw.addr, align 4
  %549 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %550 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %550, %struct.Disjunct_struct* %549, i32 %548, i32 %547, %struct.Connector_struct* %546, %struct.Connector_struct* %545, i32 %542, i32 %add382)
  br label %if.end385

if.end385:                                        ; preds = %if.then379, %land.lhs.true376, %if.end371
  %551 = load i32, i32* %lmr, align 4
  %tobool386 = icmp ne i32 %551, 0
  br i1 %tobool386, label %if.then387, label %if.else391

if.then387:                                       ; preds = %if.end385
  %552 = load i32, i32* %lcost, align 4
  %553 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left388 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %553, i32 0, i32 4
  %554 = load %struct.Connector_struct*, %struct.Connector_struct** %left388, align 4
  %555 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next389 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %555, i32 0, i32 4
  %556 = load %struct.Connector_struct*, %struct.Connector_struct** %next389, align 4
  %557 = load i32, i32* %w, align 4
  %558 = load i32, i32* %lw.addr, align 4
  %call390 = call i32 @magic(i32 %558, i32 %557, %struct.Connector_struct* %556, %struct.Connector_struct* %554, i32 %552)
  store i32 %call390, i32* %delta, align 4
  br label %if.end392

if.else391:                                       ; preds = %if.end385
  store i32 0, i32* %delta, align 4
  br label %if.end392

if.end392:                                        ; preds = %if.else391, %if.then387
  %559 = load i32, i32* %delta, align 4
  %560 = load i32, i32* %lc, align 4
  %add393 = add nsw i32 %560, %559
  store i32 %add393, i32* %lc, align 4
  %561 = load i32, i32* %lc, align 4
  %562 = load i32, i32* %delta, align 4
  %sub394 = sub nsw i32 %561, %562
  %563 = load i32, i32* %lindex, align 4
  %cmp395 = icmp sle i32 %sub394, %563
  br i1 %cmp395, label %land.lhs.true397, label %if.end406

land.lhs.true397:                                 ; preds = %if.end392
  %564 = load i32, i32* %lc, align 4
  %565 = load i32, i32* %lindex, align 4
  %cmp398 = icmp sgt i32 %564, %565
  br i1 %cmp398, label %if.then400, label %if.end406

if.then400:                                       ; preds = %land.lhs.true397
  %566 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left401 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %566, i32 0, i32 4
  %567 = load %struct.Connector_struct*, %struct.Connector_struct** %left401, align 4
  %568 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %569 = load i32, i32* %w, align 4
  %570 = load i32, i32* %lw.addr, align 4
  %571 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %572 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %572, %struct.Disjunct_struct* %571, i32 %570, i32 %569, %struct.Connector_struct* %568, %struct.Connector_struct* %567)
  %573 = load i32, i32* %lindex, align 4
  %574 = load i32, i32* %lc, align 4
  %sub402 = sub nsw i32 %573, %574
  %575 = load i32, i32* %delta, align 4
  %add403 = add nsw i32 %sub402, %575
  %576 = load i32, i32* %lcost, align 4
  %577 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left404 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %577, i32 0, i32 4
  %578 = load %struct.Connector_struct*, %struct.Connector_struct** %left404, align 4
  %579 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next405 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %579, i32 0, i32 4
  %580 = load %struct.Connector_struct*, %struct.Connector_struct** %next405, align 4
  %581 = load i32, i32* %w, align 4
  %582 = load i32, i32* %lw.addr, align 4
  %583 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %584 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %584, %struct.Disjunct_struct* %583, i32 %582, i32 %581, %struct.Connector_struct* %580, %struct.Connector_struct* %578, i32 %576, i32 %add403)
  br label %if.end406

if.end406:                                        ; preds = %if.then400, %land.lhs.true397, %if.end392
  %585 = load i32, i32* %lml, align 4
  %tobool407 = icmp ne i32 %585, 0
  br i1 %tobool407, label %land.lhs.true408, label %if.else413

land.lhs.true408:                                 ; preds = %if.end406
  %586 = load i32, i32* %lmr, align 4
  %tobool409 = icmp ne i32 %586, 0
  br i1 %tobool409, label %if.then410, label %if.else413

if.then410:                                       ; preds = %land.lhs.true408
  %587 = load i32, i32* %lcost, align 4
  %588 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left411 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %588, i32 0, i32 4
  %589 = load %struct.Connector_struct*, %struct.Connector_struct** %left411, align 4
  %590 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %591 = load i32, i32* %w, align 4
  %592 = load i32, i32* %lw.addr, align 4
  %call412 = call i32 @magic(i32 %592, i32 %591, %struct.Connector_struct* %590, %struct.Connector_struct* %589, i32 %587)
  store i32 %call412, i32* %delta, align 4
  br label %if.end414

if.else413:                                       ; preds = %land.lhs.true408, %if.end406
  store i32 0, i32* %delta, align 4
  br label %if.end414

if.end414:                                        ; preds = %if.else413, %if.then410
  %593 = load i32, i32* %delta, align 4
  %594 = load i32, i32* %lc, align 4
  %add415 = add nsw i32 %594, %593
  store i32 %add415, i32* %lc, align 4
  %595 = load i32, i32* %lc, align 4
  %596 = load i32, i32* %delta, align 4
  %sub416 = sub nsw i32 %595, %596
  %597 = load i32, i32* %lindex, align 4
  %cmp417 = icmp sle i32 %sub416, %597
  br i1 %cmp417, label %land.lhs.true419, label %if.end427

land.lhs.true419:                                 ; preds = %if.end414
  %598 = load i32, i32* %lc, align 4
  %599 = load i32, i32* %lindex, align 4
  %cmp420 = icmp sgt i32 %598, %599
  br i1 %cmp420, label %if.then422, label %if.end427

if.then422:                                       ; preds = %land.lhs.true419
  %600 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left423 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %600, i32 0, i32 4
  %601 = load %struct.Connector_struct*, %struct.Connector_struct** %left423, align 4
  %602 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %603 = load i32, i32* %w, align 4
  %604 = load i32, i32* %lw.addr, align 4
  %605 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %606 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @issue_link(%struct.Disjunct_struct* %606, %struct.Disjunct_struct* %605, i32 %604, i32 %603, %struct.Connector_struct* %602, %struct.Connector_struct* %601)
  %607 = load i32, i32* %lindex, align 4
  %608 = load i32, i32* %lc, align 4
  %sub424 = sub nsw i32 %607, %608
  %609 = load i32, i32* %delta, align 4
  %add425 = add nsw i32 %sub424, %609
  %610 = load i32, i32* %lcost, align 4
  %611 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left426 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %611, i32 0, i32 4
  %612 = load %struct.Connector_struct*, %struct.Connector_struct** %left426, align 4
  %613 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %614 = load i32, i32* %w, align 4
  %615 = load i32, i32* %lw.addr, align 4
  %616 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %617 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %617, %struct.Disjunct_struct* %616, i32 %615, i32 %614, %struct.Connector_struct* %613, %struct.Connector_struct* %612, i32 %610, i32 %add425)
  br label %if.end427

if.end427:                                        ; preds = %if.then422, %land.lhs.true419, %if.end414
  %618 = load i32, i32* %rindex, align 4
  %619 = load i32, i32* %rcost, align 4
  %620 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %621 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right428 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %621, i32 0, i32 5
  %622 = load %struct.Connector_struct*, %struct.Connector_struct** %right428, align 4
  %623 = load i32, i32* %rw.addr, align 4
  %624 = load i32, i32* %w, align 4
  %625 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %626 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %626, %struct.Disjunct_struct* %625, i32 %624, i32 %623, %struct.Connector_struct* %622, %struct.Connector_struct* %620, i32 %619, i32 %618)
  br label %if.end429

if.end429:                                        ; preds = %if.end427, %land.lhs.true342, %if.end337
  %627 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp430 = icmp eq %struct.Connector_struct* %627, null
  br i1 %cmp430, label %land.lhs.true432, label %if.else439

land.lhs.true432:                                 ; preds = %if.end429
  %628 = load i32, i32* %rightcount, align 4
  %cmp433 = icmp sgt i32 %628, 0
  br i1 %cmp433, label %if.then435, label %if.else439

if.then435:                                       ; preds = %land.lhs.true432
  %629 = load i32, i32* %rightcount, align 4
  %630 = load i32, i32* %lcost, align 4
  %631 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left436 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %631, i32 0, i32 4
  %632 = load %struct.Connector_struct*, %struct.Connector_struct** %left436, align 4
  %633 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %634 = load i32, i32* %w, align 4
  %635 = load i32, i32* %lw.addr, align 4
  %call437 = call i32 @magic(i32 %635, i32 %634, %struct.Connector_struct* %633, %struct.Connector_struct* %632, i32 %630)
  %mul438 = mul nsw i32 %629, %call437
  store i32 %mul438, i32* %i, align 4
  br label %if.end440

if.else439:                                       ; preds = %land.lhs.true432, %if.end429
  store i32 0, i32* %i, align 4
  br label %if.end440

if.end440:                                        ; preds = %if.else439, %if.then435
  %636 = load i32, i32* %i, align 4
  %637 = load i32, i32* %total, align 4
  %add441 = add nsw i32 %637, %636
  store i32 %add441, i32* %total, align 4
  %638 = load i32, i32* %total, align 4
  %639 = load i32, i32* %i, align 4
  %sub442 = sub nsw i32 %638, %639
  %640 = load i32, i32* %index.addr, align 4
  %cmp443 = icmp sle i32 %sub442, %640
  br i1 %cmp443, label %land.lhs.true445, label %if.end532

land.lhs.true445:                                 ; preds = %if.end440
  %641 = load i32, i32* %total, align 4
  %642 = load i32, i32* %index.addr, align 4
  %cmp446 = icmp sgt i32 %641, %642
  br i1 %cmp446, label %if.then448, label %if.end532

if.then448:                                       ; preds = %land.lhs.true445
  %643 = load i32, i32* %index.addr, align 4
  %644 = load i32, i32* %total, align 4
  %sub449 = sub nsw i32 %643, %644
  %645 = load i32, i32* %i, align 4
  %add450 = add nsw i32 %sub449, %645
  store i32 %add450, i32* %x, align 4
  %646 = load i32, i32* %x, align 4
  %647 = load i32, i32* %rightcount, align 4
  %rem451 = srem i32 %646, %647
  store i32 %rem451, i32* %rindex, align 4
  %648 = load i32, i32* %x, align 4
  %649 = load i32, i32* %rightcount, align 4
  %div452 = sdiv i32 %648, %649
  store i32 %div452, i32* %lindex, align 4
  store i32 0, i32* %rc, align 4
  %650 = load i32, i32* %rcost, align 4
  %651 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next453 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %651, i32 0, i32 4
  %652 = load %struct.Connector_struct*, %struct.Connector_struct** %next453, align 4
  %653 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right454 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %653, i32 0, i32 5
  %654 = load %struct.Connector_struct*, %struct.Connector_struct** %right454, align 4
  %next455 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %654, i32 0, i32 4
  %655 = load %struct.Connector_struct*, %struct.Connector_struct** %next455, align 4
  %656 = load i32, i32* %rw.addr, align 4
  %657 = load i32, i32* %w, align 4
  %call456 = call i32 @magic(i32 %657, i32 %656, %struct.Connector_struct* %655, %struct.Connector_struct* %652, i32 %650)
  store i32 %call456, i32* %delta, align 4
  %658 = load i32, i32* %delta, align 4
  %659 = load i32, i32* %rc, align 4
  %add457 = add nsw i32 %659, %658
  store i32 %add457, i32* %rc, align 4
  %660 = load i32, i32* %rc, align 4
  %661 = load i32, i32* %rindex, align 4
  %cmp458 = icmp sgt i32 %660, %661
  br i1 %cmp458, label %if.then460, label %if.end467

if.then460:                                       ; preds = %if.then448
  %662 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %663 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right461 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %663, i32 0, i32 5
  %664 = load %struct.Connector_struct*, %struct.Connector_struct** %right461, align 4
  %665 = load i32, i32* %rw.addr, align 4
  %666 = load i32, i32* %w, align 4
  %667 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %668 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %668, %struct.Disjunct_struct* %667, i32 %666, i32 %665, %struct.Connector_struct* %664, %struct.Connector_struct* %662)
  %669 = load i32, i32* %rindex, align 4
  %670 = load i32, i32* %rc, align 4
  %sub462 = sub nsw i32 %669, %670
  %671 = load i32, i32* %delta, align 4
  %add463 = add nsw i32 %sub462, %671
  %672 = load i32, i32* %rcost, align 4
  %673 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next464 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %673, i32 0, i32 4
  %674 = load %struct.Connector_struct*, %struct.Connector_struct** %next464, align 4
  %675 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right465 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %675, i32 0, i32 5
  %676 = load %struct.Connector_struct*, %struct.Connector_struct** %right465, align 4
  %next466 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %676, i32 0, i32 4
  %677 = load %struct.Connector_struct*, %struct.Connector_struct** %next466, align 4
  %678 = load i32, i32* %rw.addr, align 4
  %679 = load i32, i32* %w, align 4
  %680 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %681 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %681, %struct.Disjunct_struct* %680, i32 %679, i32 %678, %struct.Connector_struct* %677, %struct.Connector_struct* %674, i32 %672, i32 %add463)
  br label %if.end467

if.end467:                                        ; preds = %if.then460, %if.then448
  %682 = load i32, i32* %rml, align 4
  %tobool468 = icmp ne i32 %682, 0
  br i1 %tobool468, label %if.then469, label %if.else473

if.then469:                                       ; preds = %if.end467
  %683 = load i32, i32* %rcost, align 4
  %684 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next470 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %684, i32 0, i32 4
  %685 = load %struct.Connector_struct*, %struct.Connector_struct** %next470, align 4
  %686 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right471 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %686, i32 0, i32 5
  %687 = load %struct.Connector_struct*, %struct.Connector_struct** %right471, align 4
  %688 = load i32, i32* %rw.addr, align 4
  %689 = load i32, i32* %w, align 4
  %call472 = call i32 @magic(i32 %689, i32 %688, %struct.Connector_struct* %687, %struct.Connector_struct* %685, i32 %683)
  store i32 %call472, i32* %delta, align 4
  br label %if.end474

if.else473:                                       ; preds = %if.end467
  store i32 0, i32* %delta, align 4
  br label %if.end474

if.end474:                                        ; preds = %if.else473, %if.then469
  %690 = load i32, i32* %delta, align 4
  %691 = load i32, i32* %rc, align 4
  %add475 = add nsw i32 %691, %690
  store i32 %add475, i32* %rc, align 4
  %692 = load i32, i32* %rc, align 4
  %693 = load i32, i32* %delta, align 4
  %sub476 = sub nsw i32 %692, %693
  %694 = load i32, i32* %rindex, align 4
  %cmp477 = icmp sle i32 %sub476, %694
  br i1 %cmp477, label %land.lhs.true479, label %if.end488

land.lhs.true479:                                 ; preds = %if.end474
  %695 = load i32, i32* %rc, align 4
  %696 = load i32, i32* %rindex, align 4
  %cmp480 = icmp sgt i32 %695, %696
  br i1 %cmp480, label %if.then482, label %if.end488

if.then482:                                       ; preds = %land.lhs.true479
  %697 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %698 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right483 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %698, i32 0, i32 5
  %699 = load %struct.Connector_struct*, %struct.Connector_struct** %right483, align 4
  %700 = load i32, i32* %rw.addr, align 4
  %701 = load i32, i32* %w, align 4
  %702 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %703 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %703, %struct.Disjunct_struct* %702, i32 %701, i32 %700, %struct.Connector_struct* %699, %struct.Connector_struct* %697)
  %704 = load i32, i32* %rindex, align 4
  %705 = load i32, i32* %rc, align 4
  %sub484 = sub nsw i32 %704, %705
  %706 = load i32, i32* %delta, align 4
  %add485 = add nsw i32 %sub484, %706
  %707 = load i32, i32* %rcost, align 4
  %708 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next486 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %708, i32 0, i32 4
  %709 = load %struct.Connector_struct*, %struct.Connector_struct** %next486, align 4
  %710 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right487 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %710, i32 0, i32 5
  %711 = load %struct.Connector_struct*, %struct.Connector_struct** %right487, align 4
  %712 = load i32, i32* %rw.addr, align 4
  %713 = load i32, i32* %w, align 4
  %714 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %715 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %715, %struct.Disjunct_struct* %714, i32 %713, i32 %712, %struct.Connector_struct* %711, %struct.Connector_struct* %709, i32 %707, i32 %add485)
  br label %if.end488

if.end488:                                        ; preds = %if.then482, %land.lhs.true479, %if.end474
  %716 = load i32, i32* %rmr, align 4
  %tobool489 = icmp ne i32 %716, 0
  br i1 %tobool489, label %if.then490, label %if.else494

if.then490:                                       ; preds = %if.end488
  %717 = load i32, i32* %rcost, align 4
  %718 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %719 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right491 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %719, i32 0, i32 5
  %720 = load %struct.Connector_struct*, %struct.Connector_struct** %right491, align 4
  %next492 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %720, i32 0, i32 4
  %721 = load %struct.Connector_struct*, %struct.Connector_struct** %next492, align 4
  %722 = load i32, i32* %rw.addr, align 4
  %723 = load i32, i32* %w, align 4
  %call493 = call i32 @magic(i32 %723, i32 %722, %struct.Connector_struct* %721, %struct.Connector_struct* %718, i32 %717)
  store i32 %call493, i32* %delta, align 4
  br label %if.end495

if.else494:                                       ; preds = %if.end488
  store i32 0, i32* %delta, align 4
  br label %if.end495

if.end495:                                        ; preds = %if.else494, %if.then490
  %724 = load i32, i32* %delta, align 4
  %725 = load i32, i32* %rc, align 4
  %add496 = add nsw i32 %725, %724
  store i32 %add496, i32* %rc, align 4
  %726 = load i32, i32* %rc, align 4
  %727 = load i32, i32* %delta, align 4
  %sub497 = sub nsw i32 %726, %727
  %728 = load i32, i32* %rindex, align 4
  %cmp498 = icmp sle i32 %sub497, %728
  br i1 %cmp498, label %land.lhs.true500, label %if.end509

land.lhs.true500:                                 ; preds = %if.end495
  %729 = load i32, i32* %rc, align 4
  %730 = load i32, i32* %rindex, align 4
  %cmp501 = icmp sgt i32 %729, %730
  br i1 %cmp501, label %if.then503, label %if.end509

if.then503:                                       ; preds = %land.lhs.true500
  %731 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %732 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right504 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %732, i32 0, i32 5
  %733 = load %struct.Connector_struct*, %struct.Connector_struct** %right504, align 4
  %734 = load i32, i32* %rw.addr, align 4
  %735 = load i32, i32* %w, align 4
  %736 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %737 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %737, %struct.Disjunct_struct* %736, i32 %735, i32 %734, %struct.Connector_struct* %733, %struct.Connector_struct* %731)
  %738 = load i32, i32* %rindex, align 4
  %739 = load i32, i32* %rc, align 4
  %sub505 = sub nsw i32 %738, %739
  %740 = load i32, i32* %delta, align 4
  %add506 = add nsw i32 %sub505, %740
  %741 = load i32, i32* %rcost, align 4
  %742 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %743 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right507 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %743, i32 0, i32 5
  %744 = load %struct.Connector_struct*, %struct.Connector_struct** %right507, align 4
  %next508 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %744, i32 0, i32 4
  %745 = load %struct.Connector_struct*, %struct.Connector_struct** %next508, align 4
  %746 = load i32, i32* %rw.addr, align 4
  %747 = load i32, i32* %w, align 4
  %748 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %749 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %749, %struct.Disjunct_struct* %748, i32 %747, i32 %746, %struct.Connector_struct* %745, %struct.Connector_struct* %742, i32 %741, i32 %add506)
  br label %if.end509

if.end509:                                        ; preds = %if.then503, %land.lhs.true500, %if.end495
  %750 = load i32, i32* %rml, align 4
  %tobool510 = icmp ne i32 %750, 0
  br i1 %tobool510, label %land.lhs.true511, label %if.else516

land.lhs.true511:                                 ; preds = %if.end509
  %751 = load i32, i32* %rmr, align 4
  %tobool512 = icmp ne i32 %751, 0
  br i1 %tobool512, label %if.then513, label %if.else516

if.then513:                                       ; preds = %land.lhs.true511
  %752 = load i32, i32* %rcost, align 4
  %753 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %754 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right514 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %754, i32 0, i32 5
  %755 = load %struct.Connector_struct*, %struct.Connector_struct** %right514, align 4
  %756 = load i32, i32* %rw.addr, align 4
  %757 = load i32, i32* %w, align 4
  %call515 = call i32 @magic(i32 %757, i32 %756, %struct.Connector_struct* %755, %struct.Connector_struct* %753, i32 %752)
  store i32 %call515, i32* %delta, align 4
  br label %if.end517

if.else516:                                       ; preds = %land.lhs.true511, %if.end509
  store i32 0, i32* %delta, align 4
  br label %if.end517

if.end517:                                        ; preds = %if.else516, %if.then513
  %758 = load i32, i32* %delta, align 4
  %759 = load i32, i32* %rc, align 4
  %add518 = add nsw i32 %759, %758
  store i32 %add518, i32* %rc, align 4
  %760 = load i32, i32* %rc, align 4
  %761 = load i32, i32* %delta, align 4
  %sub519 = sub nsw i32 %760, %761
  %762 = load i32, i32* %rindex, align 4
  %cmp520 = icmp sle i32 %sub519, %762
  br i1 %cmp520, label %land.lhs.true522, label %if.end530

land.lhs.true522:                                 ; preds = %if.end517
  %763 = load i32, i32* %rc, align 4
  %764 = load i32, i32* %rindex, align 4
  %cmp523 = icmp sgt i32 %763, %764
  br i1 %cmp523, label %if.then525, label %if.end530

if.then525:                                       ; preds = %land.lhs.true522
  %765 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %766 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right526 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %766, i32 0, i32 5
  %767 = load %struct.Connector_struct*, %struct.Connector_struct** %right526, align 4
  %768 = load i32, i32* %rw.addr, align 4
  %769 = load i32, i32* %w, align 4
  %770 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %771 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @issue_link(%struct.Disjunct_struct* %771, %struct.Disjunct_struct* %770, i32 %769, i32 %768, %struct.Connector_struct* %767, %struct.Connector_struct* %765)
  %772 = load i32, i32* %rindex, align 4
  %773 = load i32, i32* %rc, align 4
  %sub527 = sub nsw i32 %772, %773
  %774 = load i32, i32* %delta, align 4
  %add528 = add nsw i32 %sub527, %774
  %775 = load i32, i32* %rcost, align 4
  %776 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %777 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right529 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %777, i32 0, i32 5
  %778 = load %struct.Connector_struct*, %struct.Connector_struct** %right529, align 4
  %779 = load i32, i32* %rw.addr, align 4
  %780 = load i32, i32* %w, align 4
  %781 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %rd.addr, align 4
  %782 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @list_links(%struct.Disjunct_struct* %782, %struct.Disjunct_struct* %781, i32 %780, i32 %779, %struct.Connector_struct* %778, %struct.Connector_struct* %776, i32 %775, i32 %add528)
  br label %if.end530

if.end530:                                        ; preds = %if.then525, %land.lhs.true522, %if.end517
  %783 = load i32, i32* %lindex, align 4
  %784 = load i32, i32* %lcost, align 4
  %785 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left531 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %785, i32 0, i32 4
  %786 = load %struct.Connector_struct*, %struct.Connector_struct** %left531, align 4
  %787 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %788 = load i32, i32* %w, align 4
  %789 = load i32, i32* %lw.addr, align 4
  %790 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %791 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %ld.addr, align 4
  call void @list_links(%struct.Disjunct_struct* %791, %struct.Disjunct_struct* %790, i32 %789, i32 %788, %struct.Connector_struct* %787, %struct.Connector_struct* %786, i32 %784, i32 %783)
  br label %if.end532

if.end532:                                        ; preds = %if.end530, %land.lhs.true445, %if.end440
  br label %for.inc533

for.inc533:                                       ; preds = %if.end532
  %792 = load i32, i32* %lcost, align 4
  %inc = add nsw i32 %792, 1
  store i32 %inc, i32* %lcost, align 4
  br label %for.cond72

for.end534:                                       ; preds = %for.cond72
  br label %for.inc535

for.inc535:                                       ; preds = %for.end534
  %793 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %next536 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %793, i32 0, i32 0
  %794 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next536, align 4
  store %struct.Match_node_struct* %794, %struct.Match_node_struct** %m, align 4
  br label %for.cond67

for.end537:                                       ; preds = %for.cond67
  %795 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m1, align 4
  call void @put_match_list(%struct.Match_node_struct* %795)
  br label %for.inc538

for.inc538:                                       ; preds = %for.end537
  %796 = load i32, i32* %w, align 4
  %inc539 = add nsw i32 %796, 1
  store i32 %inc539, i32* %w, align 4
  br label %for.cond62

for.end540:                                       ; preds = %for.cond62, %if.end43, %if.then8, %if.end
  ret void
}

; Function Attrs: noinline nounwind
define void @initialize_links() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Disjunct_struct*], [250 x %struct.Disjunct_struct*]* @chosen_disjuncts, i32 0, i32 %2
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @extract_links(i32 %index, i32 %cost) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %cost.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %total = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %cost.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %index.addr, align 4
  store i32 0, i32* %c, align 4
  store i32 0, i32* @N_links, align 4
  store i32 0, i32* %total, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 68, i32 0)
  %0 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 0, i32 2
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %0, align 4
  store %struct.Disjunct_struct* %1, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end4

if.then:                                          ; preds = %for.body, %for.body
  %5 = load i32, i32* %cost.addr, align 4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 5
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %8 = load i32, i32* @N_words, align 4
  %call = call i32 @magic(i32 0, i32 %8, %struct.Connector_struct* %7, %struct.Connector_struct* null, i32 %5)
  store i32 %call, i32* %c, align 4
  %9 = load i32, i32* %c, align 4
  %10 = load i32, i32* %total, align 4
  %add = add nsw i32 %10, %9
  store i32 %add, i32* %total, align 4
  %11 = load i32, i32* %total, align 4
  %12 = load i32, i32* %index.addr, align 4
  %cmp2 = icmp sgt i32 %11, %12
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then, %if.then
  br label %for.end

if.end:                                           ; preds = %if.then, %if.then
  br label %if.end4

if.end4:                                          ; preds = %if.end, %for.body, %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end4, %if.end4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 0
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %14, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then3, %for.cond, %if.then3, %for.cond
  %15 = load i32, i32* %total, align 4
  %16 = load i32, i32* %index.addr, align 4
  %cmp5 = icmp sgt i32 %15, %16
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %for.end, %for.end
  %17 = load i32, i32* %index.addr, align 4
  %18 = load i32, i32* %total, align 4
  %sub = sub nsw i32 %17, %18
  %19 = load i32, i32* %c, align 4
  %add7 = add nsw i32 %sub, %19
  %20 = load i32, i32* %cost.addr, align 4
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 5
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %right8, align 4
  %23 = load i32, i32* @N_words, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  call void @list_links(%struct.Disjunct_struct* %24, %struct.Disjunct_struct* null, i32 0, i32 %23, %struct.Connector_struct* %22, %struct.Connector_struct* null, i32 %20, i32 %add7)
  br label %if.end13

if.else:                                          ; preds = %for.end, %for.end
  %25 = load i32, i32* %cost.addr, align 4
  %26 = load i32, i32* @N_words, align 4
  %call9 = call i32 @magic(i32 0, i32 %26, %struct.Connector_struct* null, %struct.Connector_struct* null, i32 %25)
  store i32 %call9, i32* %c, align 4
  %27 = load i32, i32* %c, align 4
  %28 = load i32, i32* %total, align 4
  %add10 = add nsw i32 %28, %27
  store i32 %add10, i32* %total, align 4
  %29 = load i32, i32* %index.addr, align 4
  %30 = load i32, i32* %total, align 4
  %sub11 = sub nsw i32 %29, %30
  %31 = load i32, i32* %c, align 4
  %add12 = add nsw i32 %sub11, %31
  %32 = load i32, i32* %cost.addr, align 4
  %33 = load i32, i32* @N_words, align 4
  call void @list_links(%struct.Disjunct_struct* null, %struct.Disjunct_struct* null, i32 0, i32 %33, %struct.Connector_struct* null, %struct.Connector_struct* null, i32 %32, i32 %add12)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then6, %if.else, %if.then6
  ret void
}

; Function Attrs: noinline nounwind
define i32 @left_disjunct_list_length(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret i32 %6
}

; Function Attrs: noinline nounwind
define i32 @right_disjunct_list_length(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 5
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp1 = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret i32 %6
}

; Function Attrs: noinline nounwind
define %struct.Match_node_struct* @get_match_node() #0 {
entry:
  %m = alloca %struct.Match_node_struct*, align 4
  %0 = load %struct.Match_node_struct*, %struct.Match_node_struct** @mn_free_list, align 4
  %cmp = icmp ne %struct.Match_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.Match_node_struct*, %struct.Match_node_struct** @mn_free_list, align 4
  store %struct.Match_node_struct* %1, %struct.Match_node_struct** %m, align 4
  %2 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %2, i32 0, i32 0
  %3 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next, align 4
  store %struct.Match_node_struct* %3, %struct.Match_node_struct** @mn_free_list, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %call = call i8* @xalloc(i32 8)
  %4 = bitcast i8* %call to %struct.Match_node_struct*
  store %struct.Match_node_struct* %4, %struct.Match_node_struct** %m, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  ret %struct.Match_node_struct* %5
}

; Function Attrs: noinline nounwind
define void @put_match_list(%struct.Match_node_struct* %m) #0 {
entry:
  %m.addr = alloca %struct.Match_node_struct*, align 4
  %xm = alloca %struct.Match_node_struct*, align 4
  store %struct.Match_node_struct* %m, %struct.Match_node_struct** %m.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %cmp = icmp ne %struct.Match_node_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %1, i32 0, i32 0
  %2 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next, align 4
  store %struct.Match_node_struct* %2, %struct.Match_node_struct** %xm, align 4
  %3 = load %struct.Match_node_struct*, %struct.Match_node_struct** @mn_free_list, align 4
  %4 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %next1 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %4, i32 0, i32 0
  store %struct.Match_node_struct* %3, %struct.Match_node_struct** %next1, align 4
  %5 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  store %struct.Match_node_struct* %5, %struct.Match_node_struct** @mn_free_list, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load %struct.Match_node_struct*, %struct.Match_node_struct** %xm, align 4
  store %struct.Match_node_struct* %6, %struct.Match_node_struct** %m.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_match_list(%struct.Match_node_struct* %t) #0 {
entry:
  %t.addr = alloca %struct.Match_node_struct*, align 4
  %xt = alloca %struct.Match_node_struct*, align 4
  store %struct.Match_node_struct* %t, %struct.Match_node_struct** %t.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Match_node_struct*, %struct.Match_node_struct** %t.addr, align 4
  %cmp = icmp ne %struct.Match_node_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Match_node_struct*, %struct.Match_node_struct** %t.addr, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %1, i32 0, i32 0
  %2 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next, align 4
  store %struct.Match_node_struct* %2, %struct.Match_node_struct** %xt, align 4
  %3 = load %struct.Match_node_struct*, %struct.Match_node_struct** %t.addr, align 4
  %4 = bitcast %struct.Match_node_struct* %3 to i8*
  call void @xfree(i8* %4, i32 8)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load %struct.Match_node_struct*, %struct.Match_node_struct** %xt, align 4
  store %struct.Match_node_struct* %5, %struct.Match_node_struct** %t.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_fast_matcher() #0 {
entry:
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %1 = load i32, i32* @match_cost, align 4
  %2 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.90, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2, i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc21, %if.end, %for.inc21, %if.end
  %3 = load i32, i32* %w, align 4
  %4 = load i32, i32* @N_words, align 4
  %cmp1 = icmp slt i32 %3, %4
  br i1 %cmp1, label %for.body, label %for.end23

for.body:                                         ; preds = %for.cond, %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size, i32 0, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %cmp3 = icmp slt i32 %5, %7
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %w, align 4
  %arrayidx5 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @l_table, i32 0, i32 %9
  %10 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx5, align 4
  %arrayidx6 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %10, i32 %8
  %11 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx6, align 4
  call void @free_match_list(%struct.Match_node_struct* %11)
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  %13 = load i32, i32* %w, align 4
  %arrayidx7 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size, i32 0, i32 %13
  %14 = load i32, i32* %arrayidx7, align 4
  %mul = mul i32 %14, 4
  %15 = load i32, i32* %w, align 4
  %arrayidx8 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @l_table, i32 0, i32 %15
  %16 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx8, align 4
  %17 = bitcast %struct.Match_node_struct** %16 to i8*
  call void @xfree(i8* %17, i32 %mul)
  store i32 0, i32* %i, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %for.end, %for.inc15, %for.end
  %18 = load i32, i32* %i, align 4
  %19 = load i32, i32* %w, align 4
  %arrayidx10 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size, i32 0, i32 %19
  %20 = load i32, i32* %arrayidx10, align 4
  %cmp11 = icmp slt i32 %18, %20
  br i1 %cmp11, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9, %for.cond9
  %21 = load i32, i32* %i, align 4
  %22 = load i32, i32* %w, align 4
  %arrayidx13 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @r_table, i32 0, i32 %22
  %23 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %23, i32 %21
  %24 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx14, align 4
  call void @free_match_list(%struct.Match_node_struct* %24)
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12, %for.body12
  %25 = load i32, i32* %i, align 4
  %inc16 = add nsw i32 %25, 1
  store i32 %inc16, i32* %i, align 4
  br label %for.cond9

for.end17:                                        ; preds = %for.cond9, %for.cond9
  %26 = load i32, i32* %w, align 4
  %arrayidx18 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size, i32 0, i32 %26
  %27 = load i32, i32* %arrayidx18, align 4
  %mul19 = mul i32 %27, 4
  %28 = load i32, i32* %w, align 4
  %arrayidx20 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @r_table, i32 0, i32 %28
  %29 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx20, align 4
  %30 = bitcast %struct.Match_node_struct** %29 to i8*
  call void @xfree(i8* %30, i32 %mul19)
  br label %for.inc21

for.inc21:                                        ; preds = %for.end17, %for.end17
  %31 = load i32, i32* %w, align 4
  %inc22 = add nsw i32 %31, 1
  store i32 %inc22, i32* %w, align 4
  br label %for.cond

for.end23:                                        ; preds = %for.cond, %for.cond
  %32 = load %struct.Match_node_struct*, %struct.Match_node_struct** @mn_free_list, align 4
  call void @free_match_list(%struct.Match_node_struct* %32)
  store %struct.Match_node_struct* null, %struct.Match_node_struct** @mn_free_list, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i32 @fast_match_hash(%struct.Connector_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Connector_struct*, align 4
  %s = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  %and = and i32 %conv, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %2 = load i32, i32* %arrayidx, align 4
  store i32 %2, i32* %i, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %3, i32 0, i32 5
  %4 = load i8*, i8** %string, align 4
  store i8* %4, i8** %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %5 = load i8*, i8** %s, align 4
  %6 = load i8, i8* %5, align 1
  %conv1 = sext i8 %6 to i32
  %call = call i32 @isupper_Package(i32 %conv1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %i, align 4
  %shl = shl i32 %8, 1
  %add = add nsw i32 %7, %shl
  %9 = load i8*, i8** %s, align 4
  %10 = load i8, i8* %9, align 1
  %conv2 = sext i8 %10 to i32
  %11 = load i32, i32* %i, align 4
  %add3 = add nsw i32 %conv2, %11
  %and4 = and i32 %add3, 255
  %arrayidx5 = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and4
  %12 = load i32, i32* %arrayidx5, align 4
  %add6 = add i32 %add, %12
  store i32 %add6, i32* %i, align 4
  %13 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %i, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind
define %struct.Match_node_struct* @add_to_right_table_list(%struct.Match_node_struct* %m, %struct.Match_node_struct* %l) #0 {
entry:
  %retval = alloca %struct.Match_node_struct*, align 4
  %l.addr = alloca %struct.Match_node_struct*, align 4
  %m.addr = alloca %struct.Match_node_struct*, align 4
  store %struct.Match_node_struct* %l, %struct.Match_node_struct** %l.addr, align 4
  store %struct.Match_node_struct* %m, %struct.Match_node_struct** %m.addr, align 4
  %0 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %cmp = icmp eq %struct.Match_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  store %struct.Match_node_struct* %1, %struct.Match_node_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %d = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %2, i32 0, i32 1
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 5
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 1
  %5 = load i16, i16* %word, align 2
  %conv = sext i16 %5 to i32
  %6 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %d1 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 5
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %right2, align 4
  %word3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 1
  %9 = load i16, i16* %word3, align 2
  %conv4 = sext i16 %9 to i32
  %cmp5 = icmp sle i32 %conv, %conv4
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %10 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %11 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %11, i32 0, i32 0
  store %struct.Match_node_struct* %10, %struct.Match_node_struct** %next, align 4
  %12 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  store %struct.Match_node_struct* %12, %struct.Match_node_struct** %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end
  %13 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %next8 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %13, i32 0, i32 0
  %14 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next8, align 4
  %15 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %call = call %struct.Match_node_struct* @add_to_right_table_list(%struct.Match_node_struct* %15, %struct.Match_node_struct* %14)
  %16 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %next9 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %16, i32 0, i32 0
  store %struct.Match_node_struct* %call, %struct.Match_node_struct** %next9, align 4
  %17 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  store %struct.Match_node_struct* %17, %struct.Match_node_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then7, %if.then
  %18 = load %struct.Match_node_struct*, %struct.Match_node_struct** %retval, align 4
  ret %struct.Match_node_struct* %18
}

; Function Attrs: noinline nounwind
define %struct.Match_node_struct* @add_to_left_table_list(%struct.Match_node_struct* %m, %struct.Match_node_struct* %l) #0 {
entry:
  %retval = alloca %struct.Match_node_struct*, align 4
  %l.addr = alloca %struct.Match_node_struct*, align 4
  %m.addr = alloca %struct.Match_node_struct*, align 4
  store %struct.Match_node_struct* %l, %struct.Match_node_struct** %l.addr, align 4
  store %struct.Match_node_struct* %m, %struct.Match_node_struct** %m.addr, align 4
  %0 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %cmp = icmp eq %struct.Match_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  store %struct.Match_node_struct* %1, %struct.Match_node_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %d = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %2, i32 0, i32 1
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 1
  %5 = load i16, i16* %word, align 2
  %conv = sext i16 %5 to i32
  %6 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %d1 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left2, align 4
  %word3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 1
  %9 = load i16, i16* %word3, align 2
  %conv4 = sext i16 %9 to i32
  %cmp5 = icmp sge i32 %conv, %conv4
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %10 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %11 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %11, i32 0, i32 0
  store %struct.Match_node_struct* %10, %struct.Match_node_struct** %next, align 4
  %12 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  store %struct.Match_node_struct* %12, %struct.Match_node_struct** %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end
  %13 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %next8 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %13, i32 0, i32 0
  %14 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next8, align 4
  %15 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m.addr, align 4
  %call = call %struct.Match_node_struct* @add_to_left_table_list(%struct.Match_node_struct* %15, %struct.Match_node_struct* %14)
  %16 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  %next9 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %16, i32 0, i32 0
  store %struct.Match_node_struct* %call, %struct.Match_node_struct** %next9, align 4
  %17 = load %struct.Match_node_struct*, %struct.Match_node_struct** %l.addr, align 4
  store %struct.Match_node_struct* %17, %struct.Match_node_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then7, %if.then
  %18 = load %struct.Match_node_struct*, %struct.Match_node_struct** %retval, align 4
  ret %struct.Match_node_struct* %18
}

; Function Attrs: noinline nounwind
define void @put_into_match_table(i32 %size, %struct.Match_node_struct** %t, %struct.Disjunct_struct* %d, %struct.Connector_struct* %c, i32 %dir) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_16 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 16
  %load_struct.BigStruct_16 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %struct.BigStruct_16
  %struct.BigStruct_17 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 17
  %load_struct.BigStruct_17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_17
  %struct.BigStruct_18 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 18
  %load_struct.BigStruct_18 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_18
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 19
  %load_struct.BigStruct_19 = load i32, i32* %struct.BigStruct_19
  %dir.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %t.addr = alloca %struct.Match_node_struct**, align 4
  %size.addr = alloca i32, align 4
  %h = alloca i32, align 4
  %m = alloca %struct.Match_node_struct*, align 4
  store i32 %load_struct.BigStruct_19, i32* %dir.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_18, %struct.Connector_struct** %c.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_17, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Match_node_struct** %load_struct.BigStruct_16, %struct.Match_node_struct*** %t.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %size.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @fast_match_hash(%struct.Connector_struct* %0)
  %1 = load i32, i32* %size.addr, align 4
  %sub = sub nsw i32 %1, 1
  %and = and i32 %call, %sub
  store i32 %and, i32* %h, align 4
  %call1 = call i8* @xalloc(i32 8)
  %2 = bitcast i8* %call1 to %struct.Match_node_struct*
  store %struct.Match_node_struct* %2, %struct.Match_node_struct** %m, align 4
  %3 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %3, i32 0, i32 0
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %next, align 4
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %5 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %d2 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %5, i32 0, i32 1
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d2, align 4
  %6 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %6, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  %7 = load i32, i32* %h, align 4
  %8 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %8, i32 %7
  %9 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx, align 4
  %10 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %call3 = call %struct.Match_node_struct* @add_to_right_table_list(%struct.Match_node_struct* %10, %struct.Match_node_struct* %9)
  %11 = load i32, i32* %h, align 4
  %12 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx4 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %12, i32 %11
  store %struct.Match_node_struct* %call3, %struct.Match_node_struct** %arrayidx4, align 4
  br label %if.end

if.else:                                          ; preds = %entry, %entry
  %13 = load i32, i32* %h, align 4
  %14 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx5 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %14, i32 %13
  %15 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx5, align 4
  %16 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %call6 = call %struct.Match_node_struct* @add_to_left_table_list(%struct.Match_node_struct* %16, %struct.Match_node_struct* %15)
  %17 = load i32, i32* %h, align 4
  %18 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx7 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %18, i32 %17
  store %struct.Match_node_struct* %call6, %struct.Match_node_struct** %arrayidx7, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @init_fast_matcher() #0 {
entry:
  %w = alloca i32, align 4
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca %struct.Match_node_struct**, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  store i32 0, i32* @match_cost, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc46, %entry, %for.inc46, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end48

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_46 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %struct.BigStruct_46
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 70, i32 0)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  store i32 %load_struct.BigStruct_327, i32* %len, align 4
  %5 = load i32, i32* %len, align 4
  %call2 = call i32 @next_power_of_two_up(i32 %5)
  store i32 %call2, i32* %size, align 4
  %6 = load i32, i32* %size, align 4
  %7 = load i32, i32* %w, align 4
  %arrayidx3 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size, i32 0, i32 %7
  store i32 %6, i32* %arrayidx3, align 4
  %8 = load i32, i32* %size, align 4
  %mul = mul i32 %8, 4
  %call4 = call i8* @xalloc(i32 %mul)
  %9 = bitcast i8* %call4 to %struct.Match_node_struct**
  %10 = load i32, i32* %w, align 4
  %arrayidx5 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @l_table, i32 0, i32 %10
  store %struct.Match_node_struct** %9, %struct.Match_node_struct*** %arrayidx5, align 4
  store %struct.Match_node_struct** %9, %struct.Match_node_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %size, align 4
  %cmp7 = icmp slt i32 %11, %12
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6, %for.cond6
  %13 = load i32, i32* %i, align 4
  %14 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %arrayidx9 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %14, i32 %13
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body8, %for.body8
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6, %for.cond6
  %16 = load i32, i32* %w, align 4
  %17 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %17, i32 0, i32 %16
  %d11 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx10, i32 0, i32 2
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d11, align 4
  store %struct.Disjunct_struct* %18, %struct.Disjunct_struct** %d, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc17, %for.end, %for.inc17, %for.end
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp13 = icmp ne %struct.Disjunct_struct* %19, null
  br i1 %cmp13, label %for.body14, label %for.end18

for.body14:                                       ; preds = %for.cond12, %for.cond12
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp15 = icmp ne %struct.Connector_struct* %21, null
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %for.body14, %for.body14
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %left16, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %25 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %26 = load i32, i32* %size, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %26, i32* %struct.BigStruct_01
  %struct.BigStruct_162 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 16
  store %struct.Match_node_struct** %25, %struct.Match_node_struct*** %struct.BigStruct_162
  %struct.BigStruct_173 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 17
  store %struct.Disjunct_struct* %24, %struct.Disjunct_struct** %struct.BigStruct_173
  %struct.BigStruct_184 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 18
  store %struct.Connector_struct* %23, %struct.Connector_struct** %struct.BigStruct_184
  %struct.BigStruct_195 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 19
  store i32 -1, i32* %struct.BigStruct_195
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 34, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body14, %if.then, %for.body14
  br label %for.inc17

for.inc17:                                        ; preds = %if.end, %if.end
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %27, i32 0, i32 0
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %28, %struct.Disjunct_struct** %d, align 4
  br label %for.cond12

for.end18:                                        ; preds = %for.cond12, %for.cond12
  %29 = load i32, i32* %w, align 4
  %30 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %30, i32 0, i32 %29
  %d20 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx19, i32 0, i32 2
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d20, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %31, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 33, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 %load_struct.BigStruct_32, i32* %len, align 4
  %32 = load i32, i32* %len, align 4
  %call22 = call i32 @next_power_of_two_up(i32 %32)
  store i32 %call22, i32* %size, align 4
  %33 = load i32, i32* %size, align 4
  %34 = load i32, i32* %w, align 4
  %arrayidx23 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size, i32 0, i32 %34
  store i32 %33, i32* %arrayidx23, align 4
  %35 = load i32, i32* %size, align 4
  %mul24 = mul i32 %35, 4
  %call25 = call i8* @xalloc(i32 %mul24)
  %36 = bitcast i8* %call25 to %struct.Match_node_struct**
  %37 = load i32, i32* %w, align 4
  %arrayidx26 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @r_table, i32 0, i32 %37
  store %struct.Match_node_struct** %36, %struct.Match_node_struct*** %arrayidx26, align 4
  store %struct.Match_node_struct** %36, %struct.Match_node_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc31, %for.end18, %for.inc31, %for.end18
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %size, align 4
  %cmp28 = icmp slt i32 %38, %39
  br i1 %cmp28, label %for.body29, label %for.end33

for.body29:                                       ; preds = %for.cond27, %for.cond27
  %40 = load i32, i32* %i, align 4
  %41 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %arrayidx30 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %41, i32 %40
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %arrayidx30, align 4
  br label %for.inc31

for.inc31:                                        ; preds = %for.body29, %for.body29
  %42 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %42, 1
  store i32 %inc32, i32* %i, align 4
  br label %for.cond27

for.end33:                                        ; preds = %for.cond27, %for.cond27
  %43 = load i32, i32* %w, align 4
  %44 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx34 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %44, i32 0, i32 %43
  %d35 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx34, i32 0, i32 2
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d35, align 4
  store %struct.Disjunct_struct* %45, %struct.Disjunct_struct** %d, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc43, %for.end33, %for.inc43, %for.end33
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp37 = icmp ne %struct.Disjunct_struct* %46, null
  br i1 %cmp37, label %for.body38, label %for.end45

for.body38:                                       ; preds = %for.cond36, %for.cond36
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 5
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp39 = icmp ne %struct.Connector_struct* %48, null
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; preds = %for.body38, %for.body38
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right41 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %49, i32 0, i32 5
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %right41, align 4
  %51 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %52 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %53 = load i32, i32* %size, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %53, i32* %struct.BigStruct_0
  %struct.BigStruct_16 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 16
  store %struct.Match_node_struct** %52, %struct.Match_node_struct*** %struct.BigStruct_16
  %struct.BigStruct_17 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 17
  store %struct.Disjunct_struct* %51, %struct.Disjunct_struct** %struct.BigStruct_17
  %struct.BigStruct_18 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 18
  store %struct.Connector_struct* %50, %struct.Connector_struct** %struct.BigStruct_18
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 19
  store i32 1, i32* %struct.BigStruct_19
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 34, i32 0)
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %for.body38, %if.then40, %for.body38
  br label %for.inc43

for.inc43:                                        ; preds = %if.end42, %if.end42
  %54 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next44 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %54, i32 0, i32 0
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next44, align 4
  store %struct.Disjunct_struct* %55, %struct.Disjunct_struct** %d, align 4
  br label %for.cond36

for.end45:                                        ; preds = %for.cond36, %for.cond36
  br label %for.inc46

for.inc46:                                        ; preds = %for.end45, %for.end45
  %56 = load i32, i32* %w, align 4
  %inc47 = add nsw i32 %56, 1
  store i32 %inc47, i32* %w, align 4
  br label %for.cond

for.end48:                                        ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define %struct.Match_node_struct* @form_match_list(i32 %w, %struct.Connector_struct* %lc, i32 %lw, %struct.Connector_struct* %rc, i32 %rw) #0 {
entry:
  %retval = alloca %struct.Match_node_struct*, align 4
  %rw.addr = alloca i32, align 4
  %rc.addr = alloca %struct.Connector_struct*, align 4
  %lw.addr = alloca i32, align 4
  %lc.addr = alloca %struct.Connector_struct*, align 4
  %w.addr = alloca i32, align 4
  %ml = alloca %struct.Match_node_struct*, align 4
  %mr = alloca %struct.Match_node_struct*, align 4
  %mx = alloca %struct.Match_node_struct*, align 4
  %my = alloca %struct.Match_node_struct*, align 4
  %mz = alloca %struct.Match_node_struct*, align 4
  %front = alloca %struct.Match_node_struct*, align 4
  %free_later = alloca %struct.Match_node_struct*, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store %struct.Connector_struct* %rc, %struct.Connector_struct** %rc.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  store %struct.Connector_struct* %lc, %struct.Connector_struct** %lc.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %cmp = icmp ne %struct.Connector_struct* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %call = call i32 @fast_match_hash(%struct.Connector_struct* %1)
  %2 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size, i32 0, i32 %2
  %3 = load i32, i32* %arrayidx, align 4
  %sub = sub nsw i32 %3, 1
  %and = and i32 %call, %sub
  %4 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @l_table, i32 0, i32 %4
  %5 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx1, align 4
  %arrayidx2 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %5, i32 %and
  %6 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx2, align 4
  store %struct.Match_node_struct* %6, %struct.Match_node_struct** %ml, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %ml, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %cmp3 = icmp ne %struct.Connector_struct* %7, null
  br i1 %cmp3, label %if.then4, label %if.else11

if.then4:                                         ; preds = %if.end
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %call5 = call i32 @fast_match_hash(%struct.Connector_struct* %8)
  %9 = load i32, i32* %w.addr, align 4
  %arrayidx6 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size, i32 0, i32 %9
  %10 = load i32, i32* %arrayidx6, align 4
  %sub7 = sub nsw i32 %10, 1
  %and8 = and i32 %call5, %sub7
  %11 = load i32, i32* %w.addr, align 4
  %arrayidx9 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @r_table, i32 0, i32 %11
  %12 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx9, align 4
  %arrayidx10 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %12, i32 %and8
  %13 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx10, align 4
  store %struct.Match_node_struct* %13, %struct.Match_node_struct** %mr, align 4
  br label %if.end12

if.else11:                                        ; preds = %if.end
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %mr, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.then4
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %front, align 4
  %14 = load %struct.Match_node_struct*, %struct.Match_node_struct** %ml, align 4
  store %struct.Match_node_struct* %14, %struct.Match_node_struct** %mx, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end12
  %15 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %cmp13 = icmp ne %struct.Match_node_struct* %15, null
  br i1 %cmp13, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %d = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %16, i32 0, i32 1
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 1
  %19 = load i16, i16* %word, align 2
  %conv = sext i16 %19 to i32
  %20 = load i32, i32* %lw.addr, align 4
  %cmp14 = icmp slt i32 %conv, %20
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.body
  br label %for.end

if.end17:                                         ; preds = %for.body
  %call18 = call %struct.Match_node_struct* @get_match_node()
  store %struct.Match_node_struct* %call18, %struct.Match_node_struct** %my, align 4
  %21 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %d19 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %21, i32 0, i32 1
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d19, align 4
  %23 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %d20 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %23, i32 0, i32 1
  store %struct.Disjunct_struct* %22, %struct.Disjunct_struct** %d20, align 4
  %24 = load %struct.Match_node_struct*, %struct.Match_node_struct** %front, align 4
  %25 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %25, i32 0, i32 0
  store %struct.Match_node_struct* %24, %struct.Match_node_struct** %next, align 4
  %26 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  store %struct.Match_node_struct* %26, %struct.Match_node_struct** %front, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end17
  %27 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next21 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %27, i32 0, i32 0
  %28 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next21, align 4
  store %struct.Match_node_struct* %28, %struct.Match_node_struct** %mx, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then16, %for.cond
  %29 = load %struct.Match_node_struct*, %struct.Match_node_struct** %front, align 4
  store %struct.Match_node_struct* %29, %struct.Match_node_struct** %ml, align 4
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %front, align 4
  %30 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mr, align 4
  store %struct.Match_node_struct* %30, %struct.Match_node_struct** %mx, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc37, %for.end
  %31 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %cmp23 = icmp ne %struct.Match_node_struct* %31, null
  br i1 %cmp23, label %for.body25, label %for.end39

for.body25:                                       ; preds = %for.cond22
  %32 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %d26 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %32, i32 0, i32 1
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d26, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %33, i32 0, i32 5
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %word27 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %34, i32 0, i32 1
  %35 = load i16, i16* %word27, align 2
  %conv28 = sext i16 %35 to i32
  %36 = load i32, i32* %rw.addr, align 4
  %cmp29 = icmp sgt i32 %conv28, %36
  br i1 %cmp29, label %if.then31, label %if.end32

if.then31:                                        ; preds = %for.body25
  br label %for.end39

if.end32:                                         ; preds = %for.body25
  %call33 = call %struct.Match_node_struct* @get_match_node()
  store %struct.Match_node_struct* %call33, %struct.Match_node_struct** %my, align 4
  %37 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %d34 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %37, i32 0, i32 1
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d34, align 4
  %39 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %d35 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %39, i32 0, i32 1
  store %struct.Disjunct_struct* %38, %struct.Disjunct_struct** %d35, align 4
  %40 = load %struct.Match_node_struct*, %struct.Match_node_struct** %front, align 4
  %41 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %next36 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %41, i32 0, i32 0
  store %struct.Match_node_struct* %40, %struct.Match_node_struct** %next36, align 4
  %42 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  store %struct.Match_node_struct* %42, %struct.Match_node_struct** %front, align 4
  br label %for.inc37

for.inc37:                                        ; preds = %if.end32
  %43 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next38 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %43, i32 0, i32 0
  %44 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next38, align 4
  store %struct.Match_node_struct* %44, %struct.Match_node_struct** %mx, align 4
  br label %for.cond22

for.end39:                                        ; preds = %if.then31, %for.cond22
  %45 = load %struct.Match_node_struct*, %struct.Match_node_struct** %front, align 4
  store %struct.Match_node_struct* %45, %struct.Match_node_struct** %mr, align 4
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %free_later, align 4
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %front, align 4
  %46 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mr, align 4
  store %struct.Match_node_struct* %46, %struct.Match_node_struct** %mx, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc69, %for.end39
  %47 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %cmp41 = icmp ne %struct.Match_node_struct* %47, null
  br i1 %cmp41, label %for.body43, label %for.end70

for.body43:                                       ; preds = %for.cond40
  %48 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next44 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %48, i32 0, i32 0
  %49 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next44, align 4
  store %struct.Match_node_struct* %49, %struct.Match_node_struct** %mz, align 4
  %50 = load i32, i32* @match_cost, align 4
  %inc = add nsw i32 %50, 1
  store i32 %inc, i32* @match_cost, align 4
  %51 = load %struct.Match_node_struct*, %struct.Match_node_struct** %ml, align 4
  store %struct.Match_node_struct* %51, %struct.Match_node_struct** %my, align 4
  br label %for.cond45

for.cond45:                                       ; preds = %for.inc56, %for.body43
  %52 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %cmp46 = icmp ne %struct.Match_node_struct* %52, null
  br i1 %cmp46, label %for.body48, label %for.end58

for.body48:                                       ; preds = %for.cond45
  %53 = load i32, i32* @match_cost, align 4
  %inc49 = add nsw i32 %53, 1
  store i32 %inc49, i32* @match_cost, align 4
  %54 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %d50 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %54, i32 0, i32 1
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d50, align 4
  %56 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %d51 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %56, i32 0, i32 1
  %57 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d51, align 4
  %cmp52 = icmp eq %struct.Disjunct_struct* %55, %57
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %for.body48
  br label %for.end58

if.end55:                                         ; preds = %for.body48
  br label %for.inc56

for.inc56:                                        ; preds = %if.end55
  %58 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %next57 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %58, i32 0, i32 0
  %59 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next57, align 4
  store %struct.Match_node_struct* %59, %struct.Match_node_struct** %my, align 4
  br label %for.cond45

for.end58:                                        ; preds = %if.then54, %for.cond45
  %60 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %cmp59 = icmp ne %struct.Match_node_struct* %60, null
  br i1 %cmp59, label %if.then61, label %if.end63

if.then61:                                        ; preds = %for.end58
  %61 = load %struct.Match_node_struct*, %struct.Match_node_struct** %free_later, align 4
  %62 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next62 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %62, i32 0, i32 0
  store %struct.Match_node_struct* %61, %struct.Match_node_struct** %next62, align 4
  %63 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  store %struct.Match_node_struct* %63, %struct.Match_node_struct** %free_later, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %for.end58
  %64 = load %struct.Match_node_struct*, %struct.Match_node_struct** %my, align 4
  %cmp64 = icmp eq %struct.Match_node_struct* %64, null
  br i1 %cmp64, label %if.then66, label %if.end68

if.then66:                                        ; preds = %if.end63
  %65 = load %struct.Match_node_struct*, %struct.Match_node_struct** %front, align 4
  %66 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next67 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %66, i32 0, i32 0
  store %struct.Match_node_struct* %65, %struct.Match_node_struct** %next67, align 4
  %67 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  store %struct.Match_node_struct* %67, %struct.Match_node_struct** %front, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %if.end63
  br label %for.inc69

for.inc69:                                        ; preds = %if.end68
  %68 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mz, align 4
  store %struct.Match_node_struct* %68, %struct.Match_node_struct** %mx, align 4
  br label %for.cond40

for.end70:                                        ; preds = %for.cond40
  %69 = load %struct.Match_node_struct*, %struct.Match_node_struct** %front, align 4
  store %struct.Match_node_struct* %69, %struct.Match_node_struct** %mr, align 4
  %70 = load %struct.Match_node_struct*, %struct.Match_node_struct** %free_later, align 4
  call void @put_match_list(%struct.Match_node_struct* %70)
  %71 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mr, align 4
  %cmp71 = icmp eq %struct.Match_node_struct* %71, null
  br i1 %cmp71, label %if.then73, label %if.end74

if.then73:                                        ; preds = %for.end70
  %72 = load %struct.Match_node_struct*, %struct.Match_node_struct** %ml, align 4
  store %struct.Match_node_struct* %72, %struct.Match_node_struct** %retval, align 4
  br label %return

if.end74:                                         ; preds = %for.end70
  %73 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mr, align 4
  store %struct.Match_node_struct* %73, %struct.Match_node_struct** %mx, align 4
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc80, %if.end74
  %74 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next76 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %74, i32 0, i32 0
  %75 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next76, align 4
  %cmp77 = icmp ne %struct.Match_node_struct* %75, null
  br i1 %cmp77, label %for.body79, label %for.end82

for.body79:                                       ; preds = %for.cond75
  br label %for.inc80

for.inc80:                                        ; preds = %for.body79
  %76 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next81 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %76, i32 0, i32 0
  %77 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next81, align 4
  store %struct.Match_node_struct* %77, %struct.Match_node_struct** %mx, align 4
  br label %for.cond75

for.end82:                                        ; preds = %for.cond75
  %78 = load %struct.Match_node_struct*, %struct.Match_node_struct** %ml, align 4
  %79 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mx, align 4
  %next83 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %79, i32 0, i32 0
  store %struct.Match_node_struct* %78, %struct.Match_node_struct** %next83, align 4
  %80 = load %struct.Match_node_struct*, %struct.Match_node_struct** %mr, align 4
  store %struct.Match_node_struct* %80, %struct.Match_node_struct** %retval, align 4
  br label %return

return:                                           ; preds = %for.end82, %if.then73
  %81 = load %struct.Match_node_struct*, %struct.Match_node_struct** %retval, align 4
  ret %struct.Match_node_struct* %81
}

; Function Attrs: noinline nounwind
define i32 @contains_underbar(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 95
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %while.body, %while.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.body, %while.body
  %4 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then, %while.end, %if.then
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret i32 %5
}

; Function Attrs: noinline nounwind
define i32 @is_idiom_string(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  store i8* %0, i8** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %1 = load i8*, i8** %t, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i8*, i8** %t, align 4
  %4 = load i8, i8* %3, align 1
  %conv2 = sext i8 %4 to i32
  %cmp3 = icmp eq i32 %conv2, 46
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %5 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %6 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %6, i32 0
  %7 = load i8, i8* %arrayidx, align 1
  %conv5 = sext i8 %7 to i32
  %cmp6 = icmp eq i32 %conv5, 95
  br i1 %cmp6, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end, %for.end
  %8 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strlen_Package(i8* %8)
  %sub = sub i32 %call, 1
  %9 = load i8*, i8** %s.addr, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %9, i32 %sub
  %10 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv9, 95
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %lor.lhs.false, %for.end, %lor.lhs.false, %for.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %lor.lhs.false, %lor.lhs.false
  %11 = load i8*, i8** %s.addr, align 4
  store i8* %11, i8** %t, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc27, %if.end13, %for.inc27, %if.end13
  %12 = load i8*, i8** %t, align 4
  %13 = load i8, i8* %12, align 1
  %conv15 = sext i8 %13 to i32
  %cmp16 = icmp ne i32 %conv15, 0
  br i1 %cmp16, label %for.body18, label %for.end29

for.body18:                                       ; preds = %for.cond14, %for.cond14
  %14 = load i8*, i8** %t, align 4
  %15 = load i8, i8* %14, align 1
  %conv19 = sext i8 %15 to i32
  %cmp20 = icmp eq i32 %conv19, 95
  br i1 %cmp20, label %land.lhs.true, label %if.end26

land.lhs.true:                                    ; preds = %for.body18, %for.body18
  %16 = load i8*, i8** %t, align 4
  %add.ptr = getelementptr inbounds i8, i8* %16, i32 1
  %17 = load i8, i8* %add.ptr, align 1
  %conv22 = sext i8 %17 to i32
  %cmp23 = icmp eq i32 %conv22, 95
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %land.lhs.true, %land.lhs.true
  store i32 0, i32* %retval, align 4
  br label %return

if.end26:                                         ; preds = %land.lhs.true, %for.body18, %land.lhs.true, %for.body18
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26, %if.end26
  %18 = load i8*, i8** %t, align 4
  %incdec.ptr28 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr28, i8** %t, align 4
  br label %for.cond14

for.end29:                                        ; preds = %for.cond14, %for.cond14
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end29, %if.then25, %if.then12, %if.then, %for.end29, %if.then25, %if.then12, %if.then
  %19 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %19, i32* %struct.BigStruct_32
  ret i32 %19
}

; Function Attrs: noinline nounwind
define i32 @is_number(i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %call = call i32 @isdigit_Package(i32 %conv2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.body
  %4 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then
  %5 = load i32, i32* %retval, align 4
  ret i32 %5
}

declare dllimport i32 @isdigit(i32) #1

; Function Attrs: noinline nounwind
define i32 @numberfy(i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp ne i32 %conv2, 46
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %6 = load i8*, i8** %s.addr, align 4
  %incdec.ptr5 = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr5, i8** %s.addr, align 4
  %7 = load i8, i8* %6, align 1
  %conv6 = sext i8 %7 to i32
  %cmp7 = icmp ne i32 %conv6, 46
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.end
  %8 = load i8*, i8** %s.addr, align 4
  %incdec.ptr9 = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr9, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv10 = sext i8 %9 to i32
  %cmp11 = icmp ne i32 %conv10, 73
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.end
  %10 = load i8*, i8** %s.addr, align 4
  %call = call i32 @is_number(i8* %10)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.end14
  store i32 -1, i32* %retval, align 4
  br label %return

if.end16:                                         ; preds = %if.end14
  %11 = load i8*, i8** %s.addr, align 4
  %call17 = call i32 @atoi_Package(i8* %11)
  store i32 %call17, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end16, %if.then15, %if.then13, %if.then
  %12 = load i32, i32* %retval, align 4
  ret i32 %12
}

declare dllimport i32 @atoi(i8*) #1

; Function Attrs: noinline nounwind
define i32 @max_postfix_found(%struct.Dict_node_struct* %d) #0 {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %d.addr = alloca %struct.Dict_node_struct*, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %d.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 0
  %2 = load i8*, i8** %string, align 4
  %call = call i32 @numberfy(i8* %2)
  store i32 %call, i32* %j, align 4
  %3 = load i32, i32* %j, align 4
  %4 = load i32, i32* %i, align 4
  %cmp1 = icmp sgt i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %while.body, %while.body
  %5 = load i32, i32* %j, align 4
  store i32 %5, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body, %if.then, %while.body
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 4
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %7, %struct.Dict_node_struct** %d.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %8 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %8, i32* %struct.BigStruct_32
  ret i32 %8
}

; Function Attrs: noinline nounwind
define i8* @build_idiom_word_name(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %new_s = alloca i8*, align 4
  %x = alloca i8*, align 4
  %count = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %call, %struct.Dict_node_struct** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 74, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %add = add nsw i32 %load_struct.BigStruct_32, 1
  store i32 %add, i32* %count, align 4
  %1 = load i8*, i8** %s.addr, align 4
  %call2 = call i32 @strlen_Package(i8* %1)
  %add3 = add i32 %call2, 10
  %call4 = call i8* @xalloc(i32 %add3)
  store i8* %call4, i8** %x, align 4
  store i8* %call4, i8** %new_s, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry, %while.body, %entry
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond, %while.cond
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv6 = sext i8 %5 to i32
  %cmp7 = icmp ne i32 %conv6, 46
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond, %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp7, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end, %land.end
  %7 = load i8*, i8** %s.addr, align 4
  %8 = load i8, i8* %7, align 1
  %9 = load i8*, i8** %x, align 4
  store i8 %8, i8* %9, align 1
  %10 = load i8*, i8** %x, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %x, align 4
  %11 = load i8*, i8** %s.addr, align 4
  %incdec.ptr9 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr9, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end, %land.end
  %12 = load i32, i32* %count, align 4
  %13 = load i8*, i8** %x, align 4
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.93, i32 0, i32 0
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %13, i8* %14, i32 %12)
  %15 = load i8*, i8** %new_s, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %15, i8** %struct.BigStruct_34
  ret i8* %15
}

declare dllimport i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noinline nounwind
define %struct.Dict_node_struct* @make_idiom_Dict_nodes(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  %t = alloca i8*, align 4
  %more = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end15, %entry, %if.end15, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end16

while.body:                                       ; preds = %while.cond, %while.cond
  %2 = load i8*, i8** %s.addr, align 4
  store i8* %2, i8** %t, align 4
  br label %while.cond2

while.cond2:                                      ; preds = %while.body9, %while.body, %while.body9, %while.body
  %3 = load i8*, i8** %s.addr, align 4
  %4 = load i8, i8* %3, align 1
  %conv3 = sext i8 %4 to i32
  %cmp4 = icmp ne i32 %conv3, 0
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2, %while.cond2
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv6 = sext i8 %6 to i32
  %cmp7 = icmp ne i32 %conv6, 95
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2, %land.rhs, %while.cond2
  %7 = phi i1 [ false, %while.cond2 ], [ %cmp7, %land.rhs ]
  br i1 %7, label %while.body9, label %while.end

while.body9:                                      ; preds = %land.end, %land.end
  %8 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond2

while.end:                                        ; preds = %land.end, %land.end
  %9 = load i8*, i8** %s.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv10 = sext i8 %10 to i32
  %cmp11 = icmp eq i32 %conv10, 95
  br i1 %cmp11, label %if.then, label %if.else

if.then:                                          ; preds = %while.end, %while.end
  store i32 1, i32* %more, align 4
  %11 = load i8*, i8** %s.addr, align 4
  store i8 0, i8* %11, align 1
  br label %if.end

if.else:                                          ; preds = %while.end, %while.end
  store i32 0, i32* %more, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %call = call i8* @xalloc(i32 20)
  %12 = bitcast i8* %call to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %dn_new, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %14, i32 0, i32 4
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %right, align 4
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %15, %struct.Dict_node_struct** %dn, align 4
  %16 = load i8*, i8** %t, align 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 0
  store i8* %16, i8** %string, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 1
  store %struct.Word_file_struct* null, %struct.Word_file_struct** %file, align 4
  %19 = load i32, i32* %more, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end, %if.end
  %20 = load i8*, i8** %s.addr, align 4
  %incdec.ptr14 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr14, i8** %s.addr, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end, %if.then13, %if.end
  br label %while.cond

while.end16:                                      ; preds = %while.cond, %while.cond
  %21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  store %struct.Dict_node_struct* %21, %struct.Dict_node_struct** %struct.BigStruct_41
  ret %struct.Dict_node_struct* %21
}

; Function Attrs: noinline nounwind
define void @increment_current_name() #0 {
entry:
  %i = alloca i32, align 4
  %carry = alloca i32, align 4
  store i32 7, i32* %i, align 4
  store i32 1, i32* %carry, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %0 = load i32, i32* %carry, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  %inc = add i8 %2, 1
  store i8 %inc, i8* %arrayidx, align 1
  %3 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %3
  %4 = load i8, i8* %arrayidx1, align 1
  %conv = sext i8 %4 to i32
  %cmp2 = icmp eq i32 %conv, 91
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %while.body, %while.body
  %5 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %5
  store i8 65, i8* %arrayidx4, align 1
  store i32 1, i32* %carry, align 4
  br label %if.end

if.else:                                          ; preds = %while.body, %while.body
  store i32 0, i32* %carry, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %6 = load i32, i32* %i, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  ret void
}

; Function Attrs: noinline nounwind
define i8* @generate_id_connector() #0 {
entry:
  %i = alloca i32, align 4
  %t = alloca i8*, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %0
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 65
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %2 = load i32, i32* %i, align 4
  %inc = add i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %i, align 4
  %sub = sub i32 8, %3
  %add = add i32 %sub, 2
  %add2 = add i32 %add, 1
  %add3 = add i32 %add2, 1
  %call = call i8* @xalloc(i32 %add3)
  store i8* %call, i8** %t, align 4
  store i8* %call, i8** %s, align 4
  %4 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  store i8 73, i8* %4, align 1
  %5 = load i8*, i8** %t, align 4
  %incdec.ptr4 = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr4, i8** %t, align 4
  store i8 68, i8* %5, align 1
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc11, %for.end, %for.inc11, %for.end
  %6 = load i32, i32* %i, align 4
  %cmp6 = icmp ult i32 %6, 8
  br i1 %cmp6, label %for.body8, label %for.end13

for.body8:                                        ; preds = %for.cond5, %for.cond5
  %7 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %7
  %8 = load i8, i8* %arrayidx9, align 1
  %9 = load i8*, i8** %t, align 4
  %incdec.ptr10 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr10, i8** %t, align 4
  store i8 %8, i8* %9, align 1
  br label %for.inc11

for.inc11:                                        ; preds = %for.body8, %for.body8
  %10 = load i32, i32* %i, align 4
  %inc12 = add i32 %10, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond5

for.end13:                                        ; preds = %for.cond5, %for.cond5
  %11 = load i8*, i8** %t, align 4
  %incdec.ptr14 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr14, i8** %t, align 4
  store i8 0, i8* %11, align 1
  %12 = load i8*, i8** %s, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %12, i8** %struct.BigStruct_34
  ret i8* %12
}

; Function Attrs: noinline nounwind
define void @insert_idiom(%struct.Dict_node_struct* %dn) #0 {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %nc = alloca %struct.Exp_struct*, align 4
  %no = alloca %struct.Exp_struct*, align 4
  %n1 = alloca %struct.Exp_struct*, align 4
  %ell = alloca %struct.E_list_struct*, align 4
  %elr = alloca %struct.E_list_struct*, align 4
  %s = alloca i8*, align 4
  %s_length = alloca i32, align 4
  %dn_list = alloca %struct.Dict_node_struct*, align 4
  %xdn = alloca %struct.Dict_node_struct*, align 4
  %start_dn_list = alloca %struct.Dict_node_struct*, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %0, i32 0, i32 2
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  store %struct.Exp_struct* %1, %struct.Exp_struct** %no, align 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 0
  %3 = load i8*, i8** %string, align 4
  store i8* %3, i8** %s, align 4
  %4 = load i8*, i8** %s, align 4
  %call = call i32 @strlen_Package(i8* %4)
  store i32 %call, i32* %s_length, align 4
  %5 = load i8*, i8** %s, align 4
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %5, i8** %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 112, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  %6 = load i32, i32* @line_number, align 4
  %7 = load i8*, i8** %s, align 4
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.1.94, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %8, i8* %7, i32 %6)
  %9 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.2.95, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %9)
  %10 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.3.96, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %10)
  %11 = load i32, i32* %s_length, align 4
  %add = add nsw i32 %11, 1
  %12 = load i8*, i8** %s, align 4
  call void @xfree(i8* %12, i32 %add)
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %14 = bitcast %struct.Dict_node_struct* %13 to i8*
  call void @xfree(i8* %14, i32 20)
  br label %return

if.end:                                           ; preds = %entry, %entry
  %15 = load i8*, i8** %s, align 4
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 113, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %start_dn_list, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn_list, align 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %17 = bitcast %struct.Dict_node_struct* %16 to i8*
  call void @xfree(i8* %17, i32 20)
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 4
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %19, null
  br i1 %cmp, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end, %if.end
  %20 = getelementptr inbounds [64 x i8], [64 x i8]* @.str.4.97, i32 0, i32 0
  call void @error(i8* %20)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end, %if.then6, %if.end
  %call8 = call i8* @xalloc(i32 8)
  %21 = bitcast i8* %call8 to %struct.Exp_struct*
  store %struct.Exp_struct* %21, %struct.Exp_struct** %nc, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_344 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_344 = load i8*, i8** %struct.BigStruct_344
  %22 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %22, i32 0, i32 4
  %string10 = bitcast %union.anon* %u to i8**
  store i8* %load_struct.BigStruct_344, i8** %string10, align 4
  %23 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %23, i32 0, i32 2
  store i8 45, i8* %dir, align 2
  %24 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %24, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %25 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %25, i32 0, i32 0
  store i8 2, i8* %type, align 4
  %26 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %26, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %call11 = call i8* @xalloc(i32 8)
  %27 = bitcast i8* %call11 to %struct.Exp_struct*
  store %struct.Exp_struct* %27, %struct.Exp_struct** %n1, align 4
  %call12 = call i8* @xalloc(i32 8)
  %28 = bitcast i8* %call12 to %struct.E_list_struct*
  store %struct.E_list_struct* %28, %struct.E_list_struct** %ell, align 4
  %29 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %u13 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %29, i32 0, i32 4
  %l = bitcast %union.anon* %u13 to %struct.E_list_struct**
  store %struct.E_list_struct* %28, %struct.E_list_struct** %l, align 4
  %call14 = call i8* @xalloc(i32 8)
  %30 = bitcast i8* %call14 to %struct.E_list_struct*
  store %struct.E_list_struct* %30, %struct.E_list_struct** %elr, align 4
  %31 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %31, i32 0, i32 0
  store %struct.E_list_struct* %30, %struct.E_list_struct** %next, align 4
  %32 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next15 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %32, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next15, align 4
  %33 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %34 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %34, i32 0, i32 1
  store %struct.Exp_struct* %33, %struct.Exp_struct** %e, align 4
  %35 = load %struct.Exp_struct*, %struct.Exp_struct** %no, align 4
  %36 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e16 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %36, i32 0, i32 1
  store %struct.Exp_struct* %35, %struct.Exp_struct** %e16, align 4
  %37 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %type17 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %37, i32 0, i32 0
  store i8 1, i8* %type17, align 4
  %38 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %cost18 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %38, i32 0, i32 1
  store i8 0, i8* %cost18, align 1
  %39 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %40 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %exp19 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %40, i32 0, i32 2
  store %struct.Exp_struct* %39, %struct.Exp_struct** %exp19, align 4
  %41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right20 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %41, i32 0, i32 4
  %42 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right20, align 4
  store %struct.Dict_node_struct* %42, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end7, %while.body, %if.end7
  %43 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right21 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %43, i32 0, i32 4
  %44 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right21, align 4
  %cmp22 = icmp ne %struct.Dict_node_struct* %44, null
  br i1 %cmp22, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %call23 = call i8* @xalloc(i32 8)
  %45 = bitcast i8* %call23 to %struct.Exp_struct*
  store %struct.Exp_struct* %45, %struct.Exp_struct** %n1, align 4
  %46 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %u24 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %46, i32 0, i32 4
  %string25 = bitcast %union.anon* %u24 to i8**
  store i8* null, i8** %string25, align 4
  %47 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %type26 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %47, i32 0, i32 0
  store i8 1, i8* %type26, align 4
  %48 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %cost27 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %48, i32 0, i32 1
  store i8 0, i8* %cost27, align 1
  %call28 = call i8* @xalloc(i32 8)
  %49 = bitcast i8* %call28 to %struct.E_list_struct*
  store %struct.E_list_struct* %49, %struct.E_list_struct** %ell, align 4
  %50 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %u29 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %50, i32 0, i32 4
  %l30 = bitcast %union.anon* %u29 to %struct.E_list_struct**
  store %struct.E_list_struct* %49, %struct.E_list_struct** %l30, align 4
  %call31 = call i8* @xalloc(i32 8)
  %51 = bitcast i8* %call31 to %struct.E_list_struct*
  store %struct.E_list_struct* %51, %struct.E_list_struct** %elr, align 4
  %52 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next32 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %52, i32 0, i32 0
  store %struct.E_list_struct* %51, %struct.E_list_struct** %next32, align 4
  %53 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next33 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %53, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next33, align 4
  %call34 = call i8* @xalloc(i32 8)
  %54 = bitcast i8* %call34 to %struct.Exp_struct*
  store %struct.Exp_struct* %54, %struct.Exp_struct** %nc, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_343 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_343 = load i8*, i8** %struct.BigStruct_343
  %55 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u36 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %55, i32 0, i32 4
  %string37 = bitcast %union.anon* %u36 to i8**
  store i8* %load_struct.BigStruct_343, i8** %string37, align 4
  %56 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir38 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %56, i32 0, i32 2
  store i8 43, i8* %dir38, align 2
  %57 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi39 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %57, i32 0, i32 3
  store i8 0, i8* %multi39, align 1
  %58 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type40 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %58, i32 0, i32 0
  store i8 2, i8* %type40, align 4
  %59 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost41 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %59, i32 0, i32 1
  store i8 0, i8* %cost41, align 1
  %60 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %61 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e42 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %61, i32 0, i32 1
  store %struct.Exp_struct* %60, %struct.Exp_struct** %e42, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 76, i32 0)
  %call43 = call i8* @xalloc(i32 8)
  %62 = bitcast i8* %call43 to %struct.Exp_struct*
  store %struct.Exp_struct* %62, %struct.Exp_struct** %nc, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_342 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_342 = load i8*, i8** %struct.BigStruct_342
  %63 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u45 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %63, i32 0, i32 4
  %string46 = bitcast %union.anon* %u45 to i8**
  store i8* %load_struct.BigStruct_342, i8** %string46, align 4
  %64 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir47 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %64, i32 0, i32 2
  store i8 45, i8* %dir47, align 2
  %65 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi48 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %65, i32 0, i32 3
  store i8 0, i8* %multi48, align 1
  %66 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type49 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %66, i32 0, i32 0
  store i8 2, i8* %type49, align 4
  %67 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost50 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %67, i32 0, i32 1
  store i8 0, i8* %cost50, align 1
  %68 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %69 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e51 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %69, i32 0, i32 1
  store %struct.Exp_struct* %68, %struct.Exp_struct** %e51, align 4
  %70 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %71 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %exp52 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %71, i32 0, i32 2
  store %struct.Exp_struct* %70, %struct.Exp_struct** %exp52, align 4
  %72 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right53 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %72, i32 0, i32 4
  %73 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right53, align 4
  store %struct.Dict_node_struct* %73, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %call54 = call i8* @xalloc(i32 8)
  %74 = bitcast i8* %call54 to %struct.Exp_struct*
  store %struct.Exp_struct* %74, %struct.Exp_struct** %nc, align 4
  %call55 = call i8* @xalloc(i32 8)
  %75 = bitcast i8* %call55 to %struct.E_list_struct*
  store %struct.E_list_struct* %75, %struct.E_list_struct** %ell, align 4
  %76 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u56 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %76, i32 0, i32 4
  %l57 = bitcast %union.anon* %u56 to %struct.E_list_struct**
  store %struct.E_list_struct* %75, %struct.E_list_struct** %l57, align 4
  %call58 = call i8* @xalloc(i32 8)
  %77 = bitcast i8* %call58 to %struct.E_list_struct*
  store %struct.E_list_struct* %77, %struct.E_list_struct** %elr, align 4
  %78 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next59 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %78, i32 0, i32 0
  store %struct.E_list_struct* %77, %struct.E_list_struct** %next59, align 4
  %79 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next60 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %79, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next60, align 4
  %80 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e61 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %80, i32 0, i32 1
  store %struct.Exp_struct* null, %struct.Exp_struct** %e61, align 4
  %81 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e62 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %81, i32 0, i32 1
  store %struct.Exp_struct* null, %struct.Exp_struct** %e62, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_341 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_341 = load i8*, i8** %struct.BigStruct_341
  %82 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u64 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %82, i32 0, i32 4
  %string65 = bitcast %union.anon* %u64 to i8**
  store i8* %load_struct.BigStruct_341, i8** %string65, align 4
  %83 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir66 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %83, i32 0, i32 2
  store i8 43, i8* %dir66, align 2
  %84 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi67 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %84, i32 0, i32 3
  store i8 0, i8* %multi67, align 1
  %85 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type68 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %85, i32 0, i32 0
  store i8 2, i8* %type68, align 4
  %86 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost69 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %86, i32 0, i32 1
  store i8 0, i8* %cost69, align 1
  %87 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %88 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %exp70 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %88, i32 0, i32 2
  store %struct.Exp_struct* %87, %struct.Exp_struct** %exp70, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 76, i32 0)
  %89 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %start_dn_list, align 4
  store %struct.Dict_node_struct* %89, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond71

while.cond71:                                     ; preds = %while.body73, %while.end, %while.body73, %while.end
  %90 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %cmp72 = icmp ne %struct.Dict_node_struct* %90, null
  br i1 %cmp72, label %while.body73, label %while.end80

while.body73:                                     ; preds = %while.cond71, %while.cond71
  %91 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right74 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %91, i32 0, i32 4
  %92 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right74, align 4
  store %struct.Dict_node_struct* %92, %struct.Dict_node_struct** %xdn, align 4
  %93 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right75 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %93, i32 0, i32 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %right75, align 4
  %94 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %94, i32 0, i32 3
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %left, align 4
  %95 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %string76 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %95, i32 0, i32 0
  %96 = load i8*, i8** %string76, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %96, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 75, i32 3)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %97 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %string78 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %97, i32 0, i32 0
  store i8* %load_struct.BigStruct_34, i8** %string78, align 4
  %98 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %99 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call79 = call %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %99, %struct.Dict_node_struct* %98)
  store %struct.Dict_node_struct* %call79, %struct.Dict_node_struct** @dict_root, align 4
  %100 = load i32, i32* @N_dict, align 4
  %inc = add nsw i32 %100, 1
  store i32 %inc, i32* @N_dict, align 4
  %101 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %xdn, align 4
  store %struct.Dict_node_struct* %101, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond71

while.end80:                                      ; preds = %while.cond71, %while.cond71
  %102 = load i32, i32* %s_length, align 4
  %add81 = add nsw i32 %102, 1
  %103 = load i8*, i8** %s, align 4
  call void @xfree(i8* %103, i32 %add81)
  br label %return

return:                                           ; preds = %while.end80, %if.then, %while.end80, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define i32 @is_idiom_word(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i32 @numberfy(i8* %0)
  %cmp = icmp ne i32 %call, -1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: noinline nounwind
define i32 @issue_sentence_word(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry, %entry
  %2 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strlen_Package(i8* %2)
  %cmp2 = icmp uge i32 %call, 60
  br i1 %cmp2, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end, %if.end
  %3 = load i8*, i8** %s.addr, align 4
  %4 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.137, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %4, i8* %3)
  %5 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.1.138, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %5, i32 59)
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %if.end, %if.end
  %6 = load i32, i32* @N_words, align 4
  %cmp8 = icmp eq i32 %6, 250
  br i1 %cmp8, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7, %if.end7
  %7 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.2.139, i32 0, i32 0
  %call11 = call i32 (i8*, ...) @printf(i8* %7)
  store i32 0, i32* %retval, align 4
  br label %return

if.end12:                                         ; preds = %if.end7, %if.end7
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i32, i32* @N_words, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %9
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %call13 = call i8* @strcpy_Package(i8* %arraydecay, i8* %8)
  %10 = load i32, i32* @N_words, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* @N_words, align 4
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end12, %if.then10, %if.then4, %if.then, %if.end12, %if.then10, %if.then4, %if.then
  %11 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret i32 %11
}

; Function Attrs: noinline nounwind
define i32 @separate_word(i8* %w, i8* %wend, i32 %is_first_word) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %retval = alloca i32, align 4
  %is_first_word.addr = alloca i32, align 4
  %wend.addr = alloca i8*, align 4
  %w.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %n_stripped = alloca i32, align 4
  %stripped = alloca [10 x i32], align 4
  %word = alloca [61 x i8], align 1
  store i32 %load_struct.BigStruct_5, i32* %is_first_word.addr, align 4
  store i8* %load_struct.BigStruct_3, i8** %wend.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %w.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end15, %entry, %if.end15, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.cond, %for.inc, %for.cond
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %0
  %1 = load i8*, i8** %arrayidx, align 4
  %cmp = icmp ne i8* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond1, %for.cond1
  %2 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %2
  %3 = load i8*, i8** %arrayidx2, align 4
  %call = call i32 @strlen_Package(i8* %3)
  %4 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %4
  %5 = load i8*, i8** %arrayidx3, align 4
  %6 = load i8*, i8** %w.addr, align 4
  %call4 = call i32 @strncmp_Package(i8* %6, i8* %5, i32 %call)
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then, label %if.end11

if.then:                                          ; preds = %for.body, %for.body
  %7 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %7
  %8 = load i8*, i8** %arrayidx6, align 4
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %8, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_329 = load i32, i32* %struct.BigStruct_329
  %tobool = icmp ne i32 %load_struct.BigStruct_329, 0
  br i1 %tobool, label %if.end, label %if.then8

if.then8:                                         ; preds = %if.then, %if.then
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then, %if.then
  %9 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %9
  %10 = load i8*, i8** %arrayidx9, align 4
  %call10 = call i32 @strlen_Package(i8* %10)
  %11 = load i8*, i8** %w.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 %call10
  store i8* %add.ptr, i8** %w.addr, align 4
  br label %for.end

if.end11:                                         ; preds = %for.body, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end11, %if.end11
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond1

for.end:                                          ; preds = %if.end, %for.cond1, %if.end, %for.cond1
  %13 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %13
  %14 = load i8*, i8** %arrayidx12, align 4
  %cmp13 = icmp eq i8* %14, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %for.end, %for.end
  br label %for.end16

if.end15:                                         ; preds = %for.end, %for.end
  br label %for.cond

for.end16:                                        ; preds = %if.then14, %if.then14
  store i32 0, i32* %n_stripped, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc91, %for.end16, %for.inc91, %for.end16
  %15 = load i32, i32* %n_stripped, align 4
  %cmp18 = icmp slt i32 %15, 10
  br i1 %cmp18, label %for.body19, label %for.end93

for.body19:                                       ; preds = %for.cond17, %for.cond17
  %16 = load i8*, i8** %wend.addr, align 4
  %17 = load i8*, i8** %w.addr, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %18 = load i8*, i8** %w.addr, align 4
  %arraydecay = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_21
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %18, i8** %struct.BigStruct_32
  %struct.BigStruct_53 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %sub.ptr.sub, i32* %struct.BigStruct_53
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 3, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %19 = load i8*, i8** %wend.addr, align 4
  %20 = load i8*, i8** %w.addr, align 4
  %sub.ptr.lhs.cast21 = ptrtoint i8* %19 to i32
  %sub.ptr.rhs.cast22 = ptrtoint i8* %20 to i32
  %sub.ptr.sub23 = sub i32 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %arrayidx24 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 %sub.ptr.sub23
  store i8 0, i8* %arrayidx24, align 1
  %21 = load i8*, i8** %wend.addr, align 4
  %22 = load i8*, i8** %w.addr, align 4
  %cmp25 = icmp eq i8* %21, %22
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %for.body19, %for.body19
  br label %for.end93

if.end27:                                         ; preds = %for.body19, %for.body19
  %arraydecay28 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay28, i8** %struct.BigStruct_215
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_3216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3216 = load i32, i32* %struct.BigStruct_3216
  %tobool30 = icmp ne i32 %load_struct.BigStruct_3216, 0
  br i1 %tobool30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end27, %if.end27
  br label %for.end93

if.end32:                                         ; preds = %if.end27, %if.end27
  %23 = load i32, i32* %is_first_word.addr, align 4
  %tobool33 = icmp ne i32 %23, 0
  br i1 %tobool33, label %land.lhs.true, label %if.end58

land.lhs.true:                                    ; preds = %if.end32, %if.end32
  %arrayidx34 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %24 = load i8, i8* %arrayidx34, align 1
  %conv = sext i8 %24 to i32
  %call35 = call i32 @isupper_Package(i32 %conv)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.then37, label %if.end58

if.then37:                                        ; preds = %land.lhs.true, %land.lhs.true
  %arrayidx38 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %25 = load i8, i8* %arrayidx38, align 1
  %conv39 = sext i8 %25 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv39, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 35, i32 0)
  %struct.BigStruct_3210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3210 = load i32, i32* %struct.BigStruct_3210
  %conv41 = trunc i32 %load_struct.BigStruct_3210 to i8
  %arrayidx42 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  store i8 %conv41, i8* %arrayidx42, align 1
  %arraydecay43 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay43, i8** %struct.BigStruct_217
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_3218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3218 = load i32, i32* %struct.BigStruct_3218
  %tobool45 = icmp ne i32 %load_struct.BigStruct_3218, 0
  br i1 %tobool45, label %if.then46, label %if.end52

if.then46:                                        ; preds = %if.then37, %if.then37
  %arrayidx47 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %26 = load i8, i8* %arrayidx47, align 1
  %conv48 = sext i8 %26 to i32
  %struct.BigStruct_011 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv48, i32* %struct.BigStruct_011
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %conv50 = trunc i32 %load_struct.BigStruct_3212 to i8
  %arrayidx51 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  store i8 %conv50, i8* %arrayidx51, align 1
  br label %for.end93

if.end52:                                         ; preds = %if.then37, %if.then37
  %arrayidx53 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %27 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %27 to i32
  %struct.BigStruct_013 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv54, i32* %struct.BigStruct_013
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  %conv56 = trunc i32 %load_struct.BigStruct_3214 to i8
  %arrayidx57 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  store i8 %conv56, i8* %arrayidx57, align 1
  br label %if.end58

if.end58:                                         ; preds = %if.end52, %land.lhs.true, %if.end32, %if.end52, %land.lhs.true, %if.end32
  store i32 0, i32* %i, align 4
  br label %for.cond59

for.cond59:                                       ; preds = %for.inc83, %if.end58, %for.inc83, %if.end58
  %28 = load i32, i32* %i, align 4
  %arrayidx60 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %28
  %29 = load i8*, i8** %arrayidx60, align 4
  %cmp61 = icmp ne i8* %29, null
  br i1 %cmp61, label %for.body63, label %for.end85

for.body63:                                       ; preds = %for.cond59, %for.cond59
  %30 = load i32, i32* %i, align 4
  %arrayidx64 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %30
  %31 = load i8*, i8** %arrayidx64, align 4
  %call65 = call i32 @strlen_Package(i8* %31)
  store i32 %call65, i32* %len, align 4
  %32 = load i8*, i8** %wend.addr, align 4
  %33 = load i8*, i8** %w.addr, align 4
  %sub.ptr.lhs.cast66 = ptrtoint i8* %32 to i32
  %sub.ptr.rhs.cast67 = ptrtoint i8* %33 to i32
  %sub.ptr.sub68 = sub i32 %sub.ptr.lhs.cast66, %sub.ptr.rhs.cast67
  %34 = load i32, i32* %len, align 4
  %cmp69 = icmp slt i32 %sub.ptr.sub68, %34
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; preds = %for.body63, %for.body63
  br label %for.inc83

if.end72:                                         ; preds = %for.body63, %for.body63
  %35 = load i32, i32* %len, align 4
  %36 = load i32, i32* %i, align 4
  %arrayidx73 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %36
  %37 = load i8*, i8** %arrayidx73, align 4
  %38 = load i8*, i8** %wend.addr, align 4
  %39 = load i32, i32* %len, align 4
  %idx.neg = sub i32 0, %39
  %add.ptr74 = getelementptr inbounds i8, i8* %38, i32 %idx.neg
  %call75 = call i32 @strncmp_Package(i8* %add.ptr74, i8* %37, i32 %35)
  %cmp76 = icmp eq i32 %call75, 0
  br i1 %cmp76, label %if.then78, label %if.end82

if.then78:                                        ; preds = %if.end72, %if.end72
  %40 = load i32, i32* %i, align 4
  %41 = load i32, i32* %n_stripped, align 4
  %arrayidx79 = getelementptr inbounds [10 x i32], [10 x i32]* %stripped, i32 0, i32 %41
  store i32 %40, i32* %arrayidx79, align 4
  %42 = load i32, i32* %len, align 4
  %43 = load i8*, i8** %wend.addr, align 4
  %idx.neg80 = sub i32 0, %42
  %add.ptr81 = getelementptr inbounds i8, i8* %43, i32 %idx.neg80
  store i8* %add.ptr81, i8** %wend.addr, align 4
  br label %for.end85

if.end82:                                         ; preds = %if.end72, %if.end72
  br label %for.inc83

for.inc83:                                        ; preds = %if.end82, %if.then71, %if.end82, %if.then71
  %44 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %44, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond59

for.end85:                                        ; preds = %if.then78, %for.cond59, %if.then78, %for.cond59
  %45 = load i32, i32* %i, align 4
  %arrayidx86 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %45
  %46 = load i8*, i8** %arrayidx86, align 4
  %cmp87 = icmp eq i8* %46, null
  br i1 %cmp87, label %if.then89, label %if.end90

if.then89:                                        ; preds = %for.end85, %for.end85
  br label %for.end93

if.end90:                                         ; preds = %for.end85, %for.end85
  br label %for.inc91

for.inc91:                                        ; preds = %if.end90, %if.end90
  %47 = load i32, i32* %n_stripped, align 4
  %inc92 = add nsw i32 %47, 1
  store i32 %inc92, i32* %n_stripped, align 4
  br label %for.cond17

for.end93:                                        ; preds = %if.then89, %if.then46, %if.then31, %if.then26, %for.cond17, %if.then89, %if.then46, %if.then31, %if.then26, %for.cond17
  %48 = load i32, i32* %n_stripped, align 4
  %cmp94 = icmp eq i32 %48, 10
  br i1 %cmp94, label %if.then96, label %if.end99

if.then96:                                        ; preds = %for.end93, %for.end93
  %arraydecay97 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %49 = getelementptr inbounds [49 x i8], [49 x i8]* @.str.15.140, i32 0, i32 0
  %call98 = call i32 (i8*, ...) @printf(i8* %49, i8* %arraydecay97)
  store i32 0, i32* %retval, align 4
  br label %return

if.end99:                                         ; preds = %for.end93, %for.end93
  %arraydecay100 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay100, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  %tobool102 = icmp ne i32 %load_struct.BigStruct_327, 0
  br i1 %tobool102, label %if.end104, label %if.then103

if.then103:                                       ; preds = %if.end99, %if.end99
  store i32 0, i32* %retval, align 4
  br label %return

if.end104:                                        ; preds = %if.end99, %if.end99
  %50 = load i32, i32* %n_stripped, align 4
  %sub = sub nsw i32 %50, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond105

for.cond105:                                      ; preds = %for.inc115, %if.end104, %for.inc115, %if.end104
  %51 = load i32, i32* %i, align 4
  %cmp106 = icmp sge i32 %51, 0
  br i1 %cmp106, label %for.body108, label %for.end116

for.body108:                                      ; preds = %for.cond105, %for.cond105
  %52 = load i32, i32* %i, align 4
  %arrayidx109 = getelementptr inbounds [10 x i32], [10 x i32]* %stripped, i32 0, i32 %52
  %53 = load i32, i32* %arrayidx109, align 4
  %arrayidx110 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %53
  %54 = load i8*, i8** %arrayidx110, align 4
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %54, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %tobool112 = icmp ne i32 %load_struct.BigStruct_325, 0
  br i1 %tobool112, label %if.end114, label %if.then113

if.then113:                                       ; preds = %for.body108, %for.body108
  store i32 0, i32* %retval, align 4
  br label %return

if.end114:                                        ; preds = %for.body108, %for.body108
  br label %for.inc115

for.inc115:                                       ; preds = %if.end114, %if.end114
  %55 = load i32, i32* %i, align 4
  %dec = add nsw i32 %55, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond105

for.end116:                                       ; preds = %for.cond105, %for.cond105
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end116, %if.then113, %if.then103, %if.then96, %if.then8, %for.end116, %if.then113, %if.then103, %if.then96, %if.then8
  %56 = load i32, i32* %retval, align 4
  %struct.BigStruct_3219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %56, i32* %struct.BigStruct_3219
  ret i32 %56
}

declare dllimport i32 @strncmp(i8*, i8*, i32) #1

declare dllimport i8* @strncpy(i8*, i8*, i32) #1

declare dllimport i32 @tolower(i32) #1

declare dllimport i32 @toupper(i32) #1

; Function Attrs: noinline nounwind
define i32 @separate_sentence(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  %is_first = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* @N_words, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end3

if.then:                                          ; preds = %entry, %entry
  %1 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.16.141, i32 0, i32 0
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %1, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool1 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then, %if.then
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then, %if.then
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry, %if.end, %entry
  store i32 1, i32* %is_first, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end34, %if.end3, %if.end34, %if.end3
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.cond, %while.body, %for.cond
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %call4 = call i32 @isspace_Package(i32 %conv)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond, %while.cond
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv6 = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv6, 34
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond, %lor.rhs, %while.cond
  %6 = phi i1 [ true, %while.cond ], [ %cmp, %lor.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end, %lor.end
  %7 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %lor.end, %lor.end
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv8 = sext i8 %9 to i32
  %cmp9 = icmp eq i32 %conv8, 0
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %while.end, %while.end
  br label %for.end35

if.end12:                                         ; preds = %while.end, %while.end
  %10 = load i8*, i8** %s.addr, align 4
  store i8* %10, i8** %t, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc, %if.end12, %for.inc, %if.end12
  %11 = load i8*, i8** %t, align 4
  %12 = load i8, i8* %11, align 1
  %conv14 = sext i8 %12 to i32
  %call15 = call i32 @isspace_Package(i32 %conv14)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %lor.end24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.cond13, %for.cond13
  %13 = load i8*, i8** %t, align 4
  %14 = load i8, i8* %13, align 1
  %conv17 = sext i8 %14 to i32
  %cmp18 = icmp eq i32 %conv17, 34
  br i1 %cmp18, label %lor.end24, label %lor.rhs20

lor.rhs20:                                        ; preds = %lor.lhs.false, %lor.lhs.false
  %15 = load i8*, i8** %t, align 4
  %16 = load i8, i8* %15, align 1
  %conv21 = sext i8 %16 to i32
  %cmp22 = icmp eq i32 %conv21, 0
  br label %lor.end24

lor.end24:                                        ; preds = %lor.rhs20, %lor.lhs.false, %for.cond13, %lor.rhs20, %lor.lhs.false, %for.cond13
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %for.cond13 ], [ %cmp22, %lor.rhs20 ]
  %lnot = xor i1 %17, true
  br i1 %lnot, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end24, %lor.end24
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %18 = load i8*, i8** %t, align 4
  %incdec.ptr25 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr25, i8** %t, align 4
  br label %for.cond13

for.end:                                          ; preds = %lor.end24, %lor.end24
  %19 = load i32, i32* %is_first, align 4
  %20 = load i8*, i8** %t, align 4
  %21 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %21, i8** %struct.BigStruct_24
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %20, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %19, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 78, i32 4)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %tobool27 = icmp ne i32 %load_struct.BigStruct_325, 0
  br i1 %tobool27, label %if.end29, label %if.then28

if.then28:                                        ; preds = %for.end, %for.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end29:                                         ; preds = %for.end, %for.end
  store i32 0, i32* %is_first, align 4
  %22 = load i8*, i8** %t, align 4
  store i8* %22, i8** %s.addr, align 4
  %23 = load i8*, i8** %s.addr, align 4
  %24 = load i8, i8* %23, align 1
  %conv30 = sext i8 %24 to i32
  %cmp31 = icmp eq i32 %conv30, 0
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end29, %if.end29
  br label %for.end35

if.end34:                                         ; preds = %if.end29, %if.end29
  br label %for.cond

for.end35:                                        ; preds = %if.then33, %if.then11, %if.then33, %if.then11
  %25 = load i32, i32* @right_wall_defined, align 4
  %tobool36 = icmp ne i32 %25, 0
  br i1 %tobool36, label %if.then37, label %if.end42

if.then37:                                        ; preds = %for.end35, %for.end35
  %26 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.17.142, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %26, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool39 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool39, label %if.end41, label %if.then40

if.then40:                                        ; preds = %if.then37, %if.then37
  store i32 0, i32* %retval, align 4
  br label %return

if.end41:                                         ; preds = %if.then37, %if.then37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.end35, %if.end41, %for.end35
  %27 = load i32, i32* @N_words, align 4
  %28 = load i32, i32* @left_wall_defined, align 4
  %29 = load i32, i32* @right_wall_defined, align 4
  %add = add nsw i32 %28, %29
  %cmp43 = icmp sgt i32 %27, %add
  %conv44 = zext i1 %cmp43 to i32
  store i32 %conv44, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end42, %if.then40, %if.then28, %if.then2, %if.end42, %if.then40, %if.then28, %if.then2
  %30 = load i32, i32* %retval, align 4
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %30, i32* %struct.BigStruct_326
  ret i32 %30
}

declare dllimport i32 @isspace(i32) #1

; Function Attrs: noinline nounwind
define i32 @isnumber(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %call = call i32 @isdigit_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry, %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv1 = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv3 = sext i8 %5 to i32
  %call4 = call i32 @isdigit_Package(i32 %conv3)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end14, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body, %for.body
  %6 = load i8*, i8** %s.addr, align 4
  %7 = load i8, i8* %6, align 1
  %conv6 = sext i8 %7 to i32
  %cmp7 = icmp ne i32 %conv6, 46
  br i1 %cmp7, label %land.lhs.true9, label %if.end14

land.lhs.true9:                                   ; preds = %land.lhs.true, %land.lhs.true
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv10 = sext i8 %9 to i32
  %cmp11 = icmp ne i32 %conv10, 44
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %land.lhs.true9, %land.lhs.true9
  store i32 0, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %land.lhs.true9, %land.lhs.true, %for.body, %land.lhs.true9, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end14, %if.end14
  %10 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then13, %if.then, %for.end, %if.then13, %if.then
  %11 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret i32 %11
}

; Function Attrs: noinline nounwind
define i32 @ishyphenated(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %hyp = alloca i32, align 4
  %nonalpha = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %nonalpha, align 4
  store i32 0, i32* %hyp, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 45
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end27, %if.end, %if.end27, %if.end
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br i1 %cmp3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv5 = sext i8 %5 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv5, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 4, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end22, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body, %while.body
  %6 = load i8*, i8** %s.addr, align 4
  %7 = load i8, i8* %6, align 1
  %conv6 = sext i8 %7 to i32
  %call7 = call i32 @isdigit_Package(i32 %conv6)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end22, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %land.lhs.true, %land.lhs.true
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv10 = sext i8 %9 to i32
  %cmp11 = icmp ne i32 %conv10, 46
  br i1 %cmp11, label %land.lhs.true13, label %if.end22

land.lhs.true13:                                  ; preds = %land.lhs.true9, %land.lhs.true9
  %10 = load i8*, i8** %s.addr, align 4
  %11 = load i8, i8* %10, align 1
  %conv14 = sext i8 %11 to i32
  %cmp15 = icmp ne i32 %conv14, 44
  br i1 %cmp15, label %land.lhs.true17, label %if.end22

land.lhs.true17:                                  ; preds = %land.lhs.true13, %land.lhs.true13
  %12 = load i8*, i8** %s.addr, align 4
  %13 = load i8, i8* %12, align 1
  %conv18 = sext i8 %13 to i32
  %cmp19 = icmp ne i32 %conv18, 45
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %land.lhs.true17, %land.lhs.true17
  store i32 0, i32* %retval, align 4
  br label %return

if.end22:                                         ; preds = %land.lhs.true17, %land.lhs.true13, %land.lhs.true9, %land.lhs.true, %while.body, %land.lhs.true17, %land.lhs.true13, %land.lhs.true9, %land.lhs.true, %while.body
  %14 = load i8*, i8** %s.addr, align 4
  %15 = load i8, i8* %14, align 1
  %conv23 = sext i8 %15 to i32
  %cmp24 = icmp eq i32 %conv23, 45
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22, %if.end22
  %16 = load i32, i32* %hyp, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %hyp, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end22, %if.then26, %if.end22
  %17 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %18 = load i8*, i8** %s.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %18, i32 -1
  %19 = load i8, i8* %add.ptr, align 1
  %conv28 = sext i8 %19 to i32
  %cmp29 = icmp ne i32 %conv28, 45
  br i1 %cmp29, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.end, %while.end
  %20 = load i32, i32* %hyp, align 4
  %cmp31 = icmp sgt i32 %20, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.end, %land.rhs, %while.end
  %21 = phi i1 [ false, %while.end ], [ %cmp31, %land.rhs ]
  %land.ext = zext i1 %21 to i32
  store i32 %land.ext, i32* %retval, align 4
  br label %return

return:                                           ; preds = %land.end, %if.then21, %if.then, %land.end, %if.then21, %if.then
  %22 = load i32, i32* %retval, align 4
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %22, i32* %struct.BigStruct_321
  ret i32 %22
}

declare dllimport i32 @isalpha(i32) #1

; Function Attrs: noinline nounwind
define void @free_sentence_disjuncts() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %3)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_sentence_expressions() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %3, %struct.X_node_struct** %struct.BigStruct_14
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 99, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @special_string(i32 %i, i8* %s) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %i.addr = alloca i32, align 4
  %e = alloca %struct.X_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %i.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  %1 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %1, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_40 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_40
  %2 = load i32, i32* %i.addr, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_40, %struct.X_node_struct** %x, align 4
  %3 = load i32, i32* %i.addr, align 4
  %arrayidx2 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %3
  %x3 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx2, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x3, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %e, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then, %for.inc, %if.then
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %cmp = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %i.addr, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %string5 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %7, i32 0, i32 0
  store i8* %arraydecay, i8** %string5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %8, i32 0, i32 2
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %9, %struct.X_node_struct** %e, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry, %entry
  %10 = getelementptr inbounds [42 x i8], [42 x i8]* @.str.18.143, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %10)
  %11 = load i8*, i8** %s.addr, align 4
  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.19.144, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printf(i8* %12, i8* %11)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %for.end, %if.else, %for.end
  %13 = load i32, i32* %retval, align 4
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %13, i32* %struct.BigStruct_323
  ret i32 %13
}

; Function Attrs: noinline nounwind
define void @handle_unknown_word(i32 %i, i8* %s) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %i.addr = alloca i32, align 4
  %t = alloca i8*, align 4
  %d = alloca %struct.X_node_struct*, align 4
  %str = alloca [61 x i8], align 1
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %i.addr, align 4
  %0 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.20.145, i32 0, i32 0
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_40 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_40
  %1 = load i32, i32* %i.addr, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %1
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_40, %struct.X_node_struct** %x, align 4
  %2 = load i32, i32* %i.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %x2 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx1, i32 0, i32 1
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x2, align 4
  %cmp = icmp eq %struct.X_node_struct* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %4 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.22.146, i32 0, i32 0
  %5 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.21.147, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %4, i8* %5)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %entry, %entry
  %6 = load i32, i32* %i.addr, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %x5 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 1
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %x5, align 4
  store %struct.X_node_struct* %7, %struct.X_node_struct** %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %cmp6 = icmp ne %struct.X_node_struct* %8, null
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %string = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 0
  %10 = load i8*, i8** %string, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %10, i8** %struct.BigStruct_21
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 46, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 79, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  store i8* %load_struct.BigStruct_34, i8** %t, align 4
  %11 = load i8*, i8** %t, align 4
  %cmp8 = icmp ne i8* %11, null
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %for.body, %for.body
  %12 = load i8*, i8** %t, align 4
  %add.ptr = getelementptr inbounds i8, i8* %12, i32 1
  %13 = load i8*, i8** %s.addr, align 4
  %arraydecay = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %14 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.23.148, i32 0, i32 0
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* %14, i8* %13, i8* %add.ptr)
  br label %if.end13

if.else:                                          ; preds = %for.body, %for.body
  %15 = load i8*, i8** %s.addr, align 4
  %arraydecay11 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %16 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.24.149, i32 0, i32 0
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay11, i8* %16, i8* %15)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then9, %if.else, %if.then9
  %arraydecay14 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %call15 = call i32 @strlen_Package(i8* %arraydecay14)
  %add = add i32 %call15, 1
  %call16 = call i8* @xalloc(i32 %add)
  store i8* %call16, i8** %t, align 4
  %arraydecay17 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %call18 = call i32 @strlen_Package(i8* %arraydecay17)
  %add19 = add i32 %call18, 1
  %17 = load i8*, i8** %t, align 4
  call void @free_this_string_later(i8* %17, i32 %add19)
  %arraydecay20 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %18 = load i8*, i8** %t, align 4
  %call21 = call i8* @strcpy_Package(i8* %18, i8* %arraydecay20)
  %19 = load i8*, i8** %t, align 4
  %20 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %string22 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %20, i32 0, i32 0
  store i8* %19, i8** %string22, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end13, %if.end13
  %21 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %21, i32 0, i32 2
  %22 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %22, %struct.X_node_struct** %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

declare dllimport i8* @strchr(i8*, i32) #1

; Function Attrs: noinline nounwind
define i32 @build_sentence_expressions() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %first_word = alloca i32, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %e = alloca %struct.X_node_struct*, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  store i32 1, i32* %first_word, align 4
  br label %if.end

if.else:                                          ; preds = %entry, %entry
  store i32 0, i32* %first_word, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %4 = load i8*, i8** %s, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %4, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool1 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool1, label %if.then2, label %if.else5

if.then2:                                         ; preds = %for.body, %for.body
  %5 = load i8*, i8** %s, align 4
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %5, i8** %struct.BigStruct_211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_4012 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_4012 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_4012
  %6 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_4012, %struct.X_node_struct** %x, align 4
  br label %if.end42

if.else5:                                         ; preds = %for.body, %for.body
  %7 = load i8*, i8** %s, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i32 0
  %8 = load i8, i8* %arrayidx6, align 1
  %conv = sext i8 %8 to i32
  %call7 = call i32 @isupper_Package(i32 %conv)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %land.lhs.true, label %if.else15

land.lhs.true:                                    ; preds = %if.else5, %if.else5
  %9 = load i32, i32* @capitalized_word_defined, align 4
  %tobool9 = icmp ne i32 %9, 0
  br i1 %tobool9, label %if.then10, label %if.else15

if.then10:                                        ; preds = %land.lhs.true, %land.lhs.true
  %10 = load i32, i32* %i, align 4
  %11 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.25.150, i32 0, i32 0
  %struct.BigStruct_023 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %10, i32* %struct.BigStruct_023
  %struct.BigStruct_224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %11, i8** %struct.BigStruct_224
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 119, i32 9)
  %struct.BigStruct_3225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3225 = load i32, i32* %struct.BigStruct_3225
  %tobool12 = icmp ne i32 %load_struct.BigStruct_3225, 0
  br i1 %tobool12, label %if.end14, label %if.then13

if.then13:                                        ; preds = %if.then10, %if.then10
  store i32 0, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.then10, %if.then10
  br label %if.end41

if.else15:                                        ; preds = %land.lhs.true, %if.else5, %land.lhs.true, %if.else5
  %12 = load i8*, i8** %s, align 4
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %12, i8** %struct.BigStruct_213
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 115, i32 10)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  %tobool17 = icmp ne i32 %load_struct.BigStruct_3214, 0
  br i1 %tobool17, label %if.then18, label %if.else23

if.then18:                                        ; preds = %if.else15, %if.else15
  %13 = load i32, i32* %i, align 4
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.26.151, i32 0, i32 0
  %struct.BigStruct_020 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %13, i32* %struct.BigStruct_020
  %struct.BigStruct_221 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %14, i8** %struct.BigStruct_221
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 119, i32 9)
  %struct.BigStruct_3222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3222 = load i32, i32* %struct.BigStruct_3222
  %tobool20 = icmp ne i32 %load_struct.BigStruct_3222, 0
  br i1 %tobool20, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.then18, %if.then18
  store i32 0, i32* %retval, align 4
  br label %return

if.end22:                                         ; preds = %if.then18, %if.then18
  br label %if.end40

if.else23:                                        ; preds = %if.else15, %if.else15
  %15 = load i8*, i8** %s, align 4
  %struct.BigStruct_215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_215
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 116, i32 10)
  %struct.BigStruct_3216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3216 = load i32, i32* %struct.BigStruct_3216
  %tobool25 = icmp ne i32 %load_struct.BigStruct_3216, 0
  br i1 %tobool25, label %if.then26, label %if.else31

if.then26:                                        ; preds = %if.else23, %if.else23
  %16 = load i32, i32* %i, align 4
  %17 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.27.152, i32 0, i32 0
  %struct.BigStruct_017 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %16, i32* %struct.BigStruct_017
  %struct.BigStruct_218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %17, i8** %struct.BigStruct_218
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 119, i32 9)
  %struct.BigStruct_3219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3219 = load i32, i32* %struct.BigStruct_3219
  %tobool28 = icmp ne i32 %load_struct.BigStruct_3219, 0
  br i1 %tobool28, label %if.end30, label %if.then29

if.then29:                                        ; preds = %if.then26, %if.then26
  store i32 0, i32* %retval, align 4
  br label %return

if.end30:                                         ; preds = %if.then26, %if.then26
  br label %if.end39

if.else31:                                        ; preds = %if.else23, %if.else23
  %18 = load i32, i32* @unknown_word_defined, align 4
  %tobool32 = icmp ne i32 %18, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.else36

land.lhs.true33:                                  ; preds = %if.else31, %if.else31
  %19 = load i32, i32* @use_unknown_word, align 4
  %tobool34 = icmp ne i32 %19, 0
  br i1 %tobool34, label %if.then35, label %if.else36

if.then35:                                        ; preds = %land.lhs.true33, %land.lhs.true33
  %20 = load i8*, i8** %s, align 4
  %21 = load i32, i32* %i, align 4
  %struct.BigStruct_026 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %21, i32* %struct.BigStruct_026
  %struct.BigStruct_227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %20, i8** %struct.BigStruct_227
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 120, i32 9)
  br label %if.end38

if.else36:                                        ; preds = %land.lhs.true33, %if.else31, %land.lhs.true33, %if.else31
  %22 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.29.153, i32 0, i32 0
  %23 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.28.154, i32 0, i32 0
  %call37 = call i32 (i8*, ...) @printf(i8* %22, i8* %23)
  call void @exit_Package(i32 1) #5
  unreachable

if.end38:                                         ; preds = %if.then35, %if.then35
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end30, %if.end38, %if.end30
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end22, %if.end39, %if.end22
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end14, %if.end40, %if.end14
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then2, %if.end41, %if.then2
  br label %for.inc

for.inc:                                          ; preds = %if.end42, %if.end42
  %24 = load i32, i32* %i, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %25 = load i32, i32* %first_word, align 4
  %arrayidx43 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %25
  %string44 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx43, i32 0, i32 0
  %arraydecay45 = getelementptr inbounds [60 x i8], [60 x i8]* %string44, i32 0, i32 0
  store i8* %arraydecay45, i8** %s, align 4
  %26 = load i8*, i8** %s, align 4
  %arrayidx46 = getelementptr inbounds i8, i8* %26, i32 0
  %27 = load i8, i8* %arrayidx46, align 1
  %conv47 = sext i8 %27 to i32
  %call48 = call i32 @isupper_Package(i32 %conv47)
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.then50, label %if.end86

if.then50:                                        ; preds = %for.end, %for.end
  %28 = load i8*, i8** %s, align 4
  %call51 = call i32 @strlen_Package(i8* %28)
  %add = add i32 %call51, 1
  %call52 = call i8* @xalloc(i32 %add)
  store i8* %call52, i8** %t, align 4
  %29 = load i8*, i8** %s, align 4
  %call53 = call i32 @strlen_Package(i8* %29)
  %add54 = add i32 %call53, 1
  %30 = load i8*, i8** %t, align 4
  call void @free_this_string_later(i8* %30, i32 %add54)
  %31 = load i8*, i8** %s, align 4
  %32 = load i8*, i8** %t, align 4
  %call55 = call i8* @strcpy_Package(i8* %32, i8* %31)
  %33 = load i8*, i8** %t, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %33, i32 0
  %34 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %34 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv57, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 35, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv59 = trunc i32 %load_struct.BigStruct_32 to i8
  %35 = load i8*, i8** %t, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %35, i32 0
  store i8 %conv59, i8* %arrayidx60, align 1
  %36 = load i8*, i8** %t, align 4
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %36, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %tobool62 = icmp ne i32 %load_struct.BigStruct_325, 0
  br i1 %tobool62, label %if.then63, label %if.end85

if.then63:                                        ; preds = %if.then50, %if.then50
  %37 = load i8*, i8** %s, align 4
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %37, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  %tobool65 = icmp ne i32 %load_struct.BigStruct_327, 0
  br i1 %tobool65, label %if.then66, label %if.else73

if.then66:                                        ; preds = %if.then63, %if.then63
  %38 = load i8*, i8** %t, align 4
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %38, i8** %struct.BigStruct_29
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_4010 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_4010 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_4010
  store %struct.X_node_struct* %load_struct.BigStruct_4010, %struct.X_node_struct** %e, align 4
  %39 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %40 = load i32, i32* %first_word, align 4
  %arrayidx68 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %40
  %x69 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx68, i32 0, i32 1
  %41 = load %struct.X_node_struct*, %struct.X_node_struct** %x69, align 4
  %struct.BigStruct_1429 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %41, %struct.X_node_struct** %struct.BigStruct_1429
  %struct.BigStruct_30 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 30
  store %struct.X_node_struct* %39, %struct.X_node_struct** %struct.BigStruct_30
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 177, i32 10)
  %struct.BigStruct_4030 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_4030 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_4030
  %42 = load i32, i32* %first_word, align 4
  %arrayidx71 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %42
  %x72 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx71, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_4030, %struct.X_node_struct** %x72, align 4
  br label %if.end84

if.else73:                                        ; preds = %if.then63, %if.then63
  %43 = load i8*, i8** %s, align 4
  %arrayidx74 = getelementptr inbounds i8, i8* %43, i32 0
  %44 = load i8, i8* %arrayidx74, align 1
  %conv75 = sext i8 %44 to i32
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv75, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 35, i32 0)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %conv77 = trunc i32 %load_struct.BigStruct_322 to i8
  %45 = load i8*, i8** %s, align 4
  %arrayidx78 = getelementptr inbounds i8, i8* %45, i32 0
  store i8 %conv77, i8* %arrayidx78, align 1
  %46 = load i8*, i8** %s, align 4
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %46, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_40 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_40
  store %struct.X_node_struct* %load_struct.BigStruct_40, %struct.X_node_struct** %e, align 4
  %47 = load i32, i32* %first_word, align 4
  %arrayidx80 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %47
  %x81 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx80, i32 0, i32 1
  %48 = load %struct.X_node_struct*, %struct.X_node_struct** %x81, align 4
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %48, %struct.X_node_struct** %struct.BigStruct_14
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 99, i32 0)
  %49 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %50 = load i32, i32* %first_word, align 4
  %arrayidx82 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %50
  %x83 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx82, i32 0, i32 1
  store %struct.X_node_struct* %49, %struct.X_node_struct** %x83, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.else73, %if.then66, %if.else73, %if.then66
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then50, %if.end84, %if.then50
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %for.end, %if.end85, %for.end
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end86, %if.then29, %if.then21, %if.then13, %if.end86, %if.then29, %if.then21, %if.then13
  %51 = load i32, i32* %retval, align 4
  %struct.BigStruct_3228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %51, i32* %struct.BigStruct_3228
  ret i32 %51
}

; Function Attrs: noinline nounwind
define void @print_statistics() #0 {
entry:
  %0 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.30.155, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %0)
  %1 = load i32, i32* @parse_cost, align 4
  %2 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.31.156, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %2, i32 %1)
  %3 = load i32, i32* @mark_cost, align 4
  %4 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.32, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %4, i32 %3)
  %5 = load i32, i32* @N_in_table, align 4
  %6 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.33, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %6, i32 %5)
  %7 = load i32, i32* @N_hash_lookups, align 4
  %8 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.34, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %8, i32 %7)
  %9 = load i32, i32* @work_in_hash_lookups, align 4
  %conv = sitofp i32 %9 to float
  %10 = load i32, i32* @N_hash_lookups, align 4
  %conv5 = sitofp i32 %10 to float
  %div = fdiv float %conv, %conv5
  %conv6 = fpext float %div to double
  %11 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.35, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printf(i8* %11, double %conv6)
  %12 = load i32, i32* @max_space_in_use, align 4
  %13 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.36, i32 0, i32 0
  %call8 = call i32 (i8*, ...) @printf(i8* %13, i32 %12)
  %14 = load i32, i32* @space_in_use, align 4
  %15 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.37, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %15, i32 %14)
  ret void
}

; Function Attrs: noinline nounwind
define void @clean_up_string(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %x = alloca i8*, align 4
  %y = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  store i8* %0, i8** %x, align 4
  store i8* %0, i8** %y, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %1 = load i8*, i8** %x, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %3 = load i8*, i8** %x, align 4
  %4 = load i8, i8* %3, align 1
  %conv2 = sext i8 %4 to i32
  %call = call i32 @isspace_Package(i32 %conv2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %while.body, %while.body
  %5 = load i8*, i8** %x, align 4
  %6 = load i8, i8* %5, align 1
  %7 = load i8*, i8** %y, align 4
  store i8 %6, i8* %7, align 1
  %8 = load i8*, i8** %x, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %x, align 4
  %9 = load i8*, i8** %y, align 4
  %incdec.ptr3 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr3, i8** %y, align 4
  br label %if.end

if.else:                                          ; preds = %while.body, %while.body
  %10 = load i8*, i8** %x, align 4
  %incdec.ptr4 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr4, i8** %x, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %11 = load i8*, i8** %y, align 4
  store i8 0, i8* %11, align 1
  ret void
}

; Function Attrs: noinline nounwind
define i32 @is_numerical_rhs(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 43
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry, %entry
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 45
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry, %lor.lhs.false, %entry
  %4 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %if.then, %lor.lhs.false
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end, %do.cond, %if.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv5 = sext i8 %6 to i32
  %call = call i32 @isdigit_Package(i32 %conv5)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end7, label %if.then6

if.then6:                                         ; preds = %do.body, %do.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %do.body, %do.body
  %7 = load i8*, i8** %s.addr, align 4
  %incdec.ptr8 = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr8, i8** %s.addr, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end7, %if.end7
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv9 = sext i8 %9 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br i1 %cmp10, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %do.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end, %if.then6, %do.end, %if.then6
  %10 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %10, i32* %struct.BigStruct_32
  ret i32 %10
}

; Function Attrs: noinline nounwind
define void @massage_variables(i32 %j) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %j.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %j.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %0
  %p = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 1
  %1 = load i32*, i32** %p, align 4
  %cmp = icmp ne i32* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %2
  %isboolean = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx1, i32 0, i32 2
  %3 = load i32, i32* %isboolean, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %4 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %4
  %p3 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx2, i32 0, i32 1
  %5 = load i32*, i32** %p3, align 4
  %6 = load i32, i32* %5, align 4
  %tobool4 = icmp ne i32 %6, 0
  %lnot = xor i1 %tobool4, true
  %lnot5 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot5 to i32
  %7 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %7
  %p7 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx6, i32 0, i32 1
  %8 = load i32*, i32** %p7, align 4
  store i32 %lnot.ext, i32* %8, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %10 = load i32, i32* @display_on, align 4
  %tobool8 = icmp ne i32 %10, 0
  br i1 %tobool8, label %if.else19, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end, %for.end
  %11 = load i32, i32* @display_multiple, align 4
  %tobool9 = icmp ne i32 %11, 0
  br i1 %tobool9, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %land.lhs.true
  %12 = load i32, i32* @display_bad, align 4
  %tobool10 = icmp ne i32 %12, 0
  br i1 %tobool10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false, %lor.lhs.false
  %13 = load i32, i32* @display_fat, align 4
  %tobool12 = icmp ne i32 %13, 0
  br i1 %tobool12, label %if.then13, label %if.else19

if.then13:                                        ; preds = %lor.lhs.false11, %lor.lhs.false, %land.lhs.true, %lor.lhs.false11, %lor.lhs.false, %land.lhs.true
  %14 = load i32, i32* %j.addr, align 4
  %arrayidx14 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %14
  %p15 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx14, i32 0, i32 1
  %15 = load i32*, i32** %p15, align 4
  %cmp16 = icmp eq i32* %15, @display_on
  br i1 %cmp16, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.then13, %if.then13
  store i32 0, i32* @display_fat, align 4
  store i32 0, i32* @display_bad, align 4
  store i32 0, i32* @display_multiple, align 4
  br label %if.end18

if.else:                                          ; preds = %if.then13, %if.then13
  store i32 1, i32* @display_on, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17, %if.else, %if.then17
  br label %if.end35

if.else19:                                        ; preds = %lor.lhs.false11, %for.end, %lor.lhs.false11, %for.end
  %16 = load i32, i32* @display_on, align 4
  %tobool20 = icmp ne i32 %16, 0
  br i1 %tobool20, label %land.lhs.true21, label %if.end34

land.lhs.true21:                                  ; preds = %if.else19, %if.else19
  %17 = load i32, i32* @display_multiple, align 4
  %tobool22 = icmp ne i32 %17, 0
  br i1 %tobool22, label %if.end34, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %land.lhs.true21, %land.lhs.true21
  %18 = load i32, i32* @display_bad, align 4
  %tobool24 = icmp ne i32 %18, 0
  br i1 %tobool24, label %if.end34, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %lor.lhs.false23, %lor.lhs.false23
  %19 = load i32, i32* @display_fat, align 4
  %tobool26 = icmp ne i32 %19, 0
  br i1 %tobool26, label %if.end34, label %if.then27

if.then27:                                        ; preds = %lor.lhs.false25, %lor.lhs.false25
  %20 = load i32, i32* %j.addr, align 4
  %arrayidx28 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %20
  %p29 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx28, i32 0, i32 1
  %21 = load i32*, i32** %p29, align 4
  %cmp30 = icmp eq i32* %21, @display_on
  br i1 %cmp30, label %if.then31, label %if.else32

if.then31:                                        ; preds = %if.then27, %if.then27
  store i32 1, i32* @display_multiple, align 4
  br label %if.end33

if.else32:                                        ; preds = %if.then27, %if.then27
  store i32 0, i32* @display_on, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then31, %if.else32, %if.then31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %lor.lhs.false25, %lor.lhs.false23, %land.lhs.true21, %if.else19, %if.end33, %lor.lhs.false25, %lor.lhs.false23, %land.lhs.true21, %if.else19
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end18, %if.end34, %if.end18
  ret void
}

; Function Attrs: noinline nounwind
define void @special_command(i8* %line) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %line.addr = alloca i8*, align 4
  %x = alloca i8*, align 4
  %y = alloca i8*, align 4
  %s = alloca i8*, align 4
  %myline = alloca [1000 x i8], align 1
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %len = alloca i32, align 4
  %dn206 = alloca %struct.Dict_node_struct*, align 4
  %dn1 = alloca %struct.Dict_node_struct*, align 4
  %count207 = alloca i32, align 4
  %dn284 = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %line.addr, align 4
  %0 = load i8*, i8** %line.addr, align 4
  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_21
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %0, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1000, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 3, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %arrayidx = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 999
  store i8 0, i8* %arrayidx, align 1
  %arraydecay1 = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 0
  %struct.BigStruct_223 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay1, i8** %struct.BigStruct_223
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 165, i32 10)
  %arraydecay2 = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 0
  store i8* %arraydecay2, i8** %s, align 4
  %1 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  store i32 -1, i32* %k, align 4
  store i32 -1, i32* %j, align 4
  store i32 0, i32* %count, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %2
  %p = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx3, i32 0, i32 1
  %3 = load i32*, i32** %p, align 4
  %cmp = icmp ne i32* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %4 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %4
  %isboolean = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx4, i32 0, i32 2
  %5 = load i32, i32* %isboolean, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body, %for.body
  %6 = load i8*, i8** %s, align 4
  %call5 = call i32 @strlen_Package(i8* %6)
  %7 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %7
  %s7 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx6, i32 0, i32 0
  %8 = load i8*, i8** %s7, align 4
  %9 = load i8*, i8** %s, align 4
  %struct.BigStruct_215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %9, i8** %struct.BigStruct_215
  %struct.BigStruct_316 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %8, i8** %struct.BigStruct_316
  %struct.BigStruct_517 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %call5, i32* %struct.BigStruct_517
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 158, i32 10)
  %struct.BigStruct_3218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3218 = load i32, i32* %struct.BigStruct_3218
  %cmp9 = icmp eq i32 %load_struct.BigStruct_3218, 0
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %10 = load i32, i32* %count, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %count, align 4
  %11 = load i32, i32* %i, align 4
  store i32 %11, i32* %j, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body, %if.then, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %12 = load i32, i32* %i, align 4
  %inc10 = add nsw i32 %12, 1
  store i32 %inc10, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc24, %for.end, %for.inc24, %for.end
  %13 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %13
  %s13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx12, i32 0, i32 0
  %14 = load i8*, i8** %s13, align 4
  %cmp14 = icmp ne i8* %14, null
  br i1 %cmp14, label %for.body15, label %for.end26

for.body15:                                       ; preds = %for.cond11, %for.cond11
  %15 = load i8*, i8** %s, align 4
  %call16 = call i32 @strlen_Package(i8* %15)
  %16 = load i32, i32* %i, align 4
  %arrayidx17 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %16
  %s18 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx17, i32 0, i32 0
  %17 = load i8*, i8** %s18, align 4
  %18 = load i8*, i8** %s, align 4
  %struct.BigStruct_219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %18, i8** %struct.BigStruct_219
  %struct.BigStruct_320 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %17, i8** %struct.BigStruct_320
  %struct.BigStruct_521 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %call16, i32* %struct.BigStruct_521
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 158, i32 10)
  %struct.BigStruct_3222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3222 = load i32, i32* %struct.BigStruct_3222
  %cmp20 = icmp eq i32 %load_struct.BigStruct_3222, 0
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %for.body15, %for.body15
  %19 = load i32, i32* %count, align 4
  %inc22 = add nsw i32 %19, 1
  store i32 %inc22, i32* %count, align 4
  %20 = load i32, i32* %i, align 4
  store i32 %20, i32* %k, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %for.body15, %if.then21, %for.body15
  br label %for.inc24

for.inc24:                                        ; preds = %if.end23, %if.end23
  %21 = load i32, i32* %i, align 4
  %inc25 = add nsw i32 %21, 1
  store i32 %inc25, i32* %i, align 4
  br label %for.cond11

for.end26:                                        ; preds = %for.cond11, %for.cond11
  %22 = load i32, i32* %count, align 4
  %cmp27 = icmp sgt i32 %22, 1
  br i1 %cmp27, label %if.then28, label %if.else

if.then28:                                        ; preds = %for.end26, %for.end26
  %23 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.84, i32 0, i32 0
  %call29 = call i32 (i8*, ...) @printf(i8* %23)
  br label %return

if.else:                                          ; preds = %for.end26, %for.end26
  %24 = load i32, i32* %count, align 4
  %cmp30 = icmp eq i32 %24, 1
  br i1 %cmp30, label %if.then31, label %if.end49

if.then31:                                        ; preds = %if.else, %if.else
  %25 = load i32, i32* %j, align 4
  %cmp32 = icmp sge i32 %25, 0
  br i1 %cmp32, label %if.then33, label %if.else44

if.then33:                                        ; preds = %if.then31, %if.then31
  %26 = load i32, i32* %j, align 4
  %arrayidx34 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %26
  %p35 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx34, i32 0, i32 1
  %27 = load i32*, i32** %p35, align 4
  %28 = load i32, i32* %27, align 4
  %tobool36 = icmp ne i32 %28, 0
  %lnot = xor i1 %tobool36, true
  %lnot.ext = zext i1 %lnot to i32
  %29 = load i32, i32* %j, align 4
  %arrayidx37 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %29
  %p38 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx37, i32 0, i32 1
  %30 = load i32*, i32** %p38, align 4
  store i32 %lnot.ext, i32* %30, align 4
  %31 = load i32, i32* %j, align 4
  %arrayidx39 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %31
  %p40 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx39, i32 0, i32 1
  %32 = load i32*, i32** %p40, align 4
  %33 = load i32, i32* %32, align 4
  %tobool41 = icmp ne i32 %33, 0
  %34 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.85, i32 0, i32 0
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.86, i32 0, i32 0
  %cond = select i1 %tobool41, i8* %34, i8* %35
  %36 = load i32, i32* %j, align 4
  %arrayidx42 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %36
  %str = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx42, i32 0, i32 3
  %37 = load i8*, i8** %str, align 4
  %38 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.87.157, i32 0, i32 0
  %call43 = call i32 (i8*, ...) @printf(i8* %38, i8* %37, i8* %cond)
  %39 = load i32, i32* %j, align 4
  %struct.BigStruct_026 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %39, i32* %struct.BigStruct_026
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 167, i32 10)
  br label %return

if.else44:                                        ; preds = %if.then31, %if.then31
  %40 = load i32, i32* %k, align 4
  %arrayidx45 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %40
  %s46 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx45, i32 0, i32 0
  %41 = load i8*, i8** %s46, align 4
  %42 = load i8*, i8** %s, align 4
  %call47 = call i8* @strcpy_Package(i8* %42, i8* %41)
  br label %if.end48

if.end48:                                         ; preds = %if.else44, %if.else44
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.else, %if.end48, %if.else
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end49
  %43 = load i8*, i8** %s, align 4
  %44 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.88, i32 0, i32 0
  %call51 = call i32 @strcmp_Package(i8* %43, i8* %44)
  %cmp52 = icmp eq i32 %call51, 0
  br i1 %cmp52, label %if.then53, label %if.end62

if.then53:                                        ; preds = %if.end50, %if.end50
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 179, i32 10)
  %struct.BigStruct_3227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3227 = load i32, i32* %struct.BigStruct_3227
  %tobool55 = icmp ne i32 %load_struct.BigStruct_3227, 0
  br i1 %tobool55, label %if.else57, label %if.then56

if.then56:                                        ; preds = %if.then53, %if.then53
  call void @exit_Package(i32 1) #5
  unreachable

if.else57:                                        ; preds = %if.then53, %if.then53
  %45 = getelementptr inbounds [49 x i8], [49 x i8]* @.str.89, i32 0, i32 0
  %call58 = call i32 (i8*, ...) @printf(i8* %45)
  %46 = getelementptr inbounds [52 x i8], [52 x i8]* @.str.90.158, i32 0, i32 0
  %call59 = call i32 (i8*, ...) @printf(i8* %46)
  %47 = getelementptr inbounds [54 x i8], [54 x i8]* @.str.91, i32 0, i32 0
  %call60 = call i32 (i8*, ...) @printf(i8* %47)
  br label %if.end61

if.end61:                                         ; preds = %if.else57, %if.else57
  br label %return

if.end62:                                         ; preds = %if.end50, %if.end50
  %48 = load i8*, i8** %s, align 4
  %49 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.92, i32 0, i32 0
  %call63 = call i32 @strncmp_Package(i8* %48, i8* %49, i32 4)
  %cmp64 = icmp eq i32 %call63, 0
  br i1 %cmp64, label %if.then65, label %if.end70

if.then65:                                        ; preds = %if.end62, %if.end62
  %50 = load i8*, i8** %line.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %50, i32 6
  %51 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.93.159, i32 0, i32 0
  %call66 = call i32 (i8*, ...) @printf(i8* %51, i8* %add.ptr)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx68 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx68, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  br label %return

if.end70:                                         ; preds = %if.end62, %if.end62
  %52 = load i8*, i8** %s, align 4
  %53 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.94, i32 0, i32 0
  %call71 = call i32 @strcmp_Package(i8* %52, i8* %53)
  %cmp72 = icmp eq i32 %call71, 0
  br i1 %cmp72, label %if.then73, label %if.end80

if.then73:                                        ; preds = %if.end70, %if.end70
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 179, i32 10)
  %struct.BigStruct_3228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3228 = load i32, i32* %struct.BigStruct_3228
  %tobool75 = icmp ne i32 %load_struct.BigStruct_3228, 0
  br i1 %tobool75, label %if.then76, label %if.else77

if.then76:                                        ; preds = %if.then73, %if.then73
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 178, i32 8)
  br label %if.end79

if.else77:                                        ; preds = %if.then73, %if.then73
  %54 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.95, i32 0, i32 0
  %call78 = call i32 (i8*, ...) @printf(i8* %54)
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then76, %if.else77, %if.then76
  br label %return

if.end80:                                         ; preds = %if.end70, %if.end70
  %55 = load i8*, i8** %s, align 4
  %56 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.96, i32 0, i32 0
  %call81 = call i32 @strcmp_Package(i8* %55, i8* %56)
  %cmp82 = icmp eq i32 %call81, 0
  br i1 %cmp82, label %if.then83, label %if.end122

if.then83:                                        ; preds = %if.end80, %if.end80
  %57 = getelementptr inbounds [67 x i8], [67 x i8]* @.str.97, i32 0, i32 0
  %call84 = call i32 (i8*, ...) @printf(i8* %57)
  %58 = getelementptr inbounds [67 x i8], [67 x i8]* @.str.98, i32 0, i32 0
  %call85 = call i32 (i8*, ...) @printf(i8* %58)
  store i32 0, i32* %i, align 4
  br label %for.cond86

for.cond86:                                       ; preds = %for.inc117, %if.then83, %for.inc117, %if.then83
  %59 = load i32, i32* %i, align 4
  %arrayidx87 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %59
  %p88 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx87, i32 0, i32 1
  %60 = load i32*, i32** %p88, align 4
  %cmp89 = icmp ne i32* %60, null
  br i1 %cmp89, label %for.body90, label %for.end119

for.body90:                                       ; preds = %for.cond86, %for.cond86
  %61 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.99, i32 0, i32 0
  %call91 = call i32 (i8*, ...) @printf(i8* %61)
  %62 = load i32, i32* %i, align 4
  %arrayidx92 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %62
  %s93 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx92, i32 0, i32 0
  %63 = load i8*, i8** %s93, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx95 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %64 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.100, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx95, i8* %63, i8* %64)
  %65 = load i32, i32* %i, align 4
  %arrayidx96 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %65
  %str97 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx96, i32 0, i32 3
  %66 = load i8*, i8** %str97, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_383 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_383
  %arrayidx99 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_383, i32 1
  %67 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.101, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx99, i8* %66, i8* %67)
  %68 = load i32, i32* %i, align 4
  %arrayidx100 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %68
  %p101 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx100, i32 0, i32 1
  %69 = load i32*, i32** %p101, align 4
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.102, i32 0, i32 0
  %call102 = call i32 (i8*, ...) @printf(i8* %71, i32 %70)
  %72 = load i32, i32* %i, align 4
  %arrayidx103 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %72
  %isboolean104 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx103, i32 0, i32 2
  %73 = load i32, i32* %isboolean104, align 4
  %tobool105 = icmp ne i32 %73, 0
  br i1 %tobool105, label %if.then106, label %if.end115

if.then106:                                       ; preds = %for.body90, %for.body90
  %74 = load i32, i32* %i, align 4
  %arrayidx107 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %74
  %p108 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx107, i32 0, i32 1
  %75 = load i32*, i32** %p108, align 4
  %76 = load i32, i32* %75, align 4
  %tobool109 = icmp ne i32 %76, 0
  br i1 %tobool109, label %if.then110, label %if.else112

if.then110:                                       ; preds = %if.then106, %if.then106
  %77 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.103, i32 0, i32 0
  %call111 = call i32 (i8*, ...) @printf(i8* %77)
  br label %if.end114

if.else112:                                       ; preds = %if.then106, %if.then106
  %78 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.104, i32 0, i32 0
  %call113 = call i32 (i8*, ...) @printf(i8* %78)
  br label %if.end114

if.end114:                                        ; preds = %if.else112, %if.then110, %if.else112, %if.then110
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %for.body90, %if.end114, %for.body90
  %79 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.105, i32 0, i32 0
  %call116 = call i32 (i8*, ...) @printf(i8* %79)
  br label %for.inc117

for.inc117:                                       ; preds = %if.end115, %if.end115
  %80 = load i32, i32* %i, align 4
  %inc118 = add nsw i32 %80, 1
  store i32 %inc118, i32* %i, align 4
  br label %for.cond86

for.end119:                                       ; preds = %for.cond86, %for.cond86
  %81 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.106, i32 0, i32 0
  %call120 = call i32 (i8*, ...) @printf(i8* %81)
  %82 = getelementptr inbounds [78 x i8], [78 x i8]* @.str.107, i32 0, i32 0
  %call121 = call i32 (i8*, ...) @printf(i8* %82)
  br label %return

if.end122:                                        ; preds = %if.end80, %if.end80
  %83 = load i8*, i8** %s, align 4
  %84 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.108, i32 0, i32 0
  %call123 = call i32 @strcmp_Package(i8* %83, i8* %84)
  %cmp124 = icmp eq i32 %call123, 0
  br i1 %cmp124, label %if.then125, label %if.end160

if.then125:                                       ; preds = %if.end122, %if.end122
  %85 = getelementptr inbounds [69 x i8], [69 x i8]* @.str.109, i32 0, i32 0
  %call126 = call i32 (i8*, ...) @printf(i8* %85)
  %86 = getelementptr inbounds [55 x i8], [55 x i8]* @.str.110, i32 0, i32 0
  %call127 = call i32 (i8*, ...) @printf(i8* %86)
  store i32 0, i32* %i, align 4
  br label %for.cond128

for.cond128:                                      ; preds = %for.inc143, %if.then125, %for.inc143, %if.then125
  %87 = load i32, i32* %i, align 4
  %arrayidx129 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %87
  %s130 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx129, i32 0, i32 0
  %88 = load i8*, i8** %s130, align 4
  %cmp131 = icmp ne i8* %88, null
  br i1 %cmp131, label %for.body132, label %for.end145

for.body132:                                      ; preds = %for.cond128, %for.cond128
  %89 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.111, i32 0, i32 0
  %call133 = call i32 (i8*, ...) @printf(i8* %89)
  %90 = load i32, i32* %i, align 4
  %arrayidx134 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %90
  %s135 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx134, i32 0, i32 0
  %91 = load i8*, i8** %s135, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  %arrayidx137 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_384, i32 1
  %92 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.112, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx137, i8* %91, i8* %92)
  %93 = load i32, i32* %i, align 4
  %arrayidx138 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %93
  %str139 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx138, i32 0, i32 1
  %94 = load i8*, i8** %str139, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_385 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_385
  %arrayidx141 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_385, i32 1
  %95 = getelementptr inbounds [53 x i8], [53 x i8]* @.str.113, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx141, i8* %94, i8* %95)
  %96 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.114, i32 0, i32 0
  %call142 = call i32 (i8*, ...) @printf(i8* %96)
  br label %for.inc143

for.inc143:                                       ; preds = %for.body132, %for.body132
  %97 = load i32, i32* %i, align 4
  %inc144 = add nsw i32 %97, 1
  store i32 %inc144, i32* %i, align 4
  br label %for.cond128

for.end145:                                       ; preds = %for.cond128, %for.cond128
  %98 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.115, i32 0, i32 0
  %call146 = call i32 (i8*, ...) @printf(i8* %98)
  %99 = getelementptr inbounds [71 x i8], [71 x i8]* @.str.116, i32 0, i32 0
  %call147 = call i32 (i8*, ...) @printf(i8* %99)
  %100 = getelementptr inbounds [65 x i8], [65 x i8]* @.str.117, i32 0, i32 0
  %call148 = call i32 (i8*, ...) @printf(i8* %100)
  %101 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.118, i32 0, i32 0
  %call149 = call i32 (i8*, ...) @printf(i8* %101)
  %102 = getelementptr inbounds [72 x i8], [72 x i8]* @.str.119, i32 0, i32 0
  %call150 = call i32 (i8*, ...) @printf(i8* %102)
  %103 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.120, i32 0, i32 0
  %call151 = call i32 (i8*, ...) @printf(i8* %103)
  %104 = getelementptr inbounds [72 x i8], [72 x i8]* @.str.121, i32 0, i32 0
  %call152 = call i32 (i8*, ...) @printf(i8* %104)
  %105 = getelementptr inbounds [74 x i8], [74 x i8]* @.str.122, i32 0, i32 0
  %call153 = call i32 (i8*, ...) @printf(i8* %105)
  %106 = getelementptr inbounds [74 x i8], [74 x i8]* @.str.123, i32 0, i32 0
  %call154 = call i32 (i8*, ...) @printf(i8* %106)
  %107 = getelementptr inbounds [58 x i8], [58 x i8]* @.str.124, i32 0, i32 0
  %call155 = call i32 (i8*, ...) @printf(i8* %107)
  %108 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.125, i32 0, i32 0
  %call156 = call i32 (i8*, ...) @printf(i8* %108)
  %109 = getelementptr inbounds [60 x i8], [60 x i8]* @.str.126, i32 0, i32 0
  %call157 = call i32 (i8*, ...) @printf(i8* %109)
  %110 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.127, i32 0, i32 0
  %call158 = call i32 (i8*, ...) @printf(i8* %110)
  %111 = getelementptr inbounds [57 x i8], [57 x i8]* @.str.128, i32 0, i32 0
  %call159 = call i32 (i8*, ...) @printf(i8* %111)
  br label %return

if.end160:                                        ; preds = %if.end122, %if.end122
  %112 = load i8*, i8** %s, align 4
  %arrayidx161 = getelementptr inbounds i8, i8* %112, i32 0
  %113 = load i8, i8* %arrayidx161, align 1
  %conv = sext i8 %113 to i32
  %cmp162 = icmp eq i32 %conv, 33
  br i1 %cmp162, label %if.then164, label %if.end201

if.then164:                                       ; preds = %if.end160, %if.end160
  %114 = load i8*, i8** %s, align 4
  %add.ptr165 = getelementptr inbounds i8, i8* %114, i32 1
  %call166 = call %struct.Dict_node_struct* @dictionary_lookup(i8* %add.ptr165)
  store %struct.Dict_node_struct* %call166, %struct.Dict_node_struct** %dn, align 4
  %cmp167 = icmp eq %struct.Dict_node_struct* %call166, null
  br i1 %cmp167, label %if.then169, label %if.end172

if.then169:                                       ; preds = %if.then164, %if.then164
  %115 = load i8*, i8** %s, align 4
  %add.ptr170 = getelementptr inbounds i8, i8* %115, i32 1
  %116 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.129, i32 0, i32 0
  %call171 = call i32 (i8*, ...) @printf(i8* %116, i8* %add.ptr170)
  br label %return

if.end172:                                        ; preds = %if.then164, %if.then164
  %117 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.130, i32 0, i32 0
  %call173 = call i32 (i8*, ...) @printf(i8* %117)
  br label %for.cond174

for.cond174:                                      ; preds = %for.inc199, %if.end172, %for.inc199, %if.end172
  %118 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp175 = icmp ne %struct.Dict_node_struct* %118, null
  br i1 %cmp175, label %for.body177, label %for.end200

for.body177:                                      ; preds = %for.cond174, %for.cond174
  store i32 0, i32* %len, align 4
  %119 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %struct.BigStruct_217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %119, %struct.Dict_node_struct** %struct.BigStruct_217
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 109, i32 10)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d1, align 4
  %120 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %120, %struct.Disjunct_struct** %d2, align 4
  br label %for.cond179

for.cond179:                                      ; preds = %for.inc184, %for.body177, %for.inc184, %for.body177
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %cmp180 = icmp ne %struct.Disjunct_struct* %121, null
  br i1 %cmp180, label %for.body182, label %for.end185

for.body182:                                      ; preds = %for.cond179, %for.cond179
  %122 = load i32, i32* %len, align 4
  %inc183 = add nsw i32 %122, 1
  store i32 %inc183, i32* %len, align 4
  br label %for.inc184

for.inc184:                                       ; preds = %for.body182, %for.body182
  %123 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %123, i32 0, i32 0
  %124 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %124, %struct.Disjunct_struct** %d2, align 4
  br label %for.cond179

for.end185:                                       ; preds = %for.cond179, %for.cond179
  %125 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %125)
  %126 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.131, i32 0, i32 0
  %call186 = call i32 (i8*, ...) @printf(i8* %126)
  %127 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %127, i32 0, i32 0
  %128 = load i8*, i8** %string, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_386 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_386
  %arrayidx188 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_386, i32 1
  %129 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.132, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx188, i8* %128, i8* %129)
  %130 = load i32, i32* %len, align 4
  %131 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.133, i32 0, i32 0
  %call189 = call i32 (i8*, ...) @printf(i8* %131, i32 %130)
  %132 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %132, i32 0, i32 1
  %133 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file, align 4
  %cmp190 = icmp ne %struct.Word_file_struct* %133, null
  br i1 %cmp190, label %if.then192, label %if.end197

if.then192:                                       ; preds = %for.end185, %for.end185
  %134 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file193 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %134, i32 0, i32 1
  %135 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file193, align 4
  %file194 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %135, i32 0, i32 0
  %arraydecay195 = getelementptr inbounds [60 x i8], [60 x i8]* %file194, i32 0, i32 0
  %136 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.134, i32 0, i32 0
  %call196 = call i32 (i8*, ...) @printf(i8* %136, i8* %arraydecay195)
  br label %if.end197

if.end197:                                        ; preds = %if.then192, %for.end185, %if.then192, %for.end185
  %137 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.135, i32 0, i32 0
  %call198 = call i32 (i8*, ...) @printf(i8* %137)
  br label %for.inc199

for.inc199:                                       ; preds = %if.end197, %if.end197
  %138 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %138, i32 0, i32 4
  %139 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %139, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond174

for.end200:                                       ; preds = %for.cond174, %for.cond174
  br label %return

if.end201:                                        ; preds = %if.end160, %if.end160
  %140 = load i8*, i8** %s, align 4
  %141 = load i8, i8* %140, align 1
  %conv202 = sext i8 %141 to i32
  %cmp203 = icmp eq i32 %conv202, 45
  br i1 %cmp203, label %if.then205, label %if.end268

if.then205:                                       ; preds = %if.end201, %if.end201
  %142 = load i8*, i8** %s, align 4
  %add.ptr208 = getelementptr inbounds i8, i8* %142, i32 1
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %add.ptr208, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn206, align 4
  store i32 0, i32* %count207, align 4
  %143 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  %cmp210 = icmp eq %struct.Dict_node_struct* %143, null
  br i1 %cmp210, label %if.then212, label %if.end215

if.then212:                                       ; preds = %if.then205, %if.then205
  %144 = load i8*, i8** %s, align 4
  %add.ptr213 = getelementptr inbounds i8, i8* %144, i32 1
  %145 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.136, i32 0, i32 0
  %call214 = call i32 (i8*, ...) @printf(i8* %145, i8* %add.ptr213)
  br label %return

if.end215:                                        ; preds = %if.then205, %if.then205
  %146 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  store %struct.Dict_node_struct* %146, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond216

for.cond216:                                      ; preds = %for.inc226, %if.end215, %for.inc226, %if.end215
  %147 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %cmp217 = icmp ne %struct.Dict_node_struct* %147, null
  br i1 %cmp217, label %for.body219, label %for.end228

for.body219:                                      ; preds = %for.cond216, %for.cond216
  %148 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %file220 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %148, i32 0, i32 1
  %149 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file220, align 4
  %cmp221 = icmp eq %struct.Word_file_struct* %149, null
  br i1 %cmp221, label %if.then223, label %if.end225

if.then223:                                       ; preds = %for.body219, %for.body219
  %150 = load i32, i32* %count207, align 4
  %inc224 = add nsw i32 %150, 1
  store i32 %inc224, i32* %count207, align 4
  br label %if.end225

if.end225:                                        ; preds = %if.then223, %for.body219, %if.then223, %for.body219
  br label %for.inc226

for.inc226:                                       ; preds = %if.end225, %if.end225
  %151 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %right227 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %151, i32 0, i32 4
  %152 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right227, align 4
  store %struct.Dict_node_struct* %152, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond216

for.end228:                                       ; preds = %for.cond216, %for.cond216
  %153 = load i32, i32* %count207, align 4
  %cmp229 = icmp ne i32 %153, 0
  br i1 %cmp229, label %if.then231, label %if.end250

if.then231:                                       ; preds = %for.end228, %for.end228
  %154 = load i8*, i8** %s, align 4
  %add.ptr232 = getelementptr inbounds i8, i8* %154, i32 1
  %155 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.137.160, i32 0, i32 0
  %call233 = call i32 (i8*, ...) @printf(i8* %155, i8* %add.ptr232)
  %156 = getelementptr inbounds [53 x i8], [53 x i8]* @.str.138, i32 0, i32 0
  %call234 = call i32 (i8*, ...) @printf(i8* %156)
  %157 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  store %struct.Dict_node_struct* %157, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond235

for.cond235:                                      ; preds = %for.inc246, %if.then231, %for.inc246, %if.then231
  %158 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %cmp236 = icmp ne %struct.Dict_node_struct* %158, null
  br i1 %cmp236, label %for.body238, label %for.end248

for.body238:                                      ; preds = %for.cond235, %for.cond235
  %159 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %file239 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %159, i32 0, i32 1
  %160 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file239, align 4
  %cmp240 = icmp eq %struct.Word_file_struct* %160, null
  br i1 %cmp240, label %if.then242, label %if.end245

if.then242:                                       ; preds = %for.body238, %for.body238
  %161 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %string243 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %161, i32 0, i32 0
  %162 = load i8*, i8** %string243, align 4
  %163 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.139, i32 0, i32 0
  %call244 = call i32 (i8*, ...) @printf(i8* %163, i8* %162)
  br label %if.end245

if.end245:                                        ; preds = %if.then242, %for.body238, %if.then242, %for.body238
  br label %for.inc246

for.inc246:                                       ; preds = %if.end245, %if.end245
  %164 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %right247 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %164, i32 0, i32 4
  %165 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right247, align 4
  store %struct.Dict_node_struct* %165, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond235

for.end248:                                       ; preds = %for.cond235, %for.cond235
  %166 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.140, i32 0, i32 0
  %call249 = call i32 (i8*, ...) @printf(i8* %166)
  br label %if.end250

if.end250:                                        ; preds = %for.end248, %for.end228, %for.end248, %for.end228
  %167 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.141, i32 0, i32 0
  %call251 = call i32 (i8*, ...) @printf(i8* %167)
  %168 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  store %struct.Dict_node_struct* %168, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond252

for.cond252:                                      ; preds = %for.inc258, %if.end250, %for.inc258, %if.end250
  %169 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %cmp253 = icmp ne %struct.Dict_node_struct* %169, null
  br i1 %cmp253, label %for.body255, label %for.end260

for.body255:                                      ; preds = %for.cond252, %for.cond252
  %170 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %string256 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %170, i32 0, i32 0
  %171 = load i8*, i8** %string256, align 4
  %172 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.142, i32 0, i32 0
  %call257 = call i32 (i8*, ...) @printf(i8* %172, i8* %171)
  br label %for.inc258

for.inc258:                                       ; preds = %for.body255, %for.body255
  %173 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %right259 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %173, i32 0, i32 4
  %174 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right259, align 4
  store %struct.Dict_node_struct* %174, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond252

for.end260:                                       ; preds = %for.cond252, %for.cond252
  %175 = load i8*, i8** %s, align 4
  %add.ptr261 = getelementptr inbounds i8, i8* %175, i32 1
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %add.ptr261, i8** %struct.BigStruct_213
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 156, i32 10)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  %tobool263 = icmp ne i32 %load_struct.BigStruct_3214, 0
  br i1 %tobool263, label %if.end266, label %if.then264

if.then264:                                       ; preds = %for.end260, %for.end260
  %176 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.144, i32 0, i32 0
  %177 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.143, i32 0, i32 0
  %call265 = call i32 (i8*, ...) @printf(i8* %176, i8* %177)
  call void @exit_Package(i32 1) #5
  unreachable

if.end266:                                        ; preds = %for.end260, %for.end260
  %178 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.145, i32 0, i32 0
  %call267 = call i32 (i8*, ...) @printf(i8* %178)
  br label %return

if.end268:                                        ; preds = %if.end201, %if.end201
  %179 = load i8*, i8** %s, align 4
  store i8* %179, i8** %x, align 4
  br label %for.cond269

for.cond269:                                      ; preds = %for.inc277, %if.end268, %for.inc277, %if.end268
  %180 = load i8*, i8** %x, align 4
  %181 = load i8, i8* %180, align 1
  %conv270 = sext i8 %181 to i32
  %cmp271 = icmp ne i32 %conv270, 61
  br i1 %cmp271, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond269, %for.cond269
  %182 = load i8*, i8** %x, align 4
  %183 = load i8, i8* %182, align 1
  %conv273 = sext i8 %183 to i32
  %cmp274 = icmp ne i32 %conv273, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond269, %land.rhs, %for.cond269
  %184 = phi i1 [ false, %for.cond269 ], [ %cmp274, %land.rhs ]
  br i1 %184, label %for.body276, label %for.end279

for.body276:                                      ; preds = %land.end, %land.end
  br label %for.inc277

for.inc277:                                       ; preds = %for.body276, %for.body276
  %185 = load i8*, i8** %x, align 4
  %incdec.ptr278 = getelementptr inbounds i8, i8* %185, i32 1
  store i8* %incdec.ptr278, i8** %x, align 4
  br label %for.cond269

for.end279:                                       ; preds = %land.end, %land.end
  %186 = load i8*, i8** %x, align 4
  %187 = load i8, i8* %186, align 1
  %conv280 = sext i8 %187 to i32
  %cmp281 = icmp eq i32 %conv280, 61
  br i1 %cmp281, label %if.then283, label %if.end396

if.then283:                                       ; preds = %for.end279, %for.end279
  %188 = load i8*, i8** %x, align 4
  store i8 0, i8* %188, align 1
  %189 = load i8*, i8** %x, align 4
  %add.ptr285 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %add.ptr285, i8** %y, align 4
  %190 = load i8*, i8** %s, align 4
  store i8* %190, i8** %x, align 4
  %191 = load i8*, i8** %y, align 4
  %struct.BigStruct_224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %191, i8** %struct.BigStruct_224
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 166, i32 10)
  %struct.BigStruct_3225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3225 = load i32, i32* %struct.BigStruct_3225
  %tobool287 = icmp ne i32 %load_struct.BigStruct_3225, 0
  br i1 %tobool287, label %if.then288, label %if.end318

if.then288:                                       ; preds = %if.then283, %if.then283
  store i32 0, i32* %i, align 4
  br label %for.cond289

for.cond289:                                      ; preds = %for.inc302, %if.then288, %for.inc302, %if.then288
  %192 = load i32, i32* %i, align 4
  %arrayidx290 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %192
  %p291 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx290, i32 0, i32 1
  %193 = load i32*, i32** %p291, align 4
  %cmp292 = icmp ne i32* %193, null
  br i1 %cmp292, label %for.body294, label %for.end304

for.body294:                                      ; preds = %for.cond289, %for.cond289
  %194 = load i32, i32* %i, align 4
  %arrayidx295 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %194
  %s296 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx295, i32 0, i32 0
  %195 = load i8*, i8** %s296, align 4
  %196 = load i8*, i8** %x, align 4
  %call297 = call i32 @strcmp_Package(i8* %196, i8* %195)
  %cmp298 = icmp eq i32 %call297, 0
  br i1 %cmp298, label %if.then300, label %if.end301

if.then300:                                       ; preds = %for.body294, %for.body294
  br label %for.end304

if.end301:                                        ; preds = %for.body294, %for.body294
  br label %for.inc302

for.inc302:                                       ; preds = %if.end301, %if.end301
  %197 = load i32, i32* %i, align 4
  %inc303 = add nsw i32 %197, 1
  store i32 %inc303, i32* %i, align 4
  br label %for.cond289

for.end304:                                       ; preds = %if.then300, %for.cond289, %if.then300, %for.cond289
  %198 = load i32, i32* %i, align 4
  %arrayidx305 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %198
  %p306 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx305, i32 0, i32 1
  %199 = load i32*, i32** %p306, align 4
  %cmp307 = icmp eq i32* %199, null
  br i1 %cmp307, label %if.then309, label %if.else311

if.then309:                                       ; preds = %for.end304, %for.end304
  %200 = load i8*, i8** %x, align 4
  %201 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.146, i32 0, i32 0
  %call310 = call i32 (i8*, ...) @printf(i8* %201, i8* %200)
  br label %if.end317

if.else311:                                       ; preds = %for.end304, %for.end304
  %202 = load i8*, i8** %y, align 4
  %call312 = call i32 @atoi_Package(i8* %202)
  %203 = load i32, i32* %i, align 4
  %arrayidx313 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %203
  %p314 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx313, i32 0, i32 1
  %204 = load i32*, i32** %p314, align 4
  store i32 %call312, i32* %204, align 4
  %205 = load i8*, i8** %y, align 4
  %call315 = call i32 @atoi_Package(i8* %205)
  %206 = load i8*, i8** %x, align 4
  %207 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.147, i32 0, i32 0
  %call316 = call i32 (i8*, ...) @printf(i8* %207, i8* %206, i32 %call315)
  %208 = load i32, i32* %i, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %208, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 167, i32 10)
  br label %if.end317

if.end317:                                        ; preds = %if.else311, %if.then309, %if.else311, %if.then309
  br label %return

if.end318:                                        ; preds = %if.then283, %if.then283
  %209 = load i8*, i8** %x, align 4
  %call319 = call i32 @is_idiom_word(i8* %209)
  %tobool320 = icmp ne i32 %call319, 0
  br i1 %tobool320, label %if.then323, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end318, %if.end318
  %210 = load i8*, i8** %y, align 4
  %call321 = call i32 @is_idiom_word(i8* %210)
  %tobool322 = icmp ne i32 %call321, 0
  br i1 %tobool322, label %if.then323, label %if.end326

if.then323:                                       ; preds = %lor.lhs.false, %if.end318, %lor.lhs.false, %if.end318
  %211 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.148, i32 0, i32 0
  %call324 = call i32 (i8*, ...) @printf(i8* %211)
  %212 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.149, i32 0, i32 0
  %call325 = call i32 (i8*, ...) @printf(i8* %212)
  br label %return

if.end326:                                        ; preds = %lor.lhs.false, %lor.lhs.false
  %213 = load i8*, i8** %x, align 4
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %213, i8** %struct.BigStruct_29
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_4110 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_4110 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_4110
  store %struct.Dict_node_struct* %load_struct.BigStruct_4110, %struct.Dict_node_struct** %dn284, align 4
  %cmp328 = icmp ne %struct.Dict_node_struct* %load_struct.BigStruct_4110, null
  br i1 %cmp328, label %if.then330, label %if.end342

if.then330:                                       ; preds = %if.end326, %if.end326
  %214 = load i8*, i8** %s, align 4
  %215 = getelementptr inbounds [51 x i8], [51 x i8]* @.str.150, i32 0, i32 0
  %call331 = call i32 (i8*, ...) @printf(i8* %215, i8* %214)
  br label %for.cond332

for.cond332:                                      ; preds = %for.inc338, %if.then330, %for.inc338, %if.then330
  %216 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %cmp333 = icmp ne %struct.Dict_node_struct* %216, null
  br i1 %cmp333, label %for.body335, label %for.end340

for.body335:                                      ; preds = %for.cond332, %for.cond332
  %217 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %string336 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %217, i32 0, i32 0
  %218 = load i8*, i8** %string336, align 4
  %219 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.151, i32 0, i32 0
  %call337 = call i32 (i8*, ...) @printf(i8* %219, i8* %218)
  br label %for.inc338

for.inc338:                                       ; preds = %for.body335, %for.body335
  %220 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %right339 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %220, i32 0, i32 4
  %221 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right339, align 4
  store %struct.Dict_node_struct* %221, %struct.Dict_node_struct** %dn284, align 4
  br label %for.cond332

for.end340:                                       ; preds = %for.cond332, %for.cond332
  %222 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.152, i32 0, i32 0
  %call341 = call i32 (i8*, ...) @printf(i8* %222)
  br label %return

if.end342:                                        ; preds = %if.end326, %if.end326
  %223 = load i8*, i8** %y, align 4
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %223, i8** %struct.BigStruct_211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_4112 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_4112 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_4112
  store %struct.Dict_node_struct* %load_struct.BigStruct_4112, %struct.Dict_node_struct** %dn284, align 4
  %cmp344 = icmp eq %struct.Dict_node_struct* %load_struct.BigStruct_4112, null
  br i1 %cmp344, label %if.then346, label %if.end348

if.then346:                                       ; preds = %if.end342, %if.end342
  %224 = load i8*, i8** %y, align 4
  %225 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.153, i32 0, i32 0
  %call347 = call i32 (i8*, ...) @printf(i8* %225, i8* %224)
  br label %return

if.end348:                                        ; preds = %if.end342, %if.end342
  %226 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %right349 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %226, i32 0, i32 4
  %227 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right349, align 4
  %cmp350 = icmp ne %struct.Dict_node_struct* %227, null
  br i1 %cmp350, label %if.then357, label %lor.lhs.false352

lor.lhs.false352:                                 ; preds = %if.end348, %if.end348
  %228 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %string353 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %228, i32 0, i32 0
  %229 = load i8*, i8** %string353, align 4
  %230 = load i8*, i8** %y, align 4
  %call354 = call i32 @strcmp_Package(i8* %230, i8* %229)
  %cmp355 = icmp ne i32 %call354, 0
  br i1 %cmp355, label %if.then357, label %if.end369

if.then357:                                       ; preds = %lor.lhs.false352, %if.end348, %lor.lhs.false352, %if.end348
  %231 = load i8*, i8** %y, align 4
  %232 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.154, i32 0, i32 0
  %call358 = call i32 (i8*, ...) @printf(i8* %232, i8* %231)
  br label %for.cond359

for.cond359:                                      ; preds = %for.inc365, %if.then357, %for.inc365, %if.then357
  %233 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %cmp360 = icmp ne %struct.Dict_node_struct* %233, null
  br i1 %cmp360, label %for.body362, label %for.end367

for.body362:                                      ; preds = %for.cond359, %for.cond359
  %234 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %string363 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %234, i32 0, i32 0
  %235 = load i8*, i8** %string363, align 4
  %236 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.155, i32 0, i32 0
  %call364 = call i32 (i8*, ...) @printf(i8* %236, i8* %235)
  br label %for.inc365

for.inc365:                                       ; preds = %for.body362, %for.body362
  %237 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %right366 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %237, i32 0, i32 4
  %238 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right366, align 4
  store %struct.Dict_node_struct* %238, %struct.Dict_node_struct** %dn284, align 4
  br label %for.cond359

for.end367:                                       ; preds = %for.cond359, %for.cond359
  %239 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.156, i32 0, i32 0
  %call368 = call i32 (i8*, ...) @printf(i8* %239)
  br label %return

if.end369:                                        ; preds = %lor.lhs.false352, %lor.lhs.false352
  %240 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file370 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %240, i32 0, i32 1
  %241 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file370, align 4
  %cmp371 = icmp eq %struct.Word_file_struct* %241, null
  br i1 %cmp371, label %if.then373, label %if.end376

if.then373:                                       ; preds = %if.end369, %if.end369
  %242 = load i8*, i8** %y, align 4
  %243 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.157, i32 0, i32 0
  %call374 = call i32 (i8*, ...) @printf(i8* %243, i8* %242)
  %244 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.158, i32 0, i32 0
  %call375 = call i32 (i8*, ...) @printf(i8* %244)
  br label %if.end376

if.end376:                                        ; preds = %if.then373, %if.end369, %if.then373, %if.end369
  %call377 = call i8* @xalloc(i32 20)
  %245 = bitcast i8* %call377 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %245, %struct.Dict_node_struct** %dn_new, align 4
  %246 = load i8*, i8** %x, align 4
  %call378 = call i32 @strlen_Package(i8* %246)
  %add = add i32 %call378, 1
  %call379 = call i8* @xalloc(i32 %add)
  %247 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %string380 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %247, i32 0, i32 0
  store i8* %call379, i8** %string380, align 4
  %248 = load i8*, i8** %x, align 4
  %249 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %string381 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %249, i32 0, i32 0
  %250 = load i8*, i8** %string381, align 4
  %call382 = call i8* @strcpy_Package(i8* %250, i8* %248)
  %251 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %right383 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %251, i32 0, i32 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %right383, align 4
  %252 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %252, i32 0, i32 3
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %left, align 4
  %253 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file384 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %253, i32 0, i32 1
  %254 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file384, align 4
  %255 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %file385 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %255, i32 0, i32 1
  store %struct.Word_file_struct* %254, %struct.Word_file_struct** %file385, align 4
  %256 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %256, i32 0, i32 2
  %257 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %258 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %exp386 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %258, i32 0, i32 2
  store %struct.Exp_struct* %257, %struct.Exp_struct** %exp386, align 4
  %259 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %260 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call387 = call %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %260, %struct.Dict_node_struct* %259)
  store %struct.Dict_node_struct* %call387, %struct.Dict_node_struct** @dict_root, align 4
  %261 = load i8*, i8** %x, align 4
  %262 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.159, i32 0, i32 0
  %call388 = call i32 (i8*, ...) @printf(i8* %262, i8* %261)
  %263 = load i32, i32* @N_dict, align 4
  %inc389 = add nsw i32 %263, 1
  store i32 %inc389, i32* @N_dict, align 4
  %264 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file390 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %264, i32 0, i32 1
  %265 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file390, align 4
  %cmp391 = icmp ne %struct.Word_file_struct* %265, null
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.end376, %if.end376
  %266 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file394 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %266, i32 0, i32 1
  %267 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file394, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %267, i32 0, i32 1
  store i32 1, i32* %changed, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.end376, %if.then393, %if.end376
  br label %return

if.end396:                                        ; preds = %for.end279, %for.end279
  %268 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.160, i32 0, i32 0
  %call397 = call i32 (i8*, ...) @printf(i8* %268)
  br label %return

return:                                           ; preds = %if.end396, %if.end395, %for.end367, %if.then346, %for.end340, %if.then323, %if.end317, %if.end266, %if.then212, %for.end200, %if.then169, %for.end145, %for.end119, %if.end79, %if.then65, %if.end61, %if.then33, %if.then28, %if.end396, %if.end395, %for.end367, %if.then346, %for.end340, %if.then323, %if.end317, %if.end266, %if.then212, %for.end200, %if.then169, %for.end145, %for.end119, %if.end79, %if.then65, %if.end61, %if.then33, %if.then28
  ret void
}

; Function Attrs: noinline nounwind
define i32 @sentence_in_dictionary() #0 {
entry:
  %w = alloca i32, align 4
  %ok_so_far = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 1, i32* %ok_so_far, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %3 = load i8*, i8** %s, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %3, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end19, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body, %for.body
  %4 = load i8*, i8** %s, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx1, align 1
  %conv = sext i8 %5 to i32
  %call2 = call i32 @isupper_Package(i32 %conv)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %land.lhs.true4, label %land.lhs.true6

land.lhs.true4:                                   ; preds = %land.lhs.true, %land.lhs.true
  %6 = load i32, i32* @capitalized_word_defined, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.end19, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true4, %land.lhs.true, %land.lhs.true4, %land.lhs.true
  %7 = load i8*, i8** %s, align 4
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %7, i8** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 116, i32 10)
  %struct.BigStruct_324 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_324 = load i32, i32* %struct.BigStruct_324
  %tobool8 = icmp ne i32 %load_struct.BigStruct_324, 0
  br i1 %tobool8, label %if.end19, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %land.lhs.true6, %land.lhs.true6
  %8 = load i8*, i8** %s, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %8, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 115, i32 10)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %tobool11 = icmp ne i32 %load_struct.BigStruct_322, 0
  br i1 %tobool11, label %if.end19, label %if.then

if.then:                                          ; preds = %land.lhs.true9, %land.lhs.true9
  %9 = load i32, i32* %ok_so_far, align 4
  %tobool12 = icmp ne i32 %9, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then, %if.then
  %10 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.161, i32 0, i32 0
  %call14 = call i32 (i8*, ...) @printf(i8* %10)
  store i32 0, i32* %ok_so_far, align 4
  br label %if.end

if.end:                                           ; preds = %if.then13, %if.then, %if.then13, %if.then
  %11 = load i32, i32* %w, align 4
  %arrayidx15 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %11
  %string16 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx15, i32 0, i32 0
  %arraydecay17 = getelementptr inbounds [60 x i8], [60 x i8]* %string16, i32 0, i32 0
  %12 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.162, i32 0, i32 0
  %call18 = call i32 (i8*, ...) @printf(i8* %12, i8* %arraydecay17)
  br label %if.end19

if.end19:                                         ; preds = %if.end, %land.lhs.true9, %land.lhs.true6, %land.lhs.true4, %for.body, %if.end, %land.lhs.true9, %land.lhs.true6, %land.lhs.true4, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end19, %if.end19
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %14 = load i32, i32* %ok_so_far, align 4
  %tobool20 = icmp ne i32 %14, 0
  br i1 %tobool20, label %if.end23, label %if.then21

if.then21:                                        ; preds = %for.end, %for.end
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.163, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printf(i8* %15)
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %for.end, %if.then21, %for.end
  %16 = load i32, i32* %ok_so_far, align 4
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %16, i32* %struct.BigStruct_325
  ret i32 %16
}

; Function Attrs: noinline nounwind
define i32 @sentence_contains(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %w = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %arraydecay, i8* %2)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %4 = load i32, i32* %w, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then, %for.end, %if.then
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret i32 %5
}

; Function Attrs: noinline nounwind
define void @set_is_conjunction() #0 {
entry:
  %w = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %3 = load i8*, i8** %s, align 4
  %4 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.164, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %3, i8* %4)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body, %for.body
  %5 = load i8*, i8** %s, align 4
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.165, i32 0, i32 0
  %call2 = call i32 @strcmp_Package(i8* %5, i8* %6)
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false, %lor.lhs.false
  %7 = load i8*, i8** %s, align 4
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.166, i32 0, i32 0
  %call5 = call i32 @strcmp_Package(i8* %7, i8* %8)
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false4, %lor.lhs.false4
  %9 = load i8*, i8** %s, align 4
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.167, i32 0, i32 0
  %call7 = call i32 @strcmp_Package(i8* %9, i8* %10)
  %cmp8 = icmp eq i32 %call7, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false, %for.body, %lor.rhs, %lor.lhs.false4, %lor.lhs.false, %for.body
  %11 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp8, %lor.rhs ]
  %lor.ext = zext i1 %11 to i32
  %conv = trunc i32 %lor.ext to i8
  %12 = load i32, i32* %w, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %12
  store i8 %conv, i8* %arrayidx9, align 1
  br label %for.inc

for.inc:                                          ; preds = %lor.end, %lor.end
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @sentence_contains_conjunction() #0 {
entry:
  %retval = alloca i32, align 4
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %4 = load i32, i32* %w, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then, %for.end, %if.then
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret i32 %5
}

; Function Attrs: noinline nounwind
define i32 @conj_in_range(i32 %lw, i32 %rw) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %retval = alloca i32, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %rw.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %lw.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %lw.addr, align 4
  %1 = load i32, i32* %rw.addr, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %lw.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %4 = load i32, i32* %lw.addr, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %lw.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then, %for.end, %if.then
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret i32 %5
}

; Function Attrs: noinline nounwind
define void @build_deletable() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc121, %entry, %for.inc121, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end123

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* @N_words, align 4
  %add = add nsw i32 %2, 1
  %call = call i8* @xalloc(i32 %add)
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %3
  store i8* %call, i8** %arrayidx, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc118, %for.body, %for.inc118, %for.body
  %4 = load i32, i32* %j, align 4
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @maxlinklength, align 4
  %add2 = add nsw i32 %5, %6
  %7 = load i32, i32* @N_words, align 4
  %cmp3 = icmp slt i32 %add2, %7
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.cond1, %for.cond1
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* @maxlinklength, align 4
  %add4 = add nsw i32 %8, %9
  br label %cond.end

cond.false:                                       ; preds = %for.cond1, %for.cond1
  %10 = load i32, i32* @N_words, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true, %cond.false, %cond.true
  %cond = phi i32 [ %add4, %cond.true ], [ %10, %cond.false ]
  %cmp5 = icmp sle i32 %4, %cond
  br i1 %cmp5, label %for.body6, label %for.end120

for.body6:                                        ; preds = %cond.end, %cond.end
  %11 = load i32, i32* @null_links, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body6, %for.body6
  %12 = load i32, i32* %j, align 4
  %13 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %13
  %14 = load i8*, i8** %arrayidx7, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i32 %12
  store i8 1, i8* %arrayidx8, align 1
  br label %if.end117

if.else:                                          ; preds = %for.body6, %for.body6
  %15 = load i32, i32* %j, align 4
  %16 = load i32, i32* %i, align 4
  %add9 = add nsw i32 %16, 1
  %cmp10 = icmp eq i32 %15, %add9
  br i1 %cmp10, label %if.then11, label %if.else14

if.then11:                                        ; preds = %if.else, %if.else
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %18
  %19 = load i8*, i8** %arrayidx12, align 4
  %arrayidx13 = getelementptr inbounds i8, i8* %19, i32 %17
  store i8 1, i8* %arrayidx13, align 1
  br label %if.end116

if.else14:                                        ; preds = %if.else, %if.else
  %20 = load i32, i32* %j, align 4
  %21 = load i32, i32* %i, align 4
  %add15 = add nsw i32 %21, 2
  %cmp16 = icmp sgt i32 %20, %add15
  br i1 %cmp16, label %land.lhs.true, label %if.else49

land.lhs.true:                                    ; preds = %if.else14, %if.else14
  %22 = load i32, i32* %i, align 4
  %add17 = add nsw i32 %22, 1
  %arrayidx18 = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %add17
  %23 = load i8, i8* %arrayidx18, align 1
  %conv = sext i8 %23 to i32
  %tobool19 = icmp ne i32 %conv, 0
  br i1 %tobool19, label %if.then46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %land.lhs.true
  %24 = load i32, i32* %j, align 4
  %sub = sub nsw i32 %24, 1
  %arrayidx20 = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %sub
  %25 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %25 to i32
  %tobool22 = icmp ne i32 %conv21, 0
  br i1 %tobool22, label %if.then46, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %lor.lhs.false, %lor.lhs.false
  %26 = load i32, i32* %i, align 4
  %add24 = add nsw i32 %26, 1
  %arrayidx25 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %add24
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx25, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %27 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.168, i32 0, i32 0
  %call26 = call i32 @strcmp_Package(i8* %27, i8* %arraydecay)
  %cmp27 = icmp eq i32 %call26, 0
  br i1 %cmp27, label %land.lhs.true29, label %lor.lhs.false34

land.lhs.true29:                                  ; preds = %lor.lhs.false23, %lor.lhs.false23
  %28 = load i32, i32* %j, align 4
  %sub30 = sub nsw i32 %28, 1
  %29 = load i32, i32* %i, align 4
  %add31 = add nsw i32 %29, 2
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %add31, i32* %struct.BigStruct_01
  %struct.BigStruct_52 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %sub30, i32* %struct.BigStruct_52
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 37, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool33 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool33, label %if.then46, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %land.lhs.true29, %lor.lhs.false23, %land.lhs.true29, %lor.lhs.false23
  %30 = load i32, i32* %j, align 4
  %sub35 = sub nsw i32 %30, 1
  %arrayidx36 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %sub35
  %string37 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx36, i32 0, i32 0
  %arraydecay38 = getelementptr inbounds [60 x i8], [60 x i8]* %string37, i32 0, i32 0
  %31 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.169, i32 0, i32 0
  %call39 = call i32 @strcmp_Package(i8* %31, i8* %arraydecay38)
  %cmp40 = icmp eq i32 %call39, 0
  br i1 %cmp40, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false34, %lor.lhs.false34
  %32 = load i32, i32* @N_words, align 4
  %sub43 = sub nsw i32 %32, 1
  %33 = load i32, i32* %j, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %33, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %sub43, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 37, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool45 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool45, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42, %land.lhs.true29, %lor.lhs.false, %land.lhs.true, %land.lhs.true42, %land.lhs.true29, %lor.lhs.false, %land.lhs.true
  %34 = load i32, i32* %j, align 4
  %35 = load i32, i32* %i, align 4
  %arrayidx47 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %35
  %36 = load i8*, i8** %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %36, i32 %34
  store i8 1, i8* %arrayidx48, align 1
  br label %if.end115

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false34, %if.else14, %land.lhs.true42, %lor.lhs.false34, %if.else14
  %37 = load i32, i32* %j, align 4
  %38 = load i32, i32* %i, align 4
  %cmp50 = icmp sgt i32 %37, %38
  br i1 %cmp50, label %if.then52, label %if.else111

if.then52:                                        ; preds = %if.else49, %if.else49
  %39 = load i32, i32* %i, align 4
  %add53 = add nsw i32 %39, 1
  store i32 %add53, i32* %k, align 4
  br label %for.cond54

for.cond54:                                       ; preds = %for.inc, %if.then52, %for.inc, %if.then52
  %40 = load i32, i32* %k, align 4
  %41 = load i32, i32* %j, align 4
  %cmp55 = icmp slt i32 %40, %41
  br i1 %cmp55, label %for.body57, label %for.end

for.body57:                                       ; preds = %for.cond54, %for.cond54
  %42 = load i32, i32* %k, align 4
  %arrayidx58 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %42
  %string59 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx58, i32 0, i32 0
  %arraydecay60 = getelementptr inbounds [60 x i8], [60 x i8]* %string59, i32 0, i32 0
  %43 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.170, i32 0, i32 0
  %call61 = call i32 @strcmp_Package(i8* %43, i8* %arraydecay60)
  %cmp62 = icmp eq i32 %call61, 0
  br i1 %cmp62, label %if.then85, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %for.body57, %for.body57
  %44 = load i32, i32* %k, align 4
  %arrayidx65 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %44
  %string66 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx65, i32 0, i32 0
  %arraydecay67 = getelementptr inbounds [60 x i8], [60 x i8]* %string66, i32 0, i32 0
  %45 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.171, i32 0, i32 0
  %call68 = call i32 @strcmp_Package(i8* %45, i8* %arraydecay67)
  %cmp69 = icmp eq i32 %call68, 0
  br i1 %cmp69, label %if.then85, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %lor.lhs.false64, %lor.lhs.false64
  %46 = load i32, i32* %k, align 4
  %arrayidx72 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %46
  %string73 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx72, i32 0, i32 0
  %arraydecay74 = getelementptr inbounds [60 x i8], [60 x i8]* %string73, i32 0, i32 0
  %47 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.172, i32 0, i32 0
  %call75 = call i32 @strcmp_Package(i8* %47, i8* %arraydecay74)
  %cmp76 = icmp eq i32 %call75, 0
  br i1 %cmp76, label %if.then85, label %lor.lhs.false78

lor.lhs.false78:                                  ; preds = %lor.lhs.false71, %lor.lhs.false71
  %48 = load i32, i32* %k, align 4
  %arrayidx79 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %48
  %string80 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx79, i32 0, i32 0
  %arraydecay81 = getelementptr inbounds [60 x i8], [60 x i8]* %string80, i32 0, i32 0
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.173, i32 0, i32 0
  %call82 = call i32 @strcmp_Package(i8* %49, i8* %arraydecay81)
  %cmp83 = icmp eq i32 %call82, 0
  br i1 %cmp83, label %if.then85, label %if.end

if.then85:                                        ; preds = %lor.lhs.false78, %lor.lhs.false71, %lor.lhs.false64, %for.body57, %lor.lhs.false78, %lor.lhs.false71, %lor.lhs.false64, %for.body57
  br label %for.inc

if.end:                                           ; preds = %lor.lhs.false78, %lor.lhs.false78
  %50 = load i32, i32* %k, align 4
  %arrayidx86 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %50
  %string87 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx86, i32 0, i32 0
  %arraydecay88 = getelementptr inbounds [60 x i8], [60 x i8]* %string87, i32 0, i32 0
  %51 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.174, i32 0, i32 0
  %call89 = call i32 @strcmp_Package(i8* %51, i8* %arraydecay88)
  %cmp90 = icmp eq i32 %call89, 0
  br i1 %cmp90, label %land.lhs.true92, label %if.end105

land.lhs.true92:                                  ; preds = %if.end, %if.end
  %52 = load i32, i32* %k, align 4
  %53 = load i32, i32* %i, align 4
  %add93 = add nsw i32 %53, 1
  %cmp94 = icmp sgt i32 %52, %add93
  br i1 %cmp94, label %land.lhs.true96, label %if.end105

land.lhs.true96:                                  ; preds = %land.lhs.true92, %land.lhs.true92
  %54 = load i32, i32* %k, align 4
  %sub97 = sub nsw i32 %54, 1
  %arrayidx98 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %sub97
  %string99 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx98, i32 0, i32 0
  %arraydecay100 = getelementptr inbounds [60 x i8], [60 x i8]* %string99, i32 0, i32 0
  %55 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.175, i32 0, i32 0
  %call101 = call i32 @strcmp_Package(i8* %55, i8* %arraydecay100)
  %cmp102 = icmp eq i32 %call101, 0
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; preds = %land.lhs.true96, %land.lhs.true96
  br label %for.inc

if.end105:                                        ; preds = %land.lhs.true96, %land.lhs.true92, %if.end, %land.lhs.true96, %land.lhs.true92, %if.end
  br label %for.end

for.inc:                                          ; preds = %if.then104, %if.then85, %if.then104, %if.then85
  %56 = load i32, i32* %k, align 4
  %inc = add nsw i32 %56, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond54

for.end:                                          ; preds = %if.end105, %for.cond54, %if.end105, %for.cond54
  %57 = load i32, i32* %k, align 4
  %58 = load i32, i32* %j, align 4
  %cmp106 = icmp eq i32 %57, %58
  %conv107 = zext i1 %cmp106 to i32
  %conv108 = trunc i32 %conv107 to i8
  %59 = load i32, i32* %j, align 4
  %60 = load i32, i32* %i, align 4
  %arrayidx109 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %60
  %61 = load i8*, i8** %arrayidx109, align 4
  %arrayidx110 = getelementptr inbounds i8, i8* %61, i32 %59
  store i8 %conv108, i8* %arrayidx110, align 1
  br label %if.end114

if.else111:                                       ; preds = %if.else49, %if.else49
  %62 = load i32, i32* %j, align 4
  %63 = load i32, i32* %i, align 4
  %arrayidx112 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %63
  %64 = load i8*, i8** %arrayidx112, align 4
  %arrayidx113 = getelementptr inbounds i8, i8* %64, i32 %62
  store i8 0, i8* %arrayidx113, align 1
  br label %if.end114

if.end114:                                        ; preds = %if.else111, %for.end, %if.else111, %for.end
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then46, %if.end114, %if.then46
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then11, %if.end115, %if.then11
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then, %if.end116, %if.then
  br label %for.inc118

for.inc118:                                       ; preds = %if.end117, %if.end117
  %65 = load i32, i32* %j, align 4
  %inc119 = add nsw i32 %65, 1
  store i32 %inc119, i32* %j, align 4
  br label %for.cond1

for.end120:                                       ; preds = %cond.end, %cond.end
  br label %for.inc121

for.inc121:                                       ; preds = %for.end120, %for.end120
  %66 = load i32, i32* %i, align 4
  %inc122 = add nsw i32 %66, 1
  store i32 %inc122, i32* %i, align 4
  br label %for.cond

for.end123:                                       ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_deletable() #0 {
entry:
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* @N_words, align 4
  %add = add nsw i32 %2, 1
  %3 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  call void @xfree(i8* %4, i32 %add)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %5 = load i32, i32* %w, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @install_fat_connectors() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body, %for.body
  %4 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %4
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx1, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 64, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %5 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %5
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx2, i32 0, i32 2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call3 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %6, %struct.Disjunct_struct* %load_struct.BigStruct_332)
  %7 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %7
  %d5 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 2
  store %struct.Disjunct_struct* %call3, %struct.Disjunct_struct** %d5, align 4
  br label %if.end26

if.else:                                          ; preds = %for.body, %for.body
  %8 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %8
  %d7 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx6, i32 0, i32 2
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d7, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %9, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 62, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %10 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %10
  %d10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 2
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d10, align 4
  %call11 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %11, %struct.Disjunct_struct* %load_struct.BigStruct_33)
  %12 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %12
  %d13 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx12, i32 0, i32 2
  store %struct.Disjunct_struct* %call11, %struct.Disjunct_struct** %d13, align 4
  %13 = load i32, i32* %i, align 4
  %arrayidx14 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %13
  %string15 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx14, i32 0, i32 0
  %arraydecay16 = getelementptr inbounds [60 x i8], [60 x i8]* %string15, i32 0, i32 0
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.176, i32 0, i32 0
  %call17 = call i32 @strcmp_Package(i8* %arraydecay16, i8* %14)
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.end

if.then19:                                        ; preds = %if.else, %if.else
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 63, i32 0)
  %struct.BigStruct_331 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_331 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_331
  %15 = load i32, i32* %i, align 4
  %arrayidx21 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %15
  %d22 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx21, i32 0, i32 2
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d22, align 4
  %call23 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %16, %struct.Disjunct_struct* %load_struct.BigStruct_331)
  %17 = load i32, i32* %i, align 4
  %arrayidx24 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %17
  %d25 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx24, i32 0, i32 2
  store %struct.Disjunct_struct* %call23, %struct.Disjunct_struct** %d25, align 4
  br label %if.end

if.end:                                           ; preds = %if.then19, %if.else, %if.then19, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then, %if.end, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end26, %if.end26
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @compare_parse(%struct.Linkage_info_struct* %p1, %struct.Linkage_info_struct* %p2) #0 {
entry:
  %retval = alloca i32, align 4
  %p2.addr = alloca %struct.Linkage_info_struct*, align 4
  %p1.addr = alloca %struct.Linkage_info_struct*, align 4
  store %struct.Linkage_info_struct* %p2, %struct.Linkage_info_struct** %p2.addr, align 4
  store %struct.Linkage_info_struct* %p1, %struct.Linkage_info_struct** %p1.addr, align 4
  %0 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p1.addr, align 4
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %0, i32 0, i32 1
  %1 = load i16, i16* %N_violations, align 4
  %conv = sext i16 %1 to i32
  %2 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p2.addr, align 4
  %N_violations1 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %2, i32 0, i32 1
  %3 = load i16, i16* %N_violations1, align 4
  %conv2 = sext i16 %3 to i32
  %cmp = icmp ne i32 %conv, %conv2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p1.addr, align 4
  %N_violations4 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %4, i32 0, i32 1
  %5 = load i16, i16* %N_violations4, align 4
  %conv5 = sext i16 %5 to i32
  %6 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p2.addr, align 4
  %N_violations6 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %6, i32 0, i32 1
  %7 = load i16, i16* %N_violations6, align 4
  %conv7 = sext i16 %7 to i32
  %sub = sub nsw i32 %conv5, %conv7
  store i32 %sub, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %8 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p1.addr, align 4
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %8, i32 0, i32 3
  %9 = load i16, i16* %disjunct_cost, align 4
  %conv8 = sext i16 %9 to i32
  %10 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p2.addr, align 4
  %disjunct_cost9 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %10, i32 0, i32 3
  %11 = load i16, i16* %disjunct_cost9, align 4
  %conv10 = sext i16 %11 to i32
  %cmp11 = icmp ne i32 %conv8, %conv10
  br i1 %cmp11, label %if.then13, label %if.else19

if.then13:                                        ; preds = %if.else
  %12 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p1.addr, align 4
  %disjunct_cost14 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %12, i32 0, i32 3
  %13 = load i16, i16* %disjunct_cost14, align 4
  %conv15 = sext i16 %13 to i32
  %14 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p2.addr, align 4
  %disjunct_cost16 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %14, i32 0, i32 3
  %15 = load i16, i16* %disjunct_cost16, align 4
  %conv17 = sext i16 %15 to i32
  %sub18 = sub nsw i32 %conv15, %conv17
  store i32 %sub18, i32* %retval, align 4
  br label %return

if.else19:                                        ; preds = %if.else
  %16 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p1.addr, align 4
  %and_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %16, i32 0, i32 4
  %17 = load i16, i16* %and_cost, align 2
  %conv20 = sext i16 %17 to i32
  %18 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p2.addr, align 4
  %and_cost21 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %18, i32 0, i32 4
  %19 = load i16, i16* %and_cost21, align 2
  %conv22 = sext i16 %19 to i32
  %cmp23 = icmp ne i32 %conv20, %conv22
  br i1 %cmp23, label %if.then25, label %if.else31

if.then25:                                        ; preds = %if.else19
  %20 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p1.addr, align 4
  %and_cost26 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %20, i32 0, i32 4
  %21 = load i16, i16* %and_cost26, align 2
  %conv27 = sext i16 %21 to i32
  %22 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p2.addr, align 4
  %and_cost28 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %22, i32 0, i32 4
  %23 = load i16, i16* %and_cost28, align 2
  %conv29 = sext i16 %23 to i32
  %sub30 = sub nsw i32 %conv27, %conv29
  store i32 %sub30, i32* %retval, align 4
  br label %return

if.else31:                                        ; preds = %if.else19
  %24 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p1.addr, align 4
  %link_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %24, i32 0, i32 5
  %25 = load i16, i16* %link_cost, align 4
  %conv32 = sext i16 %25 to i32
  %26 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %p2.addr, align 4
  %link_cost33 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %26, i32 0, i32 5
  %27 = load i16, i16* %link_cost33, align 4
  %conv34 = sext i16 %27 to i32
  %sub35 = sub nsw i32 %conv32, %conv34
  store i32 %sub35, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else31, %if.then25, %if.then13, %if.then
  %28 = load i32, i32* %retval, align 4
  ret i32 %28
}

; Function Attrs: noinline nounwind
define void @clear_time() #0 {
entry:
  ret void
}

; Function Attrs: noinline nounwind
define void @print_time(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %1 = load i8*, i8** %s.addr, align 4
  %2 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.177, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2, i8* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind
define void @print_total_time() #0 {
entry:
  ret void
}

; Function Attrs: noinline nounwind
define void @first_prepare_to_parse() #0 {
entry:
  %0 = load i32, i32* @echo_on, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 2, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  %1 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %1, 2
  br i1 %cmp, label %if.then1, label %if.end3

if.then1:                                         ; preds = %if.end, %if.end
  %2 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.178, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %2)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 140, i32 10)
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.end, %if.then1, %if.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 174, i32 8)
  %3 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.179, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %3, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  ret void
}

; Function Attrs: noinline nounwind
define void @prepare_to_parse(i32 %cost_cutoff) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %cost_cutoff.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %cost_cutoff.addr, align 4
  %0 = load i32, i32* %cost_cutoff.addr, align 4
  %struct.BigStruct_011 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %0, i32* %struct.BigStruct_011
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 111, i32 10)
  %1 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %1, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %2 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.180, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.181, i32 0, i32 0
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %3, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @N_words, align 4
  %cmp1 = icmp slt i32 %4, %5
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %7, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 94, i32 1)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %8 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %8
  %d4 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx3, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d4, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %10 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.182, i32 0, i32 0
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %10, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %11 = load i32, i32* @verbosity, align 4
  %cmp5 = icmp sgt i32 %11, 2
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %for.end, %for.end
  %12 = getelementptr inbounds [54 x i8], [54 x i8]* @.str.183, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printf(i8* %12)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %for.end, %if.then6, %for.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 123, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 124, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then10, label %if.end41

if.then10:                                        ; preds = %if.end8, %if.end8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 125, i32 10)
  %struct.BigStruct_012 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 1, i32* %struct.BigStruct_012
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 146, i32 9)
  %13 = load i32, i32* @verbosity, align 4
  %cmp11 = icmp sgt i32 %13, 2
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.then10, %if.then10
  %14 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.184, i32 0, i32 0
  %call13 = call i32 (i8*, ...) @printf(i8* %14)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.then10, %if.then12, %if.then10
  %15 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.185, i32 0, i32 0
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* @mark_cost, align 4
  store i32 0, i32* @work_in_hash_lookups, align 4
  store i32 0, i32* @N_hash_lookups, align 4
  store i32 0, i32* @N_in_table, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 139, i32 10)
  %16 = load i32, i32* @verbosity, align 4
  %cmp15 = icmp sgt i32 %16, 2
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14, %if.end14
  %17 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.186, i32 0, i32 0
  %call17 = call i32 (i8*, ...) @printf(i8* %17)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 121, i32 10)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14, %if.then16, %if.end14
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 126, i32 10)
  %18 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.187, i32 0, i32 0
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %18, i8** %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 107, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 127, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 134, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 135, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 136, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 137, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 133, i32 10)
  %19 = load i32, i32* @verbosity, align 4
  %cmp19 = icmp sgt i32 %19, 2
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end18, %if.end18
  %20 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.188, i32 0, i32 0
  %call21 = call i32 (i8*, ...) @printf(i8* %20)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end18, %if.then20, %if.end18
  %21 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.189, i32 0, i32 0
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %21, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 144, i32 9)
  %22 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.190, i32 0, i32 0
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %22, i8** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc31, %if.end22, %for.inc31, %if.end22
  %23 = load i32, i32* %i, align 4
  %24 = load i32, i32* @N_words, align 4
  %cmp24 = icmp slt i32 %23, %24
  br i1 %cmp24, label %for.body25, label %for.end33

for.body25:                                       ; preds = %for.cond23, %for.cond23
  %25 = load i32, i32* %i, align 4
  %arrayidx26 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %25
  %d27 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx26, i32 0, i32 2
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d27, align 4
  %struct.BigStruct_49 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %26, %struct.Disjunct_struct** %struct.BigStruct_49
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 94, i32 1)
  %struct.BigStruct_3310 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_3310 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_3310
  %27 = load i32, i32* %i, align 4
  %arrayidx29 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %27
  %d30 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx29, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_3310, %struct.Disjunct_struct** %d30, align 4
  br label %for.inc31

for.inc31:                                        ; preds = %for.body25, %for.body25
  %28 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %28, 1
  store i32 %inc32, i32* %i, align 4
  br label %for.cond23

for.end33:                                        ; preds = %for.cond23, %for.cond23
  %29 = load i32, i32* @verbosity, align 4
  %cmp34 = icmp sgt i32 %29, 2
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %for.end33, %for.end33
  %30 = getelementptr inbounds [42 x i8], [42 x i8]* @.str.191, i32 0, i32 0
  %call36 = call i32 (i8*, ...) @printf(i8* %30)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %for.end33, %if.then35, %for.end33
  %31 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.192, i32 0, i32 0
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %31, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %32 = load i32, i32* @verbosity, align 4
  %cmp38 = icmp sgt i32 %32, 2
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.end37, %if.end37
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 108, i32 10)
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.end37, %if.then39, %if.end37
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end8, %if.end40, %if.end8
  %struct.BigStruct_013 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_013
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 146, i32 9)
  %33 = load i32, i32* @verbosity, align 4
  %cmp42 = icmp sgt i32 %33, 2
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end41, %if.end41
  %34 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.193, i32 0, i32 0
  %call44 = call i32 (i8*, ...) @printf(i8* %34)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end41, %if.then43, %if.end41
  %35 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.194, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %35, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* @parse_cost, align 4
  store i32 0, i32* @work_in_hash_lookups, align 4
  store i32 0, i32* @N_hash_lookups, align 4
  store i32 0, i32* @N_in_table, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 72, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 87, i32 0)
  %36 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.195, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %36, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  ret void
}

; Function Attrs: noinline nounwind
define void @unprepare_parse() #0 {
entry:
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 117, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 124, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 106, i32 9)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 71, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 88, i32 0)
  ret void
}

; Function Attrs: noinline nounwind
define void @final_unprepare_parse() #0 {
entry:
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 118, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 159, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @compute_linkage_arrays(i32 %index, i32 %cost) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %cost.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %cost.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %index.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %1 = load i32, i32* %index.addr, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %1, i32* %struct.BigStruct_01
  %struct.BigStruct_52 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %0, i32* %struct.BigStruct_52
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 69, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 65, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %load_struct.BigStruct_32, i32* %struct.BigStruct_323
  ret i32 %load_struct.BigStruct_32
}

; Function Attrs: noinline nounwind
define void @summary_line(i32 %N_canonical_linkages, i32 %N_valid_linkages, i8* %stagen, i32 %give_up) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  %load_struct.BigStruct_15 = load i32, i32* %struct.BigStruct_15
  %give_up.addr = alloca i32, align 4
  %stagen.addr = alloca i8*, align 4
  %N_valid_linkages.addr = alloca i32, align 4
  %N_canonical_linkages.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_15, i32* %give_up.addr, align 4
  store i8* %load_struct.BigStruct_11, i8** %stagen.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %N_valid_linkages.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %N_canonical_linkages.addr, align 4
  %0 = load i32, i32* %N_canonical_linkages.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else3

if.then:                                          ; preds = %entry, %entry
  %1 = load i32, i32* %give_up.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then, %if.then
  %2 = load i8*, i8** %stagen.addr, align 4
  %3 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.196, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %3, i8* %2)
  br label %if.end

if.else:                                          ; preds = %if.then, %if.then
  %4 = load i8*, i8** %stagen.addr, align 4
  %5 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.197, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %5, i8* %4)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1, %if.else, %if.then1
  br label %if.end30

if.else3:                                         ; preds = %entry, %entry
  %6 = load i32, i32* %N_canonical_linkages.addr, align 4
  %cmp4 = icmp eq i32 %6, 1
  br i1 %cmp4, label %if.then5, label %if.else17

if.then5:                                         ; preds = %if.else3, %if.else3
  %7 = load i32, i32* %N_valid_linkages.addr, align 4
  %cmp6 = icmp eq i32 %7, 0
  br i1 %cmp6, label %if.then7, label %if.else14

if.then7:                                         ; preds = %if.then5, %if.then5
  %8 = load i32, i32* %give_up.addr, align 4
  %tobool8 = icmp ne i32 %8, 0
  br i1 %tobool8, label %if.then9, label %if.else11

if.then9:                                         ; preds = %if.then7, %if.then7
  %9 = load i8*, i8** %stagen.addr, align 4
  %10 = getelementptr inbounds [56 x i8], [56 x i8]* @.str.198, i32 0, i32 0
  %call10 = call i32 (i8*, ...) @printf(i8* %10, i8* %9)
  br label %if.end13

if.else11:                                        ; preds = %if.then7, %if.then7
  %11 = load i8*, i8** %stagen.addr, align 4
  %12 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.199, i32 0, i32 0
  %call12 = call i32 (i8*, ...) @printf(i8* %12, i8* %11)
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then9, %if.else11, %if.then9
  br label %if.end16

if.else14:                                        ; preds = %if.then5, %if.then5
  %13 = load i8*, i8** %stagen.addr, align 4
  %14 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.200, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printf(i8* %14, i8* %13)
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.end13, %if.else14, %if.end13
  br label %if.end29

if.else17:                                        ; preds = %if.else3, %if.else3
  %15 = load i32, i32* %N_valid_linkages.addr, align 4
  %cmp18 = icmp eq i32 %15, 0
  br i1 %cmp18, label %if.then19, label %if.else26

if.then19:                                        ; preds = %if.else17, %if.else17
  %16 = load i32, i32* %give_up.addr, align 4
  %tobool20 = icmp ne i32 %16, 0
  br i1 %tobool20, label %if.then21, label %if.else23

if.then21:                                        ; preds = %if.then19, %if.then19
  %17 = load i8*, i8** %stagen.addr, align 4
  %18 = load i32, i32* %N_canonical_linkages.addr, align 4
  %19 = getelementptr inbounds [59 x i8], [59 x i8]* @.str.201, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printf(i8* %19, i32 %18, i8* %17)
  br label %if.end25

if.else23:                                        ; preds = %if.then19, %if.then19
  %20 = load i8*, i8** %stagen.addr, align 4
  %21 = load i32, i32* %N_canonical_linkages.addr, align 4
  %22 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.202, i32 0, i32 0
  %call24 = call i32 (i8*, ...) @printf(i8* %22, i32 %21, i8* %20)
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then21, %if.else23, %if.then21
  br label %if.end28

if.else26:                                        ; preds = %if.else17, %if.else17
  %23 = load i8*, i8** %stagen.addr, align 4
  %24 = load i32, i32* %N_valid_linkages.addr, align 4
  %25 = load i32, i32* %N_canonical_linkages.addr, align 4
  %26 = getelementptr inbounds [57 x i8], [57 x i8]* @.str.203, i32 0, i32 0
  %call27 = call i32 (i8*, ...) @printf(i8* %26, i32 %25, i32 %24, i8* %23)
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.end25, %if.else26, %if.end25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end16, %if.end28, %if.end16
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end, %if.end29, %if.end
  %27 = load i32, i32* @display_bad, align 4
  %tobool31 = icmp ne i32 %27, 0
  br i1 %tobool31, label %if.then32, label %if.else34

if.then32:                                        ; preds = %if.end30, %if.end30
  %28 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.204, i32 0, i32 0
  %call33 = call i32 (i8*, ...) @printf(i8* %28)
  br label %if.end36

if.else34:                                        ; preds = %if.end30, %if.end30
  %29 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.205, i32 0, i32 0
  %call35 = call i32 (i8*, ...) @printf(i8* %29)
  br label %if.end36

if.end36:                                         ; preds = %if.else34, %if.then32, %if.else34, %if.then32
  ret void
}

; Function Attrs: noinline nounwind
define i8* @stage_name(i32 %phase, i32 %cost_cutoff, i32 %null_count) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %null_count.addr = alloca i32, align 4
  %cost_cutoff.addr = alloca i32, align 4
  %phase.addr = alloca i32, align 4
  %stage = alloca i32, align 4
  store i32 %load_struct.BigStruct_8, i32* %null_count.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %cost_cutoff.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %phase.addr, align 4
  %0 = load i32, i32* %phase.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else3

if.then:                                          ; preds = %entry, %entry
  %1 = load i32, i32* %cost_cutoff.addr, align 4
  %cmp1 = icmp sle i32 %1, 1
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then, %if.then
  store i32 1, i32* %stage, align 4
  br label %if.end

if.else:                                          ; preds = %if.then, %if.then
  store i32 2, i32* %stage, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2, %if.else, %if.then2
  %2 = load i32, i32* %stage, align 4
  %3 = getelementptr inbounds [100 x i8], [100 x i8]* @stage_name.answer, i32 0, i32 0
  %4 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.206, i32 0, i32 0
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* %4, i32 %2)
  br label %if.end5

if.else3:                                         ; preds = %entry, %entry
  %5 = load i32, i32* %null_count.addr, align 4
  %6 = getelementptr inbounds [100 x i8], [100 x i8]* @stage_name.answer, i32 0, i32 0
  %7 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.207, i32 0, i32 0
  %call4 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* %7, i32 %5)
  br label %if.end5

if.end5:                                          ; preds = %if.else3, %if.end, %if.else3, %if.end
  %8 = getelementptr inbounds [100 x i8], [100 x i8]* @stage_name.answer, i32 0, i32 0
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %8, i8** %struct.BigStruct_34
  ret i8* %8
}

; Function Attrs: noinline nounwind
define void @loop() #0 {
entry:
  %i = alloca i32, align 4
  %N_to_display = alloca i32, align 4
  %index = alloca i32, align 4
  %N_linkages = alloca i32, align 4
  %N_canonical_linkages = alloca i32, align 4
  %N_valid_linkages = alloca i32, align 4
  %has_fatlinks = alloca i32, align 4
  %linkage = alloca %struct.Linkage_info_struct*, align 4
  %line = alloca [1500 x i8], align 1
  %message = alloca [80 x i8], align 1
  %line_set = alloca i32, align 4
  %cost_cutoff = alloca i32, align 4
  %old_cost_cutoff = alloca i32, align 4
  %maxcost = alloca i32, align 4
  %success = alloca i32, align 4
  %give_up = alloca i32, align 4
  %phase = alloca i32, align 4
  %just_entered_phase_1 = alloca i32, align 4
  %null_count = alloca i32, align 4
  %stagen = alloca i8*, align 4
  %tmp = alloca %struct.Linkage_info_struct, align 4
  %tmp130 = alloca %struct.Linkage_info_struct, align 4
  %tmp199 = alloca %struct.Linkage_info_struct, align 4
  %tmp201 = alloca %struct.Linkage_info_struct, align 4
  store %struct.Linkage_info_struct* null, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* %line_set, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end268, %if.then51, %if.then46, %if.then38, %if.then32, %if.then26, %if.then19, %entry, %if.end268, %if.then51, %if.then46, %if.then38, %if.then32, %if.then26, %if.then19, %entry
  store i32 0, i32* @null_links, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 159, i32 10)
  store i32 0, i32* @max_space_in_use, align 4
  store i32 0, i32* @space_in_use, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 170, i32 10)
  %0 = load i32, i32* %line_set, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end13, label %if.then

if.then:                                          ; preds = %for.cond, %for.cond
  %1 = load i32, i32* @www_mode, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then, %if.then
  %2 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.208, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then, %if.then2, %if.then
  %3 = load i32, i32* @www_mode, align 4
  %tobool3 = icmp ne i32 %3, 0
  br i1 %tobool3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end, %if.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end, %if.then4, %if.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx9 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 0
  %arraydecay = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_218
  %struct.BigStruct_519 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1500, i32* %struct.BigStruct_519
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %arrayidx9, %struct._iobuf** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 82, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %cmp = icmp eq i8* %load_struct.BigStruct_34, null
  br i1 %cmp, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end7, %if.end7
  call void @exit_Package(i32 1) #5
  unreachable

if.end12:                                         ; preds = %if.end7, %if.end7
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %for.cond, %if.end12, %for.cond
  store i32 0, i32* %line_set, align 4
  %arraydecay14 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %call15 = call i32 @strlen_Package(i8* %arraydecay14)
  %sub = sub i32 %call15, 1
  %arrayidx16 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %sub
  %4 = load i8, i8* %arrayidx16, align 1
  %conv = sext i8 %4 to i32
  %cmp17 = icmp ne i32 %conv, 10
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end13, %if.end13
  %5 = getelementptr inbounds [27 x i8], [27 x i8]* @.str.209, i32 0, i32 0
  %call20 = call i32 (i8*, ...) @printf(i8* %5)
  br label %for.cond

if.end21:                                         ; preds = %if.end13, %if.end13
  %arrayidx22 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %6 = load i8, i8* %arrayidx22, align 1
  %conv23 = sext i8 %6 to i32
  %cmp24 = icmp eq i32 %conv23, 33
  br i1 %cmp24, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end21, %if.end21
  %arraydecay27 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_244 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay27, i8** %struct.BigStruct_244
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 168, i32 9)
  br label %for.cond

if.end28:                                         ; preds = %if.end21, %if.end21
  %arraydecay29 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_240 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay29, i8** %struct.BigStruct_240
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 163, i32 10)
  %struct.BigStruct_3241 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3241 = load i32, i32* %struct.BigStruct_3241
  %tobool31 = icmp ne i32 %load_struct.BigStruct_3241, 0
  br i1 %tobool31, label %if.end33, label %if.then32

if.then32:                                        ; preds = %if.end28, %if.end28
  br label %for.cond

if.end33:                                         ; preds = %if.end28, %if.end28
  %7 = load i32, i32* @N_words, align 4
  %8 = load i32, i32* @left_wall_defined, align 4
  %sub34 = sub nsw i32 %7, %8
  %9 = load i32, i32* @right_wall_defined, align 4
  %sub35 = sub nsw i32 %sub34, %9
  %10 = load i32, i32* @word_count_limit, align 4
  %cmp36 = icmp sgt i32 %sub35, %10
  br i1 %cmp36, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.end33, %if.end33
  %11 = load i32, i32* @word_count_limit, align 4
  %12 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.210, i32 0, i32 0
  %call39 = call i32 (i8*, ...) @printf(i8* %12, i32 %11)
  br label %for.cond

if.end40:                                         ; preds = %if.end33, %if.end33
  %13 = load i32, i32* @unknown_word_defined, align 4
  %tobool41 = icmp ne i32 %13, 0
  br i1 %tobool41, label %land.lhs.true, label %if.then43

land.lhs.true:                                    ; preds = %if.end40, %if.end40
  %14 = load i32, i32* @use_unknown_word, align 4
  %tobool42 = icmp ne i32 %14, 0
  br i1 %tobool42, label %if.end48, label %if.then43

if.then43:                                        ; preds = %land.lhs.true, %if.end40, %land.lhs.true, %if.end40
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 169, i32 9)
  %struct.BigStruct_3245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3245 = load i32, i32* %struct.BigStruct_3245
  %tobool45 = icmp ne i32 %load_struct.BigStruct_3245, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; preds = %if.then43, %if.then43
  br label %for.cond

if.end47:                                         ; preds = %if.then43, %if.then43
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %land.lhs.true, %if.end47, %land.lhs.true
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 164, i32 8)
  %struct.BigStruct_3242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3242 = load i32, i32* %struct.BigStruct_3242
  %tobool50 = icmp ne i32 %load_struct.BigStruct_3242, 0
  br i1 %tobool50, label %if.end52, label %if.then51

if.then51:                                        ; preds = %if.end48, %if.end48
  br label %for.cond

if.end52:                                         ; preds = %if.end48, %if.end48
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 162, i32 10)
  %struct.BigStruct_3239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3239 = load i32, i32* %struct.BigStruct_3239
  store i32 %load_struct.BigStruct_3239, i32* %maxcost, align 4
  %15 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.211, i32 0, i32 0
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_213
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 172, i32 9)
  store i32 1, i32* %old_cost_cutoff, align 4
  %struct.BigStruct_025 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 1, i32* %struct.BigStruct_025
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  store i32 0, i32* %phase, align 4
  store i32 0, i32* %give_up, align 4
  store i32 0, i32* %success, align 4
  store i32 0, i32* %cost_cutoff, align 4
  store i32 0, i32* %null_count, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end259, %if.end52, %if.end259, %if.end52
  %16 = load i32, i32* %success, align 4
  %tobool54 = icmp ne i32 %16, 0
  br i1 %tobool54, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond, %while.cond
  %17 = load i32, i32* %give_up, align 4
  %tobool55 = icmp ne i32 %17, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond, %lor.rhs, %while.cond
  %18 = phi i1 [ true, %while.cond ], [ %tobool55, %lor.rhs ]
  %lnot = xor i1 %18, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end, %lor.end
  store i32 0, i32* %just_entered_phase_1, align 4
  %19 = load i32, i32* %phase, align 4
  %cmp56 = icmp eq i32 %19, 0
  br i1 %cmp56, label %if.then58, label %if.else77

if.then58:                                        ; preds = %while.body, %while.body
  %20 = load i32, i32* %cost_cutoff, align 4
  %cmp59 = icmp eq i32 %20, 0
  br i1 %cmp59, label %if.then61, label %if.else

if.then61:                                        ; preds = %if.then58, %if.then58
  store i32 1, i32* %cost_cutoff, align 4
  br label %if.end70

if.else:                                          ; preds = %if.then58, %if.then58
  %21 = load i32, i32* %cost_cutoff, align 4
  %cmp62 = icmp eq i32 %21, 1
  br i1 %cmp62, label %land.lhs.true64, label %if.else68

land.lhs.true64:                                  ; preds = %if.else, %if.else
  %22 = load i32, i32* %maxcost, align 4
  %cmp65 = icmp sgt i32 %22, 1
  br i1 %cmp65, label %if.then67, label %if.else68

if.then67:                                        ; preds = %land.lhs.true64, %land.lhs.true64
  %23 = load i32, i32* %maxcost, align 4
  store i32 %23, i32* %cost_cutoff, align 4
  br label %if.end69

if.else68:                                        ; preds = %land.lhs.true64, %if.else, %land.lhs.true64, %if.else
  store i32 1, i32* %phase, align 4
  store i32 1, i32* @null_links, align 4
  store i32 1000, i32* %cost_cutoff, align 4
  store i32 1, i32* %just_entered_phase_1, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else68, %if.then67, %if.else68, %if.then67
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then61, %if.end69, %if.then61
  %24 = load i32, i32* %cost_cutoff, align 4
  %25 = load i32, i32* %maxcost, align 4
  %cmp71 = icmp eq i32 %24, %25
  br i1 %cmp71, label %land.lhs.true73, label %if.end76

land.lhs.true73:                                  ; preds = %if.end70, %if.end70
  %26 = load i32, i32* @null_link_search, align 4
  %tobool74 = icmp ne i32 %26, 0
  br i1 %tobool74, label %if.end76, label %if.then75

if.then75:                                        ; preds = %land.lhs.true73, %land.lhs.true73
  store i32 1, i32* %give_up, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.then75, %land.lhs.true73, %if.end70, %if.then75, %land.lhs.true73, %if.end70
  br label %if.end81

if.else77:                                        ; preds = %while.body, %while.body
  %27 = load i32, i32* %null_count, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %null_count, align 4
  %28 = load i32, i32* %null_count, align 4
  %29 = load i32, i32* @N_words, align 4
  %sub78 = sub nsw i32 %29, 1
  %cmp79 = icmp sge i32 %28, %sub78
  %conv80 = zext i1 %cmp79 to i32
  store i32 %conv80, i32* %give_up, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.else77, %if.end76, %if.else77, %if.end76
  %30 = load i32, i32* @verbosity, align 4
  %cmp82 = icmp sgt i32 %30, 2
  br i1 %cmp82, label %land.lhs.true84, label %if.end89

land.lhs.true84:                                  ; preds = %if.end81, %if.end81
  %31 = load i32, i32* %phase, align 4
  %cmp85 = icmp eq i32 %31, 0
  br i1 %cmp85, label %if.then87, label %if.end89

if.then87:                                        ; preds = %land.lhs.true84, %land.lhs.true84
  %32 = load i32, i32* %cost_cutoff, align 4
  %33 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.212, i32 0, i32 0
  %call88 = call i32 (i8*, ...) @printf(i8* %33, i32 %32)
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %land.lhs.true84, %if.end81, %if.then87, %land.lhs.true84, %if.end81
  %34 = load i32, i32* %cost_cutoff, align 4
  %35 = load i32, i32* %old_cost_cutoff, align 4
  %cmp90 = icmp ne i32 %34, %35
  br i1 %cmp90, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.end89, %if.end89
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  %36 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_024 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %36, i32* %struct.BigStruct_024
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  %37 = load i32, i32* %cost_cutoff, align 4
  store i32 %37, i32* %old_cost_cutoff, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.then92, %if.end89, %if.then92, %if.end89
  %38 = load i32, i32* %just_entered_phase_1, align 4
  %tobool94 = icmp ne i32 %38, 0
  br i1 %tobool94, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end93, %if.end93
  store i32 1, i32* %null_count, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end93, %if.then95, %if.end93
  %39 = load i32, i32* %null_count, align 4
  %40 = load i32, i32* %cost_cutoff, align 4
  %41 = load i32, i32* %phase, align 4
  %struct.BigStruct_032 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %41, i32* %struct.BigStruct_032
  %struct.BigStruct_533 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %40, i32* %struct.BigStruct_533
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %39, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3434 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3434 = load i8*, i8** %struct.BigStruct_3434
  store i8* %load_struct.BigStruct_3434, i8** %stagen, align 4
  %42 = load i32, i32* %phase, align 4
  %cmp98 = icmp eq i32 %42, 0
  br i1 %cmp98, label %if.then100, label %if.else102

if.then100:                                       ; preds = %if.end96, %if.end96
  %struct.BigStruct_035 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_035
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 138, i32 10)
  %struct.BigStruct_3236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3236 = load i32, i32* %struct.BigStruct_3236
  store i32 %load_struct.BigStruct_3236, i32* %N_linkages, align 4
  br label %if.end104

if.else102:                                       ; preds = %if.end96, %if.end96
  %43 = load i32, i32* %null_count, align 4
  %struct.BigStruct_037 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %43, i32* %struct.BigStruct_037
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 138, i32 10)
  %struct.BigStruct_3238 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3238 = load i32, i32* %struct.BigStruct_3238
  store i32 %load_struct.BigStruct_3238, i32* %N_linkages, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then100, %if.else102, %if.then100
  %44 = load i32, i32* %N_linkages, align 4
  %45 = load i32, i32* @linkage_count_limit, align 4
  %cmp105 = icmp sgt i32 %44, %45
  br i1 %cmp105, label %if.then107, label %if.end109

if.then107:                                       ; preds = %if.end104, %if.end104
  %46 = load i32, i32* %N_linkages, align 4
  %47 = load i32, i32* @linkage_count_limit, align 4
  %48 = getelementptr inbounds [63 x i8], [63 x i8]* @.str.213, i32 0, i32 0
  %call108 = call i32 (i8*, ...) @printf(i8* %48, i32 %47, i32 %46)
  %49 = load i32, i32* @linkage_count_limit, align 4
  store i32 %49, i32* %N_linkages, align 4
  br label %if.end109

if.end109:                                        ; preds = %if.then107, %if.end104, %if.then107, %if.end104
  %50 = load i32, i32* %N_linkages, align 4
  %arraydecay110 = getelementptr inbounds [80 x i8], [80 x i8]* %message, i32 0, i32 0
  %51 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.214, i32 0, i32 0
  %call111 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay110, i8* %51, i32 %50)
  %arraydecay112 = getelementptr inbounds [80 x i8], [80 x i8]* %message, i32 0, i32 0
  %struct.BigStruct_212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay112, i8** %struct.BigStruct_212
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %N_valid_linkages, align 4
  store i32 0, i32* %N_canonical_linkages, align 4
  %52 = load i32, i32* %N_linkages, align 4
  %cmp113 = icmp ne i32 %52, 0
  br i1 %cmp113, label %if.then115, label %if.end143

if.then115:                                       ; preds = %if.end109, %if.end109
  %53 = load i32, i32* %N_linkages, align 4
  %mul = mul i32 %53, 16
  %call116 = call i8* @xalloc(i32 %mul)
  %54 = bitcast i8* %call116 to %struct.Linkage_info_struct*
  store %struct.Linkage_info_struct* %54, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* %index, align 4
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc, %if.then115, %for.inc, %if.then115
  %55 = load i32, i32* %index, align 4
  %56 = load i32, i32* %N_linkages, align 4
  %cmp118 = icmp slt i32 %55, %56
  br i1 %cmp118, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond117, %for.cond117
  %57 = load i32, i32* %null_count, align 4
  %58 = load i32, i32* %index, align 4
  %struct.BigStruct_015 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %58, i32* %struct.BigStruct_015
  %struct.BigStruct_516 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %57, i32* %struct.BigStruct_516
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3217 = load i32, i32* %struct.BigStruct_3217
  store i32 %load_struct.BigStruct_3217, i32* %has_fatlinks, align 4
  %59 = load i32, i32* %has_fatlinks, align 4
  %tobool121 = icmp ne i32 %59, 0
  br i1 %tobool121, label %if.then122, label %if.else128

if.then122:                                       ; preds = %for.body, %for.body
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 67, i32 1)
  %struct.BigStruct_329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_329 = load i32, i32* %struct.BigStruct_329
  %tobool124 = icmp ne i32 %load_struct.BigStruct_329, 0
  br i1 %tobool124, label %if.end126, label %if.then125

if.then125:                                       ; preds = %if.then122, %if.then122
  br label %for.inc

if.end126:                                        ; preds = %if.then122, %if.then122
  %60 = load i32, i32* %N_canonical_linkages, align 4
  %61 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx127 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %61, i32 %60
  %struct.BigStruct_243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp, %struct.Linkage_info_struct** %struct.BigStruct_243
  %struct.BigStruct_254 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_254
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  %62 = bitcast %struct.Linkage_info_struct* %arrayidx127 to i8*
  %63 = bitcast %struct.Linkage_info_struct* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %62, i8* %63, i32 16, i32 4, i1 false)
  br label %if.end131

if.else128:                                       ; preds = %for.body, %for.body
  %64 = load i32, i32* %N_canonical_linkages, align 4
  %65 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx129 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %65, i32 %64
  %struct.BigStruct_247 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp130, %struct.Linkage_info_struct** %struct.BigStruct_247
  %struct.BigStruct_258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_258
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  %66 = bitcast %struct.Linkage_info_struct* %arrayidx129 to i8*
  %67 = bitcast %struct.Linkage_info_struct* %tmp130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %66, i8* %67, i32 16, i32 4, i1 false)
  br label %if.end131

if.end131:                                        ; preds = %if.else128, %if.end126, %if.else128, %if.end126
  %68 = load i32, i32* %N_canonical_linkages, align 4
  %69 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx132 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %69, i32 %68
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx132, i32 0, i32 1
  %70 = load i16, i16* %N_violations, align 4
  %conv133 = sext i16 %70 to i32
  %cmp134 = icmp eq i32 %conv133, 0
  br i1 %cmp134, label %if.then136, label %if.end138

if.then136:                                       ; preds = %if.end131, %if.end131
  %71 = load i32, i32* %N_valid_linkages, align 4
  %inc137 = add nsw i32 %71, 1
  store i32 %inc137, i32* %N_valid_linkages, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %if.end131, %if.then136, %if.end131
  %72 = load i32, i32* %index, align 4
  %73 = load i32, i32* %N_canonical_linkages, align 4
  %74 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx139 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %74, i32 %73
  %index140 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx139, i32 0, i32 0
  store i32 %72, i32* %index140, align 4
  %75 = load i32, i32* %N_canonical_linkages, align 4
  %inc141 = add nsw i32 %75, 1
  store i32 %inc141, i32* %N_canonical_linkages, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end138, %if.then125, %if.end138, %if.then125
  %76 = load i32, i32* %index, align 4
  %inc142 = add nsw i32 %76, 1
  store i32 %inc142, i32* %index, align 4
  br label %for.cond117

for.end:                                          ; preds = %for.cond117, %for.cond117
  %77 = load i32, i32* %N_canonical_linkages, align 4
  %78 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %79 = bitcast %struct.Linkage_info_struct* %78 to i8*
  %80 = bitcast i32 (%struct.Linkage_info_struct*, %struct.Linkage_info_struct*)* @compare_parse to i32 (i8*, i8*)*
  call void @qsort_Package(i8* %79, i32 %77, i32 16, i32 (i8*, i8*)* %80)
  br label %if.end143

if.end143:                                        ; preds = %for.end, %if.end109, %for.end, %if.end109
  %81 = load i32, i32* %N_canonical_linkages, align 4
  %cmp144 = icmp eq i32 %81, 0
  br i1 %cmp144, label %land.lhs.true146, label %if.end154

land.lhs.true146:                                 ; preds = %if.end143, %if.end143
  %82 = load i32, i32* %N_linkages, align 4
  %cmp147 = icmp sgt i32 %82, 0
  br i1 %cmp147, label %land.lhs.true149, label %if.end154

land.lhs.true149:                                 ; preds = %land.lhs.true146, %land.lhs.true146
  %83 = load i32, i32* %N_linkages, align 4
  %84 = load i32, i32* @linkage_count_limit, align 4
  %cmp150 = icmp slt i32 %83, %84
  br i1 %cmp150, label %if.then152, label %if.end154

if.then152:                                       ; preds = %land.lhs.true149, %land.lhs.true149
  %85 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.216, i32 0, i32 0
  %86 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.215, i32 0, i32 0
  %call153 = call i32 (i8*, ...) @printf(i8* %85, i8* %86)
  call void @exit_Package(i32 1) #5
  unreachable

if.end154:                                        ; preds = %land.lhs.true149, %land.lhs.true146, %if.end143, %land.lhs.true149, %land.lhs.true146, %if.end143
  %87 = getelementptr inbounds [27 x i8], [27 x i8]* @.str.217, i32 0, i32 0
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %87, i8** %struct.BigStruct_211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %line_set, align 4
  %88 = load i32, i32* %N_valid_linkages, align 4
  %cmp155 = icmp sgt i32 %88, 0
  %conv156 = zext i1 %cmp155 to i32
  store i32 %conv156, i32* %success, align 4
  %89 = load i32, i32* @display_bad, align 4
  %tobool157 = icmp ne i32 %89, 0
  br i1 %tobool157, label %if.end159, label %if.then158

if.then158:                                       ; preds = %if.end154, %if.end154
  %90 = load i32, i32* %give_up, align 4
  %91 = load i8*, i8** %stagen, align 4
  %92 = load i32, i32* %N_valid_linkages, align 4
  %93 = load i32, i32* %N_canonical_linkages, align 4
  %struct.BigStruct_028 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %93, i32* %struct.BigStruct_028
  %struct.BigStruct_529 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %92, i32* %struct.BigStruct_529
  %struct.BigStruct_1130 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %91, i8** %struct.BigStruct_1130
  %struct.BigStruct_1531 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  store i32 %90, i32* %struct.BigStruct_1531
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 131, i32 10)
  br label %if.end159

if.end159:                                        ; preds = %if.then158, %if.end154, %if.then158, %if.end154
  %94 = load i32, i32* @display_bad, align 4
  %tobool160 = icmp ne i32 %94, 0
  br i1 %tobool160, label %if.then161, label %if.else162

if.then161:                                       ; preds = %if.end159, %if.end159
  %95 = load i32, i32* %N_canonical_linkages, align 4
  store i32 %95, i32* %N_to_display, align 4
  br label %if.end163

if.else162:                                       ; preds = %if.end159, %if.end159
  %96 = load i32, i32* %N_valid_linkages, align 4
  store i32 %96, i32* %N_to_display, align 4
  br label %if.end163

if.end163:                                        ; preds = %if.else162, %if.then161, %if.else162, %if.then161
  %97 = load i32, i32* @display_on, align 4
  %tobool164 = icmp ne i32 %97, 0
  br i1 %tobool164, label %if.then165, label %if.end251

if.then165:                                       ; preds = %if.end163, %if.end163
  store i32 0, i32* %index, align 4
  br label %for.cond166

for.cond166:                                      ; preds = %for.inc248, %if.then165, %for.inc248, %if.then165
  %98 = load i32, i32* %index, align 4
  %99 = load i32, i32* %N_to_display, align 4
  %cmp167 = icmp slt i32 %98, %99
  br i1 %cmp167, label %for.body169, label %for.end250

for.body169:                                      ; preds = %for.cond166, %for.cond166
  %100 = load i32, i32* %null_count, align 4
  %101 = load i32, i32* %index, align 4
  %102 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx170 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %102, i32 %101
  %index171 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx170, i32 0, i32 0
  %103 = load i32, i32* %index171, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %103, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %100, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  store i32 %load_struct.BigStruct_3214, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %104 = load i32, i32* %N_canonical_linkages, align 4
  %cmp173 = icmp sgt i32 %104, 1
  br i1 %cmp173, label %if.then175, label %if.else177

if.then175:                                       ; preds = %for.body169, %for.body169
  %105 = load i32, i32* %index, align 4
  %add = add nsw i32 %105, 1
  %106 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.218, i32 0, i32 0
  %call176 = call i32 (i8*, ...) @printf(i8* %106, i32 %add)
  br label %if.end179

if.else177:                                       ; preds = %for.body169, %for.body169
  %107 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.219, i32 0, i32 0
  %call178 = call i32 (i8*, ...) @printf(i8* %107)
  br label %if.end179

if.end179:                                        ; preds = %if.else177, %if.then175, %if.else177, %if.then175
  %108 = load i32, i32* %index, align 4
  %109 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx180 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %109, i32 %108
  %N_violations181 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx180, i32 0, i32 1
  %110 = load i16, i16* %N_violations181, align 4
  %conv182 = sext i16 %110 to i32
  %cmp183 = icmp sgt i32 %conv182, 0
  br i1 %cmp183, label %if.then185, label %if.else187

if.then185:                                       ; preds = %if.end179, %if.end179
  %111 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.220, i32 0, i32 0
  %call186 = call i32 (i8*, ...) @printf(i8* %111)
  br label %if.end189

if.else187:                                       ; preds = %if.end179, %if.end179
  %112 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.221, i32 0, i32 0
  %call188 = call i32 (i8*, ...) @printf(i8* %112)
  br label %if.end189

if.end189:                                        ; preds = %if.else187, %if.then185, %if.else187, %if.then185
  %113 = load i32, i32* %index, align 4
  %114 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx190 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %114, i32 %113
  %link_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx190, i32 0, i32 5
  %115 = load i16, i16* %link_cost, align 4
  %conv191 = sext i16 %115 to i32
  %116 = load i32, i32* %index, align 4
  %117 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx192 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %117, i32 %116
  %and_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx192, i32 0, i32 4
  %118 = load i16, i16* %and_cost, align 2
  %conv193 = sext i16 %118 to i32
  %119 = load i32, i32* %index, align 4
  %120 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx194 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %120, i32 %119
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx194, i32 0, i32 3
  %121 = load i16, i16* %disjunct_cost, align 4
  %conv195 = sext i16 %121 to i32
  %122 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.222, i32 0, i32 0
  %call196 = call i32 (i8*, ...) @printf(i8* %122, i32 %conv195, i32 %conv193, i32 %conv191)
  %123 = load i32, i32* %has_fatlinks, align 4
  %tobool197 = icmp ne i32 %123, 0
  br i1 %tobool197, label %if.then198, label %if.else200

if.then198:                                       ; preds = %if.end189, %if.end189
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp199, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end202

if.else200:                                       ; preds = %if.end189, %if.end189
  %struct.BigStruct_245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp201, %struct.Linkage_info_struct** %struct.BigStruct_245
  %struct.BigStruct_256 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_256
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end202

if.end202:                                        ; preds = %if.else200, %if.then198, %if.else200, %if.then198
  %124 = load i32, i32* %index, align 4
  %125 = load i32, i32* %N_to_display, align 4
  %sub203 = sub nsw i32 %125, 1
  %cmp204 = icmp eq i32 %124, %sub203
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.end202, %if.end202
  br label %for.end250

if.end207:                                        ; preds = %if.end202, %if.end202
  %126 = load i32, i32* @just_one, align 4
  %tobool208 = icmp ne i32 %126, 0
  br i1 %tobool208, label %if.then209, label %if.end210

if.then209:                                       ; preds = %if.end207, %if.end207
  br label %for.end250

if.end210:                                        ; preds = %if.end207, %if.end207
  %127 = load i32, i32* @www_mode, align 4
  %tobool211 = icmp ne i32 %127, 0
  br i1 %tobool211, label %if.then212, label %if.end213

if.then212:                                       ; preds = %if.end210, %if.end210
  br label %for.inc248

if.end213:                                        ; preds = %if.end210, %if.end210
  %128 = load i32, i32* @display_bad, align 4
  %tobool214 = icmp ne i32 %128, 0
  br i1 %tobool214, label %if.end247, label %if.then215

if.then215:                                       ; preds = %if.end213, %if.end213
  %129 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.223, i32 0, i32 0
  %call216 = call i32 (i8*, ...) @printf(i8* %129)
  %130 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.224, i32 0, i32 0
  %call217 = call i32 (i8*, ...) @printf(i8* %130)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx219 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 0
  %arraydecay220 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_220 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay220, i8** %struct.BigStruct_220
  %struct.BigStruct_521 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1500, i32* %struct.BigStruct_521
  %struct.BigStruct_2622 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %arrayidx219, %struct._iobuf** %struct.BigStruct_2622
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 82, i32 0)
  %struct.BigStruct_3423 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3423 = load i8*, i8** %struct.BigStruct_3423
  %cmp222 = icmp eq i8* %load_struct.BigStruct_3423, null
  br i1 %cmp222, label %if.then224, label %if.end225

if.then224:                                       ; preds = %if.then215, %if.then215
  call void @exit_Package(i32 1) #5
  unreachable

if.end225:                                        ; preds = %if.then215, %if.then215
  store i32 0, i32* %i, align 4
  br label %for.cond226

for.cond226:                                      ; preds = %for.inc238, %if.end225, %for.inc238, %if.end225
  %131 = load i32, i32* %i, align 4
  %arrayidx227 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %131
  %132 = load i8, i8* %arrayidx227, align 1
  %conv228 = sext i8 %132 to i32
  %cmp229 = icmp ne i32 %conv228, 0
  br i1 %cmp229, label %for.body231, label %for.end240

for.body231:                                      ; preds = %for.cond226, %for.cond226
  %133 = load i32, i32* %i, align 4
  %arrayidx232 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %133
  %134 = load i8, i8* %arrayidx232, align 1
  %conv233 = sext i8 %134 to i32
  %call234 = call i32 @isspace_Package(i32 %conv233)
  %tobool235 = icmp ne i32 %call234, 0
  br i1 %tobool235, label %if.end237, label %if.then236

if.then236:                                       ; preds = %for.body231, %for.body231
  br label %for.end240

if.end237:                                        ; preds = %for.body231, %for.body231
  br label %for.inc238

for.inc238:                                       ; preds = %if.end237, %if.end237
  %135 = load i32, i32* %i, align 4
  %inc239 = add nsw i32 %135, 1
  store i32 %inc239, i32* %i, align 4
  br label %for.cond226

for.end240:                                       ; preds = %if.then236, %for.cond226, %if.then236, %for.cond226
  %136 = load i32, i32* %i, align 4
  %arrayidx241 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %136
  %137 = load i8, i8* %arrayidx241, align 1
  %conv242 = sext i8 %137 to i32
  %cmp243 = icmp ne i32 %conv242, 0
  br i1 %cmp243, label %if.then245, label %if.end246

if.then245:                                       ; preds = %for.end240, %for.end240
  store i32 1, i32* %line_set, align 4
  br label %for.end250

if.end246:                                        ; preds = %for.end240, %for.end240
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.end213, %if.end246, %if.end213
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247, %if.then212, %if.end247, %if.then212
  %138 = load i32, i32* %index, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %index, align 4
  br label %for.cond166

for.end250:                                       ; preds = %if.then245, %if.then209, %if.then206, %for.cond166, %if.then245, %if.then209, %if.then206, %for.cond166
  br label %if.end251

if.end251:                                        ; preds = %for.end250, %if.end163, %for.end250, %if.end163
  %139 = load i32, i32* @display_bad, align 4
  %tobool252 = icmp ne i32 %139, 0
  br i1 %tobool252, label %if.then253, label %if.end254

if.then253:                                       ; preds = %if.end251, %if.end251
  %140 = load i32, i32* %give_up, align 4
  %141 = load i8*, i8** %stagen, align 4
  %142 = load i32, i32* %N_valid_linkages, align 4
  %143 = load i32, i32* %N_canonical_linkages, align 4
  %struct.BigStruct_026 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %143, i32* %struct.BigStruct_026
  %struct.BigStruct_527 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %142, i32* %struct.BigStruct_527
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %141, i8** %struct.BigStruct_11
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  store i32 %140, i32* %struct.BigStruct_15
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 131, i32 10)
  br label %if.end254

if.end254:                                        ; preds = %if.then253, %if.end251, %if.then253, %if.end251
  %144 = load i32, i32* %N_linkages, align 4
  %cmp255 = icmp ne i32 %144, 0
  br i1 %cmp255, label %if.then257, label %if.end259

if.then257:                                       ; preds = %if.end254, %if.end254
  %145 = load i32, i32* %N_linkages, align 4
  %mul258 = mul i32 %145, 16
  %146 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %147 = bitcast %struct.Linkage_info_struct* %146 to i8*
  call void @xfree(i8* %147, i32 %mul258)
  br label %if.end259

if.end259:                                        ; preds = %if.then257, %if.end254, %if.then257, %if.end254
  br label %while.cond

while.end:                                        ; preds = %lor.end, %lor.end
  %148 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.225, i32 0, i32 0
  %struct.BigStruct_210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %148, i8** %struct.BigStruct_210
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 130, i32 9)
  %149 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.226, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %149, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %150 = load i32, i32* @verbosity, align 4
  %cmp260 = icmp sgt i32 %150, 2
  br i1 %cmp260, label %if.then262, label %if.end263

if.then262:                                       ; preds = %while.end, %while.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 121, i32 10)
  br label %if.end263

if.end263:                                        ; preds = %if.then262, %while.end, %if.then262, %while.end
  %151 = load i32, i32* @space_in_use, align 4
  %cmp264 = icmp ne i32 %151, 0
  br i1 %cmp264, label %if.then266, label %if.end268

if.then266:                                       ; preds = %if.end263, %if.end263
  %152 = load i32, i32* @space_in_use, align 4
  %153 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.227, i32 0, i32 0
  %call267 = call i32 (i8*, ...) @printf(i8* %153, i32 %152)
  br label %if.end268

if.end268:                                        ; preds = %if.then266, %if.end263, %if.then266, %if.end263
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 171, i32 10)
  br label %for.cond

return:                                           ; No predecessors!
  ret void
}

declare dllimport i8* @fgets(i8*, i32, %struct._iobuf*) #1

declare dllimport void @qsort(i8*, i32, i32, i32 (i8*, i8*)*) #1

; Function Attrs: noinline nounwind
define void @batch_process() #0 {
entry:
  %i = alloca i32, align 4
  %N_linkages = alloca i32, align 4
  %N_canonical_linkages = alloca i32, align 4
  %N_valid_linkages = alloca i32, align 4
  %index = alloca i32, align 4
  %has_fatlinks = alloca i32, align 4
  %linkage = alloca %struct.Linkage_info_struct*, align 4
  %s = alloca [1500 x i8], align 1
  %errors = alloca i32, align 4
  %mc = alloca i32, align 4
  %cost_cutoff = alloca i32, align 4
  %old_cost_cutoff = alloca i32, align 4
  %maxcost = alloca i32, align 4
  %last_pass = alloca i32, align 4
  %tmp = alloca %struct.Linkage_info_struct, align 4
  %tmp135 = alloca %struct.Linkage_info_struct, align 4
  %tmp209 = alloca %struct.Linkage_info_struct, align 4
  %tmp211 = alloca %struct.Linkage_info_struct, align 4
  %tmp243 = alloca %struct.Linkage_info_struct, align 4
  %tmp245 = alloca %struct.Linkage_info_struct, align 4
  %tmp280 = alloca %struct.Linkage_info_struct, align 4
  %tmp282 = alloca %struct.Linkage_info_struct, align 4
  %tmp308 = alloca %struct.Linkage_info_struct, align 4
  %tmp310 = alloca %struct.Linkage_info_struct, align 4
  store %struct.Linkage_info_struct* null, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* @null_links, align 4
  store i32 0, i32* %errors, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end334, %if.then82, %if.then71, %if.then64, %if.then58, %if.then24, %if.then18, %if.then7, %entry, %if.end334, %if.then82, %if.then71, %if.then64, %if.then58, %if.then24, %if.then18, %if.then7, %entry
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 159, i32 10)
  store i32 0, i32* @max_space_in_use, align 4
  store i32 0, i32* @space_in_use, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 170, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 0
  %arraydecay = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %struct.BigStruct_243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_243
  %struct.BigStruct_544 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1500, i32* %struct.BigStruct_544
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 82, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %cmp = icmp eq i8* %load_struct.BigStruct_34, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond, %for.cond
  br label %for.end335

if.end:                                           ; preds = %for.cond, %for.cond
  %arraydecay2 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %call3 = call i32 @strlen_Package(i8* %arraydecay2)
  %sub = sub i32 %call3, 1
  %arrayidx4 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %sub
  %0 = load i8, i8* %arrayidx4, align 1
  %conv = sext i8 %0 to i32
  %cmp5 = icmp ne i32 %conv, 10
  br i1 %cmp5, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end, %if.end
  %1 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.228, i32 0, i32 0
  %call8 = call i32 (i8*, ...) @printf(i8* %1)
  br label %for.cond

if.end9:                                          ; preds = %if.end, %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc, %if.end9, %for.inc, %if.end9
  %2 = load i32, i32* %i, align 4
  %arrayidx11 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %3 to i32
  %call13 = call i32 @isspace_Package(i32 %conv12)
  %tobool = icmp ne i32 %call13, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond10, %for.cond10
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond10

for.end:                                          ; preds = %for.cond10, %for.cond10
  %5 = load i32, i32* %i, align 4
  %arrayidx14 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %5
  %6 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %6 to i32
  %cmp16 = icmp eq i32 %conv15, 37
  br i1 %cmp16, label %if.then18, label %if.end19

if.then18:                                        ; preds = %for.end, %for.end
  br label %for.cond

if.end19:                                         ; preds = %for.end, %for.end
  %7 = load i32, i32* %i, align 4
  %arrayidx20 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %7
  %8 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %8 to i32
  %cmp22 = icmp eq i32 %conv21, 0
  br i1 %cmp22, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end19, %if.end19
  br label %for.cond

if.end25:                                         ; preds = %if.end19, %if.end19
  %9 = load i32, i32* %i, align 4
  %arrayidx26 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %9
  %10 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %10 to i32
  %cmp28 = icmp eq i32 %conv27, 42
  br i1 %cmp28, label %if.then49, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end25, %if.end25
  %11 = load i32, i32* %i, align 4
  %arrayidx30 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %11
  %12 = load i8, i8* %arrayidx30, align 1
  %conv31 = sext i8 %12 to i32
  %cmp32 = icmp eq i32 %conv31, 43
  br i1 %cmp32, label %if.then49, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %lor.lhs.false, %lor.lhs.false
  %13 = load i32, i32* %i, align 4
  %arrayidx35 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %13
  %14 = load i8, i8* %arrayidx35, align 1
  %conv36 = sext i8 %14 to i32
  %cmp37 = icmp eq i32 %conv36, 35
  br i1 %cmp37, label %if.then49, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %lor.lhs.false34, %lor.lhs.false34
  %15 = load i32, i32* %i, align 4
  %arrayidx40 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %15
  %16 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %16 to i32
  %cmp42 = icmp eq i32 %conv41, 58
  br i1 %cmp42, label %if.then49, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %lor.lhs.false39, %lor.lhs.false39
  %17 = load i32, i32* %i, align 4
  %arrayidx45 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %17
  %18 = load i8, i8* %arrayidx45, align 1
  %conv46 = sext i8 %18 to i32
  %cmp47 = icmp eq i32 %conv46, 45
  br i1 %cmp47, label %if.then49, label %if.else

if.then49:                                        ; preds = %lor.lhs.false44, %lor.lhs.false39, %lor.lhs.false34, %lor.lhs.false, %if.end25, %lor.lhs.false44, %lor.lhs.false39, %lor.lhs.false34, %lor.lhs.false, %if.end25
  %19 = load i32, i32* %i, align 4
  %arrayidx50 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %19
  %20 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %20 to i32
  store i32 %conv51, i32* %mc, align 4
  %21 = load i32, i32* %i, align 4
  %arrayidx52 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %21
  store i8 32, i8* %arrayidx52, align 1
  br label %if.end53

if.else:                                          ; preds = %lor.lhs.false44, %lor.lhs.false44
  store i32 32, i32* %mc, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then49, %if.else, %if.then49
  %arrayidx54 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %22 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %22 to i32
  %cmp56 = icmp eq i32 %conv55, 33
  br i1 %cmp56, label %if.then58, label %if.end60

if.then58:                                        ; preds = %if.end53, %if.end53
  %arraydecay59 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %struct.BigStruct_2102 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay59, i8** %struct.BigStruct_2102
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 168, i32 9)
  br label %for.cond

if.end60:                                         ; preds = %if.end53, %if.end53
  %arraydecay61 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %struct.BigStruct_299 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay61, i8** %struct.BigStruct_299
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 163, i32 10)
  %struct.BigStruct_32100 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32100 = load i32, i32* %struct.BigStruct_32100
  %tobool63 = icmp ne i32 %load_struct.BigStruct_32100, 0
  br i1 %tobool63, label %if.end65, label %if.then64

if.then64:                                        ; preds = %if.end60, %if.end60
  br label %for.cond

if.end65:                                         ; preds = %if.end60, %if.end60
  %23 = load i32, i32* @unknown_word_defined, align 4
  %tobool66 = icmp ne i32 %23, 0
  br i1 %tobool66, label %land.lhs.true, label %if.then68

land.lhs.true:                                    ; preds = %if.end65, %if.end65
  %24 = load i32, i32* @use_unknown_word, align 4
  %tobool67 = icmp ne i32 %24, 0
  br i1 %tobool67, label %if.end79, label %if.then68

if.then68:                                        ; preds = %land.lhs.true, %if.end65, %land.lhs.true, %if.end65
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 169, i32 9)
  %struct.BigStruct_32103 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32103 = load i32, i32* %struct.BigStruct_32103
  %tobool70 = icmp ne i32 %load_struct.BigStruct_32103, 0
  br i1 %tobool70, label %if.end78, label %if.then71

if.then71:                                        ; preds = %if.then68, %if.then68
  %25 = load i32, i32* %errors, align 4
  %inc72 = add nsw i32 %25, 1
  store i32 %inc72, i32* %errors, align 4
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.229, i32 0, i32 0
  %call73 = call i32 (i8*, ...) @printf(i8* %26)
  %27 = load i32, i32* %mc, align 4
  %28 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.230, i32 0, i32 0
  %call74 = call i32 (i8*, ...) @printf(i8* %28, i32 %27)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx76 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 1
  %struct.BigStruct_188 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx76, %struct._iobuf** %struct.BigStruct_188
  %struct.BigStruct_589 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 2, i32* %struct.BigStruct_589
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  %29 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.231, i32 0, i32 0
  %call77 = call i32 (i8*, ...) @printf(i8* %29)
  br label %for.cond

if.end78:                                         ; preds = %if.then68, %if.then68
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %land.lhs.true, %if.end78, %land.lhs.true
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 164, i32 8)
  %struct.BigStruct_32101 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32101 = load i32, i32* %struct.BigStruct_32101
  %tobool81 = icmp ne i32 %load_struct.BigStruct_32101, 0
  br i1 %tobool81, label %if.end84, label %if.then82

if.then82:                                        ; preds = %if.end79, %if.end79
  %30 = load i32, i32* %errors, align 4
  %inc83 = add nsw i32 %30, 1
  store i32 %inc83, i32* %errors, align 4
  br label %for.cond

if.end84:                                         ; preds = %if.end79, %if.end79
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 162, i32 10)
  %struct.BigStruct_3298 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3298 = load i32, i32* %struct.BigStruct_3298
  store i32 %load_struct.BigStruct_3298, i32* %maxcost, align 4
  %31 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.232, i32 0, i32 0
  %struct.BigStruct_229 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %31, i8** %struct.BigStruct_229
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %32 = load i32, i32* @echo_on, align 4
  %tobool86 = icmp ne i32 %32, 0
  br i1 %tobool86, label %if.then87, label %if.end89

if.then87:                                        ; preds = %if.end84, %if.end84
  %33 = load i32, i32* %mc, align 4
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.233, i32 0, i32 0
  %call88 = call i32 (i8*, ...) @printf(i8* %34, i32 %33)
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %if.end84, %if.then87, %if.end84
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 172, i32 9)
  store i32 0, i32* %last_pass, align 4
  store i32 0, i32* %cost_cutoff, align 4
  store i32 1, i32* %old_cost_cutoff, align 4
  %struct.BigStruct_046 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 1, i32* %struct.BigStruct_046
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  br label %while.cond

while.cond:                                       ; preds = %if.end322, %if.end89, %if.end322, %if.end89
  %35 = load i32, i32* %last_pass, align 4
  %tobool90 = icmp ne i32 %35, 0
  %lnot = xor i1 %tobool90, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %36 = load i32, i32* %cost_cutoff, align 4
  %cmp91 = icmp eq i32 %36, 0
  br i1 %cmp91, label %if.then93, label %if.else94

if.then93:                                        ; preds = %while.body, %while.body
  store i32 1, i32* %cost_cutoff, align 4
  br label %if.end102

if.else94:                                        ; preds = %while.body, %while.body
  %37 = load i32, i32* %cost_cutoff, align 4
  %cmp95 = icmp eq i32 %37, 1
  br i1 %cmp95, label %land.lhs.true97, label %if.end101

land.lhs.true97:                                  ; preds = %if.else94, %if.else94
  %38 = load i32, i32* %maxcost, align 4
  %cmp98 = icmp sgt i32 %38, 1
  br i1 %cmp98, label %if.then100, label %if.end101

if.then100:                                       ; preds = %land.lhs.true97, %land.lhs.true97
  %39 = load i32, i32* %maxcost, align 4
  store i32 %39, i32* %cost_cutoff, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.then100, %land.lhs.true97, %if.else94, %if.then100, %land.lhs.true97, %if.else94
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then93, %if.end101, %if.then93
  %40 = load i32, i32* %cost_cutoff, align 4
  %41 = load i32, i32* %maxcost, align 4
  %cmp103 = icmp sge i32 %40, %41
  %conv104 = zext i1 %cmp103 to i32
  store i32 %conv104, i32* %last_pass, align 4
  %42 = load i32, i32* @verbosity, align 4
  %cmp105 = icmp sgt i32 %42, 2
  br i1 %cmp105, label %if.then107, label %if.end109

if.then107:                                       ; preds = %if.end102, %if.end102
  %43 = load i32, i32* %maxcost, align 4
  %44 = load i32, i32* %cost_cutoff, align 4
  %45 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.234, i32 0, i32 0
  %call108 = call i32 (i8*, ...) @printf(i8* %45, i32 %44, i32 %43)
  br label %if.end109

if.end109:                                        ; preds = %if.then107, %if.end102, %if.then107, %if.end102
  %46 = load i32, i32* %cost_cutoff, align 4
  %47 = load i32, i32* %old_cost_cutoff, align 4
  %cmp110 = icmp ne i32 %46, %47
  br i1 %cmp110, label %if.then112, label %if.end113

if.then112:                                       ; preds = %if.end109, %if.end109
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  %48 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_045 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %48, i32* %struct.BigStruct_045
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  %49 = load i32, i32* %cost_cutoff, align 4
  store i32 %49, i32* %old_cost_cutoff, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.then112, %if.end109, %if.then112, %if.end109
  %struct.BigStruct_086 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_086
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 138, i32 10)
  %struct.BigStruct_3287 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3287 = load i32, i32* %struct.BigStruct_3287
  store i32 %load_struct.BigStruct_3287, i32* %N_linkages, align 4
  %50 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.235, i32 0, i32 0
  %struct.BigStruct_228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %50, i8** %struct.BigStruct_228
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %N_valid_linkages, align 4
  store i32 0, i32* %N_canonical_linkages, align 4
  %51 = load i32, i32* %N_linkages, align 4
  %cmp115 = icmp ne i32 %51, 0
  br i1 %cmp115, label %if.then117, label %if.end150

if.then117:                                       ; preds = %if.end113, %if.end113
  %52 = load i32, i32* %N_linkages, align 4
  %mul = mul i32 %52, 16
  %call118 = call i8* @xalloc(i32 %mul)
  %53 = bitcast i8* %call118 to %struct.Linkage_info_struct*
  store %struct.Linkage_info_struct* %53, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* %index, align 4
  br label %for.cond119

for.cond119:                                      ; preds = %for.inc147, %if.then117, %for.inc147, %if.then117
  %54 = load i32, i32* %index, align 4
  %55 = load i32, i32* %N_linkages, align 4
  %cmp120 = icmp slt i32 %54, %55
  br i1 %cmp120, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond119, %for.cond119
  %56 = load i32, i32* %N_valid_linkages, align 4
  %cmp122 = icmp eq i32 %56, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond119, %land.rhs, %for.cond119
  %57 = phi i1 [ false, %for.cond119 ], [ %cmp122, %land.rhs ]
  br i1 %57, label %for.body124, label %for.end149

for.body124:                                      ; preds = %land.end, %land.end
  %58 = load i32, i32* %index, align 4
  %struct.BigStruct_040 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %58, i32* %struct.BigStruct_040
  %struct.BigStruct_541 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_541
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3242 = load i32, i32* %struct.BigStruct_3242
  store i32 %load_struct.BigStruct_3242, i32* %has_fatlinks, align 4
  %59 = load i32, i32* %has_fatlinks, align 4
  %tobool126 = icmp ne i32 %59, 0
  br i1 %tobool126, label %if.then127, label %if.else133

if.then127:                                       ; preds = %for.body124, %for.body124
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 67, i32 1)
  %struct.BigStruct_3225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3225 = load i32, i32* %struct.BigStruct_3225
  %tobool129 = icmp ne i32 %load_struct.BigStruct_3225, 0
  br i1 %tobool129, label %if.end131, label %if.then130

if.then130:                                       ; preds = %if.then127, %if.then127
  br label %for.inc147

if.end131:                                        ; preds = %if.then127, %if.then127
  %60 = load i32, i32* %N_canonical_linkages, align 4
  %61 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx132 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %61, i32 %60
  %struct.BigStruct_2413 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp, %struct.Linkage_info_struct** %struct.BigStruct_2413
  %struct.BigStruct_2514 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_2514
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  %62 = bitcast %struct.Linkage_info_struct* %arrayidx132 to i8*
  %63 = bitcast %struct.Linkage_info_struct* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %62, i8* %63, i32 16, i32 4, i1 false)
  br label %if.end136

if.else133:                                       ; preds = %for.body124, %for.body124
  %64 = load i32, i32* %N_canonical_linkages, align 4
  %65 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx134 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %65, i32 %64
  %struct.BigStruct_2423 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp135, %struct.Linkage_info_struct** %struct.BigStruct_2423
  %struct.BigStruct_2524 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_2524
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  %66 = bitcast %struct.Linkage_info_struct* %arrayidx134 to i8*
  %67 = bitcast %struct.Linkage_info_struct* %tmp135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %66, i8* %67, i32 16, i32 4, i1 false)
  br label %if.end136

if.end136:                                        ; preds = %if.else133, %if.end131, %if.else133, %if.end131
  %68 = load i32, i32* %N_canonical_linkages, align 4
  %69 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx137 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %69, i32 %68
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx137, i32 0, i32 1
  %70 = load i16, i16* %N_violations, align 4
  %conv138 = sext i16 %70 to i32
  %cmp139 = icmp eq i32 %conv138, 0
  br i1 %cmp139, label %if.then141, label %if.end143

if.then141:                                       ; preds = %if.end136, %if.end136
  %71 = load i32, i32* %N_valid_linkages, align 4
  %inc142 = add nsw i32 %71, 1
  store i32 %inc142, i32* %N_valid_linkages, align 4
  br label %if.end143

if.end143:                                        ; preds = %if.then141, %if.end136, %if.then141, %if.end136
  %72 = load i32, i32* %index, align 4
  %73 = load i32, i32* %N_canonical_linkages, align 4
  %74 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx144 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %74, i32 %73
  %index145 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx144, i32 0, i32 0
  store i32 %72, i32* %index145, align 4
  %75 = load i32, i32* %N_canonical_linkages, align 4
  %inc146 = add nsw i32 %75, 1
  store i32 %inc146, i32* %N_canonical_linkages, align 4
  br label %for.inc147

for.inc147:                                       ; preds = %if.end143, %if.then130, %if.end143, %if.then130
  %76 = load i32, i32* %index, align 4
  %inc148 = add nsw i32 %76, 1
  store i32 %inc148, i32* %index, align 4
  br label %for.cond119

for.end149:                                       ; preds = %land.end, %land.end
  %77 = load i32, i32* %N_canonical_linkages, align 4
  %78 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %79 = bitcast %struct.Linkage_info_struct* %78 to i8*
  %80 = bitcast i32 (%struct.Linkage_info_struct*, %struct.Linkage_info_struct*)* @compare_parse to i32 (i8*, i8*)*
  call void @qsort_Package(i8* %79, i32 %77, i32 16, i32 (i8*, i8*)* %80)
  br label %if.end150

if.end150:                                        ; preds = %for.end149, %if.end113, %for.end149, %if.end113
  %81 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.236, i32 0, i32 0
  %struct.BigStruct_227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %81, i8** %struct.BigStruct_227
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %82 = load i32, i32* %N_canonical_linkages, align 4
  %cmp151 = icmp eq i32 %82, 0
  br i1 %cmp151, label %if.then153, label %if.else180

if.then153:                                       ; preds = %if.end150, %if.end150
  %83 = load i32, i32* %mc, align 4
  %cmp154 = icmp eq i32 %83, 42
  br i1 %cmp154, label %if.end179, label %lor.lhs.false156

lor.lhs.false156:                                 ; preds = %if.then153, %if.then153
  %84 = load i32, i32* %mc, align 4
  %cmp157 = icmp eq i32 %84, 35
  br i1 %cmp157, label %if.end179, label %if.then159

if.then159:                                       ; preds = %lor.lhs.false156, %lor.lhs.false156
  %85 = load i32, i32* %last_pass, align 4
  %tobool160 = icmp ne i32 %85, 0
  br i1 %tobool160, label %if.then161, label %if.else177

if.then161:                                       ; preds = %if.then159, %if.then159
  %86 = load i32, i32* %errors, align 4
  %inc162 = add nsw i32 %86, 1
  store i32 %inc162, i32* %errors, align 4
  %87 = load i32, i32* @echo_on, align 4
  %tobool163 = icmp ne i32 %87, 0
  br i1 %tobool163, label %if.else173, label %if.then164

if.then164:                                       ; preds = %if.then161, %if.then161
  %88 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_082 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_082
  %struct.BigStruct_583 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %88, i32* %struct.BigStruct_583
  %struct.BigStruct_884 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_884
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3485 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3485 = load i8*, i8** %struct.BigStruct_3485
  %89 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.237, i32 0, i32 0
  %call166 = call i32 (i8*, ...) @printf(i8* %89, i8* %load_struct.BigStruct_3485)
  %90 = load i32, i32* @echo_on, align 4
  %tobool167 = icmp ne i32 %90, 0
  br i1 %tobool167, label %if.then168, label %if.end170

if.then168:                                       ; preds = %if.then164, %if.then164
  %91 = load i32, i32* %mc, align 4
  %92 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.238, i32 0, i32 0
  %call169 = call i32 (i8*, ...) @printf(i8* %92, i32 %91)
  br label %if.end170

if.end170:                                        ; preds = %if.then168, %if.then164, %if.then168, %if.then164
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx172 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %struct.BigStruct_190 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx172, %struct._iobuf** %struct.BigStruct_190
  %struct.BigStruct_591 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_591
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end176

if.else173:                                       ; preds = %if.then161, %if.then161
  %93 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_078 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_078
  %struct.BigStruct_579 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %93, i32* %struct.BigStruct_579
  %struct.BigStruct_880 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_880
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3481 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3481 = load i8*, i8** %struct.BigStruct_3481
  %94 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.239, i32 0, i32 0
  %call175 = call i32 (i8*, ...) @printf(i8* %94, i8* %load_struct.BigStruct_3481)
  br label %if.end176

if.end176:                                        ; preds = %if.else173, %if.end170, %if.else173, %if.end170
  br label %if.end178

if.else177:                                       ; preds = %if.then159, %if.then159
  br label %if.end178

if.end178:                                        ; preds = %if.else177, %if.end176, %if.else177, %if.end176
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %lor.lhs.false156, %if.then153, %if.end178, %lor.lhs.false156, %if.then153
  br label %if.end317

if.else180:                                       ; preds = %if.end150, %if.end150
  %95 = load i32, i32* %N_valid_linkages, align 4
  %cmp181 = icmp eq i32 %95, 0
  br i1 %cmp181, label %if.then183, label %if.else216

if.then183:                                       ; preds = %if.else180, %if.else180
  %96 = load i32, i32* %mc, align 4
  %cmp184 = icmp eq i32 %96, 43
  br i1 %cmp184, label %if.end215, label %lor.lhs.false186

lor.lhs.false186:                                 ; preds = %if.then183, %if.then183
  %97 = load i32, i32* %mc, align 4
  %cmp187 = icmp eq i32 %97, 42
  br i1 %cmp187, label %if.end215, label %if.then189

if.then189:                                       ; preds = %lor.lhs.false186, %lor.lhs.false186
  %98 = load i32, i32* %last_pass, align 4
  %tobool190 = icmp ne i32 %98, 0
  br i1 %tobool190, label %if.then191, label %if.else213

if.then191:                                       ; preds = %if.then189, %if.then189
  %99 = load i32, i32* %N_canonical_linkages, align 4
  %cmp192 = icmp eq i32 %99, 1
  br i1 %cmp192, label %if.then194, label %if.else197

if.then194:                                       ; preds = %if.then191, %if.then191
  %100 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_074 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_074
  %struct.BigStruct_575 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %100, i32* %struct.BigStruct_575
  %struct.BigStruct_876 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_876
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3477 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3477 = load i8*, i8** %struct.BigStruct_3477
  %101 = getelementptr inbounds [57 x i8], [57 x i8]* @.str.240, i32 0, i32 0
  %call196 = call i32 (i8*, ...) @printf(i8* %101, i8* %load_struct.BigStruct_3477)
  br label %if.end202

if.else197:                                       ; preds = %if.then191, %if.then191
  %102 = load i32, i32* %N_canonical_linkages, align 4
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.241, i32 0, i32 0
  %call198 = call i32 (i8*, ...) @printf(i8* %103, i32 %102)
  %104 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.242, i32 0, i32 0
  %call199 = call i32 (i8*, ...) @printf(i8* %104)
  %105 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_070 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_070
  %struct.BigStruct_571 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %105, i32* %struct.BigStruct_571
  %struct.BigStruct_872 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_872
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3473 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3473 = load i8*, i8** %struct.BigStruct_3473
  %106 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.243, i32 0, i32 0
  %call201 = call i32 (i8*, ...) @printf(i8* %106, i8* %load_struct.BigStruct_3473)
  br label %if.end202

if.end202:                                        ; preds = %if.else197, %if.then194, %if.else197, %if.then194
  %107 = load i32, i32* %errors, align 4
  %inc203 = add nsw i32 %107, 1
  store i32 %inc203, i32* %errors, align 4
  %108 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx204 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %108, i32 0
  %index205 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx204, i32 0, i32 0
  %109 = load i32, i32* %index205, align 4
  %struct.BigStruct_037 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %109, i32* %struct.BigStruct_037
  %struct.BigStruct_538 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_538
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3239 = load i32, i32* %struct.BigStruct_3239
  store i32 %load_struct.BigStruct_3239, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %110 = load i32, i32* %has_fatlinks, align 4
  %tobool207 = icmp ne i32 %110, 0
  br i1 %tobool207, label %if.then208, label %if.else210

if.then208:                                       ; preds = %if.end202, %if.end202
  %struct.BigStruct_2411 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp209, %struct.Linkage_info_struct** %struct.BigStruct_2411
  %struct.BigStruct_2512 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2512
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end212

if.else210:                                       ; preds = %if.end202, %if.end202
  %struct.BigStruct_2421 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp211, %struct.Linkage_info_struct** %struct.BigStruct_2421
  %struct.BigStruct_2522 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2522
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end212

if.end212:                                        ; preds = %if.else210, %if.then208, %if.else210, %if.then208
  br label %if.end214

if.else213:                                       ; preds = %if.then189, %if.then189
  br label %if.end214

if.end214:                                        ; preds = %if.else213, %if.end212, %if.else213, %if.end212
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %lor.lhs.false186, %if.then183, %if.end214, %lor.lhs.false186, %if.then183
  br label %if.end316

if.else216:                                       ; preds = %if.else180, %if.else180
  %111 = load i32, i32* %mc, align 4
  %cmp217 = icmp eq i32 %111, 43
  br i1 %cmp217, label %if.then225, label %lor.lhs.false219

lor.lhs.false219:                                 ; preds = %if.else216, %if.else216
  %112 = load i32, i32* %mc, align 4
  %cmp220 = icmp eq i32 %112, 42
  br i1 %cmp220, label %if.then225, label %lor.lhs.false222

lor.lhs.false222:                                 ; preds = %lor.lhs.false219, %lor.lhs.false219
  %113 = load i32, i32* %mc, align 4
  %cmp223 = icmp eq i32 %113, 35
  br i1 %cmp223, label %if.then225, label %if.else247

if.then225:                                       ; preds = %lor.lhs.false222, %lor.lhs.false219, %if.else216, %lor.lhs.false222, %lor.lhs.false219, %if.else216
  %114 = load i32, i32* %errors, align 4
  %inc226 = add nsw i32 %114, 1
  store i32 %inc226, i32* %errors, align 4
  %115 = load i32, i32* @echo_on, align 4
  %tobool227 = icmp ne i32 %115, 0
  br i1 %tobool227, label %if.else234, label %if.then228

if.then228:                                       ; preds = %if.then225, %if.then225
  %116 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_066 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_066
  %struct.BigStruct_567 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %116, i32* %struct.BigStruct_567
  %struct.BigStruct_868 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_868
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3469 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3469 = load i8*, i8** %struct.BigStruct_3469
  %117 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.244, i32 0, i32 0
  %call230 = call i32 (i8*, ...) @printf(i8* %117, i8* %load_struct.BigStruct_3469)
  %118 = load i32, i32* %mc, align 4
  %119 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.245, i32 0, i32 0
  %call231 = call i32 (i8*, ...) @printf(i8* %119, i32 %118)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_383 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_383
  %arrayidx233 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_383, i32 1
  %struct.BigStruct_192 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx233, %struct._iobuf** %struct.BigStruct_192
  %struct.BigStruct_593 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_593
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end237

if.else234:                                       ; preds = %if.then225, %if.then225
  %120 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_062 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_062
  %struct.BigStruct_563 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %120, i32* %struct.BigStruct_563
  %struct.BigStruct_864 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_864
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3465 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3465 = load i8*, i8** %struct.BigStruct_3465
  %121 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.246, i32 0, i32 0
  %call236 = call i32 (i8*, ...) @printf(i8* %121, i8* %load_struct.BigStruct_3465)
  br label %if.end237

if.end237:                                        ; preds = %if.else234, %if.then228, %if.else234, %if.then228
  store i32 1, i32* %last_pass, align 4
  %122 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx238 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %122, i32 0
  %index239 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx238, i32 0, i32 0
  %123 = load i32, i32* %index239, align 4
  %struct.BigStruct_034 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %123, i32* %struct.BigStruct_034
  %struct.BigStruct_535 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_535
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3236 = load i32, i32* %struct.BigStruct_3236
  store i32 %load_struct.BigStruct_3236, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %124 = load i32, i32* %has_fatlinks, align 4
  %tobool241 = icmp ne i32 %124, 0
  br i1 %tobool241, label %if.then242, label %if.else244

if.then242:                                       ; preds = %if.end237, %if.end237
  %struct.BigStruct_249 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp243, %struct.Linkage_info_struct** %struct.BigStruct_249
  %struct.BigStruct_2510 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2510
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end246

if.else244:                                       ; preds = %if.end237, %if.end237
  %struct.BigStruct_2419 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp245, %struct.Linkage_info_struct** %struct.BigStruct_2419
  %struct.BigStruct_2520 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2520
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end246

if.end246:                                        ; preds = %if.else244, %if.then242, %if.else244, %if.then242
  br label %if.end315

if.else247:                                       ; preds = %lor.lhs.false222, %lor.lhs.false222
  %125 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx248 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %125, i32 0
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx248, i32 0, i32 3
  %126 = load i16, i16* %disjunct_cost, align 4
  %conv249 = sext i16 %126 to i32
  %cmp250 = icmp eq i32 %conv249, 0
  br i1 %cmp250, label %land.lhs.true252, label %if.else284

land.lhs.true252:                                 ; preds = %if.else247, %if.else247
  %127 = load i32, i32* %mc, align 4
  %cmp253 = icmp eq i32 %127, 58
  br i1 %cmp253, label %if.then255, label %if.else284

if.then255:                                       ; preds = %land.lhs.true252, %land.lhs.true252
  %128 = load i32, i32* %errors, align 4
  %inc256 = add nsw i32 %128, 1
  store i32 %inc256, i32* %errors, align 4
  %129 = load i32, i32* @echo_on, align 4
  %tobool257 = icmp ne i32 %129, 0
  br i1 %tobool257, label %if.else264, label %if.then258

if.then258:                                       ; preds = %if.then255, %if.then255
  %130 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_058 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_058
  %struct.BigStruct_559 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %130, i32* %struct.BigStruct_559
  %struct.BigStruct_860 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_860
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3461 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3461 = load i8*, i8** %struct.BigStruct_3461
  %131 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.247, i32 0, i32 0
  %call260 = call i32 (i8*, ...) @printf(i8* %131, i8* %load_struct.BigStruct_3461)
  %132 = load i32, i32* %mc, align 4
  %133 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.248, i32 0, i32 0
  %call261 = call i32 (i8*, ...) @printf(i8* %133, i32 %132)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  %arrayidx263 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_384, i32 1
  %struct.BigStruct_194 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx263, %struct._iobuf** %struct.BigStruct_194
  %struct.BigStruct_595 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_595
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end267

if.else264:                                       ; preds = %if.then255, %if.then255
  %134 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_054 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_054
  %struct.BigStruct_555 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %134, i32* %struct.BigStruct_555
  %struct.BigStruct_856 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_856
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3457 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3457 = load i8*, i8** %struct.BigStruct_3457
  %135 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.249, i32 0, i32 0
  %call266 = call i32 (i8*, ...) @printf(i8* %135, i8* %load_struct.BigStruct_3457)
  br label %if.end267

if.end267:                                        ; preds = %if.else264, %if.then258, %if.else264, %if.then258
  store i32 1, i32* %last_pass, align 4
  %136 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx268 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %136, i32 0
  %disjunct_cost269 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx268, i32 0, i32 3
  %137 = load i16, i16* %disjunct_cost269, align 4
  %conv270 = sext i16 %137 to i32
  %138 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx271 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %138, i32 0
  %N_violations272 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx271, i32 0, i32 1
  %139 = load i16, i16* %N_violations272, align 4
  %conv273 = sext i16 %139 to i32
  %140 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.250, i32 0, i32 0
  %call274 = call i32 (i8*, ...) @printf(i8* %140, i32 %conv273, i32 %conv270)
  %141 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx275 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %141, i32 0
  %index276 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx275, i32 0, i32 0
  %142 = load i32, i32* %index276, align 4
  %struct.BigStruct_031 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %142, i32* %struct.BigStruct_031
  %struct.BigStruct_532 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_532
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3233 = load i32, i32* %struct.BigStruct_3233
  store i32 %load_struct.BigStruct_3233, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %143 = load i32, i32* %has_fatlinks, align 4
  %tobool278 = icmp ne i32 %143, 0
  br i1 %tobool278, label %if.then279, label %if.else281

if.then279:                                       ; preds = %if.end267, %if.end267
  %struct.BigStruct_247 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp280, %struct.Linkage_info_struct** %struct.BigStruct_247
  %struct.BigStruct_258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_258
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end283

if.else281:                                       ; preds = %if.end267, %if.end267
  %struct.BigStruct_2417 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp282, %struct.Linkage_info_struct** %struct.BigStruct_2417
  %struct.BigStruct_2518 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2518
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end283

if.end283:                                        ; preds = %if.else281, %if.then279, %if.else281, %if.then279
  br label %if.end314

if.else284:                                       ; preds = %land.lhs.true252, %if.else247, %land.lhs.true252, %if.else247
  %144 = load i32, i32* %cost_cutoff, align 4
  %cmp285 = icmp eq i32 %144, 1
  br i1 %cmp285, label %land.lhs.true287, label %if.else312

land.lhs.true287:                                 ; preds = %if.else284, %if.else284
  %145 = load i32, i32* %mc, align 4
  %cmp288 = icmp eq i32 %145, 45
  br i1 %cmp288, label %if.then290, label %if.else312

if.then290:                                       ; preds = %land.lhs.true287, %land.lhs.true287
  %146 = load i32, i32* %errors, align 4
  %inc291 = add nsw i32 %146, 1
  store i32 %inc291, i32* %errors, align 4
  %147 = load i32, i32* @echo_on, align 4
  %tobool292 = icmp ne i32 %147, 0
  br i1 %tobool292, label %if.else299, label %if.then293

if.then293:                                       ; preds = %if.then290, %if.then290
  %148 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_050 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_050
  %struct.BigStruct_551 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %148, i32* %struct.BigStruct_551
  %struct.BigStruct_852 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_852
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3453 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3453 = load i8*, i8** %struct.BigStruct_3453
  %149 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.251, i32 0, i32 0
  %call295 = call i32 (i8*, ...) @printf(i8* %149, i8* %load_struct.BigStruct_3453)
  %150 = load i32, i32* %mc, align 4
  %151 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.252, i32 0, i32 0
  %call296 = call i32 (i8*, ...) @printf(i8* %151, i32 %150)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_385 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_385
  %arrayidx298 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_385, i32 1
  %struct.BigStruct_196 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx298, %struct._iobuf** %struct.BigStruct_196
  %struct.BigStruct_597 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_597
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end302

if.else299:                                       ; preds = %if.then290, %if.then290
  %152 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_047 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_047
  %struct.BigStruct_548 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %152, i32* %struct.BigStruct_548
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3449 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3449 = load i8*, i8** %struct.BigStruct_3449
  %153 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.253, i32 0, i32 0
  %call301 = call i32 (i8*, ...) @printf(i8* %153, i8* %load_struct.BigStruct_3449)
  br label %if.end302

if.end302:                                        ; preds = %if.else299, %if.then293, %if.else299, %if.then293
  store i32 1, i32* %last_pass, align 4
  %154 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx303 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %154, i32 0
  %index304 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx303, i32 0, i32 0
  %155 = load i32, i32* %index304, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %155, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3230 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3230 = load i32, i32* %struct.BigStruct_3230
  store i32 %load_struct.BigStruct_3230, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %156 = load i32, i32* %has_fatlinks, align 4
  %tobool306 = icmp ne i32 %156, 0
  br i1 %tobool306, label %if.then307, label %if.else309

if.then307:                                       ; preds = %if.end302, %if.end302
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp308, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end311

if.else309:                                       ; preds = %if.end302, %if.end302
  %struct.BigStruct_2415 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp310, %struct.Linkage_info_struct** %struct.BigStruct_2415
  %struct.BigStruct_2516 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2516
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end311

if.end311:                                        ; preds = %if.else309, %if.then307, %if.else309, %if.then307
  br label %if.end313

if.else312:                                       ; preds = %land.lhs.true287, %if.else284, %land.lhs.true287, %if.else284
  store i32 1, i32* %last_pass, align 4
  br label %if.end313

if.end313:                                        ; preds = %if.else312, %if.end311, %if.else312, %if.end311
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %if.end283, %if.end313, %if.end283
  br label %if.end315

if.end315:                                        ; preds = %if.end314, %if.end246, %if.end314, %if.end246
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %if.end215, %if.end315, %if.end215
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.end179, %if.end316, %if.end179
  %157 = load i32, i32* %N_linkages, align 4
  %cmp318 = icmp ne i32 %157, 0
  br i1 %cmp318, label %if.then320, label %if.end322

if.then320:                                       ; preds = %if.end317, %if.end317
  %158 = load i32, i32* %N_linkages, align 4
  %mul321 = mul i32 %158, 16
  %159 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %160 = bitcast %struct.Linkage_info_struct* %159 to i8*
  call void @xfree(i8* %160, i32 %mul321)
  br label %if.end322

if.end322:                                        ; preds = %if.then320, %if.end317, %if.then320, %if.end317
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_386 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_386
  %arrayidx324 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_386, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx324, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %161 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.254, i32 0, i32 0
  %struct.BigStruct_226 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %161, i8** %struct.BigStruct_226
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 130, i32 9)
  %162 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.255, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %162, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %163 = load i32, i32* @verbosity, align 4
  %cmp326 = icmp sgt i32 %163, 2
  br i1 %cmp326, label %if.then328, label %if.end329

if.then328:                                       ; preds = %while.end, %while.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 121, i32 10)
  br label %if.end329

if.end329:                                        ; preds = %if.then328, %while.end, %if.then328, %while.end
  %164 = load i32, i32* @space_in_use, align 4
  %cmp330 = icmp ne i32 %164, 0
  br i1 %cmp330, label %if.then332, label %if.end334

if.then332:                                       ; preds = %if.end329, %if.end329
  %165 = load i32, i32* @space_in_use, align 4
  %166 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.256, i32 0, i32 0
  %call333 = call i32 (i8*, ...) @printf(i8* %166, i32 %165)
  br label %if.end334

if.end334:                                        ; preds = %if.then332, %if.end329, %if.then332, %if.end329
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 171, i32 10)
  br label %for.cond

for.end335:                                       ; preds = %if.then, %if.then
  %167 = load i32, i32* %errors, align 4
  %cmp336 = icmp eq i32 %167, 0
  br i1 %cmp336, label %if.then338, label %if.else340

if.then338:                                       ; preds = %for.end335, %for.end335
  %168 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.257, i32 0, i32 0
  %call339 = call i32 (i8*, ...) @printf(i8* %168)
  br label %if.end348

if.else340:                                       ; preds = %for.end335, %for.end335
  %169 = load i32, i32* %errors, align 4
  %cmp341 = icmp eq i32 %169, 1
  br i1 %cmp341, label %if.then343, label %if.else345

if.then343:                                       ; preds = %if.else340, %if.else340
  %170 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.258, i32 0, i32 0
  %call344 = call i32 (i8*, ...) @printf(i8* %170)
  br label %if.end347

if.else345:                                       ; preds = %if.else340, %if.else340
  %171 = load i32, i32* %errors, align 4
  %172 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.259, i32 0, i32 0
  %call346 = call i32 (i8*, ...) @printf(i8* %172, i32 %171)
  br label %if.end347

if.end347:                                        ; preds = %if.else345, %if.then343, %if.else345, %if.then343
  br label %if.end348

if.end348:                                        ; preds = %if.end347, %if.then338, %if.end347, %if.then338
  ret void
}

; Function Attrs: noinline nounwind
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @"\01?MultiThreadForOthread@@YAXH@Z"(i32 11)
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 0
  %ptr2intCaller = ptrtoint void ()* @putc_Package_Clear to i32
  store i32 %ptr2intCaller, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA12" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 1
  %ptr2intCaller13 = ptrtoint void ()* @strictly_smaller_name_Clear to i32
  store i32 %ptr2intCaller13, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA12"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA14" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 2
  %ptr2intCaller15 = ptrtoint void ()* @find_subdisjunct_Clear to i32
  store i32 %ptr2intCaller15, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA14"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA16" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 3
  %ptr2intCaller17 = ptrtoint void ()* @strncpy_Package_Clear to i32
  store i32 %ptr2intCaller17, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA16"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA18" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 4
  %ptr2intCaller19 = ptrtoint void ()* @isalpha_Package_Clear to i32
  store i32 %ptr2intCaller19, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA18"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA20" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 5
  %ptr2intCaller21 = ptrtoint void ()* @pseudocount_Clear to i32
  store i32 %ptr2intCaller21, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA20"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA22" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 6
  %ptr2intCaller23 = ptrtoint void ()* @print_a_link_Clear to i32
  store i32 %ptr2intCaller23, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA22"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA24" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 7
  %ptr2intCaller25 = ptrtoint void ()* @compute_pp_link_names_Clear to i32
  store i32 %ptr2intCaller25, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA24"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA26" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 8
  %ptr2intCaller27 = ptrtoint void ()* @strictly_smaller_Clear to i32
  store i32 %ptr2intCaller27, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA26"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA28" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 9
  %ptr2intCaller29 = ptrtoint void ()* @compute_pp_link_array_connectors_Clear to i32
  store i32 %ptr2intCaller29, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA28"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA30" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 10
  %ptr2intCaller31 = ptrtoint void ()* @issue_sentence_word_Clear to i32
  store i32 %ptr2intCaller31, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA30"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA32" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 11
  %ptr2intCaller33 = ptrtoint void ()* @build_graph_Clear to i32
  store i32 %ptr2intCaller33, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA32"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA34" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 12
  %ptr2intCaller35 = ptrtoint void ()* @build_domains_Clear to i32
  store i32 %ptr2intCaller35, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA34"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA36" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 13
  %ptr2intCaller37 = ptrtoint void ()* @build_domain_forest_Clear to i32
  store i32 %ptr2intCaller37, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA36"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA38" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 14
  %ptr2intCaller39 = ptrtoint void ()* @free_post_processing_structures_Clear to i32
  store i32 %ptr2intCaller39, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA38"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA40" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 15
  %ptr2intCaller41 = ptrtoint void ()* @domain_bounded_Clear to i32
  store i32 %ptr2intCaller41, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA40"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA42" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 16
  %ptr2intCaller43 = ptrtoint void ()* @contains_none_Clear to i32
  store i32 %ptr2intCaller43, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA42"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA44" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 17
  %ptr2intCaller45 = ptrtoint void ()* @contains_one_Clear to i32
  store i32 %ptr2intCaller45, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA44"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA46" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 18
  %ptr2intCaller47 = ptrtoint void ()* @is_connected_without_Clear to i32
  store i32 %ptr2intCaller47, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA46"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA48" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 19
  %ptr2intCaller49 = ptrtoint void ()* @is_connected_Clear to i32
  store i32 %ptr2intCaller49, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA48"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA50" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 20
  %ptr2intCaller51 = ptrtoint void ()* @build_type_array_Clear to i32
  store i32 %ptr2intCaller51, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA50"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA52" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 21
  %ptr2intCaller53 = ptrtoint void ()* @bogus_pp_node_Clear to i32
  store i32 %ptr2intCaller53, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA52"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA54" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 22
  %ptr2intCaller55 = ptrtoint void ()* @issue_violation_Clear to i32
  store i32 %ptr2intCaller55, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA54"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA56" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 23
  %ptr2intCaller57 = ptrtoint void ()* @post_process_Clear to i32
  store i32 %ptr2intCaller57, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA56"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA58" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 24
  %ptr2intCaller59 = ptrtoint void ()* @clean_up_Clear to i32
  store i32 %ptr2intCaller59, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA58"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA60" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 25
  %ptr2intCaller61 = ptrtoint void ()* @disjuncts_equal_Clear to i32
  store i32 %ptr2intCaller61, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA60"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA62" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 26
  %ptr2intCaller63 = ptrtoint void ()* @clean_table_Clear to i32
  store i32 %ptr2intCaller63, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA62"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA64" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 27
  %ptr2intCaller65 = ptrtoint void ()* @true_dict_match_Clear to i32
  store i32 %ptr2intCaller65, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA64"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA66" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 28
  %ptr2intCaller67 = ptrtoint void ()* @cost_for_length_Clear to i32
  store i32 %ptr2intCaller67, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA66"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA68" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 2, i32 29
  %ptr2intCaller69 = ptrtoint void ()* @__iob_func_Package_Clear to i32
  store i32 %ptr2intCaller69, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA68"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA70" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 30
  %ptr2intCaller71 = ptrtoint void ()* @extract_all_fat_links_Clear to i32
  store i32 %ptr2intCaller71, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA70"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA72" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 31
  %ptr2intCaller73 = ptrtoint void ()* @free_image_array_Clear to i32
  store i32 %ptr2intCaller73, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA72"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA74" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 32
  %ptr2intCaller75 = ptrtoint void ()* @build_disjuncts_for_X_node_Clear to i32
  store i32 %ptr2intCaller75, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA74"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA76" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 33
  %ptr2intCaller77 = ptrtoint void ()* @right_disjunct_list_length_Clear to i32
  store i32 %ptr2intCaller77, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA76"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA78" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 34
  %ptr2intCaller79 = ptrtoint void ()* @put_into_match_table_Clear to i32
  store i32 %ptr2intCaller79, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA78"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA80" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 35
  %ptr2intCaller81 = ptrtoint void ()* @tolower_Package_Clear to i32
  store i32 %ptr2intCaller81, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA80"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA82" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 36
  %ptr2intCaller83 = ptrtoint void ()* @toupper_Package_Clear to i32
  store i32 %ptr2intCaller83, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA82"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA84" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 37
  %ptr2intCaller85 = ptrtoint void ()* @conj_in_range_Clear to i32
  store i32 %ptr2intCaller85, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA84"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA86" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 38
  %ptr2intCaller87 = ptrtoint void ()* @free_PP_node_Clear to i32
  store i32 %ptr2intCaller87, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA86"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA88" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 39
  %ptr2intCaller89 = ptrtoint void ()* @set_centers_Clear to i32
  store i32 %ptr2intCaller89, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA88"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA90" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 40
  %ptr2intCaller91 = ptrtoint void ()* @print_postscript_data_Clear to i32
  store i32 %ptr2intCaller91, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA90"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA92" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 41
  %ptr2intCaller93 = ptrtoint void ()* @print_links_graphically_Clear to i32
  store i32 %ptr2intCaller93, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA92"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA94" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 42
  %ptr2intCaller95 = ptrtoint void ()* @old_hash_disjunct_Clear to i32
  store i32 %ptr2intCaller95, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA94"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA96" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 43
  %ptr2intCaller97 = ptrtoint void ()* @clean_up_expressions_Clear to i32
  store i32 %ptr2intCaller97, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA96"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA98" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 44
  %ptr2intCaller99 = ptrtoint void ()* @free_lookup_list_Clear to i32
  store i32 %ptr2intCaller99, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA98"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA100" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 45
  %ptr2intCaller101 = ptrtoint void ()* @prune_lookup_list_Clear to i32
  store i32 %ptr2intCaller101, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA100"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA102" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 3, i32 46
  %ptr2intCaller103 = ptrtoint void ()* @boolean_dictionary_lookup_Clear to i32
  store i32 %ptr2intCaller103, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA102"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA104" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 47
  %ptr2intCaller105 = ptrtoint void ()* @set_parent_of_node_Clear to i32
  store i32 %ptr2intCaller105, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA104"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA106" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 48
  %ptr2intCaller107 = ptrtoint void ()* @build_digraph_Clear to i32
  store i32 %ptr2intCaller107, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA106"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA108" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 49
  %ptr2intCaller109 = ptrtoint void ()* @build_DIS_CON_tree_Clear to i32
  store i32 %ptr2intCaller109, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA108"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA110" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 50
  %ptr2intCaller111 = ptrtoint void ()* @free_digraph_Clear to i32
  store i32 %ptr2intCaller111, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA110"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA112" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 51
  %ptr2intCaller113 = ptrtoint void ()* @print_links_Clear to i32
  store i32 %ptr2intCaller113, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA112"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA114" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 52
  %ptr2intCaller115 = ptrtoint void ()* @print_links_and_domains_Clear to i32
  store i32 %ptr2intCaller115, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA114"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA116" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 53
  %ptr2intCaller117 = ptrtoint void ()* @and_cost_Clear to i32
  store i32 %ptr2intCaller117, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA116"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA118" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 54
  %ptr2intCaller119 = ptrtoint void ()* @link_cost_Clear to i32
  store i32 %ptr2intCaller119, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA118"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA120" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 55
  %ptr2intCaller121 = ptrtoint void ()* @disjunct_cost_Clear to i32
  store i32 %ptr2intCaller121, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA120"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA122" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 56
  %ptr2intCaller123 = ptrtoint void ()* @compute_link_names_Clear to i32
  store i32 %ptr2intCaller123, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA122"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA124" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 3, i32 57
  %ptr2intCaller125 = ptrtoint void ()* @analyze_fat_linkage_Clear to i32
  store i32 %ptr2intCaller125, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA124"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA126" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 58
  %ptr2intCaller127 = ptrtoint void ()* @null_cost_Clear to i32
  store i32 %ptr2intCaller127, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA126"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA128" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 59
  %ptr2intCaller129 = ptrtoint void ()* @fflush_Package_Clear to i32
  store i32 %ptr2intCaller129, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA128"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA130" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 3, i32 60
  %ptr2intCaller131 = ptrtoint void ()* @analyze_thin_linkage_Clear to i32
  store i32 %ptr2intCaller131, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA130"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA132" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 61
  %ptr2intCaller133 = ptrtoint void ()* @compute_matchers_for_a_label_Clear to i32
  store i32 %ptr2intCaller133, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA132"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA134" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 62
  %ptr2intCaller135 = ptrtoint void ()* @explode_disjunct_list_Clear to i32
  store i32 %ptr2intCaller135, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA134"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA136" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 63
  %ptr2intCaller137 = ptrtoint void ()* @build_COMMA_disjunct_list_Clear to i32
  store i32 %ptr2intCaller137, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA136"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA138" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 64
  %ptr2intCaller139 = ptrtoint void ()* @build_AND_disjunct_list_Clear to i32
  store i32 %ptr2intCaller139, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA138"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA140" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 65
  %ptr2intCaller141 = ptrtoint void ()* @set_has_fat_down_Clear to i32
  store i32 %ptr2intCaller141, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA140"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA142" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 66
  %ptr2intCaller143 = ptrtoint void ()* @build_image_array_Clear to i32
  store i32 %ptr2intCaller143, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA142"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA144" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 67
  %ptr2intCaller145 = ptrtoint void ()* @is_canonical_linkage_Clear to i32
  store i32 %ptr2intCaller145, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA144"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA146" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 68
  %ptr2intCaller147 = ptrtoint void ()* @initialize_links_Clear to i32
  store i32 %ptr2intCaller147, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA146"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA148" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 69
  %ptr2intCaller149 = ptrtoint void ()* @extract_links_Clear to i32
  store i32 %ptr2intCaller149, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA148"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA150" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 70
  %ptr2intCaller151 = ptrtoint void ()* @left_disjunct_list_length_Clear to i32
  store i32 %ptr2intCaller151, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA150"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA152" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 71
  %ptr2intCaller153 = ptrtoint void ()* @free_fast_matcher_Clear to i32
  store i32 %ptr2intCaller153, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA152"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA154" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 72
  %ptr2intCaller155 = ptrtoint void ()* @init_fast_matcher_Clear to i32
  store i32 %ptr2intCaller155, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA154"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA156" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 73
  %ptr2intCaller157 = ptrtoint void ()* @contains_underbar_Clear to i32
  store i32 %ptr2intCaller157, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA156"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA158" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 74
  %ptr2intCaller159 = ptrtoint void ()* @max_postfix_found_Clear to i32
  store i32 %ptr2intCaller159, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA158"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA160" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 3, i32 75
  %ptr2intCaller161 = ptrtoint void ()* @build_idiom_word_name_Clear to i32
  store i32 %ptr2intCaller161, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA160"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA162" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 76
  %ptr2intCaller163 = ptrtoint void ()* @increment_current_name_Clear to i32
  store i32 %ptr2intCaller163, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA162"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA164" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 77
  %ptr2intCaller165 = ptrtoint void ()* @generate_id_connector_Clear to i32
  store i32 %ptr2intCaller165, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA164"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA166" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 4, i32 78
  %ptr2intCaller167 = ptrtoint void ()* @separate_word_Clear to i32
  store i32 %ptr2intCaller167, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA166"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA168" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 79
  %ptr2intCaller169 = ptrtoint void ()* @strchr_Package_Clear to i32
  store i32 %ptr2intCaller169, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA168"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA170" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 80
  %ptr2intCaller171 = ptrtoint void ()* @print_time_Clear to i32
  store i32 %ptr2intCaller171, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA170"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA172" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 3, i32 81
  %ptr2intCaller173 = ptrtoint void ()* @compute_linkage_arrays_Clear to i32
  store i32 %ptr2intCaller173, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA172"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA174" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 82
  %ptr2intCaller175 = ptrtoint void ()* @fgets_Package_Clear to i32
  store i32 %ptr2intCaller175, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA174"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA176" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 83
  %ptr2intCaller177 = ptrtoint void ()* @glom_comma_connector_Clear to i32
  store i32 %ptr2intCaller177, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA176"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA178" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 84
  %ptr2intCaller179 = ptrtoint void ()* @glom_aux_connector_Clear to i32
  store i32 %ptr2intCaller179, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA178"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA180" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 85
  %ptr2intCaller181 = ptrtoint void ()* @add_one_connector_Clear to i32
  store i32 %ptr2intCaller181, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA180"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA182" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 86
  %ptr2intCaller183 = ptrtoint void ()* @special_disjunct_Clear to i32
  store i32 %ptr2intCaller183, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA182"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA184" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 87
  %ptr2intCaller185 = ptrtoint void ()* @init_table_Clear to i32
  store i32 %ptr2intCaller185, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA184"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA186" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 88
  %ptr2intCaller187 = ptrtoint void ()* @free_table_Clear to i32
  store i32 %ptr2intCaller187, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA186"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA188" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 89
  %ptr2intCaller189 = ptrtoint void ()* @table_update_Clear to i32
  store i32 %ptr2intCaller189, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA188"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA190" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 90
  %ptr2intCaller191 = ptrtoint void ()* @compute_chosen_words_Clear to i32
  store i32 %ptr2intCaller191, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA190"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA192" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 91
  %ptr2intCaller193 = ptrtoint void ()* @print_disjunct_counts_Clear to i32
  store i32 %ptr2intCaller193, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA192"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA194" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 92
  %ptr2intCaller195 = ptrtoint void ()* @free_S_Clear to i32
  store i32 %ptr2intCaller195, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA194"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA196" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 93
  %ptr2intCaller197 = ptrtoint void ()* @count_disjuncts_Clear to i32
  store i32 %ptr2intCaller197, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA196"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA198" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 94
  %ptr2intCaller199 = ptrtoint void ()* @eliminate_duplicate_disjuncts_Clear to i32
  store i32 %ptr2intCaller199, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA198"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA200" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 95
  %ptr2intCaller201 = ptrtoint void ()* @left_connector_count_Clear to i32
  store i32 %ptr2intCaller201, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA200"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA202" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 96
  %ptr2intCaller203 = ptrtoint void ()* @free_power_tables_Clear to i32
  store i32 %ptr2intCaller203, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA202"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA204" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 97
  %ptr2intCaller205 = ptrtoint void ()* @get_character_Clear to i32
  store i32 %ptr2intCaller205, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA204"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA206" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 98
  %ptr2intCaller207 = ptrtoint void ()* @isalnum_Package_Clear to i32
  store i32 %ptr2intCaller207, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA206"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA208" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 99
  %ptr2intCaller209 = ptrtoint void ()* @free_X_nodes_Clear to i32
  store i32 %ptr2intCaller209, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA208"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA210" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 1, i32 100
  %ptr2intCaller211 = ptrtoint void ()* @get_a_word_Clear to i32
  store i32 %ptr2intCaller211, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA210"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA212" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 0, i32 101
  %ptr2intCaller213 = ptrtoint void ()* @fclose_Package_Clear to i32
  store i32 %ptr2intCaller213, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA212"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA214" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 102
  %ptr2intCaller215 = ptrtoint void ()* @init_LT_Clear to i32
  store i32 %ptr2intCaller215, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA214"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA216" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 103
  %ptr2intCaller217 = ptrtoint void ()* @init_HT_Clear to i32
  store i32 %ptr2intCaller217, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA216"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA218" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 104
  %ptr2intCaller219 = ptrtoint void ()* @free_HT_Clear to i32
  store i32 %ptr2intCaller219, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA218"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA220" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 105
  %ptr2intCaller221 = ptrtoint void ()* @free_LT_Clear to i32
  store i32 %ptr2intCaller221, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA220"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA222" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 106
  %ptr2intCaller223 = ptrtoint void ()* @free_AND_tables_Clear to i32
  store i32 %ptr2intCaller223, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA222"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA224" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 107
  %ptr2intCaller225 = ptrtoint void ()* @build_conjunction_tables_Clear to i32
  store i32 %ptr2intCaller225, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA224"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA226" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 108
  %ptr2intCaller227 = ptrtoint void ()* @print_AND_statistics_Clear to i32
  store i32 %ptr2intCaller227, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA226"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA228" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 109
  %ptr2intCaller229 = ptrtoint void ()* @build_disjuncts_for_dict_node_Clear to i32
  store i32 %ptr2intCaller229, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA228"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA230" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 110
  %ptr2intCaller231 = ptrtoint void ()* @build_word_expressions_Clear to i32
  store i32 %ptr2intCaller231, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA230"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA232" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 111
  %ptr2intCaller233 = ptrtoint void ()* @build_sentence_disjuncts_Clear to i32
  store i32 %ptr2intCaller233, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA232"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA234" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 112
  %ptr2intCaller235 = ptrtoint void ()* @is_idiom_string_Clear to i32
  store i32 %ptr2intCaller235, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA234"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA236" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 113
  %ptr2intCaller237 = ptrtoint void ()* @make_idiom_Dict_nodes_Clear to i32
  store i32 %ptr2intCaller237, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA236"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA238" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 114
  %ptr2intCaller239 = ptrtoint void ()* @insert_idiom_Clear to i32
  store i32 %ptr2intCaller239, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA238"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA240" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 115
  %ptr2intCaller241 = ptrtoint void ()* @isnumber_Clear to i32
  store i32 %ptr2intCaller241, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA240"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA242" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 116
  %ptr2intCaller243 = ptrtoint void ()* @ishyphenated_Clear to i32
  store i32 %ptr2intCaller243, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA242"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA244" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 117
  %ptr2intCaller245 = ptrtoint void ()* @free_sentence_disjuncts_Clear to i32
  store i32 %ptr2intCaller245, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA244"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA246" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 118
  %ptr2intCaller247 = ptrtoint void ()* @free_sentence_expressions_Clear to i32
  store i32 %ptr2intCaller247, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA246"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA248" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 119
  %ptr2intCaller249 = ptrtoint void ()* @special_string_Clear to i32
  store i32 %ptr2intCaller249, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA248"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA250" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 120
  %ptr2intCaller251 = ptrtoint void ()* @handle_unknown_word_Clear to i32
  store i32 %ptr2intCaller251, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA250"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA252" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 121
  %ptr2intCaller253 = ptrtoint void ()* @print_statistics_Clear to i32
  store i32 %ptr2intCaller253, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA252"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA254" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 122
  %ptr2intCaller255 = ptrtoint void ()* @sentence_contains_Clear to i32
  store i32 %ptr2intCaller255, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA254"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA256" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 123
  %ptr2intCaller257 = ptrtoint void ()* @set_is_conjunction_Clear to i32
  store i32 %ptr2intCaller257, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA256"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA258" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 124
  %ptr2intCaller259 = ptrtoint void ()* @sentence_contains_conjunction_Clear to i32
  store i32 %ptr2intCaller259, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA258"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA260" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 125
  %ptr2intCaller261 = ptrtoint void ()* @build_deletable_Clear to i32
  store i32 %ptr2intCaller261, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA260"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA262" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 126
  %ptr2intCaller263 = ptrtoint void ()* @free_deletable_Clear to i32
  store i32 %ptr2intCaller263, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA262"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA264" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 127
  %ptr2intCaller265 = ptrtoint void ()* @install_fat_connectors_Clear to i32
  store i32 %ptr2intCaller265, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA264"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA266" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 8, i32 128
  %ptr2intCaller267 = ptrtoint void ()* @prepare_to_parse_Clear to i32
  store i32 %ptr2intCaller267, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA266"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA268" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 8, i32 129
  %ptr2intCaller269 = ptrtoint void ()* @unprepare_parse_Clear to i32
  store i32 %ptr2intCaller269, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA268"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA270" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 130
  %ptr2intCaller271 = ptrtoint void ()* @final_unprepare_parse_Clear to i32
  store i32 %ptr2intCaller271, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA270"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA272" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 131
  %ptr2intCaller273 = ptrtoint void ()* @summary_line_Clear to i32
  store i32 %ptr2intCaller273, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA272"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA274" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 132
  %ptr2intCaller275 = ptrtoint void ()* @stage_name_Clear to i32
  store i32 %ptr2intCaller275, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA274"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA276" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 133
  %ptr2intCaller277 = ptrtoint void ()* @construct_comma_Clear to i32
  store i32 %ptr2intCaller277, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA276"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA278" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 134
  %ptr2intCaller279 = ptrtoint void ()* @construct_either_Clear to i32
  store i32 %ptr2intCaller279, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA278"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA280" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 135
  %ptr2intCaller281 = ptrtoint void ()* @construct_neither_Clear to i32
  store i32 %ptr2intCaller281, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA280"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA282" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 136
  %ptr2intCaller283 = ptrtoint void ()* @construct_notonlybut_Clear to i32
  store i32 %ptr2intCaller283, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA282"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA284" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 137
  %ptr2intCaller285 = ptrtoint void ()* @construct_both_Clear to i32
  store i32 %ptr2intCaller285, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA284"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA286" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 138
  %ptr2intCaller287 = ptrtoint void ()* @parse_Clear to i32
  store i32 %ptr2intCaller287, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA286"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA288" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 139
  %ptr2intCaller289 = ptrtoint void ()* @conjunction_prune_Clear to i32
  store i32 %ptr2intCaller289, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA288"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA290" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 140
  %ptr2intCaller291 = ptrtoint void ()* @print_expression_sizes_Clear to i32
  store i32 %ptr2intCaller291, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA290"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA292" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 141
  %ptr2intCaller293 = ptrtoint void ()* @print_sentence_Clear to i32
  store i32 %ptr2intCaller293, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA292"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA294" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 142
  %ptr2intCaller295 = ptrtoint void ()* @zero_S_Clear to i32
  store i32 %ptr2intCaller295, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA294"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA296" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 143
  %ptr2intCaller297 = ptrtoint void ()* @count_disjuncts_in_sentence_Clear to i32
  store i32 %ptr2intCaller297, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA296"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA298" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 144
  %ptr2intCaller299 = ptrtoint void ()* @prune_Clear to i32
  store i32 %ptr2intCaller299, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA298"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA300" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 145
  %ptr2intCaller301 = ptrtoint void ()* @init_power_Clear to i32
  store i32 %ptr2intCaller301, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA300"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA302" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 146
  %ptr2intCaller303 = ptrtoint void ()* @power_prune_Clear to i32
  store i32 %ptr2intCaller303, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA302"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA304" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 147
  %ptr2intCaller305 = ptrtoint void ()* @warning_Clear to i32
  store i32 %ptr2intCaller305, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA304"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA306" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 148
  %ptr2intCaller307 = ptrtoint void ()* @is_equal_Clear to i32
  store i32 %ptr2intCaller307, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA306"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA308" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 149
  %ptr2intCaller309 = ptrtoint void ()* @copy_string_Clear to i32
  store i32 %ptr2intCaller309, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA308"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA310" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 150
  %ptr2intCaller311 = ptrtoint void ()* @check_connector_Clear to i32
  store i32 %ptr2intCaller311, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA310"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA312" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 151
  %ptr2intCaller313 = ptrtoint void ()* @connector_Clear to i32
  store i32 %ptr2intCaller313, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA312"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA314" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 152
  %ptr2intCaller315 = ptrtoint void ()* @abridged_lookup_Clear to i32
  store i32 %ptr2intCaller315, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA314"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA316" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 153
  %ptr2intCaller317 = ptrtoint void ()* @make_unary_node_Clear to i32
  store i32 %ptr2intCaller317, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA316"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA318" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 154
  %ptr2intCaller319 = ptrtoint void ()* @make_zeroary_node_Clear to i32
  store i32 %ptr2intCaller319, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA318"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA320" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 155
  %ptr2intCaller321 = ptrtoint void ()* @make_optional_node_Clear to i32
  store i32 %ptr2intCaller321, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA320"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA322" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 156
  %ptr2intCaller323 = ptrtoint void ()* @delete_dictionary_words_Clear to i32
  store i32 %ptr2intCaller323, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA322"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA324" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 157
  %ptr2intCaller325 = ptrtoint void ()* @fopen_Package_Clear to i32
  store i32 %ptr2intCaller325, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA324"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA326" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 158
  %ptr2intCaller327 = ptrtoint void ()* @strncasecmp_Clear to i32
  store i32 %ptr2intCaller327, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA326"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA328" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 159
  %ptr2intCaller329 = ptrtoint void ()* @free_strings_Clear to i32
  store i32 %ptr2intCaller329, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA328"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA330" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 160
  %ptr2intCaller331 = ptrtoint void ()* @read_word_file_Clear to i32
  store i32 %ptr2intCaller331, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA330"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA332" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 161
  %ptr2intCaller333 = ptrtoint void ()* @output_dictionary_Clear to i32
  store i32 %ptr2intCaller333, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA332"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA334" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 162
  %ptr2intCaller335 = ptrtoint void ()* @maxcost_of_sentence_Clear to i32
  store i32 %ptr2intCaller335, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA334"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA336" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 163
  %ptr2intCaller337 = ptrtoint void ()* @separate_sentence_Clear to i32
  store i32 %ptr2intCaller337, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA336"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA338" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 8, i32 164
  %ptr2intCaller339 = ptrtoint void ()* @build_sentence_expressions_Clear to i32
  store i32 %ptr2intCaller339, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA338"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA340" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 165
  %ptr2intCaller341 = ptrtoint void ()* @clean_up_string_Clear to i32
  store i32 %ptr2intCaller341, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA340"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA342" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 166
  %ptr2intCaller343 = ptrtoint void ()* @is_numerical_rhs_Clear to i32
  store i32 %ptr2intCaller343, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA342"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA344" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 167
  %ptr2intCaller345 = ptrtoint void ()* @massage_variables_Clear to i32
  store i32 %ptr2intCaller345, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA344"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA346" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 168
  %ptr2intCaller347 = ptrtoint void ()* @special_command_Clear to i32
  store i32 %ptr2intCaller347, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA346"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA348" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 169
  %ptr2intCaller349 = ptrtoint void ()* @sentence_in_dictionary_Clear to i32
  store i32 %ptr2intCaller349, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA348"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA350" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 170
  %ptr2intCaller351 = ptrtoint void ()* @clear_time_Clear to i32
  store i32 %ptr2intCaller351, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA350"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA352" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 171
  %ptr2intCaller353 = ptrtoint void ()* @print_total_time_Clear to i32
  store i32 %ptr2intCaller353, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA352"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA354" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 172
  %ptr2intCaller355 = ptrtoint void ()* @first_prepare_to_parse_Clear to i32
  store i32 %ptr2intCaller355, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA354"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA356" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 173
  %ptr2intCaller357 = ptrtoint void ()* @size_of_sentence_expressions_Clear to i32
  store i32 %ptr2intCaller357, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA356"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA358" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 8, i32 174
  %ptr2intCaller359 = ptrtoint void ()* @expression_prune_Clear to i32
  store i32 %ptr2intCaller359, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA358"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA360" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 8, i32 175
  %ptr2intCaller361 = ptrtoint void ()* @read_entry_Clear to i32
  store i32 %ptr2intCaller361, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA360"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA362" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 176
  %ptr2intCaller363 = ptrtoint void ()* @rand_Package_Clear to i32
  store i32 %ptr2intCaller363, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA362"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA364" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 177
  %ptr2intCaller365 = ptrtoint void ()* @catenate_X_nodes_Clear to i32
  store i32 %ptr2intCaller365, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA364"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA366" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 8, i32 178
  %ptr2intCaller367 = ptrtoint void ()* @save_files_Clear to i32
  store i32 %ptr2intCaller367, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA366"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA368" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 179
  %ptr2intCaller369 = ptrtoint void ()* @files_need_saving_Clear to i32
  store i32 %ptr2intCaller369, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA368"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA370" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 180
  %ptr2intCaller371 = ptrtoint void ()* @malloc_Package_Clear to i32
  store i32 %ptr2intCaller371, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA370"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA372" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 7, i32 181
  %ptr2intCaller373 = ptrtoint void ()* @abort_Package_Clear to i32
  store i32 %ptr2intCaller373, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA372"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA374" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 182
  %ptr2intCaller375 = ptrtoint void ()* @init_andable_hash_table_Clear to i32
  store i32 %ptr2intCaller375, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA374"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA376" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 6, i32 183
  %ptr2intCaller377 = ptrtoint void ()* @loop_Clear to i32
  store i32 %ptr2intCaller377, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA376"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA378" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 6, i32 184
  %ptr2intCaller379 = ptrtoint void ()* @batch_process_Clear to i32
  store i32 %ptr2intCaller379, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA378"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA380" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 6, i32 185
  %ptr2intCaller381 = ptrtoint void ()* @read_dictionary_Clear to i32
  store i32 %ptr2intCaller381, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA380"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA382" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 186
  %ptr2intCaller383 = ptrtoint void ()* @open_dictionary_Clear to i32
  store i32 %ptr2intCaller383, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA382"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA384" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 187
  %ptr2intCaller385 = ptrtoint void ()* @init_randtable_Clear to i32
  store i32 %ptr2intCaller385, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA384"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA386" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 188
  %ptr2intCaller387 = ptrtoint void ()* @srand_Package_Clear to i32
  store i32 %ptr2intCaller387, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA386"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA388" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 9, i32 189
  %ptr2intCaller389 = ptrtoint void ()* @initialize_memory_Clear to i32
  store i32 %ptr2intCaller389, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA388"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA390" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 190
  %ptr2intCaller391 = ptrtoint void ()* @print_connector_list_Clear to i32
  store i32 %ptr2intCaller391, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA390"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA392" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 191
  %ptr2intCaller393 = ptrtoint void ()* @print_Tconnector_list_Clear to i32
  store i32 %ptr2intCaller393, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA392"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA394" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 192
  %ptr2intCaller395 = ptrtoint void ()* @print_domain_Clear to i32
  store i32 %ptr2intCaller395, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA394"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA396" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 193
  %ptr2intCaller397 = ptrtoint void ()* @post_process_match_Clear to i32
  store i32 %ptr2intCaller397, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA396"
  %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA398" = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 10, i32 194
  %ptr2intCaller399 = ptrtoint void ()* @group_type_contains_Clear to i32
  store i32 %ptr2intCaller399, i32* %"\01?FunctionGrgphForOthread@@3PAY0DOI@HA398"
  %retval = alloca i32, align 4
  %argv.addr = alloca i8**, align 4
  %argc.addr = alloca i32, align 4
  %batch = alloca i32, align 4
  %prob = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 189, i32 9)
  store i32 0, i32* %prob, align 4
  store i32 0, i32* %batch, align 4
  store i32 2, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %argc.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load i32, i32* %prob, align 4
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ]
  br i1 %3, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %5 = load i8**, i8*** %argv.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %5, i32 %4
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.260, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %6, i8* %7)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %argc.addr, align 4
  %sub = sub nsw i32 %9, 1
  %cmp2 = icmp eq i32 %8, %sub
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %10 = load i32, i32* %i, align 4
  %add = add nsw i32 %10, 1
  %11 = load i8**, i8*** %argv.addr, align 4
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i32 %add
  %12 = load i8*, i8** %arrayidx3, align 4
  %13 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.261, i32 0, i32 0
  %call4 = call i32 (i8*, i8*, ...) @sscanf(i8* %12, i8* %13, i32* @word_count_limit)
  %cmp5 = icmp ne i32 %call4, 1
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then
  %14 = phi i1 [ true, %if.then ], [ %cmp5, %lor.rhs ]
  %lor.ext = zext i1 %14 to i32
  store i32 %lor.ext, i32* %prob, align 4
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end26

if.else:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4
  %17 = load i8**, i8*** %argv.addr, align 4
  %arrayidx6 = getelementptr inbounds i8*, i8** %17, i32 %16
  %18 = load i8*, i8** %arrayidx6, align 4
  %19 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.262, i32 0, i32 0
  %call7 = call i32 @strcmp_Package(i8* %18, i8* %19)
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %if.then9, label %if.else20

if.then9:                                         ; preds = %if.else
  %20 = load i32, i32* %i, align 4
  %21 = load i32, i32* %argc.addr, align 4
  %sub10 = sub nsw i32 %21, 1
  %cmp11 = icmp eq i32 %20, %sub10
  br i1 %cmp11, label %lor.end17, label %lor.rhs12

lor.rhs12:                                        ; preds = %if.then9
  %22 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %22, 1
  %23 = load i8**, i8*** %argv.addr, align 4
  %arrayidx14 = getelementptr inbounds i8*, i8** %23, i32 %add13
  %24 = load i8*, i8** %arrayidx14, align 4
  %25 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.263, i32 0, i32 0
  %call15 = call i32 (i8*, i8*, ...) @sscanf(i8* %24, i8* %25, i32* @linkage_count_limit)
  %cmp16 = icmp ne i32 %call15, 1
  br label %lor.end17

lor.end17:                                        ; preds = %lor.rhs12, %if.then9
  %26 = phi i1 [ true, %if.then9 ], [ %cmp16, %lor.rhs12 ]
  %lor.ext18 = zext i1 %26 to i32
  store i32 %lor.ext18, i32* %prob, align 4
  %27 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %27, 1
  store i32 %inc19, i32* %i, align 4
  br label %if.end25

if.else20:                                        ; preds = %if.else
  %28 = load i32, i32* %i, align 4
  %29 = load i8**, i8*** %argv.addr, align 4
  %arrayidx21 = getelementptr inbounds i8*, i8** %29, i32 %28
  %30 = load i8*, i8** %arrayidx21, align 4
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.264, i32 0, i32 0
  %call22 = call i32 @strcmp_Package(i8* %30, i8* %31)
  %cmp23 = icmp eq i32 %call22, 0
  br i1 %cmp23, label %if.then24, label %if.end

if.then24:                                        ; preds = %if.else20
  store i32 1, i32* %batch, align 4
  br label %if.end

if.end:                                           ; preds = %if.then24, %if.else20
  br label %if.end25

if.end25:                                         ; preds = %if.end, %lor.end17
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %lor.end
  br label %for.inc

for.inc:                                          ; preds = %if.end26
  %32 = load i32, i32* %i, align 4
  %inc27 = add nsw i32 %32, 1
  store i32 %inc27, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %33 = load i32, i32* %argc.addr, align 4
  %cmp28 = icmp slt i32 %33, 2
  br i1 %cmp28, label %if.then30, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %34 = load i32, i32* %prob, align 4
  %tobool29 = icmp ne i32 %34, 0
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %lor.lhs.false, %for.end
  %35 = load i8**, i8*** %argv.addr, align 4
  %arrayidx31 = getelementptr inbounds i8*, i8** %35, i32 0
  %36 = load i8*, i8** %arrayidx31, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx33 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 2
  %37 = getelementptr inbounds [76 x i8], [76 x i8]* @.str.265, i32 0, i32 0
  %call34 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx33, i8* %37, i8* %36)
  call void @exit_Package(i32 1) #5
  unreachable

if.end35:                                         ; preds = %lor.lhs.false
  %38 = load i8**, i8*** %argv.addr, align 4
  %arrayidx36 = getelementptr inbounds i8*, i8** %38, i32 1
  %39 = load i8*, i8** %arrayidx36, align 4
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %39, i8** %struct.BigStruct_211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 186, i32 9)
  %40 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.266, i32 0, i32 0
  %call37 = call i32 (i8*, ...) @printf(i8* %40)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 185, i32 6)
  %41 = load i32, i32* @space_in_use, align 4
  %42 = load i32, i32* @N_dict, align 4
  %43 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.267, i32 0, i32 0
  %call38 = call i32 (i8*, ...) @printf(i8* %43, i32 %42, i32 %41)
  %44 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.268, i32 0, i32 0
  %call39 = call i32 (i8*, ...) @printf(i8* %44)
  %45 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.269, i32 0, i32 0
  %call40 = call i32 (i8*, ...) @printf(i8* %45)
  %46 = getelementptr inbounds [60 x i8], [60 x i8]* @.str.270, i32 0, i32 0
  %call41 = call i32 (i8*, ...) @printf(i8* %46)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 187, i32 9)
  %47 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.271, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %47, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 %load_struct.BigStruct_32, i32* @left_wall_defined, align 4
  %48 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.272, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %48, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  store i32 %load_struct.BigStruct_322, i32* @right_wall_defined, align 4
  %49 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.273, i32 0, i32 0
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %49, i8** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_324 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_324 = load i32, i32* %struct.BigStruct_324
  store i32 %load_struct.BigStruct_324, i32* @postprocess_defined, align 4
  %50 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.274, i32 0, i32 0
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %50, i8** %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_326 = load i32, i32* %struct.BigStruct_326
  store i32 %load_struct.BigStruct_326, i32* @andable_defined, align 4
  %51 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.275, i32 0, i32 0
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %51, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_328 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_328 = load i32, i32* %struct.BigStruct_328
  store i32 %load_struct.BigStruct_328, i32* @unknown_word_defined, align 4
  %52 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.276, i32 0, i32 0
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %52, i8** %struct.BigStruct_29
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_3210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3210 = load i32, i32* %struct.BigStruct_3210
  store i32 %load_struct.BigStruct_3210, i32* @capitalized_word_defined, align 4
  %53 = load i32, i32* @andable_defined, align 4
  %tobool48 = icmp ne i32 %53, 0
  br i1 %tobool48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.end35
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 182, i32 10)
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %if.end35
  %54 = load i32, i32* %batch, align 4
  %tobool51 = icmp ne i32 %54, 0
  br i1 %tobool51, label %if.then52, label %if.else55

if.then52:                                        ; preds = %if.end50
  %55 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.277, i32 0, i32 0
  %call53 = call i32 (i8*, ...) @printf(i8* %55)
  %56 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.278, i32 0, i32 0
  %call54 = call i32 (i8*, ...) @printf(i8* %56)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 184, i32 6)
  br label %if.end59

if.else55:                                        ; preds = %if.end50
  %57 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.279, i32 0, i32 0
  %call56 = call i32 (i8*, ...) @printf(i8* %57)
  %58 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.280, i32 0, i32 0
  %call57 = call i32 (i8*, ...) @printf(i8* %58)
  %59 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.281, i32 0, i32 0
  %call58 = call i32 (i8*, ...) @printf(i8* %59)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 183, i32 6)
  br label %if.end59

if.end59:                                         ; preds = %if.else55, %if.then52
  ret i32 0
}

declare dllimport i32 @sscanf(i8*, i8*, ...) #1

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @glom_comma_connector(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d_list = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_list, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc16, %entry, %for.inc16, %entry
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end18

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %3, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc16

if.end:                                           ; preds = %for.body, %for.body
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %left2, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %if.end, %for.inc, %if.end
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %7, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3, %for.cond3
  br label %for.inc

for.inc:                                          ; preds = %for.body5, %for.body5
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %next6, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.end:                                          ; preds = %for.cond3, %for.cond3
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 0
  %11 = load i16, i16* %label, align 4
  %conv = sext i16 %11 to i32
  %cmp7 = icmp slt i32 %conv, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %for.end, %for.end
  br label %for.inc16

if.end10:                                         ; preds = %for.end, %for.end
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %12)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d2, align 4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 0
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %next11, align 4
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %15, %struct.Disjunct_struct** %d_list, align 4
  %call12 = call i8* @xalloc(i32 16)
  %16 = bitcast i8* %call12 to %struct.Connector_struct*
  store %struct.Connector_struct* %16, %struct.Connector_struct** %c1, align 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 5
  %18 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.282, i32 0, i32 0
  store i8* %18, i8** %string, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 0
  store i16 -2, i16* %label13, align 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %20, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %21, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next14 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next14, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 4
  store %struct.Connector_struct* %23, %struct.Connector_struct** %next15, align 4
  br label %for.inc16

for.inc16:                                        ; preds = %if.end10, %if.then9, %if.then, %if.end10, %if.then9, %if.then
  %25 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next17 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %25, i32 0, i32 0
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next17, align 4
  store %struct.Disjunct_struct* %26, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.end18:                                        ; preds = %for.cond, %for.cond
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call19 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %28, %struct.Disjunct_struct* %27)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %call19, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %call19
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @glom_aux_connector(%struct.Disjunct_struct* %d, i32 %label, i32 %necessary) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %necessary.addr = alloca i32, align 4
  %label.addr = alloca i32, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d_list = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  %c2 = alloca %struct.Connector_struct*, align 4
  store i32 %load_struct.BigStruct_8, i32* %necessary.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %label.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_list, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc35, %entry, %for.inc35, %entry
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end37

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %3, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc35

if.end:                                           ; preds = %for.body, %for.body
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %left2, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %if.end, %for.inc, %if.end
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %7, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3, %for.cond3
  br label %for.inc

for.inc:                                          ; preds = %for.body5, %for.body5
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %next6, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.end:                                          ; preds = %for.cond3, %for.cond3
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 0
  %11 = load i16, i16* %label7, align 4
  %conv = sext i16 %11 to i32
  %cmp8 = icmp slt i32 %conv, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %for.end, %for.end
  br label %for.inc35

if.end11:                                         ; preds = %for.end, %for.end
  %12 = load i32, i32* %necessary.addr, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end11, %if.end11
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %13)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d2, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next13 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 0
  store %struct.Disjunct_struct* %14, %struct.Disjunct_struct** %next13, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %16, %struct.Disjunct_struct** %d_list, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end11, %if.then12, %if.end11
  %call15 = call i8* @xalloc(i32 16)
  %17 = bitcast i8* %call15 to %struct.Connector_struct*
  store %struct.Connector_struct* %17, %struct.Connector_struct** %c1, align 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 5
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.1.283, i32 0, i32 0
  store i8* %19, i8** %string, align 4
  %20 = load i32, i32* %label.addr, align 4
  %conv16 = trunc i32 %20 to i16
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label17 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %21, i32 0, i32 0
  store i16 %conv16, i16* %label17, align 4
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next18 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %next18, align 4
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left19 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %left19, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp20 = icmp eq %struct.Connector_struct* %27, %28
  br i1 %cmp20, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end14, %if.end14
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left23 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 4
  store %struct.Connector_struct* %29, %struct.Connector_struct** %left23, align 4
  br label %if.end34

if.else:                                          ; preds = %if.end14, %if.end14
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left24 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 4
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %left24, align 4
  store %struct.Connector_struct* %32, %struct.Connector_struct** %c2, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc30, %if.else, %for.inc30, %if.else
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next26 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %33, i32 0, i32 4
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %next26, align 4
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp27 = icmp ne %struct.Connector_struct* %34, %35
  br i1 %cmp27, label %for.body29, label %for.end32

for.body29:                                       ; preds = %for.cond25, %for.cond25
  br label %for.inc30

for.inc30:                                        ; preds = %for.body29, %for.body29
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next31 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %36, i32 0, i32 4
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %next31, align 4
  store %struct.Connector_struct* %37, %struct.Connector_struct** %c2, align 4
  br label %for.cond25

for.end32:                                        ; preds = %for.cond25, %for.cond25
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next33 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %39, i32 0, i32 4
  store %struct.Connector_struct* %38, %struct.Connector_struct** %next33, align 4
  br label %if.end34

if.end34:                                         ; preds = %for.end32, %if.then22, %for.end32, %if.then22
  br label %for.inc35

for.inc35:                                        ; preds = %if.end34, %if.then10, %if.then, %if.end34, %if.then10, %if.then
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next36 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %40, i32 0, i32 0
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next36, align 4
  store %struct.Disjunct_struct* %41, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.end37:                                        ; preds = %for.cond, %for.cond
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call38 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %43, %struct.Disjunct_struct* %42)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %call38, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %call38
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @add_one_connector(i32 %label, i32 %dir, i8* %cs, %struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  %load_struct.BigStruct_12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_12
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %cs.addr = alloca i8*, align 4
  %dir.addr = alloca i32, align 4
  %label.addr = alloca i32, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_12, %struct.Disjunct_struct** %d.addr, align 4
  store i8* %load_struct.BigStruct_11, i8** %cs.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %dir.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %label.addr, align 4
  %call = call i8* @xalloc(i32 16)
  %0 = bitcast i8* %call to %struct.Connector_struct*
  store %struct.Connector_struct* %0, %struct.Connector_struct** %c, align 4
  %1 = load i8*, i8** %cs.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 5
  store i8* %1, i8** %string, align 4
  %3 = load i32, i32* %label.addr, align 4
  %conv = trunc i32 %3 to i16
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 0
  store i16 %conv, i16* %label1, align 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next, align 4
  %8 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %8, 43
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 5
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %next3, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right4 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 5
  store %struct.Connector_struct* %12, %struct.Connector_struct** %right4, align 4
  br label %if.end

if.else:                                          ; preds = %entry, %entry
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %next5, align 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 4
  store %struct.Connector_struct* %17, %struct.Connector_struct** %left6, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %19, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %19
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @special_disjunct(i32 %label, i32 %dir, i8* %cs, i8* %ds) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  %load_struct.BigStruct_27 = load i8*, i8** %struct.BigStruct_27
  %ds.addr = alloca i8*, align 4
  %cs.addr = alloca i8*, align 4
  %dir.addr = alloca i32, align 4
  %label.addr = alloca i32, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store i8* %load_struct.BigStruct_27, i8** %ds.addr, align 4
  store i8* %load_struct.BigStruct_11, i8** %cs.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %dir.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %label.addr, align 4
  %call = call i8* @xalloc(i32 20)
  %0 = bitcast i8* %call to %struct.Disjunct_struct*
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %d1, align 4
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 1
  store i16 0, i16* %cost, align 4
  %2 = load i8*, i8** %ds.addr, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 3
  store i8* %2, i8** %string, align 4
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next, align 4
  %call1 = call i8* @xalloc(i32 16)
  %5 = bitcast i8* %call1 to %struct.Connector_struct*
  store %struct.Connector_struct* %5, %struct.Connector_struct** %c, align 4
  %6 = load i8*, i8** %cs.addr, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 5
  store i8* %6, i8** %string2, align 4
  %8 = load i32, i32* %label.addr, align 4
  %conv = trunc i32 %8 to i16
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 0
  store i16 %conv, i16* %label3, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next4, align 4
  %13 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %13, 43
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left, align 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 5
  store %struct.Connector_struct* %15, %struct.Connector_struct** %right, align 4
  br label %if.end

if.else:                                          ; preds = %entry, %entry
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right6, align 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %left7, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %20, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %20
}

; Function Attrs: noinline nounwind
define void @construct_comma() #0 {
entry:
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %1, 1
  %cmp = icmp slt i32 %0, %sub
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.2.286, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %arraydecay, i8* %4)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body, %for.body
  %5 = load i32, i32* %w, align 4
  %add = add nsw i32 %5, 1
  %6 = bitcast [250 x i8]* @is_conjunction to [0 x i8]*
  %arrayidx2 = getelementptr inbounds [0 x i8], [0 x i8]* %6, i32 0, i32 %add
  %7 = load i8, i8* %arrayidx2, align 1
  %conv = sext i8 %7 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %8 = load i32, i32* %w, align 4
  %9 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %9, i32 0, i32 %8
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx3, i32 0, i32 2
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.4.287, i32 0, i32 0
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.3.288, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -2, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %11, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %12, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_331 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_331 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_331
  %call5 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_331, %struct.Disjunct_struct* %10)
  %13 = load i32, i32* %w, align 4
  %14 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %14, i32 0, i32 %13
  %d7 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx6, i32 0, i32 2
  store %struct.Disjunct_struct* %call5, %struct.Disjunct_struct** %d7, align 4
  %15 = load i32, i32* %w, align 4
  %add8 = add nsw i32 %15, 1
  %16 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %16, i32 0, i32 %add8
  %d10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 2
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d10, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 83, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %18 = load i32, i32* %w, align 4
  %add12 = add nsw i32 %18, 1
  %19 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %19, i32 0, i32 %add12
  %d14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d14, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body, %if.then, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %20 = load i32, i32* %w, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @construct_either() #0 {
entry:
  %w = alloca i32, align 4
  %0 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.5.291, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  br label %for.end27

if.end:                                           ; preds = %entry, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.6.292, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %for.body, %for.body
  br label %for.inc

if.end4:                                          ; preds = %for.body, %for.body
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.8.293, i32 0, i32 0
  %10 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.7.294, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -3, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %9, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %10, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %call7 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct* %8)
  %11 = load i32, i32* %w, align 4
  %12 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %12, i32 0, i32 %11
  %d9 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx8, i32 0, i32 2
  store %struct.Disjunct_struct* %call7, %struct.Disjunct_struct** %d9, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end4, %if.then3, %if.end4, %if.then3
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %w, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc25, %for.end, %for.inc25, %for.end
  %14 = load i32, i32* %w, align 4
  %15 = load i32, i32* @N_words, align 4
  %cmp11 = icmp slt i32 %14, %15
  br i1 %cmp11, label %for.body12, label %for.end27

for.body12:                                       ; preds = %for.cond10, %for.cond10
  %16 = load i32, i32* %w, align 4
  %17 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %17, i32 0, i32 %16
  %string14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 0
  %arraydecay15 = getelementptr inbounds [60 x i8], [60 x i8]* %string14, i32 0, i32 0
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.9.295, i32 0, i32 0
  %call16 = call i32 @strcmp_Package(i8* %arraydecay15, i8* %18)
  %cmp17 = icmp ne i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %for.body12, %for.body12
  br label %for.inc25

if.end19:                                         ; preds = %for.body12, %for.body12
  %19 = load i32, i32* %w, align 4
  %20 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx20 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %20, i32 0, i32 %19
  %d21 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx20, i32 0, i32 2
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d21, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -3, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d24 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx23, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d24, align 4
  br label %for.inc25

for.inc25:                                        ; preds = %if.end19, %if.then18, %if.end19, %if.then18
  %24 = load i32, i32* %w, align 4
  %inc26 = add nsw i32 %24, 1
  store i32 %inc26, i32* %w, align 4
  br label %for.cond10

for.end27:                                        ; preds = %for.cond10, %if.then, %for.cond10, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @construct_neither() #0 {
entry:
  %w = alloca i32, align 4
  %0 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.10.298, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end7, label %if.then

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then, %for.inc, %if.then
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.11.299, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %for.body, %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body, %for.body
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %8)
  %9 = load i32, i32* %w, align 4
  %10 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %10, i32 0, i32 %9
  %d6 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d6, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then3, %if.end, %if.then3
  %11 = load i32, i32* %w, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  br label %for.end44

if.end7:                                          ; preds = %entry, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc24, %if.end7, %for.inc24, %if.end7
  %12 = load i32, i32* %w, align 4
  %13 = load i32, i32* @N_words, align 4
  %cmp9 = icmp slt i32 %12, %13
  br i1 %cmp9, label %for.body10, label %for.end26

for.body10:                                       ; preds = %for.cond8, %for.cond8
  %14 = load i32, i32* %w, align 4
  %15 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx11 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %15, i32 0, i32 %14
  %string12 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx11, i32 0, i32 0
  %arraydecay13 = getelementptr inbounds [60 x i8], [60 x i8]* %string12, i32 0, i32 0
  %16 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.12.300, i32 0, i32 0
  %call14 = call i32 @strcmp_Package(i8* %arraydecay13, i8* %16)
  %cmp15 = icmp ne i32 %call14, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.body10, %for.body10
  br label %for.inc24

if.end17:                                         ; preds = %for.body10, %for.body10
  %17 = load i32, i32* %w, align 4
  %18 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx18 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %18, i32 0, i32 %17
  %d19 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx18, i32 0, i32 2
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d19, align 4
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.14.301, i32 0, i32 0
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.13.302, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -4, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %20, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %21, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %call21 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct* %19)
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d23 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx22, i32 0, i32 2
  store %struct.Disjunct_struct* %call21, %struct.Disjunct_struct** %d23, align 4
  br label %for.inc24

for.inc24:                                        ; preds = %if.end17, %if.then16, %if.end17, %if.then16
  %24 = load i32, i32* %w, align 4
  %inc25 = add nsw i32 %24, 1
  store i32 %inc25, i32* %w, align 4
  br label %for.cond8

for.end26:                                        ; preds = %for.cond8, %for.cond8
  store i32 0, i32* %w, align 4
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc42, %for.end26, %for.inc42, %for.end26
  %25 = load i32, i32* %w, align 4
  %26 = load i32, i32* @N_words, align 4
  %cmp28 = icmp slt i32 %25, %26
  br i1 %cmp28, label %for.body29, label %for.end44

for.body29:                                       ; preds = %for.cond27, %for.cond27
  %27 = load i32, i32* %w, align 4
  %28 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx30 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %28, i32 0, i32 %27
  %string31 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx30, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [60 x i8], [60 x i8]* %string31, i32 0, i32 0
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.15.303, i32 0, i32 0
  %call33 = call i32 @strcmp_Package(i8* %arraydecay32, i8* %29)
  %cmp34 = icmp ne i32 %call33, 0
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %for.body29, %for.body29
  br label %for.inc42

if.end36:                                         ; preds = %for.body29, %for.body29
  %30 = load i32, i32* %w, align 4
  %31 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx37 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %31, i32 0, i32 %30
  %d38 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx37, i32 0, i32 2
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d38, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %32, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -4, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 1, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %33 = load i32, i32* %w, align 4
  %34 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx40 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %34, i32 0, i32 %33
  %d41 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx40, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d41, align 4
  br label %for.inc42

for.inc42:                                        ; preds = %if.end36, %if.then35, %if.end36, %if.then35
  %35 = load i32, i32* %w, align 4
  %inc43 = add nsw i32 %35, 1
  store i32 %inc43, i32* %w, align 4
  br label %for.cond27

for.end44:                                        ; preds = %for.cond27, %for.end, %for.cond27, %for.end
  ret void
}

; Function Attrs: noinline nounwind
define void @construct_notonlybut() #0 {
entry:
  %w = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.16.306, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  br label %for.end51

if.end:                                           ; preds = %entry, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.17.307, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %for.body, %for.body
  br label %for.inc

if.end4:                                          ; preds = %for.body, %for.body
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d6 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d6, align 4
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.19.308, i32 0, i32 0
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.18.309, i32 0, i32 0
  %struct.BigStruct_012 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -5, i32* %struct.BigStruct_012
  %struct.BigStruct_513 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_513
  %struct.BigStruct_1114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %9, i8** %struct.BigStruct_1114
  %struct.BigStruct_2715 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %10, i8** %struct.BigStruct_2715
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_3316 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_3316 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_3316
  %call8 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_3316, %struct.Disjunct_struct* %8)
  %11 = load i32, i32* %w, align 4
  %12 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %12, i32 0, i32 %11
  %d10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 2
  store %struct.Disjunct_struct* %call8, %struct.Disjunct_struct** %d10, align 4
  %13 = load i32, i32* %w, align 4
  %14 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %14, 1
  %cmp11 = icmp slt i32 %13, %sub
  br i1 %cmp11, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %if.end4, %if.end4
  %15 = load i32, i32* %w, align 4
  %add = add nsw i32 %15, 1
  %16 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx12 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %16, i32 0, i32 %add
  %string13 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx12, i32 0, i32 0
  %arraydecay14 = getelementptr inbounds [60 x i8], [60 x i8]* %string13, i32 0, i32 0
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.20.310, i32 0, i32 0
  %call15 = call i32 @strcmp_Package(i8* %arraydecay14, i8* %17)
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %if.end33

if.then17:                                        ; preds = %land.lhs.true, %land.lhs.true
  %18 = load i32, i32* %w, align 4
  %add18 = add nsw i32 %18, 1
  %19 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %19, i32 0, i32 %add18
  %d20 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx19, i32 0, i32 2
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d20, align 4
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.22.311, i32 0, i32 0
  %22 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.21.312, i32 0, i32 0
  %struct.BigStruct_07 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -6, i32* %struct.BigStruct_07
  %struct.BigStruct_58 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 45, i32* %struct.BigStruct_58
  %struct.BigStruct_119 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %21, i8** %struct.BigStruct_119
  %struct.BigStruct_2710 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %22, i8** %struct.BigStruct_2710
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_3311 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_3311 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_3311
  %call22 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_3311, %struct.Disjunct_struct* %20)
  %23 = load i32, i32* %w, align 4
  %add23 = add nsw i32 %23, 1
  %24 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx24 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %24, i32 0, i32 %add23
  %d25 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx24, i32 0, i32 2
  store %struct.Disjunct_struct* %call22, %struct.Disjunct_struct** %d25, align 4
  %25 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.24.313, i32 0, i32 0
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.23.314, i32 0, i32 0
  %struct.BigStruct_03 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -6, i32* %struct.BigStruct_03
  %struct.BigStruct_54 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_54
  %struct.BigStruct_115 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %25, i8** %struct.BigStruct_115
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %26, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_336 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_336 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_336
  store %struct.Disjunct_struct* %load_struct.BigStruct_336, %struct.Disjunct_struct** %d, align 4
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %28 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.25.315, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -5, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %28, i8** %struct.BigStruct_11
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  store %struct.Disjunct_struct* %27, %struct.Disjunct_struct** %struct.BigStruct_12
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 85, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  store %struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct** %d, align 4
  %29 = load i32, i32* %w, align 4
  %30 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx28 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %30, i32 0, i32 %29
  %d29 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx28, i32 0, i32 2
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d29, align 4
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call30 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %32, %struct.Disjunct_struct* %31)
  %33 = load i32, i32* %w, align 4
  %34 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx31 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %34, i32 0, i32 %33
  %d32 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx31, i32 0, i32 2
  store %struct.Disjunct_struct* %call30, %struct.Disjunct_struct** %d32, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then17, %land.lhs.true, %if.end4, %if.then17, %land.lhs.true, %if.end4
  br label %for.inc

for.inc:                                          ; preds = %if.end33, %if.then3, %if.end33, %if.then3
  %35 = load i32, i32* %w, align 4
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %w, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc49, %for.end, %for.inc49, %for.end
  %36 = load i32, i32* %w, align 4
  %37 = load i32, i32* @N_words, align 4
  %cmp35 = icmp slt i32 %36, %37
  br i1 %cmp35, label %for.body36, label %for.end51

for.body36:                                       ; preds = %for.cond34, %for.cond34
  %38 = load i32, i32* %w, align 4
  %39 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx37 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %39, i32 0, i32 %38
  %string38 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx37, i32 0, i32 0
  %arraydecay39 = getelementptr inbounds [60 x i8], [60 x i8]* %string38, i32 0, i32 0
  %40 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.26.316, i32 0, i32 0
  %call40 = call i32 @strcmp_Package(i8* %arraydecay39, i8* %40)
  %cmp41 = icmp ne i32 %call40, 0
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %for.body36, %for.body36
  br label %for.inc49

if.end43:                                         ; preds = %for.body36, %for.body36
  %41 = load i32, i32* %w, align 4
  %42 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx44 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %42, i32 0, i32 %41
  %d45 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx44, i32 0, i32 2
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d45, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -5, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 1, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %44 = load i32, i32* %w, align 4
  %45 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx47 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %45, i32 0, i32 %44
  %d48 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx47, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d48, align 4
  br label %for.inc49

for.inc49:                                        ; preds = %if.end43, %if.then42, %if.end43, %if.then42
  %46 = load i32, i32* %w, align 4
  %inc50 = add nsw i32 %46, 1
  store i32 %inc50, i32* %w, align 4
  br label %for.cond34

for.end51:                                        ; preds = %for.cond34, %if.then, %for.cond34, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @construct_both() #0 {
entry:
  %w = alloca i32, align 4
  %0 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.27.319, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  br label %for.end27

if.end:                                           ; preds = %entry, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.28.320, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %for.body, %for.body
  br label %for.inc

if.end4:                                          ; preds = %for.body, %for.body
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.30.321, i32 0, i32 0
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.29.322, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -7, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %9, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %10, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %call7 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct* %8)
  %11 = load i32, i32* %w, align 4
  %12 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %12, i32 0, i32 %11
  %d9 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx8, i32 0, i32 2
  store %struct.Disjunct_struct* %call7, %struct.Disjunct_struct** %d9, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end4, %if.then3, %if.end4, %if.then3
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %w, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc25, %for.end, %for.inc25, %for.end
  %14 = load i32, i32* %w, align 4
  %15 = load i32, i32* @N_words, align 4
  %cmp11 = icmp slt i32 %14, %15
  br i1 %cmp11, label %for.body12, label %for.end27

for.body12:                                       ; preds = %for.cond10, %for.cond10
  %16 = load i32, i32* %w, align 4
  %17 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %17, i32 0, i32 %16
  %string14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 0
  %arraydecay15 = getelementptr inbounds [60 x i8], [60 x i8]* %string14, i32 0, i32 0
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.31.323, i32 0, i32 0
  %call16 = call i32 @strcmp_Package(i8* %arraydecay15, i8* %18)
  %cmp17 = icmp ne i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %for.body12, %for.body12
  br label %for.inc25

if.end19:                                         ; preds = %for.body12, %for.body12
  %19 = load i32, i32* %w, align 4
  %20 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx20 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %20, i32 0, i32 %19
  %d21 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx20, i32 0, i32 2
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d21, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -7, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d24 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx23, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d24, align 4
  br label %for.inc25

for.inc25:                                        ; preds = %if.end19, %if.then18, %if.end19, %if.then18
  %24 = load i32, i32* %w, align 4
  %inc26 = add nsw i32 %24, 1
  store i32 %inc26, i32* %w, align 4
  br label %for.cond10

for.end27:                                        ; preds = %for.cond10, %if.then, %for.cond10, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @"\01?StartThreadEventForOthread@@YAXH@Z"(i32 %CurID) #0 {
entry:
  %CurID.addr = alloca i32, align 4
  %func = alloca void ()*, align 4
  store i32 %CurID, i32* %CurID.addr, align 4
  br label %while.body

while.body:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %CurID.addr, align 4
  %arrayidx = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?hMutexList@@3PAPAXA", i32 0, i32 %0
  %1 = load i8*, i8** %arrayidx, align 4
  %call = call x86_stdcallcc i32 @"\01_WaitForSingleObject@8"(i8* %1, i32 -1)
  %2 = load i32, i32* %CurID.addr, align 4
  %arrayidx1 = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?hMutexList@@3PAPAXA", i32 0, i32 %2
  %3 = load i8*, i8** %arrayidx1, align 4
  %call2 = call x86_stdcallcc i32 @"\01_ResetEvent@4"(i8* %3)
  %4 = load i32, i32* @"\01?GlobalSignal@@3HA", align 4
  %5 = load i32, i32* %CurID.addr, align 4
  %arrayidx3 = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 %5
  %arrayidx4 = getelementptr inbounds [1000 x i32], [1000 x i32]* %arrayidx3, i32 0, i32 %4
  %6 = load i32, i32* %arrayidx4, align 4
  %7 = inttoptr i32 %6 to void ()*
  store void ()* %7, void ()** %func, align 4
  %8 = load void ()*, void ()** %func, align 4
  call void %8()
  %9 = load i32, i32* %CurID.addr, align 4
  %arrayidx5 = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?MutexFuncList@@3PAPAXA", i32 0, i32 %9
  %10 = load i8*, i8** %arrayidx5, align 4
  %call6 = call x86_stdcallcc i32 @"\01_SetEvent@4"(i8* %10)
  br label %while.body

return:                                           ; No predecessors!
  ret void
}

declare dllimport x86_stdcallcc i32 @"\01_WaitForSingleObject@8"(i8*, i32) #1

declare dllimport x86_stdcallcc i32 @"\01_ResetEvent@4"(i8*) #1

declare dllimport x86_stdcallcc i32 @"\01_SetEvent@4"(i8*) #1

; Function Attrs: noinline nounwind
define void @"\01?StartThreadWhileForOthread@@YAXH@Z"(i32 %CurID) #0 {
entry:
  %CurID.addr = alloca i32, align 4
  %func = alloca void ()*, align 4
  store i32 %CurID, i32* %CurID.addr, align 4
  br label %while.body

while.body:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* @"\01?GlobalThreadID@@3HA", align 4
  %1 = load i32, i32* %CurID.addr, align 4
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %2 = load i32, i32* @"\01?GlobalSignal@@3HA", align 4
  %3 = load i32, i32* %CurID.addr, align 4
  %arrayidx = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?FunctionGrgphForOthread@@3PAY0DOI@HA", i32 0, i32 %3
  %arrayidx1 = getelementptr inbounds [1000 x i32], [1000 x i32]* %arrayidx, i32 0, i32 %2
  %4 = load i32, i32* %arrayidx1, align 4
  %5 = inttoptr i32 %4 to void ()*
  store void ()* %5, void ()** %func, align 4
  %6 = load void ()*, void ()** %func, align 4
  call void %6()
  store i32 -1, i32* @"\01?GlobalThreadID@@3HA", align 4
  %7 = load i32, i32* %CurID.addr, align 4
  %arrayidx2 = getelementptr inbounds [20 x i32], [20 x i32]* @"\01?WhileEndFlag@@3PAHA", i32 0, i32 %7
  store i32 -1, i32* %arrayidx2, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  br label %while.body

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: noinline nounwind
define void @"\01?MultiThreadForOthread@@YAXH@Z"(i32 %IDLength) #0 {
entry:
  %IDLength.addr = alloca i32, align 4
  %str = alloca [10 x i8], align 1
  %CurID = alloca i32, align 4
  store i32 %IDLength, i32* %IDLength.addr, align 4
  %0 = bitcast [10 x i8]* %str to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 10, i32 1, i1 false)
  store i32 0, i32* %CurID, align 4
  store i32 0, i32* %CurID, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %CurID, align 4
  %2 = load i32, i32* %IDLength.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %CurID, align 4
  %4 = load i32, i32* @"\01?thresholdForOthread@@3HA", align 4
  %cmp1 = icmp slt i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %CurID, align 4
  %6 = inttoptr i32 %5 to i8*
  %7 = bitcast void (i32)* @"\01?StartThreadWhileForOthread@@YAXH@Z" to i32 (i8*)*
  %call = call x86_stdcallcc i8* @"\01_CreateThread@24"(%struct._SECURITY_ATTRIBUTES* null, i32 0, i32 (i8*)* %7, i8* %6, i32 0, i32* null)
  br label %if.end

if.else:                                          ; preds = %for.body
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i32 0
  %8 = load i32, i32* %CurID, align 4
  %call2 = call i8* @itoa(i32 %8, i8* %arraydecay, i32 10)
  %arraydecay3 = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i32 0
  %9 = bitcast i8* %arraydecay3 to i16*
  %call4 = call x86_stdcallcc i8* @"\01_CreateEventW@16"(%struct._SECURITY_ATTRIBUTES* null, i32 1, i32 0, i16* %9)
  %10 = load i32, i32* %CurID, align 4
  %arrayidx = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?hMutexList@@3PAPAXA", i32 0, i32 %10
  store i8* %call4, i8** %arrayidx, align 4
  %arraydecay5 = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i32 0
  %11 = load i32, i32* %CurID, align 4
  %12 = load i32, i32* @"\01?threadNumForOthread@@3HA", align 4
  %add = add nsw i32 %11, %12
  %add6 = add nsw i32 %add, 1
  %call7 = call i8* @itoa(i32 %add6, i8* %arraydecay5, i32 10)
  %arraydecay8 = getelementptr inbounds [10 x i8], [10 x i8]* %str, i32 0, i32 0
  %13 = bitcast i8* %arraydecay8 to i16*
  %call9 = call x86_stdcallcc i8* @"\01_CreateEventW@16"(%struct._SECURITY_ATTRIBUTES* null, i32 1, i32 0, i16* %13)
  %14 = load i32, i32* %CurID, align 4
  %arrayidx10 = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?MutexFuncList@@3PAPAXA", i32 0, i32 %14
  store i8* %call9, i8** %arrayidx10, align 4
  %15 = load i32, i32* %CurID, align 4
  %16 = inttoptr i32 %15 to i8*
  %17 = bitcast void (i32)* @"\01?StartThreadEventForOthread@@YAXH@Z" to i32 (i8*)*
  %call11 = call x86_stdcallcc i8* @"\01_CreateThread@24"(%struct._SECURITY_ATTRIBUTES* null, i32 0, i32 (i8*)* %17, i8* %16, i32 0, i32* null)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %CurID, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %CurID, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) #2

declare dllimport x86_stdcallcc i8* @"\01_CreateThread@24"(%struct._SECURITY_ATTRIBUTES*, i32, i32 (i8*)*, i8*, i32, i32*) #1

declare dllimport i8* @itoa(i32, i8*, i32) #1

declare dllimport x86_stdcallcc i8* @"\01_CreateEventW@16"(%struct._SECURITY_ATTRIBUTES*, i32, i32, i16*) #1

; Function Attrs: noinline nounwind
define void @"\01?printNumForOthread@@YAXXZ"() #0 {
entry:
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = load i32, i32* @"\01?totalnum@@3HA", align 4
  %1 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.324, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1, i32 %0)
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %2, 1000
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* @"\01?threadNumForOthread@@3HA", align 4
  %cmp2 = icmp slt i32 %3, %4
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %j, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?CalcCallNumForOthread@@3PAY0DOI@HA", i32 0, i32 %6
  %arrayidx4 = getelementptr inbounds [1000 x i32], [1000 x i32]* %arrayidx, i32 0, i32 %5
  %7 = load i32, i32* %arrayidx4, align 4
  %cmp5 = icmp ne i32 %7, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %8 = load i32, i32* %j, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?CalcCallNumForOthread@@3PAY0DOI@HA", i32 0, i32 %9
  %arrayidx7 = getelementptr inbounds [1000 x i32], [1000 x i32]* %arrayidx6, i32 0, i32 %8
  %10 = load i32, i32* %arrayidx7, align 4
  %11 = load i32, i32* %j, align 4
  %12 = load i32, i32* %i, align 4
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.1.325, i32 0, i32 0
  %call8 = call i32 (i8*, ...) @printf(i8* %13, i32 %12, i32 %11, i32 %10)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %15 = load i32, i32* %j, align 4
  %inc10 = add nsw i32 %15, 1
  store i32 %inc10, i32* %j, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 %tempSignal, i32 %ID) #0 {
entry:
  %ID.addr = alloca i32, align 4
  %tempSignal.addr = alloca i32, align 4
  store i32 %ID, i32* %ID.addr, align 4
  store i32 %tempSignal, i32* %tempSignal.addr, align 4
  %0 = load i32, i32* %tempSignal.addr, align 4
  store i32 %0, i32* @"\01?GlobalSignal@@3HA", align 4
  %1 = load i32, i32* %ID.addr, align 4
  %2 = load i32, i32* @"\01?thresholdForOthread@@3HA", align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ID.addr, align 4
  store i32 %3, i32* @"\01?GlobalThreadID@@3HA", align 4
  br label %while.body

while.body:                                       ; preds = %if.end, %if.then
  %4 = load i32, i32* %ID.addr, align 4
  %arrayidx = getelementptr inbounds [20 x i32], [20 x i32]* @"\01?WhileEndFlag@@3PAHA", i32 0, i32 %4
  %5 = load i32, i32* %arrayidx, align 4
  %cmp1 = icmp eq i32 %5, -1
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %while.body
  %6 = load i32, i32* %ID.addr, align 4
  %arrayidx3 = getelementptr inbounds [20 x i32], [20 x i32]* @"\01?WhileEndFlag@@3PAHA", i32 0, i32 %6
  store i32 0, i32* %arrayidx3, align 4
  br label %while.end

if.end:                                           ; preds = %while.body
  br label %while.body

while.end:                                        ; preds = %if.then2
  br label %if.end12

if.else:                                          ; preds = %entry
  %7 = load i32, i32* @"\01?totalnum@@3HA", align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* @"\01?totalnum@@3HA", align 4
  %8 = load i32, i32* %tempSignal.addr, align 4
  %9 = load i32, i32* %ID.addr, align 4
  %arrayidx4 = getelementptr inbounds [20 x [1000 x i32]], [20 x [1000 x i32]]* @"\01?CalcCallNumForOthread@@3PAY0DOI@HA", i32 0, i32 %9
  %arrayidx5 = getelementptr inbounds [1000 x i32], [1000 x i32]* %arrayidx4, i32 0, i32 %8
  %10 = load i32, i32* %arrayidx5, align 4
  %inc6 = add nsw i32 %10, 1
  store i32 %inc6, i32* %arrayidx5, align 4
  %11 = load i32, i32* %ID.addr, align 4
  %arrayidx7 = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?hMutexList@@3PAPAXA", i32 0, i32 %11
  %12 = load i8*, i8** %arrayidx7, align 4
  %call = call x86_stdcallcc i32 @"\01_SetEvent@4"(i8* %12)
  %13 = load i32, i32* %ID.addr, align 4
  %arrayidx8 = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?MutexFuncList@@3PAPAXA", i32 0, i32 %13
  %14 = load i8*, i8** %arrayidx8, align 4
  %call9 = call x86_stdcallcc i32 @"\01_WaitForSingleObject@8"(i8* %14, i32 -1)
  %15 = load i32, i32* %ID.addr, align 4
  %arrayidx10 = getelementptr inbounds [20 x i8*], [20 x i8*]* @"\01?MutexFuncList@@3PAPAXA", i32 0, i32 %15
  %16 = load i8*, i8** %arrayidx10, align 4
  %call11 = call x86_stdcallcc i32 @"\01_ResetEvent@4"(i8* %16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %while.end
  ret void
}

; Function Attrs: noinline nounwind
define i32 @match(%struct.Connector_struct* %a, %struct.Connector_struct* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %b.addr = alloca %struct.Connector_struct*, align 4
  %a.addr = alloca %struct.Connector_struct*, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.Connector_struct* %b, %struct.Connector_struct** %b.addr, align 4
  store %struct.Connector_struct* %a, %struct.Connector_struct** %a.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %b.addr, align 4
  %label1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 0
  %3 = load i16, i16* %label1, align 4
  %conv2 = sext i16 %3 to i32
  %cmp = icmp ne i32 %conv, %conv2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 2
  %5 = load i8, i8* %priority, align 4
  %conv4 = sext i8 %5 to i32
  store i32 %conv4, i32* %x, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %b.addr, align 4
  %priority5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 2
  %7 = load i8, i8* %priority5, align 4
  %conv6 = sext i8 %7 to i32
  store i32 %conv6, i32* %y, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 5
  %9 = load i8*, i8** %string, align 4
  store i8* %9, i8** %s, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %b.addr, align 4
  %string7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 5
  %11 = load i8*, i8** %string7, align 4
  store i8* %11, i8** %t, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end17, %if.end
  %12 = load i8*, i8** %s, align 4
  %13 = load i8, i8* %12, align 1
  %conv8 = sext i8 %13 to i32
  %call = call i32 @isupper_Package(i32 %conv8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %14 = load i8*, i8** %t, align 4
  %15 = load i8, i8* %14, align 1
  %conv9 = sext i8 %15 to i32
  %call10 = call i32 @isupper_Package(i32 %conv9)
  %tobool11 = icmp ne i32 %call10, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %16 = phi i1 [ true, %while.cond ], [ %tobool11, %lor.rhs ]
  br i1 %16, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %17 = load i8*, i8** %s, align 4
  %18 = load i8, i8* %17, align 1
  %conv12 = sext i8 %18 to i32
  %19 = load i8*, i8** %t, align 4
  %20 = load i8, i8* %19, align 1
  %conv13 = sext i8 %20 to i32
  %cmp14 = icmp ne i32 %conv12, %conv13
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end17:                                         ; preds = %while.body
  %21 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  %22 = load i8*, i8** %t, align 4
  %incdec.ptr18 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr18, i8** %t, align 4
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %23 = load i32, i32* %x, align 4
  %cmp19 = icmp eq i32 %23, 0
  br i1 %cmp19, label %land.lhs.true, label %if.else52

land.lhs.true:                                    ; preds = %while.end
  %24 = load i32, i32* %y, align 4
  %cmp21 = icmp eq i32 %24, 0
  br i1 %cmp21, label %if.then23, label %if.else52

if.then23:                                        ; preds = %land.lhs.true
  br label %while.cond24

while.cond24:                                     ; preds = %if.end50, %if.then23
  %25 = load i8*, i8** %s, align 4
  %26 = load i8, i8* %25, align 1
  %conv25 = sext i8 %26 to i32
  %cmp26 = icmp ne i32 %conv25, 0
  br i1 %cmp26, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond24
  %27 = load i8*, i8** %t, align 4
  %28 = load i8, i8* %27, align 1
  %conv28 = sext i8 %28 to i32
  %cmp29 = icmp ne i32 %conv28, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond24
  %29 = phi i1 [ false, %while.cond24 ], [ %cmp29, %land.rhs ]
  br i1 %29, label %while.body31, label %while.end51

while.body31:                                     ; preds = %land.end
  %30 = load i8*, i8** %s, align 4
  %31 = load i8, i8* %30, align 1
  %conv32 = sext i8 %31 to i32
  %cmp33 = icmp eq i32 %conv32, 42
  br i1 %cmp33, label %if.then47, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body31
  %32 = load i8*, i8** %t, align 4
  %33 = load i8, i8* %32, align 1
  %conv35 = sext i8 %33 to i32
  %cmp36 = icmp eq i32 %conv35, 42
  br i1 %cmp36, label %if.then47, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %lor.lhs.false
  %34 = load i8*, i8** %s, align 4
  %35 = load i8, i8* %34, align 1
  %conv39 = sext i8 %35 to i32
  %36 = load i8*, i8** %t, align 4
  %37 = load i8, i8* %36, align 1
  %conv40 = sext i8 %37 to i32
  %cmp41 = icmp eq i32 %conv39, %conv40
  br i1 %cmp41, label %land.lhs.true43, label %if.else

land.lhs.true43:                                  ; preds = %lor.lhs.false38
  %38 = load i8*, i8** %s, align 4
  %39 = load i8, i8* %38, align 1
  %conv44 = sext i8 %39 to i32
  %cmp45 = icmp ne i32 %conv44, 94
  br i1 %cmp45, label %if.then47, label %if.else

if.then47:                                        ; preds = %land.lhs.true43, %lor.lhs.false, %while.body31
  %40 = load i8*, i8** %s, align 4
  %incdec.ptr48 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr48, i8** %s, align 4
  %41 = load i8*, i8** %t, align 4
  %incdec.ptr49 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr49, i8** %t, align 4
  br label %if.end50

if.else:                                          ; preds = %land.lhs.true43, %lor.lhs.false38
  store i32 0, i32* %retval, align 4
  br label %return

if.end50:                                         ; preds = %if.then47
  br label %while.cond24

while.end51:                                      ; preds = %land.end
  store i32 1, i32* %retval, align 4
  br label %return

if.else52:                                        ; preds = %land.lhs.true, %while.end
  %42 = load i32, i32* %x, align 4
  %cmp53 = icmp eq i32 %42, 1
  br i1 %cmp53, label %land.lhs.true55, label %if.else87

land.lhs.true55:                                  ; preds = %if.else52
  %43 = load i32, i32* %y, align 4
  %cmp56 = icmp eq i32 %43, 2
  br i1 %cmp56, label %if.then58, label %if.else87

if.then58:                                        ; preds = %land.lhs.true55
  br label %while.cond59

while.cond59:                                     ; preds = %if.end85, %if.then58
  %44 = load i8*, i8** %s, align 4
  %45 = load i8, i8* %44, align 1
  %conv60 = sext i8 %45 to i32
  %cmp61 = icmp ne i32 %conv60, 0
  br i1 %cmp61, label %land.rhs63, label %land.end67

land.rhs63:                                       ; preds = %while.cond59
  %46 = load i8*, i8** %t, align 4
  %47 = load i8, i8* %46, align 1
  %conv64 = sext i8 %47 to i32
  %cmp65 = icmp ne i32 %conv64, 0
  br label %land.end67

land.end67:                                       ; preds = %land.rhs63, %while.cond59
  %48 = phi i1 [ false, %while.cond59 ], [ %cmp65, %land.rhs63 ]
  br i1 %48, label %while.body68, label %while.end86

while.body68:                                     ; preds = %land.end67
  %49 = load i8*, i8** %s, align 4
  %50 = load i8, i8* %49, align 1
  %conv69 = sext i8 %50 to i32
  %51 = load i8*, i8** %t, align 4
  %52 = load i8, i8* %51, align 1
  %conv70 = sext i8 %52 to i32
  %cmp71 = icmp eq i32 %conv69, %conv70
  br i1 %cmp71, label %if.then81, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %while.body68
  %53 = load i8*, i8** %s, align 4
  %54 = load i8, i8* %53, align 1
  %conv74 = sext i8 %54 to i32
  %cmp75 = icmp eq i32 %conv74, 42
  br i1 %cmp75, label %if.then81, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %lor.lhs.false73
  %55 = load i8*, i8** %t, align 4
  %56 = load i8, i8* %55, align 1
  %conv78 = sext i8 %56 to i32
  %cmp79 = icmp eq i32 %conv78, 94
  br i1 %cmp79, label %if.then81, label %if.else84

if.then81:                                        ; preds = %lor.lhs.false77, %lor.lhs.false73, %while.body68
  %57 = load i8*, i8** %s, align 4
  %incdec.ptr82 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr82, i8** %s, align 4
  %58 = load i8*, i8** %t, align 4
  %incdec.ptr83 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr83, i8** %t, align 4
  br label %if.end85

if.else84:                                        ; preds = %lor.lhs.false77
  store i32 0, i32* %retval, align 4
  br label %return

if.end85:                                         ; preds = %if.then81
  br label %while.cond59

while.end86:                                      ; preds = %land.end67
  store i32 1, i32* %retval, align 4
  br label %return

if.else87:                                        ; preds = %land.lhs.true55, %if.else52
  %59 = load i32, i32* %y, align 4
  %cmp88 = icmp eq i32 %59, 1
  br i1 %cmp88, label %land.lhs.true90, label %if.else122

land.lhs.true90:                                  ; preds = %if.else87
  %60 = load i32, i32* %x, align 4
  %cmp91 = icmp eq i32 %60, 2
  br i1 %cmp91, label %if.then93, label %if.else122

if.then93:                                        ; preds = %land.lhs.true90
  br label %while.cond94

while.cond94:                                     ; preds = %if.end120, %if.then93
  %61 = load i8*, i8** %s, align 4
  %62 = load i8, i8* %61, align 1
  %conv95 = sext i8 %62 to i32
  %cmp96 = icmp ne i32 %conv95, 0
  br i1 %cmp96, label %land.rhs98, label %land.end102

land.rhs98:                                       ; preds = %while.cond94
  %63 = load i8*, i8** %t, align 4
  %64 = load i8, i8* %63, align 1
  %conv99 = sext i8 %64 to i32
  %cmp100 = icmp ne i32 %conv99, 0
  br label %land.end102

land.end102:                                      ; preds = %land.rhs98, %while.cond94
  %65 = phi i1 [ false, %while.cond94 ], [ %cmp100, %land.rhs98 ]
  br i1 %65, label %while.body103, label %while.end121

while.body103:                                    ; preds = %land.end102
  %66 = load i8*, i8** %s, align 4
  %67 = load i8, i8* %66, align 1
  %conv104 = sext i8 %67 to i32
  %68 = load i8*, i8** %t, align 4
  %69 = load i8, i8* %68, align 1
  %conv105 = sext i8 %69 to i32
  %cmp106 = icmp eq i32 %conv104, %conv105
  br i1 %cmp106, label %if.then116, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %while.body103
  %70 = load i8*, i8** %t, align 4
  %71 = load i8, i8* %70, align 1
  %conv109 = sext i8 %71 to i32
  %cmp110 = icmp eq i32 %conv109, 42
  br i1 %cmp110, label %if.then116, label %lor.lhs.false112

lor.lhs.false112:                                 ; preds = %lor.lhs.false108
  %72 = load i8*, i8** %s, align 4
  %73 = load i8, i8* %72, align 1
  %conv113 = sext i8 %73 to i32
  %cmp114 = icmp eq i32 %conv113, 94
  br i1 %cmp114, label %if.then116, label %if.else119

if.then116:                                       ; preds = %lor.lhs.false112, %lor.lhs.false108, %while.body103
  %74 = load i8*, i8** %s, align 4
  %incdec.ptr117 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %incdec.ptr117, i8** %s, align 4
  %75 = load i8*, i8** %t, align 4
  %incdec.ptr118 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr118, i8** %t, align 4
  br label %if.end120

if.else119:                                       ; preds = %lor.lhs.false112
  store i32 0, i32* %retval, align 4
  br label %return

if.end120:                                        ; preds = %if.then116
  br label %while.cond94

while.end121:                                     ; preds = %land.end102
  store i32 1, i32* %retval, align 4
  br label %return

if.else122:                                       ; preds = %land.lhs.true90, %if.else87
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else122, %while.end121, %if.else119, %while.end86, %if.else84, %while.end51, %if.else, %if.then16, %if.then
  %76 = load i32, i32* %retval, align 4
  ret i32 %76
}

; Function Attrs: noinline nounwind
define void @init_table() #0 {
entry:
  %i = alloca i32, align 4
  %0 = load i32, i32* @N_words, align 4
  %cmp = icmp sge i32 %0, 10
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  store i32 65536, i32* @table_size, align 4
  br label %if.end4

if.else:                                          ; preds = %entry, %entry
  %1 = load i32, i32* @N_words, align 4
  %cmp1 = icmp sge i32 %1, 4
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else, %if.else
  %2 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %2, 4
  %mul = mul nsw i32 6, %sub
  %div = sdiv i32 %mul, 6
  %add = add nsw i32 %div, 4
  %shl = shl i32 1, %add
  store i32 %shl, i32* @table_size, align 4
  br label %if.end

if.else3:                                         ; preds = %if.else, %if.else
  store i32 16, i32* @table_size, align 4
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2, %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then, %if.end, %if.then
  %3 = load i32, i32* @table_size, align 4
  %mul5 = mul i32 %3, 4
  %call = call i8* @xalloc(i32 %mul5)
  %4 = bitcast i8* %call to %struct.Table_connector**
  store %struct.Table_connector** %4, %struct.Table_connector*** @table, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end4, %for.inc, %if.end4
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @table_size, align 4
  %cmp6 = icmp slt i32 %5, %6
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %7 = load i32, i32* %i, align 4
  %8 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %arrayidx = getelementptr inbounds %struct.Table_connector*, %struct.Table_connector** %8, i32 %7
  store %struct.Table_connector* null, %struct.Table_connector** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @hash(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost) #0 {
entry:
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %cost, i32* %cost.addr, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %i, align 4
  %shl = shl i32 %1, 1
  %add = add nsw i32 %0, %shl
  %2 = load i32, i32* %lw.addr, align 4
  %3 = load i32, i32* %i, align 4
  %add1 = add nsw i32 %2, %3
  %and = and i32 %add1, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %4 = load i32, i32* %arrayidx, align 4
  %add2 = add i32 %add, %4
  store i32 %add2, i32* %i, align 4
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %i, align 4
  %shl3 = shl i32 %6, 1
  %add4 = add nsw i32 %5, %shl3
  %7 = load i32, i32* %rw.addr, align 4
  %8 = load i32, i32* %i, align 4
  %add5 = add nsw i32 %7, %8
  %and6 = and i32 %add5, 255
  %arrayidx7 = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and6
  %9 = load i32, i32* %arrayidx7, align 4
  %add8 = add i32 %add4, %9
  store i32 %add8, i32* %i, align 4
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %i, align 4
  %shl9 = shl i32 %11, 1
  %add10 = add nsw i32 %10, %shl9
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %13 = ptrtoint %struct.Connector_struct* %12 to i32
  %14 = load i32, i32* %i, align 4
  %add11 = add nsw i32 %13, %14
  %15 = load i32, i32* @table_size, align 4
  %add12 = add nsw i32 %15, 1
  %rem = srem i32 %add11, %add12
  %and13 = and i32 %rem, 255
  %arrayidx14 = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and13
  %16 = load i32, i32* %arrayidx14, align 4
  %add15 = add i32 %add10, %16
  store i32 %add15, i32* %i, align 4
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %i, align 4
  %shl16 = shl i32 %18, 1
  %add17 = add nsw i32 %17, %shl16
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %20 = ptrtoint %struct.Connector_struct* %19 to i32
  %21 = load i32, i32* %i, align 4
  %add18 = add nsw i32 %20, %21
  %22 = load i32, i32* @table_size, align 4
  %add19 = add nsw i32 %22, 1
  %rem20 = srem i32 %add18, %add19
  %and21 = and i32 %rem20, 255
  %arrayidx22 = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and21
  %23 = load i32, i32* %arrayidx22, align 4
  %add23 = add i32 %add17, %23
  store i32 %add23, i32* %i, align 4
  %24 = load i32, i32* %i, align 4
  %25 = load i32, i32* %i, align 4
  %shl24 = shl i32 %25, 1
  %add25 = add nsw i32 %24, %shl24
  %26 = load i32, i32* %cost.addr, align 4
  %27 = load i32, i32* %i, align 4
  %add26 = add nsw i32 %26, %27
  %and27 = and i32 %add26, 255
  %arrayidx28 = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and27
  %28 = load i32, i32* %arrayidx28, align 4
  %add29 = add i32 %add25, %28
  store i32 %add29, i32* %i, align 4
  %29 = load i32, i32* %i, align 4
  %30 = load i32, i32* @table_size, align 4
  %sub = sub nsw i32 %30, 1
  %and30 = and i32 %29, %sub
  ret i32 %and30
}

; Function Attrs: noinline nounwind
define void @free_table() #0 {
entry:
  %i = alloca i32, align 4
  %t = alloca %struct.Table_connector*, align 4
  %x = alloca %struct.Table_connector*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc4, %entry, %for.inc4, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @table_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %arrayidx = getelementptr inbounds %struct.Table_connector*, %struct.Table_connector** %3, i32 %2
  %4 = load %struct.Table_connector*, %struct.Table_connector** %arrayidx, align 4
  store %struct.Table_connector* %4, %struct.Table_connector** %t, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cmp2 = icmp ne %struct.Table_connector* %5, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %next = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %6, i32 0, i32 6
  %7 = load %struct.Table_connector*, %struct.Table_connector** %next, align 4
  store %struct.Table_connector* %7, %struct.Table_connector** %x, align 4
  %8 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %9 = bitcast %struct.Table_connector* %8 to i8*
  call void @xfree(i8* %9, i32 24)
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %for.body3
  %10 = load %struct.Table_connector*, %struct.Table_connector** %x, align 4
  store %struct.Table_connector* %10, %struct.Table_connector** %t, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  br label %for.inc4

for.inc4:                                         ; preds = %for.end, %for.end
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end5:                                         ; preds = %for.cond, %for.cond
  %12 = load i32, i32* @table_size, align 4
  %mul = mul i32 %12, 4
  %13 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %14 = bitcast %struct.Table_connector** %13 to i8*
  call void @xfree(i8* %14, i32 %mul)
  ret void
}

; Function Attrs: noinline nounwind
define %struct.Table_connector* @table_pointer(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost) #0 {
entry:
  %retval = alloca %struct.Table_connector*, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %t = alloca %struct.Table_connector*, align 4
  store i32 %cost, i32* %cost.addr, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  %0 = load i32, i32* @N_hash_lookups, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @N_hash_lookups, align 4
  %1 = load i32, i32* @work_in_hash_lookups, align 4
  %inc1 = add nsw i32 %1, 1
  store i32 %inc1, i32* @work_in_hash_lookups, align 4
  %2 = load i32, i32* %cost.addr, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %5 = load i32, i32* %rw.addr, align 4
  %6 = load i32, i32* %lw.addr, align 4
  %call = call i32 @hash(i32 %6, i32 %5, %struct.Connector_struct* %4, %struct.Connector_struct* %3, i32 %2)
  %7 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %arrayidx = getelementptr inbounds %struct.Table_connector*, %struct.Table_connector** %7, i32 %call
  %8 = load %struct.Table_connector*, %struct.Table_connector** %arrayidx, align 4
  store %struct.Table_connector* %8, %struct.Table_connector** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cmp = icmp ne %struct.Table_connector* %9, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* @work_in_hash_lookups, align 4
  %inc2 = add nsw i32 %10, 1
  store i32 %inc2, i32* @work_in_hash_lookups, align 4
  %11 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %lw3 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %11, i32 0, i32 0
  %12 = load i16, i16* %lw3, align 4
  %conv = sext i16 %12 to i32
  %13 = load i32, i32* %lw.addr, align 4
  %cmp4 = icmp eq i32 %conv, %13
  br i1 %cmp4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %14 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %rw6 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %14, i32 0, i32 1
  %15 = load i16, i16* %rw6, align 2
  %conv7 = sext i16 %15 to i32
  %16 = load i32, i32* %rw.addr, align 4
  %cmp8 = icmp eq i32 %conv7, %16
  br i1 %cmp8, label %land.lhs.true10, label %if.end

land.lhs.true10:                                  ; preds = %land.lhs.true
  %17 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %le11 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %17, i32 0, i32 2
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %le11, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp12 = icmp eq %struct.Connector_struct* %18, %19
  br i1 %cmp12, label %land.lhs.true14, label %if.end

land.lhs.true14:                                  ; preds = %land.lhs.true10
  %20 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %re15 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %20, i32 0, i32 3
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %re15, align 4
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp16 = icmp eq %struct.Connector_struct* %21, %22
  br i1 %cmp16, label %land.lhs.true18, label %if.end

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %23 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cost19 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %23, i32 0, i32 4
  %24 = load i16, i16* %cost19, align 4
  %conv20 = sext i16 %24 to i32
  %25 = load i32, i32* %cost.addr, align 4
  %cmp21 = icmp eq i32 %conv20, %25
  br i1 %cmp21, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true18
  %26 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  store %struct.Table_connector* %26, %struct.Table_connector** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true18, %land.lhs.true14, %land.lhs.true10, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %27 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %next = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %27, i32 0, i32 6
  %28 = load %struct.Table_connector*, %struct.Table_connector** %next, align 4
  store %struct.Table_connector* %28, %struct.Table_connector** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.Table_connector* null, %struct.Table_connector** %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %29 = load %struct.Table_connector*, %struct.Table_connector** %retval, align 4
  ret %struct.Table_connector* %29
}

; Function Attrs: noinline nounwind
define i32 @table_lookup(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost) #0 {
entry:
  %retval = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %t = alloca %struct.Table_connector*, align 4
  store i32 %cost, i32* %cost.addr, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %3 = load i32, i32* %rw.addr, align 4
  %4 = load i32, i32* %lw.addr, align 4
  %call = call %struct.Table_connector* @table_pointer(i32 %4, i32 %3, %struct.Connector_struct* %2, %struct.Connector_struct* %1, i32 %0)
  store %struct.Table_connector* %call, %struct.Table_connector** %t, align 4
  %5 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cmp = icmp eq %struct.Table_connector* %5, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %6 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %6, i32 0, i32 5
  %7 = load i32, i32* %count, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define %struct.Table_connector* @table_store(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost, i32 %count) #0 {
entry:
  %count.addr = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %t = alloca %struct.Table_connector*, align 4
  %n = alloca %struct.Table_connector*, align 4
  %h = alloca i32, align 4
  store i32 %count, i32* %count.addr, align 4
  store i32 %cost, i32* %cost.addr, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  %0 = load i32, i32* @N_in_table, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @N_in_table, align 4
  %call = call i8* @xalloc(i32 24)
  %1 = bitcast i8* %call to %struct.Table_connector*
  store %struct.Table_connector* %1, %struct.Table_connector** %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %count1 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %3, i32 0, i32 5
  store i32 %2, i32* %count1, align 4
  %4 = load i32, i32* %lw.addr, align 4
  %conv = trunc i32 %4 to i16
  %5 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %lw2 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %5, i32 0, i32 0
  store i16 %conv, i16* %lw2, align 4
  %6 = load i32, i32* %rw.addr, align 4
  %conv3 = trunc i32 %6 to i16
  %7 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %rw4 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %7, i32 0, i32 1
  store i16 %conv3, i16* %rw4, align 2
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %9 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %le5 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %9, i32 0, i32 2
  store %struct.Connector_struct* %8, %struct.Connector_struct** %le5, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %11 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %re6 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %11, i32 0, i32 3
  store %struct.Connector_struct* %10, %struct.Connector_struct** %re6, align 4
  %12 = load i32, i32* %cost.addr, align 4
  %conv7 = trunc i32 %12 to i16
  %13 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %cost8 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %13, i32 0, i32 4
  store i16 %conv7, i16* %cost8, align 4
  %14 = load i32, i32* %cost.addr, align 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %17 = load i32, i32* %rw.addr, align 4
  %18 = load i32, i32* %lw.addr, align 4
  %call9 = call i32 @hash(i32 %18, i32 %17, %struct.Connector_struct* %16, %struct.Connector_struct* %15, i32 %14)
  store i32 %call9, i32* %h, align 4
  %19 = load i32, i32* %h, align 4
  %20 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %arrayidx = getelementptr inbounds %struct.Table_connector*, %struct.Table_connector** %20, i32 %19
  %21 = load %struct.Table_connector*, %struct.Table_connector** %arrayidx, align 4
  store %struct.Table_connector* %21, %struct.Table_connector** %t, align 4
  %22 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %23 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %next = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %23, i32 0, i32 6
  store %struct.Table_connector* %22, %struct.Table_connector** %next, align 4
  %24 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  %25 = load i32, i32* %h, align 4
  %26 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %arrayidx10 = getelementptr inbounds %struct.Table_connector*, %struct.Table_connector** %26, i32 %25
  store %struct.Table_connector* %24, %struct.Table_connector** %arrayidx10, align 4
  %27 = load %struct.Table_connector*, %struct.Table_connector** %n, align 4
  ret %struct.Table_connector* %27
}

; Function Attrs: noinline nounwind
define void @table_update(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost, i32 %count) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  %load_struct.BigStruct_6 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_6
  %struct.BigStruct_7 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  %load_struct.BigStruct_7 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_7
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  %load_struct.BigStruct_15 = load i32, i32* %struct.BigStruct_15
  %count.addr = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %t = alloca %struct.Table_connector*, align 4
  store i32 %load_struct.BigStruct_15, i32* %count.addr, align 4
  store i32 %load_struct.BigStruct_8, i32* %cost.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_7, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_6, %struct.Connector_struct** %le.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %rw.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %lw.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %3 = load i32, i32* %rw.addr, align 4
  %4 = load i32, i32* %lw.addr, align 4
  %call = call %struct.Table_connector* @table_pointer(i32 %4, i32 %3, %struct.Connector_struct* %2, %struct.Connector_struct* %1, i32 %0)
  store %struct.Table_connector* %call, %struct.Table_connector** %t, align 4
  %5 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cmp = icmp ne %struct.Table_connector* %5, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  %6 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1.334, i32 0, i32 0
  %7 = getelementptr inbounds [43 x i8], [43 x i8]* @.str.335, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %6, i8* %7)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %entry, %entry
  %8 = load i32, i32* %count.addr, align 4
  %9 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count2 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %9, i32 0, i32 5
  store i32 %8, i32* %count2, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i32 @pseudocount(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  %load_struct.BigStruct_6 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_6
  %struct.BigStruct_7 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  %load_struct.BigStruct_7 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_7
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %retval = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %count = alloca i32, align 4
  store i32 %load_struct.BigStruct_8, i32* %cost.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_7, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_6, %struct.Connector_struct** %le.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %rw.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %lw.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %3 = load i32, i32* %rw.addr, align 4
  %4 = load i32, i32* %lw.addr, align 4
  %call = call i32 @table_lookup(i32 %4, i32 %3, %struct.Connector_struct* %2, %struct.Connector_struct* %1, i32 %0)
  store i32 %call, i32* %count, align 4
  %5 = load i32, i32* %count, align 4
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry, %entry
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %6 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret i32 %6
}

; Function Attrs: noinline nounwind
define i32 @count(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re, i32 %cost) #0 {
entry:
  %retval = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %total = alloca i32, align 4
  %pseudototal = alloca i32, align 4
  %start_word = alloca i32, align 4
  %end_word = alloca i32, align 4
  %w = alloca i32, align 4
  %leftcount = alloca i32, align 4
  %rightcount = alloca i32, align 4
  %lcost = alloca i32, align 4
  %rcost = alloca i32, align 4
  %Lmatch = alloca i32, align 4
  %Rmatch = alloca i32, align 4
  %m = alloca %struct.Match_node_struct*, align 4
  %m1 = alloca %struct.Match_node_struct*, align 4
  %t = alloca %struct.Table_connector*, align 4
  store i32 %cost, i32* %cost.addr, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %cost.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %4 = load i32, i32* %rw.addr, align 4
  %5 = load i32, i32* %lw.addr, align 4
  %call = call %struct.Table_connector* @table_pointer(i32 %5, i32 %4, %struct.Connector_struct* %3, %struct.Connector_struct* %2, i32 %1)
  store %struct.Table_connector* %call, %struct.Table_connector** %t, align 4
  %6 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cmp1 = icmp eq %struct.Table_connector* %6, null
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %cost.addr, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %10 = load i32, i32* %rw.addr, align 4
  %11 = load i32, i32* %lw.addr, align 4
  %call3 = call %struct.Table_connector* @table_store(i32 %11, i32 %10, %struct.Connector_struct* %9, %struct.Connector_struct* %8, i32 %7, i32 0)
  store %struct.Table_connector* %call3, %struct.Table_connector** %t, align 4
  br label %if.end4

if.else:                                          ; preds = %if.end
  %12 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %12, i32 0, i32 5
  %13 = load i32, i32* %count, align 4
  store i32 %13, i32* %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.then2
  %14 = load i32, i32* %rw.addr, align 4
  %15 = load i32, i32* %lw.addr, align 4
  %add = add nsw i32 1, %15
  %cmp5 = icmp eq i32 %14, %add
  br i1 %cmp5, label %if.then6, label %if.end17

if.then6:                                         ; preds = %if.end4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp7 = icmp eq %struct.Connector_struct* %16, null
  br i1 %cmp7, label %land.lhs.true, label %if.else13

land.lhs.true:                                    ; preds = %if.then6
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp8 = icmp eq %struct.Connector_struct* %17, null
  br i1 %cmp8, label %land.lhs.true9, label %if.else13

land.lhs.true9:                                   ; preds = %land.lhs.true
  %18 = load i32, i32* %cost.addr, align 4
  %cmp10 = icmp eq i32 %18, 0
  br i1 %cmp10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %land.lhs.true9
  %19 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count12 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %19, i32 0, i32 5
  store i32 1, i32* %count12, align 4
  br label %if.end15

if.else13:                                        ; preds = %land.lhs.true9, %land.lhs.true, %if.then6
  %20 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count14 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %20, i32 0, i32 5
  store i32 0, i32* %count14, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  %21 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count16 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %21, i32 0, i32 5
  %22 = load i32, i32* %count16, align 4
  store i32 %22, i32* %retval, align 4
  br label %return

if.end17:                                         ; preds = %if.end4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp18 = icmp eq %struct.Connector_struct* %23, null
  br i1 %cmp18, label %land.lhs.true19, label %if.end30

land.lhs.true19:                                  ; preds = %if.end17
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp20 = icmp eq %struct.Connector_struct* %24, null
  br i1 %cmp20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %land.lhs.true19
  %25 = load i32, i32* %cost.addr, align 4
  %26 = load i32, i32* %rw.addr, align 4
  %27 = load i32, i32* %lw.addr, align 4
  %sub = sub nsw i32 %26, %27
  %sub22 = sub nsw i32 %sub, 1
  %cmp23 = icmp eq i32 %25, %sub22
  br i1 %cmp23, label %if.then24, label %if.else26

if.then24:                                        ; preds = %if.then21
  %28 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count25 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %28, i32 0, i32 5
  store i32 1, i32* %count25, align 4
  br label %if.end28

if.else26:                                        ; preds = %if.then21
  %29 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count27 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %29, i32 0, i32 5
  store i32 0, i32* %count27, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  %30 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count29 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %30, i32 0, i32 5
  %31 = load i32, i32* %count29, align 4
  store i32 %31, i32* %retval, align 4
  br label %return

if.end30:                                         ; preds = %land.lhs.true19, %if.end17
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp31 = icmp eq %struct.Connector_struct* %32, null
  br i1 %cmp31, label %if.then32, label %if.else34

if.then32:                                        ; preds = %if.end30
  %33 = load i32, i32* %lw.addr, align 4
  %add33 = add nsw i32 %33, 1
  store i32 %add33, i32* %start_word, align 4
  br label %if.end35

if.else34:                                        ; preds = %if.end30
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %34, i32 0, i32 1
  %35 = load i16, i16* %word, align 2
  %conv = sext i16 %35 to i32
  store i32 %conv, i32* %start_word, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then32
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp36 = icmp eq %struct.Connector_struct* %36, null
  br i1 %cmp36, label %if.then38, label %if.else45

if.then38:                                        ; preds = %if.end35
  %37 = load i32, i32* %rw.addr, align 4
  %sub39 = sub nsw i32 %37, 1
  %38 = load i32, i32* %lw.addr, align 4
  %39 = load i32, i32* @maxlinklength, align 4
  %add40 = add nsw i32 %38, %39
  %cmp41 = icmp slt i32 %sub39, %add40
  br i1 %cmp41, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then38
  %40 = load i32, i32* %rw.addr, align 4
  %sub43 = sub nsw i32 %40, 1
  br label %cond.end

cond.false:                                       ; preds = %if.then38
  %41 = load i32, i32* %lw.addr, align 4
  %42 = load i32, i32* @maxlinklength, align 4
  %add44 = add nsw i32 %41, %42
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub43, %cond.true ], [ %add44, %cond.false ]
  store i32 %cond, i32* %end_word, align 4
  br label %if.end48

if.else45:                                        ; preds = %if.end35
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %word46 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %43, i32 0, i32 1
  %44 = load i16, i16* %word46, align 2
  %conv47 = sext i16 %44 to i32
  store i32 %conv47, i32* %end_word, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.else45, %cond.end
  store i32 0, i32* %total, align 4
  %45 = load i32, i32* %start_word, align 4
  store i32 %45, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc273, %if.end48
  %46 = load i32, i32* %w, align 4
  %47 = load i32, i32* %end_word, align 4
  %cmp49 = icmp sle i32 %46, %47
  br i1 %cmp49, label %for.body, label %for.end275

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %rw.addr, align 4
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %50 = load i32, i32* %lw.addr, align 4
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %52 = load i32, i32* %w, align 4
  %call51 = call %struct.Match_node_struct* @form_match_list(i32 %52, %struct.Connector_struct* %51, i32 %50, %struct.Connector_struct* %49, i32 %48)
  store %struct.Match_node_struct* %call51, %struct.Match_node_struct** %m, align 4
  store %struct.Match_node_struct* %call51, %struct.Match_node_struct** %m1, align 4
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc270, %for.body
  %53 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %cmp53 = icmp ne %struct.Match_node_struct* %53, null
  br i1 %cmp53, label %for.body55, label %for.end272

for.body55:                                       ; preds = %for.cond52
  %54 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %d56 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %54, i32 0, i32 1
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d56, align 4
  store %struct.Disjunct_struct* %55, %struct.Disjunct_struct** %d, align 4
  store i32 0, i32* %lcost, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc, %for.body55
  %56 = load i32, i32* %lcost, align 4
  %57 = load i32, i32* %cost.addr, align 4
  %cmp58 = icmp sle i32 %56, %57
  br i1 %cmp58, label %for.body60, label %for.end

for.body60:                                       ; preds = %for.cond57
  %58 = load i32, i32* %cost.addr, align 4
  %59 = load i32, i32* %lcost, align 4
  %sub61 = sub nsw i32 %58, %59
  store i32 %sub61, i32* %rcost, align 4
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp62 = icmp ne %struct.Connector_struct* %60, null
  br i1 %cmp62, label %land.lhs.true64, label %land.end

land.lhs.true64:                                  ; preds = %for.body60
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %61, i32 0, i32 4
  %62 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp65 = icmp ne %struct.Connector_struct* %62, null
  br i1 %cmp65, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true64
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left67 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %63, i32 0, i32 4
  %64 = load %struct.Connector_struct*, %struct.Connector_struct** %left67, align 4
  %65 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %call68 = call i32 @match(%struct.Connector_struct* %65, %struct.Connector_struct* %64)
  %tobool = icmp ne i32 %call68, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true64, %for.body60
  %66 = phi i1 [ false, %land.lhs.true64 ], [ false, %for.body60 ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %66 to i32
  store i32 %land.ext, i32* %Lmatch, align 4
  %67 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %67, i32 0, i32 5
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp69 = icmp ne %struct.Connector_struct* %68, null
  br i1 %cmp69, label %land.lhs.true71, label %land.end78

land.lhs.true71:                                  ; preds = %land.end
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp72 = icmp ne %struct.Connector_struct* %69, null
  br i1 %cmp72, label %land.rhs74, label %land.end78

land.rhs74:                                       ; preds = %land.lhs.true71
  %70 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %71 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right75 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %71, i32 0, i32 5
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %right75, align 4
  %call76 = call i32 @match(%struct.Connector_struct* %72, %struct.Connector_struct* %70)
  %tobool77 = icmp ne i32 %call76, 0
  br label %land.end78

land.end78:                                       ; preds = %land.rhs74, %land.lhs.true71, %land.end
  %73 = phi i1 [ false, %land.lhs.true71 ], [ false, %land.end ], [ %tobool77, %land.rhs74 ]
  %land.ext79 = zext i1 %73 to i32
  store i32 %land.ext79, i32* %Rmatch, align 4
  store i32 0, i32* %leftcount, align 4
  store i32 0, i32* %rightcount, align 4
  %74 = load i32, i32* %Lmatch, align 4
  %tobool80 = icmp ne i32 %74, 0
  br i1 %tobool80, label %if.then81, label %if.end114

if.then81:                                        ; preds = %land.end78
  %75 = load i32, i32* %lcost, align 4
  %76 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left82 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %76, i32 0, i32 4
  %77 = load %struct.Connector_struct*, %struct.Connector_struct** %left82, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %77, i32 0, i32 4
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next83 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %79, i32 0, i32 4
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %next83, align 4
  %81 = load i32, i32* %w, align 4
  %82 = load i32, i32* %lw.addr, align 4
  %struct.BigStruct_049 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %82, i32* %struct.BigStruct_049
  %struct.BigStruct_550 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %81, i32* %struct.BigStruct_550
  %struct.BigStruct_651 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %80, %struct.Connector_struct** %struct.BigStruct_651
  %struct.BigStruct_752 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %78, %struct.Connector_struct** %struct.BigStruct_752
  %struct.BigStruct_853 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %75, i32* %struct.BigStruct_853
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3254 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3254 = load i32, i32* %struct.BigStruct_3254
  store i32 %load_struct.BigStruct_3254, i32* %leftcount, align 4
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %83, i32 0, i32 3
  %84 = load i8, i8* %multi, align 1
  %tobool85 = icmp ne i8 %84, 0
  br i1 %tobool85, label %if.then86, label %if.end91

if.then86:                                        ; preds = %if.then81
  %85 = load i32, i32* %lcost, align 4
  %86 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left87 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %86, i32 0, i32 4
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %left87, align 4
  %next88 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %87, i32 0, i32 4
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %next88, align 4
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %90 = load i32, i32* %w, align 4
  %91 = load i32, i32* %lw.addr, align 4
  %struct.BigStruct_043 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %91, i32* %struct.BigStruct_043
  %struct.BigStruct_544 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %90, i32* %struct.BigStruct_544
  %struct.BigStruct_645 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %89, %struct.Connector_struct** %struct.BigStruct_645
  %struct.BigStruct_746 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %88, %struct.Connector_struct** %struct.BigStruct_746
  %struct.BigStruct_847 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %85, i32* %struct.BigStruct_847
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3248 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3248 = load i32, i32* %struct.BigStruct_3248
  %92 = load i32, i32* %leftcount, align 4
  %add90 = add nsw i32 %92, %load_struct.BigStruct_3248
  store i32 %add90, i32* %leftcount, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then86, %if.then81
  %93 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left92 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %93, i32 0, i32 4
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %left92, align 4
  %multi93 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %94, i32 0, i32 3
  %95 = load i8, i8* %multi93, align 1
  %tobool94 = icmp ne i8 %95, 0
  br i1 %tobool94, label %if.then95, label %if.end100

if.then95:                                        ; preds = %if.end91
  %96 = load i32, i32* %lcost, align 4
  %97 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left96 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %97, i32 0, i32 4
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %left96, align 4
  %99 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next97 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %99, i32 0, i32 4
  %100 = load %struct.Connector_struct*, %struct.Connector_struct** %next97, align 4
  %101 = load i32, i32* %w, align 4
  %102 = load i32, i32* %lw.addr, align 4
  %struct.BigStruct_037 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %102, i32* %struct.BigStruct_037
  %struct.BigStruct_538 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %101, i32* %struct.BigStruct_538
  %struct.BigStruct_639 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %100, %struct.Connector_struct** %struct.BigStruct_639
  %struct.BigStruct_740 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %98, %struct.Connector_struct** %struct.BigStruct_740
  %struct.BigStruct_841 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %96, i32* %struct.BigStruct_841
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3242 = load i32, i32* %struct.BigStruct_3242
  %103 = load i32, i32* %leftcount, align 4
  %add99 = add nsw i32 %103, %load_struct.BigStruct_3242
  store i32 %add99, i32* %leftcount, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.then95, %if.end91
  %104 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi101 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %104, i32 0, i32 3
  %105 = load i8, i8* %multi101, align 1
  %conv102 = sext i8 %105 to i32
  %tobool103 = icmp ne i32 %conv102, 0
  br i1 %tobool103, label %land.lhs.true104, label %if.end113

land.lhs.true104:                                 ; preds = %if.end100
  %106 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left105 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %106, i32 0, i32 4
  %107 = load %struct.Connector_struct*, %struct.Connector_struct** %left105, align 4
  %multi106 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %107, i32 0, i32 3
  %108 = load i8, i8* %multi106, align 1
  %conv107 = sext i8 %108 to i32
  %tobool108 = icmp ne i32 %conv107, 0
  br i1 %tobool108, label %if.then109, label %if.end113

if.then109:                                       ; preds = %land.lhs.true104
  %109 = load i32, i32* %lcost, align 4
  %110 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left110 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %110, i32 0, i32 4
  %111 = load %struct.Connector_struct*, %struct.Connector_struct** %left110, align 4
  %112 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %113 = load i32, i32* %w, align 4
  %114 = load i32, i32* %lw.addr, align 4
  %struct.BigStruct_031 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %114, i32* %struct.BigStruct_031
  %struct.BigStruct_532 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %113, i32* %struct.BigStruct_532
  %struct.BigStruct_633 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %112, %struct.Connector_struct** %struct.BigStruct_633
  %struct.BigStruct_734 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %111, %struct.Connector_struct** %struct.BigStruct_734
  %struct.BigStruct_835 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %109, i32* %struct.BigStruct_835
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3236 = load i32, i32* %struct.BigStruct_3236
  %115 = load i32, i32* %leftcount, align 4
  %add112 = add nsw i32 %115, %load_struct.BigStruct_3236
  store i32 %add112, i32* %leftcount, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.then109, %land.lhs.true104, %if.end100
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %land.end78
  %116 = load i32, i32* %Rmatch, align 4
  %tobool115 = icmp ne i32 %116, 0
  br i1 %tobool115, label %if.then116, label %if.end151

if.then116:                                       ; preds = %if.end114
  %117 = load i32, i32* %rcost, align 4
  %118 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next117 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %118, i32 0, i32 4
  %119 = load %struct.Connector_struct*, %struct.Connector_struct** %next117, align 4
  %120 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right118 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %120, i32 0, i32 5
  %121 = load %struct.Connector_struct*, %struct.Connector_struct** %right118, align 4
  %next119 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %121, i32 0, i32 4
  %122 = load %struct.Connector_struct*, %struct.Connector_struct** %next119, align 4
  %123 = load i32, i32* %rw.addr, align 4
  %124 = load i32, i32* %w, align 4
  %struct.BigStruct_025 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %124, i32* %struct.BigStruct_025
  %struct.BigStruct_526 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %123, i32* %struct.BigStruct_526
  %struct.BigStruct_627 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %122, %struct.Connector_struct** %struct.BigStruct_627
  %struct.BigStruct_728 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %119, %struct.Connector_struct** %struct.BigStruct_728
  %struct.BigStruct_829 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %117, i32* %struct.BigStruct_829
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3230 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3230 = load i32, i32* %struct.BigStruct_3230
  store i32 %load_struct.BigStruct_3230, i32* %rightcount, align 4
  %125 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right121 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %125, i32 0, i32 5
  %126 = load %struct.Connector_struct*, %struct.Connector_struct** %right121, align 4
  %multi122 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %126, i32 0, i32 3
  %127 = load i8, i8* %multi122, align 1
  %tobool123 = icmp ne i8 %127, 0
  br i1 %tobool123, label %if.then124, label %if.end129

if.then124:                                       ; preds = %if.then116
  %128 = load i32, i32* %rcost, align 4
  %129 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next125 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %129, i32 0, i32 4
  %130 = load %struct.Connector_struct*, %struct.Connector_struct** %next125, align 4
  %131 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right126 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %131, i32 0, i32 5
  %132 = load %struct.Connector_struct*, %struct.Connector_struct** %right126, align 4
  %133 = load i32, i32* %rw.addr, align 4
  %134 = load i32, i32* %w, align 4
  %struct.BigStruct_019 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %134, i32* %struct.BigStruct_019
  %struct.BigStruct_520 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %133, i32* %struct.BigStruct_520
  %struct.BigStruct_621 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %132, %struct.Connector_struct** %struct.BigStruct_621
  %struct.BigStruct_722 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %130, %struct.Connector_struct** %struct.BigStruct_722
  %struct.BigStruct_823 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %128, i32* %struct.BigStruct_823
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3224 = load i32, i32* %struct.BigStruct_3224
  %135 = load i32, i32* %rightcount, align 4
  %add128 = add nsw i32 %135, %load_struct.BigStruct_3224
  store i32 %add128, i32* %rightcount, align 4
  br label %if.end129

if.end129:                                        ; preds = %if.then124, %if.then116
  %136 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi130 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %136, i32 0, i32 3
  %137 = load i8, i8* %multi130, align 1
  %tobool131 = icmp ne i8 %137, 0
  br i1 %tobool131, label %if.then132, label %if.end137

if.then132:                                       ; preds = %if.end129
  %138 = load i32, i32* %rcost, align 4
  %139 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %140 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right133 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %140, i32 0, i32 5
  %141 = load %struct.Connector_struct*, %struct.Connector_struct** %right133, align 4
  %next134 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %141, i32 0, i32 4
  %142 = load %struct.Connector_struct*, %struct.Connector_struct** %next134, align 4
  %143 = load i32, i32* %rw.addr, align 4
  %144 = load i32, i32* %w, align 4
  %struct.BigStruct_013 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %144, i32* %struct.BigStruct_013
  %struct.BigStruct_514 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %143, i32* %struct.BigStruct_514
  %struct.BigStruct_615 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %142, %struct.Connector_struct** %struct.BigStruct_615
  %struct.BigStruct_716 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %139, %struct.Connector_struct** %struct.BigStruct_716
  %struct.BigStruct_817 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %138, i32* %struct.BigStruct_817
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3218 = load i32, i32* %struct.BigStruct_3218
  %145 = load i32, i32* %rightcount, align 4
  %add136 = add nsw i32 %145, %load_struct.BigStruct_3218
  store i32 %add136, i32* %rightcount, align 4
  br label %if.end137

if.end137:                                        ; preds = %if.then132, %if.end129
  %146 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right138 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %146, i32 0, i32 5
  %147 = load %struct.Connector_struct*, %struct.Connector_struct** %right138, align 4
  %multi139 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %147, i32 0, i32 3
  %148 = load i8, i8* %multi139, align 1
  %conv140 = sext i8 %148 to i32
  %tobool141 = icmp ne i32 %conv140, 0
  br i1 %tobool141, label %land.lhs.true142, label %if.end150

land.lhs.true142:                                 ; preds = %if.end137
  %149 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi143 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %149, i32 0, i32 3
  %150 = load i8, i8* %multi143, align 1
  %conv144 = sext i8 %150 to i32
  %tobool145 = icmp ne i32 %conv144, 0
  br i1 %tobool145, label %if.then146, label %if.end150

if.then146:                                       ; preds = %land.lhs.true142
  %151 = load i32, i32* %rcost, align 4
  %152 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %153 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right147 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %153, i32 0, i32 5
  %154 = load %struct.Connector_struct*, %struct.Connector_struct** %right147, align 4
  %155 = load i32, i32* %rw.addr, align 4
  %156 = load i32, i32* %w, align 4
  %struct.BigStruct_07 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %156, i32* %struct.BigStruct_07
  %struct.BigStruct_58 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %155, i32* %struct.BigStruct_58
  %struct.BigStruct_69 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %154, %struct.Connector_struct** %struct.BigStruct_69
  %struct.BigStruct_710 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %152, %struct.Connector_struct** %struct.BigStruct_710
  %struct.BigStruct_811 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %151, i32* %struct.BigStruct_811
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %157 = load i32, i32* %rightcount, align 4
  %add149 = add nsw i32 %157, %load_struct.BigStruct_3212
  store i32 %add149, i32* %rightcount, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.then146, %land.lhs.true142, %if.end137
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.end114
  %158 = load i32, i32* %leftcount, align 4
  %159 = load i32, i32* %rightcount, align 4
  %mul = mul nsw i32 %158, %159
  store i32 %mul, i32* %pseudototal, align 4
  %160 = load i32, i32* %leftcount, align 4
  %cmp152 = icmp sgt i32 %160, 0
  br i1 %cmp152, label %if.then154, label %if.end159

if.then154:                                       ; preds = %if.end151
  %161 = load i32, i32* %leftcount, align 4
  %162 = load i32, i32* %rcost, align 4
  %163 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %164 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right155 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %164, i32 0, i32 5
  %165 = load %struct.Connector_struct*, %struct.Connector_struct** %right155, align 4
  %166 = load i32, i32* %rw.addr, align 4
  %167 = load i32, i32* %w, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %167, i32* %struct.BigStruct_01
  %struct.BigStruct_52 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %166, i32* %struct.BigStruct_52
  %struct.BigStruct_63 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %165, %struct.Connector_struct** %struct.BigStruct_63
  %struct.BigStruct_74 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %163, %struct.Connector_struct** %struct.BigStruct_74
  %struct.BigStruct_85 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %162, i32* %struct.BigStruct_85
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_326 = load i32, i32* %struct.BigStruct_326
  %mul157 = mul nsw i32 %161, %load_struct.BigStruct_326
  %168 = load i32, i32* %pseudototal, align 4
  %add158 = add nsw i32 %168, %mul157
  store i32 %add158, i32* %pseudototal, align 4
  br label %if.end159

if.end159:                                        ; preds = %if.then154, %if.end151
  %169 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp160 = icmp eq %struct.Connector_struct* %169, null
  br i1 %cmp160, label %land.lhs.true162, label %if.end170

land.lhs.true162:                                 ; preds = %if.end159
  %170 = load i32, i32* %rightcount, align 4
  %cmp163 = icmp sgt i32 %170, 0
  br i1 %cmp163, label %if.then165, label %if.end170

if.then165:                                       ; preds = %land.lhs.true162
  %171 = load i32, i32* %rightcount, align 4
  %172 = load i32, i32* %lcost, align 4
  %173 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left166 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %173, i32 0, i32 4
  %174 = load %struct.Connector_struct*, %struct.Connector_struct** %left166, align 4
  %175 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %176 = load i32, i32* %w, align 4
  %177 = load i32, i32* %lw.addr, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %177, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %176, i32* %struct.BigStruct_5
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %175, %struct.Connector_struct** %struct.BigStruct_6
  %struct.BigStruct_7 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %174, %struct.Connector_struct** %struct.BigStruct_7
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %172, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 5, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %mul168 = mul nsw i32 %171, %load_struct.BigStruct_32
  %178 = load i32, i32* %pseudototal, align 4
  %add169 = add nsw i32 %178, %mul168
  store i32 %add169, i32* %pseudototal, align 4
  br label %if.end170

if.end170:                                        ; preds = %if.then165, %land.lhs.true162, %if.end159
  %179 = load i32, i32* %pseudototal, align 4
  %cmp171 = icmp ne i32 %179, 0
  br i1 %cmp171, label %if.then173, label %if.end269

if.then173:                                       ; preds = %if.end170
  store i32 0, i32* %leftcount, align 4
  store i32 0, i32* %rightcount, align 4
  %180 = load i32, i32* %Lmatch, align 4
  %tobool174 = icmp ne i32 %180, 0
  br i1 %tobool174, label %if.then175, label %if.end210

if.then175:                                       ; preds = %if.then173
  %181 = load i32, i32* %lcost, align 4
  %182 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left176 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %182, i32 0, i32 4
  %183 = load %struct.Connector_struct*, %struct.Connector_struct** %left176, align 4
  %next177 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %183, i32 0, i32 4
  %184 = load %struct.Connector_struct*, %struct.Connector_struct** %next177, align 4
  %185 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next178 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %185, i32 0, i32 4
  %186 = load %struct.Connector_struct*, %struct.Connector_struct** %next178, align 4
  %187 = load i32, i32* %w, align 4
  %188 = load i32, i32* %lw.addr, align 4
  %call179 = call i32 @count(i32 %188, i32 %187, %struct.Connector_struct* %186, %struct.Connector_struct* %184, i32 %181)
  store i32 %call179, i32* %leftcount, align 4
  %189 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi180 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %189, i32 0, i32 3
  %190 = load i8, i8* %multi180, align 1
  %tobool181 = icmp ne i8 %190, 0
  br i1 %tobool181, label %if.then182, label %if.end187

if.then182:                                       ; preds = %if.then175
  %191 = load i32, i32* %lcost, align 4
  %192 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left183 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %192, i32 0, i32 4
  %193 = load %struct.Connector_struct*, %struct.Connector_struct** %left183, align 4
  %next184 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %193, i32 0, i32 4
  %194 = load %struct.Connector_struct*, %struct.Connector_struct** %next184, align 4
  %195 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %196 = load i32, i32* %w, align 4
  %197 = load i32, i32* %lw.addr, align 4
  %call185 = call i32 @count(i32 %197, i32 %196, %struct.Connector_struct* %195, %struct.Connector_struct* %194, i32 %191)
  %198 = load i32, i32* %leftcount, align 4
  %add186 = add nsw i32 %198, %call185
  store i32 %add186, i32* %leftcount, align 4
  br label %if.end187

if.end187:                                        ; preds = %if.then182, %if.then175
  %199 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left188 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %199, i32 0, i32 4
  %200 = load %struct.Connector_struct*, %struct.Connector_struct** %left188, align 4
  %multi189 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %200, i32 0, i32 3
  %201 = load i8, i8* %multi189, align 1
  %tobool190 = icmp ne i8 %201, 0
  br i1 %tobool190, label %if.then191, label %if.end196

if.then191:                                       ; preds = %if.end187
  %202 = load i32, i32* %lcost, align 4
  %203 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left192 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %203, i32 0, i32 4
  %204 = load %struct.Connector_struct*, %struct.Connector_struct** %left192, align 4
  %205 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next193 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %205, i32 0, i32 4
  %206 = load %struct.Connector_struct*, %struct.Connector_struct** %next193, align 4
  %207 = load i32, i32* %w, align 4
  %208 = load i32, i32* %lw.addr, align 4
  %call194 = call i32 @count(i32 %208, i32 %207, %struct.Connector_struct* %206, %struct.Connector_struct* %204, i32 %202)
  %209 = load i32, i32* %leftcount, align 4
  %add195 = add nsw i32 %209, %call194
  store i32 %add195, i32* %leftcount, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then191, %if.end187
  %210 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi197 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %210, i32 0, i32 3
  %211 = load i8, i8* %multi197, align 1
  %conv198 = sext i8 %211 to i32
  %tobool199 = icmp ne i32 %conv198, 0
  br i1 %tobool199, label %land.lhs.true200, label %if.end209

land.lhs.true200:                                 ; preds = %if.end196
  %212 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left201 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %212, i32 0, i32 4
  %213 = load %struct.Connector_struct*, %struct.Connector_struct** %left201, align 4
  %multi202 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %213, i32 0, i32 3
  %214 = load i8, i8* %multi202, align 1
  %conv203 = sext i8 %214 to i32
  %tobool204 = icmp ne i32 %conv203, 0
  br i1 %tobool204, label %if.then205, label %if.end209

if.then205:                                       ; preds = %land.lhs.true200
  %215 = load i32, i32* %lcost, align 4
  %216 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left206 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %216, i32 0, i32 4
  %217 = load %struct.Connector_struct*, %struct.Connector_struct** %left206, align 4
  %218 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %219 = load i32, i32* %w, align 4
  %220 = load i32, i32* %lw.addr, align 4
  %call207 = call i32 @count(i32 %220, i32 %219, %struct.Connector_struct* %218, %struct.Connector_struct* %217, i32 %215)
  %221 = load i32, i32* %leftcount, align 4
  %add208 = add nsw i32 %221, %call207
  store i32 %add208, i32* %leftcount, align 4
  br label %if.end209

if.end209:                                        ; preds = %if.then205, %land.lhs.true200, %if.end196
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.then173
  %222 = load i32, i32* %Rmatch, align 4
  %tobool211 = icmp ne i32 %222, 0
  br i1 %tobool211, label %if.then212, label %if.end247

if.then212:                                       ; preds = %if.end210
  %223 = load i32, i32* %rcost, align 4
  %224 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next213 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %224, i32 0, i32 4
  %225 = load %struct.Connector_struct*, %struct.Connector_struct** %next213, align 4
  %226 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right214 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %226, i32 0, i32 5
  %227 = load %struct.Connector_struct*, %struct.Connector_struct** %right214, align 4
  %next215 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %227, i32 0, i32 4
  %228 = load %struct.Connector_struct*, %struct.Connector_struct** %next215, align 4
  %229 = load i32, i32* %rw.addr, align 4
  %230 = load i32, i32* %w, align 4
  %call216 = call i32 @count(i32 %230, i32 %229, %struct.Connector_struct* %228, %struct.Connector_struct* %225, i32 %223)
  store i32 %call216, i32* %rightcount, align 4
  %231 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right217 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %231, i32 0, i32 5
  %232 = load %struct.Connector_struct*, %struct.Connector_struct** %right217, align 4
  %multi218 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %232, i32 0, i32 3
  %233 = load i8, i8* %multi218, align 1
  %tobool219 = icmp ne i8 %233, 0
  br i1 %tobool219, label %if.then220, label %if.end225

if.then220:                                       ; preds = %if.then212
  %234 = load i32, i32* %rcost, align 4
  %235 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next221 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %235, i32 0, i32 4
  %236 = load %struct.Connector_struct*, %struct.Connector_struct** %next221, align 4
  %237 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right222 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %237, i32 0, i32 5
  %238 = load %struct.Connector_struct*, %struct.Connector_struct** %right222, align 4
  %239 = load i32, i32* %rw.addr, align 4
  %240 = load i32, i32* %w, align 4
  %call223 = call i32 @count(i32 %240, i32 %239, %struct.Connector_struct* %238, %struct.Connector_struct* %236, i32 %234)
  %241 = load i32, i32* %rightcount, align 4
  %add224 = add nsw i32 %241, %call223
  store i32 %add224, i32* %rightcount, align 4
  br label %if.end225

if.end225:                                        ; preds = %if.then220, %if.then212
  %242 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi226 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %242, i32 0, i32 3
  %243 = load i8, i8* %multi226, align 1
  %tobool227 = icmp ne i8 %243, 0
  br i1 %tobool227, label %if.then228, label %if.end233

if.then228:                                       ; preds = %if.end225
  %244 = load i32, i32* %rcost, align 4
  %245 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %246 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right229 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %246, i32 0, i32 5
  %247 = load %struct.Connector_struct*, %struct.Connector_struct** %right229, align 4
  %next230 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %247, i32 0, i32 4
  %248 = load %struct.Connector_struct*, %struct.Connector_struct** %next230, align 4
  %249 = load i32, i32* %rw.addr, align 4
  %250 = load i32, i32* %w, align 4
  %call231 = call i32 @count(i32 %250, i32 %249, %struct.Connector_struct* %248, %struct.Connector_struct* %245, i32 %244)
  %251 = load i32, i32* %rightcount, align 4
  %add232 = add nsw i32 %251, %call231
  store i32 %add232, i32* %rightcount, align 4
  br label %if.end233

if.end233:                                        ; preds = %if.then228, %if.end225
  %252 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right234 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %252, i32 0, i32 5
  %253 = load %struct.Connector_struct*, %struct.Connector_struct** %right234, align 4
  %multi235 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %253, i32 0, i32 3
  %254 = load i8, i8* %multi235, align 1
  %conv236 = sext i8 %254 to i32
  %tobool237 = icmp ne i32 %conv236, 0
  br i1 %tobool237, label %land.lhs.true238, label %if.end246

land.lhs.true238:                                 ; preds = %if.end233
  %255 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi239 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %255, i32 0, i32 3
  %256 = load i8, i8* %multi239, align 1
  %conv240 = sext i8 %256 to i32
  %tobool241 = icmp ne i32 %conv240, 0
  br i1 %tobool241, label %if.then242, label %if.end246

if.then242:                                       ; preds = %land.lhs.true238
  %257 = load i32, i32* %rcost, align 4
  %258 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %259 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right243 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %259, i32 0, i32 5
  %260 = load %struct.Connector_struct*, %struct.Connector_struct** %right243, align 4
  %261 = load i32, i32* %rw.addr, align 4
  %262 = load i32, i32* %w, align 4
  %call244 = call i32 @count(i32 %262, i32 %261, %struct.Connector_struct* %260, %struct.Connector_struct* %258, i32 %257)
  %263 = load i32, i32* %rightcount, align 4
  %add245 = add nsw i32 %263, %call244
  store i32 %add245, i32* %rightcount, align 4
  br label %if.end246

if.end246:                                        ; preds = %if.then242, %land.lhs.true238, %if.end233
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.end210
  %264 = load i32, i32* %leftcount, align 4
  %265 = load i32, i32* %rightcount, align 4
  %mul248 = mul nsw i32 %264, %265
  %266 = load i32, i32* %total, align 4
  %add249 = add nsw i32 %266, %mul248
  store i32 %add249, i32* %total, align 4
  %267 = load i32, i32* %leftcount, align 4
  %cmp250 = icmp sgt i32 %267, 0
  br i1 %cmp250, label %if.then252, label %if.end257

if.then252:                                       ; preds = %if.end247
  %268 = load i32, i32* %leftcount, align 4
  %269 = load i32, i32* %rcost, align 4
  %270 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %271 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right253 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %271, i32 0, i32 5
  %272 = load %struct.Connector_struct*, %struct.Connector_struct** %right253, align 4
  %273 = load i32, i32* %rw.addr, align 4
  %274 = load i32, i32* %w, align 4
  %call254 = call i32 @count(i32 %274, i32 %273, %struct.Connector_struct* %272, %struct.Connector_struct* %270, i32 %269)
  %mul255 = mul nsw i32 %268, %call254
  %275 = load i32, i32* %total, align 4
  %add256 = add nsw i32 %275, %mul255
  store i32 %add256, i32* %total, align 4
  br label %if.end257

if.end257:                                        ; preds = %if.then252, %if.end247
  %276 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp258 = icmp eq %struct.Connector_struct* %276, null
  br i1 %cmp258, label %land.lhs.true260, label %if.end268

land.lhs.true260:                                 ; preds = %if.end257
  %277 = load i32, i32* %rightcount, align 4
  %cmp261 = icmp sgt i32 %277, 0
  br i1 %cmp261, label %if.then263, label %if.end268

if.then263:                                       ; preds = %land.lhs.true260
  %278 = load i32, i32* %rightcount, align 4
  %279 = load i32, i32* %lcost, align 4
  %280 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left264 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %280, i32 0, i32 4
  %281 = load %struct.Connector_struct*, %struct.Connector_struct** %left264, align 4
  %282 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %283 = load i32, i32* %w, align 4
  %284 = load i32, i32* %lw.addr, align 4
  %call265 = call i32 @count(i32 %284, i32 %283, %struct.Connector_struct* %282, %struct.Connector_struct* %281, i32 %279)
  %mul266 = mul nsw i32 %278, %call265
  %285 = load i32, i32* %total, align 4
  %add267 = add nsw i32 %285, %mul266
  store i32 %add267, i32* %total, align 4
  br label %if.end268

if.end268:                                        ; preds = %if.then263, %land.lhs.true260, %if.end257
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.end170
  br label %for.inc

for.inc:                                          ; preds = %if.end269
  %286 = load i32, i32* %lcost, align 4
  %inc = add nsw i32 %286, 1
  store i32 %inc, i32* %lcost, align 4
  br label %for.cond57

for.end:                                          ; preds = %for.cond57
  br label %for.inc270

for.inc270:                                       ; preds = %for.end
  %287 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %next271 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %287, i32 0, i32 0
  %288 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next271, align 4
  store %struct.Match_node_struct* %288, %struct.Match_node_struct** %m, align 4
  br label %for.cond52

for.end272:                                       ; preds = %for.cond52
  %289 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m1, align 4
  call void @put_match_list(%struct.Match_node_struct* %289)
  br label %for.inc273

for.inc273:                                       ; preds = %for.end272
  %290 = load i32, i32* %w, align 4
  %inc274 = add nsw i32 %290, 1
  store i32 %inc274, i32* %w, align 4
  br label %for.cond

for.end275:                                       ; preds = %for.cond
  %291 = load i32, i32* %total, align 4
  %292 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count276 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %292, i32 0, i32 5
  store i32 %291, i32* %count276, align 4
  %293 = load i32, i32* %total, align 4
  store i32 %293, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end275, %if.end28, %if.end15, %if.else, %if.then
  %294 = load i32, i32* %retval, align 4
  ret i32 %294
}

; Function Attrs: noinline nounwind
define i32 @parse(i32 %cost) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %cost.addr = alloca i32, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %total = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %cost.addr, align 4
  store i32 0, i32* %total, align 4
  %0 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 0, i32 2
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %0, align 4
  store %struct.Disjunct_struct* %1, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %5 = load i32, i32* %cost.addr, align 4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 5
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %8 = load i32, i32* @N_words, align 4
  %call = call i32 @count(i32 0, i32 %8, %struct.Connector_struct* %7, %struct.Connector_struct* null, i32 %5)
  %9 = load i32, i32* %total, align 4
  %add = add nsw i32 %9, %call
  store i32 %add, i32* %total, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 0
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %12 = load i32, i32* %cost.addr, align 4
  %13 = load i32, i32* @N_words, align 4
  %call2 = call i32 @count(i32 0, i32 %13, %struct.Connector_struct* null, %struct.Connector_struct* null, i32 %12)
  %14 = load i32, i32* %total, align 4
  %add3 = add nsw i32 %14, %call2
  store i32 %add3, i32* %total, align 4
  %15 = load i32, i32* @verbosity, align 4
  %cmp4 = icmp sgt i32 %15, 1
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %for.end, %for.end
  %16 = load i32, i32* %total, align 4
  %17 = load i32, i32* %cost.addr, align 4
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.2.338, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %18, i32 %17, i32 %16)
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %for.end, %if.then5, %for.end
  %19 = load i32, i32* %total, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %19, i32* %struct.BigStruct_32
  ret i32 %19
}

; Function Attrs: noinline nounwind
define i32 @region_valid(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re) #0 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %left_valid = alloca i32, align 4
  %right_valid = alloca i32, align 4
  %found = alloca i32, align 4
  %i = alloca i32, align 4
  %start_word = alloca i32, align 4
  %end_word = alloca i32, align 4
  %w = alloca i32, align 4
  %m = alloca %struct.Match_node_struct*, align 4
  %m1 = alloca %struct.Match_node_struct*, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %2 = load i32, i32* %rw.addr, align 4
  %3 = load i32, i32* %lw.addr, align 4
  %call = call i32 @table_lookup(i32 %3, i32 %2, %struct.Connector_struct* %1, %struct.Connector_struct* %0, i32 0)
  store i32 %call, i32* %i, align 4
  %4 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %i, align 4
  store i32 %5, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %6, null
  br i1 %cmp1, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp2 = icmp eq %struct.Connector_struct* %7, null
  br i1 %cmp2, label %land.lhs.true3, label %if.end7

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load i32, i32* %rw.addr, align 4
  %9 = load i32, i32* %lw.addr, align 4
  %10 = bitcast [250 x i8*]* @deletable to [0 x i8*]*
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* %10, i32 0, i32 %9
  %11 = load i8*, i8** %arrayidx, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %11, i32 %8
  %12 = load i8, i8* %arrayidx4, align 1
  %conv = sext i8 %12 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then5, label %if.end7

if.then5:                                         ; preds = %land.lhs.true3
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %15 = load i32, i32* %rw.addr, align 4
  %16 = load i32, i32* %lw.addr, align 4
  %call6 = call %struct.Table_connector* @table_store(i32 %16, i32 %15, %struct.Connector_struct* %14, %struct.Connector_struct* %13, i32 0, i32 1)
  store i32 1, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp8 = icmp eq %struct.Connector_struct* %17, null
  br i1 %cmp8, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end7
  %18 = load i32, i32* %lw.addr, align 4
  %add = add nsw i32 %18, 1
  store i32 %add, i32* %start_word, align 4
  br label %if.end12

if.else:                                          ; preds = %if.end7
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 1
  %20 = load i16, i16* %word, align 2
  %conv11 = sext i16 %20 to i32
  store i32 %conv11, i32* %start_word, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then10
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp13 = icmp eq %struct.Connector_struct* %21, null
  br i1 %cmp13, label %if.then15, label %if.else21

if.then15:                                        ; preds = %if.end12
  %22 = load i32, i32* %rw.addr, align 4
  %sub = sub nsw i32 %22, 1
  %23 = load i32, i32* %lw.addr, align 4
  %24 = load i32, i32* @maxlinklength, align 4
  %add16 = add nsw i32 %23, %24
  %cmp17 = icmp slt i32 %sub, %add16
  br i1 %cmp17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then15
  %25 = load i32, i32* %rw.addr, align 4
  %sub19 = sub nsw i32 %25, 1
  br label %cond.end

cond.false:                                       ; preds = %if.then15
  %26 = load i32, i32* %lw.addr, align 4
  %27 = load i32, i32* @maxlinklength, align 4
  %add20 = add nsw i32 %26, %27
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub19, %cond.true ], [ %add20, %cond.false ]
  store i32 %cond, i32* %end_word, align 4
  br label %if.end24

if.else21:                                        ; preds = %if.end12
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %word22 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %28, i32 0, i32 1
  %29 = load i16, i16* %word22, align 2
  %conv23 = sext i16 %29 to i32
  store i32 %conv23, i32* %end_word, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %cond.end
  store i32 0, i32* %found, align 4
  %30 = load i32, i32* %start_word, align 4
  store i32 %30, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc151, %if.end24
  %31 = load i32, i32* %w, align 4
  %32 = load i32, i32* %end_word, align 4
  %cmp25 = icmp sle i32 %31, %32
  br i1 %cmp25, label %for.body, label %for.end153

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %rw.addr, align 4
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %35 = load i32, i32* %lw.addr, align 4
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %37 = load i32, i32* %w, align 4
  %call27 = call %struct.Match_node_struct* @form_match_list(i32 %37, %struct.Connector_struct* %36, i32 %35, %struct.Connector_struct* %34, i32 %33)
  store %struct.Match_node_struct* %call27, %struct.Match_node_struct** %m, align 4
  store %struct.Match_node_struct* %call27, %struct.Match_node_struct** %m1, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc, %for.body
  %38 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %cmp29 = icmp ne %struct.Match_node_struct* %38, null
  br i1 %cmp29, label %for.body31, label %for.end

for.body31:                                       ; preds = %for.cond28
  %39 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %d32 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %39, i32 0, i32 1
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d32, align 4
  store %struct.Disjunct_struct* %40, %struct.Disjunct_struct** %d, align 4
  %41 = load i32, i32* @mark_cost, align 4
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* @mark_cost, align 4
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp33 = icmp ne %struct.Connector_struct* %42, null
  br i1 %cmp33, label %land.lhs.true35, label %land.end75

land.lhs.true35:                                  ; preds = %for.body31
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %43, i32 0, i32 4
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp36 = icmp ne %struct.Connector_struct* %44, null
  br i1 %cmp36, label %land.lhs.true38, label %land.end75

land.lhs.true38:                                  ; preds = %land.lhs.true35
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left39 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 4
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %left39, align 4
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %call40 = call i32 @prune_match(%struct.Connector_struct* %47, %struct.Connector_struct* %46)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %land.rhs, label %land.end75

land.rhs:                                         ; preds = %land.lhs.true38
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left42 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %48, i32 0, i32 4
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %left42, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %49, i32 0, i32 4
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next43 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %next43, align 4
  %53 = load i32, i32* %w, align 4
  %54 = load i32, i32* %lw.addr, align 4
  %call44 = call i32 @region_valid(i32 %54, i32 %53, %struct.Connector_struct* %52, %struct.Connector_struct* %50)
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %55, i32 0, i32 3
  %56 = load i8, i8* %multi, align 1
  %conv46 = sext i8 %56 to i32
  %tobool47 = icmp ne i32 %conv46, 0
  br i1 %tobool47, label %land.lhs.true48, label %lor.lhs.false53

land.lhs.true48:                                  ; preds = %lor.lhs.false
  %57 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left49 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %57, i32 0, i32 4
  %58 = load %struct.Connector_struct*, %struct.Connector_struct** %left49, align 4
  %next50 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %58, i32 0, i32 4
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %next50, align 4
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %61 = load i32, i32* %w, align 4
  %62 = load i32, i32* %lw.addr, align 4
  %call51 = call i32 @region_valid(i32 %62, i32 %61, %struct.Connector_struct* %60, %struct.Connector_struct* %59)
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %lor.end, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %land.lhs.true48, %lor.lhs.false
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left54 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %63, i32 0, i32 4
  %64 = load %struct.Connector_struct*, %struct.Connector_struct** %left54, align 4
  %multi55 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %64, i32 0, i32 3
  %65 = load i8, i8* %multi55, align 1
  %conv56 = sext i8 %65 to i32
  %tobool57 = icmp ne i32 %conv56, 0
  br i1 %tobool57, label %land.lhs.true58, label %lor.rhs

land.lhs.true58:                                  ; preds = %lor.lhs.false53
  %66 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left59 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %66, i32 0, i32 4
  %67 = load %struct.Connector_struct*, %struct.Connector_struct** %left59, align 4
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next60 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %68, i32 0, i32 4
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %next60, align 4
  %70 = load i32, i32* %w, align 4
  %71 = load i32, i32* %lw.addr, align 4
  %call61 = call i32 @region_valid(i32 %71, i32 %70, %struct.Connector_struct* %69, %struct.Connector_struct* %67)
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true58, %lor.lhs.false53
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi63 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %72, i32 0, i32 3
  %73 = load i8, i8* %multi63, align 1
  %conv64 = sext i8 %73 to i32
  %tobool65 = icmp ne i32 %conv64, 0
  br i1 %tobool65, label %land.lhs.true66, label %land.end

land.lhs.true66:                                  ; preds = %lor.rhs
  %74 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left67 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %74, i32 0, i32 4
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %left67, align 4
  %multi68 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %75, i32 0, i32 3
  %76 = load i8, i8* %multi68, align 1
  %conv69 = sext i8 %76 to i32
  %tobool70 = icmp ne i32 %conv69, 0
  br i1 %tobool70, label %land.rhs71, label %land.end

land.rhs71:                                       ; preds = %land.lhs.true66
  %77 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left72 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %77, i32 0, i32 4
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %left72, align 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %80 = load i32, i32* %w, align 4
  %81 = load i32, i32* %lw.addr, align 4
  %call73 = call i32 @region_valid(i32 %81, i32 %80, %struct.Connector_struct* %79, %struct.Connector_struct* %78)
  %tobool74 = icmp ne i32 %call73, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs71, %land.lhs.true66, %lor.rhs
  %82 = phi i1 [ false, %land.lhs.true66 ], [ false, %lor.rhs ], [ %tobool74, %land.rhs71 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.lhs.true58, %land.lhs.true48, %land.rhs
  %83 = phi i1 [ true, %land.lhs.true58 ], [ true, %land.lhs.true48 ], [ true, %land.rhs ], [ %82, %land.end ]
  br label %land.end75

land.end75:                                       ; preds = %lor.end, %land.lhs.true38, %land.lhs.true35, %for.body31
  %84 = phi i1 [ false, %land.lhs.true38 ], [ false, %land.lhs.true35 ], [ false, %for.body31 ], [ %83, %lor.end ]
  %land.ext = zext i1 %84 to i32
  store i32 %land.ext, i32* %left_valid, align 4
  %85 = load i32, i32* %left_valid, align 4
  %tobool76 = icmp ne i32 %85, 0
  br i1 %tobool76, label %land.lhs.true77, label %if.end81

land.lhs.true77:                                  ; preds = %land.end75
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %87 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %87, i32 0, i32 5
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %89 = load i32, i32* %rw.addr, align 4
  %90 = load i32, i32* %w, align 4
  %call78 = call i32 @region_valid(i32 %90, i32 %89, %struct.Connector_struct* %88, %struct.Connector_struct* %86)
  %tobool79 = icmp ne i32 %call78, 0
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %land.lhs.true77
  store i32 1, i32* %found, align 4
  br label %for.end

if.end81:                                         ; preds = %land.lhs.true77, %land.end75
  %91 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right82 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %91, i32 0, i32 5
  %92 = load %struct.Connector_struct*, %struct.Connector_struct** %right82, align 4
  %cmp83 = icmp ne %struct.Connector_struct* %92, null
  br i1 %cmp83, label %land.lhs.true85, label %land.end133

land.lhs.true85:                                  ; preds = %if.end81
  %93 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp86 = icmp ne %struct.Connector_struct* %93, null
  br i1 %cmp86, label %land.lhs.true88, label %land.end133

land.lhs.true88:                                  ; preds = %land.lhs.true85
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %95 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right89 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %95, i32 0, i32 5
  %96 = load %struct.Connector_struct*, %struct.Connector_struct** %right89, align 4
  %call90 = call i32 @prune_match(%struct.Connector_struct* %96, %struct.Connector_struct* %94)
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %land.rhs92, label %land.end133

land.rhs92:                                       ; preds = %land.lhs.true88
  %97 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next93 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %97, i32 0, i32 4
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %next93, align 4
  %99 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right94 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %99, i32 0, i32 5
  %100 = load %struct.Connector_struct*, %struct.Connector_struct** %right94, align 4
  %next95 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %100, i32 0, i32 4
  %101 = load %struct.Connector_struct*, %struct.Connector_struct** %next95, align 4
  %102 = load i32, i32* %rw.addr, align 4
  %103 = load i32, i32* %w, align 4
  %call96 = call i32 @region_valid(i32 %103, i32 %102, %struct.Connector_struct* %101, %struct.Connector_struct* %98)
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %lor.end132, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %land.rhs92
  %104 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right99 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %104, i32 0, i32 5
  %105 = load %struct.Connector_struct*, %struct.Connector_struct** %right99, align 4
  %multi100 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %105, i32 0, i32 3
  %106 = load i8, i8* %multi100, align 1
  %conv101 = sext i8 %106 to i32
  %tobool102 = icmp ne i32 %conv101, 0
  br i1 %tobool102, label %land.lhs.true103, label %lor.lhs.false108

land.lhs.true103:                                 ; preds = %lor.lhs.false98
  %107 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next104 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %107, i32 0, i32 4
  %108 = load %struct.Connector_struct*, %struct.Connector_struct** %next104, align 4
  %109 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right105 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %109, i32 0, i32 5
  %110 = load %struct.Connector_struct*, %struct.Connector_struct** %right105, align 4
  %111 = load i32, i32* %rw.addr, align 4
  %112 = load i32, i32* %w, align 4
  %call106 = call i32 @region_valid(i32 %112, i32 %111, %struct.Connector_struct* %110, %struct.Connector_struct* %108)
  %tobool107 = icmp ne i32 %call106, 0
  br i1 %tobool107, label %lor.end132, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %land.lhs.true103, %lor.lhs.false98
  %113 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi109 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %113, i32 0, i32 3
  %114 = load i8, i8* %multi109, align 1
  %conv110 = sext i8 %114 to i32
  %tobool111 = icmp ne i32 %conv110, 0
  br i1 %tobool111, label %land.lhs.true112, label %lor.rhs117

land.lhs.true112:                                 ; preds = %lor.lhs.false108
  %115 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %116 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right113 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %116, i32 0, i32 5
  %117 = load %struct.Connector_struct*, %struct.Connector_struct** %right113, align 4
  %next114 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %117, i32 0, i32 4
  %118 = load %struct.Connector_struct*, %struct.Connector_struct** %next114, align 4
  %119 = load i32, i32* %rw.addr, align 4
  %120 = load i32, i32* %w, align 4
  %call115 = call i32 @region_valid(i32 %120, i32 %119, %struct.Connector_struct* %118, %struct.Connector_struct* %115)
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %lor.end132, label %lor.rhs117

lor.rhs117:                                       ; preds = %land.lhs.true112, %lor.lhs.false108
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right118 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %121, i32 0, i32 5
  %122 = load %struct.Connector_struct*, %struct.Connector_struct** %right118, align 4
  %multi119 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %122, i32 0, i32 3
  %123 = load i8, i8* %multi119, align 1
  %conv120 = sext i8 %123 to i32
  %tobool121 = icmp ne i32 %conv120, 0
  br i1 %tobool121, label %land.lhs.true122, label %land.end130

land.lhs.true122:                                 ; preds = %lor.rhs117
  %124 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi123 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %124, i32 0, i32 3
  %125 = load i8, i8* %multi123, align 1
  %conv124 = sext i8 %125 to i32
  %tobool125 = icmp ne i32 %conv124, 0
  br i1 %tobool125, label %land.rhs126, label %land.end130

land.rhs126:                                      ; preds = %land.lhs.true122
  %126 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %127 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right127 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %127, i32 0, i32 5
  %128 = load %struct.Connector_struct*, %struct.Connector_struct** %right127, align 4
  %129 = load i32, i32* %rw.addr, align 4
  %130 = load i32, i32* %w, align 4
  %call128 = call i32 @region_valid(i32 %130, i32 %129, %struct.Connector_struct* %128, %struct.Connector_struct* %126)
  %tobool129 = icmp ne i32 %call128, 0
  br label %land.end130

land.end130:                                      ; preds = %land.rhs126, %land.lhs.true122, %lor.rhs117
  %131 = phi i1 [ false, %land.lhs.true122 ], [ false, %lor.rhs117 ], [ %tobool129, %land.rhs126 ]
  br label %lor.end132

lor.end132:                                       ; preds = %land.end130, %land.lhs.true112, %land.lhs.true103, %land.rhs92
  %132 = phi i1 [ true, %land.lhs.true112 ], [ true, %land.lhs.true103 ], [ true, %land.rhs92 ], [ %131, %land.end130 ]
  br label %land.end133

land.end133:                                      ; preds = %lor.end132, %land.lhs.true88, %land.lhs.true85, %if.end81
  %133 = phi i1 [ false, %land.lhs.true88 ], [ false, %land.lhs.true85 ], [ false, %if.end81 ], [ %132, %lor.end132 ]
  %land.ext134 = zext i1 %133 to i32
  store i32 %land.ext134, i32* %right_valid, align 4
  %134 = load i32, i32* %left_valid, align 4
  %tobool135 = icmp ne i32 %134, 0
  br i1 %tobool135, label %land.lhs.true136, label %lor.lhs.false138

land.lhs.true136:                                 ; preds = %land.end133
  %135 = load i32, i32* %right_valid, align 4
  %tobool137 = icmp ne i32 %135, 0
  br i1 %tobool137, label %if.then144, label %lor.lhs.false138

lor.lhs.false138:                                 ; preds = %land.lhs.true136, %land.end133
  %136 = load i32, i32* %right_valid, align 4
  %tobool139 = icmp ne i32 %136, 0
  br i1 %tobool139, label %land.lhs.true140, label %if.end145

land.lhs.true140:                                 ; preds = %lor.lhs.false138
  %137 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left141 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %137, i32 0, i32 4
  %138 = load %struct.Connector_struct*, %struct.Connector_struct** %left141, align 4
  %139 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %140 = load i32, i32* %w, align 4
  %141 = load i32, i32* %lw.addr, align 4
  %call142 = call i32 @region_valid(i32 %141, i32 %140, %struct.Connector_struct* %139, %struct.Connector_struct* %138)
  %tobool143 = icmp ne i32 %call142, 0
  br i1 %tobool143, label %if.then144, label %if.end145

if.then144:                                       ; preds = %land.lhs.true140, %land.lhs.true136
  store i32 1, i32* %found, align 4
  br label %for.end

if.end145:                                        ; preds = %land.lhs.true140, %lor.lhs.false138
  br label %for.inc

for.inc:                                          ; preds = %if.end145
  %142 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %next146 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %142, i32 0, i32 0
  %143 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next146, align 4
  store %struct.Match_node_struct* %143, %struct.Match_node_struct** %m, align 4
  br label %for.cond28

for.end:                                          ; preds = %if.then144, %if.then80, %for.cond28
  %144 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m1, align 4
  call void @put_match_list(%struct.Match_node_struct* %144)
  %145 = load i32, i32* %found, align 4
  %cmp147 = icmp ne i32 %145, 0
  br i1 %cmp147, label %if.then149, label %if.end150

if.then149:                                       ; preds = %for.end
  br label %for.end153

if.end150:                                        ; preds = %for.end
  br label %for.inc151

for.inc151:                                       ; preds = %if.end150
  %146 = load i32, i32* %w, align 4
  %inc152 = add nsw i32 %146, 1
  store i32 %inc152, i32* %w, align 4
  br label %for.cond

for.end153:                                       ; preds = %if.then149, %for.cond
  %147 = load i32, i32* %found, align 4
  %148 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %149 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %150 = load i32, i32* %rw.addr, align 4
  %151 = load i32, i32* %lw.addr, align 4
  %call154 = call %struct.Table_connector* @table_store(i32 %151, i32 %150, %struct.Connector_struct* %149, %struct.Connector_struct* %148, i32 0, i32 %147)
  %152 = load i32, i32* %found, align 4
  store i32 %152, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end153, %if.then5, %if.then
  %153 = load i32, i32* %retval, align 4
  ret i32 %153
}

; Function Attrs: noinline nounwind
define void @mark_region(i32 %lw, i32 %rw, %struct.Connector_struct* %le, %struct.Connector_struct* %re) #0 {
entry:
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %left_valid = alloca i32, align 4
  %right_valid = alloca i32, align 4
  %i = alloca i32, align 4
  %start_word = alloca i32, align 4
  %end_word = alloca i32, align 4
  %w = alloca i32, align 4
  %m = alloca %struct.Match_node_struct*, align 4
  %m1 = alloca %struct.Match_node_struct*, align 4
  store %struct.Connector_struct* %re, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %le, %struct.Connector_struct** %le.addr, align 4
  store i32 %rw, i32* %rw.addr, align 4
  store i32 %lw, i32* %lw.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %2 = load i32, i32* %rw.addr, align 4
  %3 = load i32, i32* %lw.addr, align 4
  %call = call i32 @region_valid(i32 %3, i32 %2, %struct.Connector_struct* %1, %struct.Connector_struct* %0)
  store i32 %call, i32* %i, align 4
  %4 = load i32, i32* %i, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %i, align 4
  %cmp1 = icmp eq i32 %5, 2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end281

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %8 = load i32, i32* %rw.addr, align 4
  %9 = load i32, i32* %lw.addr, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %9, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %8, i32* %struct.BigStruct_5
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  store %struct.Connector_struct* %7, %struct.Connector_struct** %struct.BigStruct_6
  %struct.BigStruct_7 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  store %struct.Connector_struct* %6, %struct.Connector_struct** %struct.BigStruct_7
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_8
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  store i32 2, i32* %struct.BigStruct_15
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 89, i32 0)
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp2 = icmp eq %struct.Connector_struct* %10, null
  br i1 %cmp2, label %land.lhs.true, label %if.end18

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp3 = icmp eq %struct.Connector_struct* %11, null
  br i1 %cmp3, label %land.lhs.true4, label %if.end18

land.lhs.true4:                                   ; preds = %land.lhs.true
  %12 = load i32, i32* @null_links, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %land.lhs.true5, label %if.end18

land.lhs.true5:                                   ; preds = %land.lhs.true4
  %13 = load i32, i32* %rw.addr, align 4
  %14 = load i32, i32* %lw.addr, align 4
  %add = add nsw i32 1, %14
  %cmp6 = icmp ne i32 %13, %add
  br i1 %cmp6, label %if.then7, label %if.end18

if.then7:                                         ; preds = %land.lhs.true5
  %15 = load i32, i32* %lw.addr, align 4
  %add8 = add nsw i32 %15, 1
  store i32 %add8, i32* %w, align 4
  %16 = load i32, i32* %w, align 4
  %17 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %17, i32 0, i32 %16
  %d9 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d9, align 4
  store %struct.Disjunct_struct* %18, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then7
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp10 = icmp ne %struct.Disjunct_struct* %19, null
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp11 = icmp eq %struct.Connector_struct* %21, null
  br i1 %cmp11, label %land.lhs.true12, label %if.end17

land.lhs.true12:                                  ; preds = %for.body
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 5
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %24 = load i32, i32* %rw.addr, align 4
  %25 = load i32, i32* %w, align 4
  %call13 = call i32 @region_valid(i32 %25, i32 %24, %struct.Connector_struct* %23, %struct.Connector_struct* null)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %land.lhs.true12
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 2
  store i8 1, i8* %marked, align 2
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %27, i32 0, i32 5
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %right16, align 4
  %29 = load i32, i32* %rw.addr, align 4
  %30 = load i32, i32* %w, align 4
  call void @mark_region(i32 %30, i32 %29, %struct.Connector_struct* %28, %struct.Connector_struct* null)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %land.lhs.true12, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end17
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 0
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %32, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* %rw.addr, align 4
  %34 = load i32, i32* %w, align 4
  call void @mark_region(i32 %34, i32 %33, %struct.Connector_struct* null, %struct.Connector_struct* null)
  br label %for.end281

if.end18:                                         ; preds = %land.lhs.true5, %land.lhs.true4, %land.lhs.true, %if.end
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp19 = icmp eq %struct.Connector_struct* %35, null
  br i1 %cmp19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end18
  %36 = load i32, i32* %lw.addr, align 4
  %add21 = add nsw i32 %36, 1
  store i32 %add21, i32* %start_word, align 4
  br label %if.end22

if.else:                                          ; preds = %if.end18
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 1
  %38 = load i16, i16* %word, align 2
  %conv = sext i16 %38 to i32
  store i32 %conv, i32* %start_word, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then20
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp23 = icmp eq %struct.Connector_struct* %39, null
  br i1 %cmp23, label %if.then25, label %if.else31

if.then25:                                        ; preds = %if.end22
  %40 = load i32, i32* %rw.addr, align 4
  %sub = sub nsw i32 %40, 1
  %41 = load i32, i32* %lw.addr, align 4
  %42 = load i32, i32* @maxlinklength, align 4
  %add26 = add nsw i32 %41, %42
  %cmp27 = icmp slt i32 %sub, %add26
  br i1 %cmp27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then25
  %43 = load i32, i32* %rw.addr, align 4
  %sub29 = sub nsw i32 %43, 1
  br label %cond.end

cond.false:                                       ; preds = %if.then25
  %44 = load i32, i32* %lw.addr, align 4
  %45 = load i32, i32* @maxlinklength, align 4
  %add30 = add nsw i32 %44, %45
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub29, %cond.true ], [ %add30, %cond.false ]
  store i32 %cond, i32* %end_word, align 4
  br label %if.end34

if.else31:                                        ; preds = %if.end22
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %word32 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %46, i32 0, i32 1
  %47 = load i16, i16* %word32, align 2
  %conv33 = sext i16 %47 to i32
  store i32 %conv33, i32* %end_word, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %cond.end
  %48 = load i32, i32* %start_word, align 4
  store i32 %48, i32* %w, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc279, %if.end34
  %49 = load i32, i32* %w, align 4
  %50 = load i32, i32* %end_word, align 4
  %cmp36 = icmp sle i32 %49, %50
  br i1 %cmp36, label %for.body38, label %for.end281

for.body38:                                       ; preds = %for.cond35
  %51 = load i32, i32* %rw.addr, align 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %53 = load i32, i32* %lw.addr, align 4
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %55 = load i32, i32* %w, align 4
  %call39 = call %struct.Match_node_struct* @form_match_list(i32 %55, %struct.Connector_struct* %54, i32 %53, %struct.Connector_struct* %52, i32 %51)
  store %struct.Match_node_struct* %call39, %struct.Match_node_struct** %m, align 4
  store %struct.Match_node_struct* %call39, %struct.Match_node_struct** %m1, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc276, %for.body38
  %56 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %cmp41 = icmp ne %struct.Match_node_struct* %56, null
  br i1 %cmp41, label %for.body43, label %for.end278

for.body43:                                       ; preds = %for.cond40
  %57 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %d44 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %57, i32 0, i32 1
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d44, align 4
  store %struct.Disjunct_struct* %58, %struct.Disjunct_struct** %d, align 4
  %59 = load i32, i32* @mark_cost, align 4
  %inc = add nsw i32 %59, 1
  store i32 %inc, i32* @mark_cost, align 4
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %cmp45 = icmp ne %struct.Connector_struct* %60, null
  br i1 %cmp45, label %land.lhs.true47, label %land.end90

land.lhs.true47:                                  ; preds = %for.body43
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left48 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %61, i32 0, i32 4
  %62 = load %struct.Connector_struct*, %struct.Connector_struct** %left48, align 4
  %cmp49 = icmp ne %struct.Connector_struct* %62, null
  br i1 %cmp49, label %land.lhs.true51, label %land.end90

land.lhs.true51:                                  ; preds = %land.lhs.true47
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left52 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %63, i32 0, i32 4
  %64 = load %struct.Connector_struct*, %struct.Connector_struct** %left52, align 4
  %65 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %call53 = call i32 @prune_match(%struct.Connector_struct* %65, %struct.Connector_struct* %64)
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %land.rhs, label %land.end90

land.rhs:                                         ; preds = %land.lhs.true51
  %66 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left55 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %66, i32 0, i32 4
  %67 = load %struct.Connector_struct*, %struct.Connector_struct** %left55, align 4
  %next56 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %67, i32 0, i32 4
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %next56, align 4
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next57 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %69, i32 0, i32 4
  %70 = load %struct.Connector_struct*, %struct.Connector_struct** %next57, align 4
  %71 = load i32, i32* %w, align 4
  %72 = load i32, i32* %lw.addr, align 4
  %call58 = call i32 @region_valid(i32 %72, i32 %71, %struct.Connector_struct* %70, %struct.Connector_struct* %68)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %lor.end, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %land.rhs
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %73, i32 0, i32 3
  %74 = load i8, i8* %multi, align 1
  %conv61 = sext i8 %74 to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %land.lhs.true63, label %lor.lhs.false68

land.lhs.true63:                                  ; preds = %lor.lhs.false60
  %75 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left64 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %75, i32 0, i32 4
  %76 = load %struct.Connector_struct*, %struct.Connector_struct** %left64, align 4
  %next65 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %76, i32 0, i32 4
  %77 = load %struct.Connector_struct*, %struct.Connector_struct** %next65, align 4
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %79 = load i32, i32* %w, align 4
  %80 = load i32, i32* %lw.addr, align 4
  %call66 = call i32 @region_valid(i32 %80, i32 %79, %struct.Connector_struct* %78, %struct.Connector_struct* %77)
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %lor.end, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %land.lhs.true63, %lor.lhs.false60
  %81 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %81, i32 0, i32 4
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %left69, align 4
  %multi70 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %82, i32 0, i32 3
  %83 = load i8, i8* %multi70, align 1
  %conv71 = sext i8 %83 to i32
  %tobool72 = icmp ne i32 %conv71, 0
  br i1 %tobool72, label %land.lhs.true73, label %lor.rhs

land.lhs.true73:                                  ; preds = %lor.lhs.false68
  %84 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left74 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %84, i32 0, i32 4
  %85 = load %struct.Connector_struct*, %struct.Connector_struct** %left74, align 4
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next75 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %86, i32 0, i32 4
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %next75, align 4
  %88 = load i32, i32* %w, align 4
  %89 = load i32, i32* %lw.addr, align 4
  %call76 = call i32 @region_valid(i32 %89, i32 %88, %struct.Connector_struct* %87, %struct.Connector_struct* %85)
  %tobool77 = icmp ne i32 %call76, 0
  br i1 %tobool77, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true73, %lor.lhs.false68
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi78 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %90, i32 0, i32 3
  %91 = load i8, i8* %multi78, align 1
  %conv79 = sext i8 %91 to i32
  %tobool80 = icmp ne i32 %conv79, 0
  br i1 %tobool80, label %land.lhs.true81, label %land.end

land.lhs.true81:                                  ; preds = %lor.rhs
  %92 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left82 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %92, i32 0, i32 4
  %93 = load %struct.Connector_struct*, %struct.Connector_struct** %left82, align 4
  %multi83 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %93, i32 0, i32 3
  %94 = load i8, i8* %multi83, align 1
  %conv84 = sext i8 %94 to i32
  %tobool85 = icmp ne i32 %conv84, 0
  br i1 %tobool85, label %land.rhs86, label %land.end

land.rhs86:                                       ; preds = %land.lhs.true81
  %95 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left87 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %95, i32 0, i32 4
  %96 = load %struct.Connector_struct*, %struct.Connector_struct** %left87, align 4
  %97 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %98 = load i32, i32* %w, align 4
  %99 = load i32, i32* %lw.addr, align 4
  %call88 = call i32 @region_valid(i32 %99, i32 %98, %struct.Connector_struct* %97, %struct.Connector_struct* %96)
  %tobool89 = icmp ne i32 %call88, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs86, %land.lhs.true81, %lor.rhs
  %100 = phi i1 [ false, %land.lhs.true81 ], [ false, %lor.rhs ], [ %tobool89, %land.rhs86 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.lhs.true73, %land.lhs.true63, %land.rhs
  %101 = phi i1 [ true, %land.lhs.true73 ], [ true, %land.lhs.true63 ], [ true, %land.rhs ], [ %100, %land.end ]
  br label %land.end90

land.end90:                                       ; preds = %lor.end, %land.lhs.true51, %land.lhs.true47, %for.body43
  %102 = phi i1 [ false, %land.lhs.true51 ], [ false, %land.lhs.true47 ], [ false, %for.body43 ], [ %101, %lor.end ]
  %land.ext = zext i1 %102 to i32
  store i32 %land.ext, i32* %left_valid, align 4
  %103 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right91 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %103, i32 0, i32 5
  %104 = load %struct.Connector_struct*, %struct.Connector_struct** %right91, align 4
  %cmp92 = icmp ne %struct.Connector_struct* %104, null
  br i1 %cmp92, label %land.lhs.true94, label %land.end142

land.lhs.true94:                                  ; preds = %land.end90
  %105 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %cmp95 = icmp ne %struct.Connector_struct* %105, null
  br i1 %cmp95, label %land.lhs.true97, label %land.end142

land.lhs.true97:                                  ; preds = %land.lhs.true94
  %106 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %107 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right98 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %107, i32 0, i32 5
  %108 = load %struct.Connector_struct*, %struct.Connector_struct** %right98, align 4
  %call99 = call i32 @prune_match(%struct.Connector_struct* %108, %struct.Connector_struct* %106)
  %tobool100 = icmp ne i32 %call99, 0
  br i1 %tobool100, label %land.rhs101, label %land.end142

land.rhs101:                                      ; preds = %land.lhs.true97
  %109 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next102 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %109, i32 0, i32 4
  %110 = load %struct.Connector_struct*, %struct.Connector_struct** %next102, align 4
  %111 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right103 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %111, i32 0, i32 5
  %112 = load %struct.Connector_struct*, %struct.Connector_struct** %right103, align 4
  %next104 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %112, i32 0, i32 4
  %113 = load %struct.Connector_struct*, %struct.Connector_struct** %next104, align 4
  %114 = load i32, i32* %rw.addr, align 4
  %115 = load i32, i32* %w, align 4
  %call105 = call i32 @region_valid(i32 %115, i32 %114, %struct.Connector_struct* %113, %struct.Connector_struct* %110)
  %tobool106 = icmp ne i32 %call105, 0
  br i1 %tobool106, label %lor.end141, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %land.rhs101
  %116 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right108 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %116, i32 0, i32 5
  %117 = load %struct.Connector_struct*, %struct.Connector_struct** %right108, align 4
  %multi109 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %117, i32 0, i32 3
  %118 = load i8, i8* %multi109, align 1
  %conv110 = sext i8 %118 to i32
  %tobool111 = icmp ne i32 %conv110, 0
  br i1 %tobool111, label %land.lhs.true112, label %lor.lhs.false117

land.lhs.true112:                                 ; preds = %lor.lhs.false107
  %119 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next113 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %119, i32 0, i32 4
  %120 = load %struct.Connector_struct*, %struct.Connector_struct** %next113, align 4
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right114 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %121, i32 0, i32 5
  %122 = load %struct.Connector_struct*, %struct.Connector_struct** %right114, align 4
  %123 = load i32, i32* %rw.addr, align 4
  %124 = load i32, i32* %w, align 4
  %call115 = call i32 @region_valid(i32 %124, i32 %123, %struct.Connector_struct* %122, %struct.Connector_struct* %120)
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %lor.end141, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %land.lhs.true112, %lor.lhs.false107
  %125 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi118 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %125, i32 0, i32 3
  %126 = load i8, i8* %multi118, align 1
  %conv119 = sext i8 %126 to i32
  %tobool120 = icmp ne i32 %conv119, 0
  br i1 %tobool120, label %land.lhs.true121, label %lor.rhs126

land.lhs.true121:                                 ; preds = %lor.lhs.false117
  %127 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %128 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right122 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %128, i32 0, i32 5
  %129 = load %struct.Connector_struct*, %struct.Connector_struct** %right122, align 4
  %next123 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %129, i32 0, i32 4
  %130 = load %struct.Connector_struct*, %struct.Connector_struct** %next123, align 4
  %131 = load i32, i32* %rw.addr, align 4
  %132 = load i32, i32* %w, align 4
  %call124 = call i32 @region_valid(i32 %132, i32 %131, %struct.Connector_struct* %130, %struct.Connector_struct* %127)
  %tobool125 = icmp ne i32 %call124, 0
  br i1 %tobool125, label %lor.end141, label %lor.rhs126

lor.rhs126:                                       ; preds = %land.lhs.true121, %lor.lhs.false117
  %133 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right127 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %133, i32 0, i32 5
  %134 = load %struct.Connector_struct*, %struct.Connector_struct** %right127, align 4
  %multi128 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %134, i32 0, i32 3
  %135 = load i8, i8* %multi128, align 1
  %conv129 = sext i8 %135 to i32
  %tobool130 = icmp ne i32 %conv129, 0
  br i1 %tobool130, label %land.lhs.true131, label %land.end139

land.lhs.true131:                                 ; preds = %lor.rhs126
  %136 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi132 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %136, i32 0, i32 3
  %137 = load i8, i8* %multi132, align 1
  %conv133 = sext i8 %137 to i32
  %tobool134 = icmp ne i32 %conv133, 0
  br i1 %tobool134, label %land.rhs135, label %land.end139

land.rhs135:                                      ; preds = %land.lhs.true131
  %138 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %139 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right136 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %139, i32 0, i32 5
  %140 = load %struct.Connector_struct*, %struct.Connector_struct** %right136, align 4
  %141 = load i32, i32* %rw.addr, align 4
  %142 = load i32, i32* %w, align 4
  %call137 = call i32 @region_valid(i32 %142, i32 %141, %struct.Connector_struct* %140, %struct.Connector_struct* %138)
  %tobool138 = icmp ne i32 %call137, 0
  br label %land.end139

land.end139:                                      ; preds = %land.rhs135, %land.lhs.true131, %lor.rhs126
  %143 = phi i1 [ false, %land.lhs.true131 ], [ false, %lor.rhs126 ], [ %tobool138, %land.rhs135 ]
  br label %lor.end141

lor.end141:                                       ; preds = %land.end139, %land.lhs.true121, %land.lhs.true112, %land.rhs101
  %144 = phi i1 [ true, %land.lhs.true121 ], [ true, %land.lhs.true112 ], [ true, %land.rhs101 ], [ %143, %land.end139 ]
  br label %land.end142

land.end142:                                      ; preds = %lor.end141, %land.lhs.true97, %land.lhs.true94, %land.end90
  %145 = phi i1 [ false, %land.lhs.true97 ], [ false, %land.lhs.true94 ], [ false, %land.end90 ], [ %144, %lor.end141 ]
  %land.ext143 = zext i1 %145 to i32
  store i32 %land.ext143, i32* %right_valid, align 4
  %146 = load i32, i32* %left_valid, align 4
  %tobool144 = icmp ne i32 %146, 0
  br i1 %tobool144, label %land.lhs.true145, label %if.end179

land.lhs.true145:                                 ; preds = %land.end142
  %147 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %148 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right146 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %148, i32 0, i32 5
  %149 = load %struct.Connector_struct*, %struct.Connector_struct** %right146, align 4
  %150 = load i32, i32* %rw.addr, align 4
  %151 = load i32, i32* %w, align 4
  %call147 = call i32 @region_valid(i32 %151, i32 %150, %struct.Connector_struct* %149, %struct.Connector_struct* %147)
  %tobool148 = icmp ne i32 %call147, 0
  br i1 %tobool148, label %if.then149, label %if.end179

if.then149:                                       ; preds = %land.lhs.true145
  %152 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked150 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %152, i32 0, i32 2
  store i8 1, i8* %marked150, align 2
  %153 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %154 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right151 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %154, i32 0, i32 5
  %155 = load %struct.Connector_struct*, %struct.Connector_struct** %right151, align 4
  %156 = load i32, i32* %rw.addr, align 4
  %157 = load i32, i32* %w, align 4
  call void @mark_region(i32 %157, i32 %156, %struct.Connector_struct* %155, %struct.Connector_struct* %153)
  %158 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left152 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %158, i32 0, i32 4
  %159 = load %struct.Connector_struct*, %struct.Connector_struct** %left152, align 4
  %next153 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %159, i32 0, i32 4
  %160 = load %struct.Connector_struct*, %struct.Connector_struct** %next153, align 4
  %161 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next154 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %161, i32 0, i32 4
  %162 = load %struct.Connector_struct*, %struct.Connector_struct** %next154, align 4
  %163 = load i32, i32* %w, align 4
  %164 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %164, i32 %163, %struct.Connector_struct* %162, %struct.Connector_struct* %160)
  %165 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi155 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %165, i32 0, i32 3
  %166 = load i8, i8* %multi155, align 1
  %tobool156 = icmp ne i8 %166, 0
  br i1 %tobool156, label %if.then157, label %if.end160

if.then157:                                       ; preds = %if.then149
  %167 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left158 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %167, i32 0, i32 4
  %168 = load %struct.Connector_struct*, %struct.Connector_struct** %left158, align 4
  %next159 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %168, i32 0, i32 4
  %169 = load %struct.Connector_struct*, %struct.Connector_struct** %next159, align 4
  %170 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %171 = load i32, i32* %w, align 4
  %172 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %172, i32 %171, %struct.Connector_struct* %170, %struct.Connector_struct* %169)
  br label %if.end160

if.end160:                                        ; preds = %if.then157, %if.then149
  %173 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left161 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %173, i32 0, i32 4
  %174 = load %struct.Connector_struct*, %struct.Connector_struct** %left161, align 4
  %multi162 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %174, i32 0, i32 3
  %175 = load i8, i8* %multi162, align 1
  %tobool163 = icmp ne i8 %175, 0
  br i1 %tobool163, label %if.then164, label %if.end167

if.then164:                                       ; preds = %if.end160
  %176 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left165 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %176, i32 0, i32 4
  %177 = load %struct.Connector_struct*, %struct.Connector_struct** %left165, align 4
  %178 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next166 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %178, i32 0, i32 4
  %179 = load %struct.Connector_struct*, %struct.Connector_struct** %next166, align 4
  %180 = load i32, i32* %w, align 4
  %181 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %181, i32 %180, %struct.Connector_struct* %179, %struct.Connector_struct* %177)
  br label %if.end167

if.end167:                                        ; preds = %if.then164, %if.end160
  %182 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi168 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %182, i32 0, i32 3
  %183 = load i8, i8* %multi168, align 1
  %conv169 = sext i8 %183 to i32
  %tobool170 = icmp ne i32 %conv169, 0
  br i1 %tobool170, label %land.lhs.true171, label %if.end178

land.lhs.true171:                                 ; preds = %if.end167
  %184 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left172 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %184, i32 0, i32 4
  %185 = load %struct.Connector_struct*, %struct.Connector_struct** %left172, align 4
  %multi173 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %185, i32 0, i32 3
  %186 = load i8, i8* %multi173, align 1
  %conv174 = sext i8 %186 to i32
  %tobool175 = icmp ne i32 %conv174, 0
  br i1 %tobool175, label %if.then176, label %if.end178

if.then176:                                       ; preds = %land.lhs.true171
  %187 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left177 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %187, i32 0, i32 4
  %188 = load %struct.Connector_struct*, %struct.Connector_struct** %left177, align 4
  %189 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %190 = load i32, i32* %w, align 4
  %191 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %191, i32 %190, %struct.Connector_struct* %189, %struct.Connector_struct* %188)
  br label %if.end178

if.end178:                                        ; preds = %if.then176, %land.lhs.true171, %if.end167
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %land.lhs.true145, %land.end142
  %192 = load i32, i32* %right_valid, align 4
  %tobool180 = icmp ne i32 %192, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end215

land.lhs.true181:                                 ; preds = %if.end179
  %193 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left182 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %193, i32 0, i32 4
  %194 = load %struct.Connector_struct*, %struct.Connector_struct** %left182, align 4
  %195 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %196 = load i32, i32* %w, align 4
  %197 = load i32, i32* %lw.addr, align 4
  %call183 = call i32 @region_valid(i32 %197, i32 %196, %struct.Connector_struct* %195, %struct.Connector_struct* %194)
  %tobool184 = icmp ne i32 %call183, 0
  br i1 %tobool184, label %if.then185, label %if.end215

if.then185:                                       ; preds = %land.lhs.true181
  %198 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked186 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %198, i32 0, i32 2
  store i8 1, i8* %marked186, align 2
  %199 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left187 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %199, i32 0, i32 4
  %200 = load %struct.Connector_struct*, %struct.Connector_struct** %left187, align 4
  %201 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %202 = load i32, i32* %w, align 4
  %203 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %203, i32 %202, %struct.Connector_struct* %201, %struct.Connector_struct* %200)
  %204 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next188 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %204, i32 0, i32 4
  %205 = load %struct.Connector_struct*, %struct.Connector_struct** %next188, align 4
  %206 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right189 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %206, i32 0, i32 5
  %207 = load %struct.Connector_struct*, %struct.Connector_struct** %right189, align 4
  %next190 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %207, i32 0, i32 4
  %208 = load %struct.Connector_struct*, %struct.Connector_struct** %next190, align 4
  %209 = load i32, i32* %rw.addr, align 4
  %210 = load i32, i32* %w, align 4
  call void @mark_region(i32 %210, i32 %209, %struct.Connector_struct* %208, %struct.Connector_struct* %205)
  %211 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right191 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %211, i32 0, i32 5
  %212 = load %struct.Connector_struct*, %struct.Connector_struct** %right191, align 4
  %multi192 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %212, i32 0, i32 3
  %213 = load i8, i8* %multi192, align 1
  %tobool193 = icmp ne i8 %213, 0
  br i1 %tobool193, label %if.then194, label %if.end197

if.then194:                                       ; preds = %if.then185
  %214 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next195 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %214, i32 0, i32 4
  %215 = load %struct.Connector_struct*, %struct.Connector_struct** %next195, align 4
  %216 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right196 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %216, i32 0, i32 5
  %217 = load %struct.Connector_struct*, %struct.Connector_struct** %right196, align 4
  %218 = load i32, i32* %rw.addr, align 4
  %219 = load i32, i32* %w, align 4
  call void @mark_region(i32 %219, i32 %218, %struct.Connector_struct* %217, %struct.Connector_struct* %215)
  br label %if.end197

if.end197:                                        ; preds = %if.then194, %if.then185
  %220 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi198 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %220, i32 0, i32 3
  %221 = load i8, i8* %multi198, align 1
  %tobool199 = icmp ne i8 %221, 0
  br i1 %tobool199, label %if.then200, label %if.end203

if.then200:                                       ; preds = %if.end197
  %222 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %223 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right201 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %223, i32 0, i32 5
  %224 = load %struct.Connector_struct*, %struct.Connector_struct** %right201, align 4
  %next202 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %224, i32 0, i32 4
  %225 = load %struct.Connector_struct*, %struct.Connector_struct** %next202, align 4
  %226 = load i32, i32* %rw.addr, align 4
  %227 = load i32, i32* %w, align 4
  call void @mark_region(i32 %227, i32 %226, %struct.Connector_struct* %225, %struct.Connector_struct* %222)
  br label %if.end203

if.end203:                                        ; preds = %if.then200, %if.end197
  %228 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right204 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %228, i32 0, i32 5
  %229 = load %struct.Connector_struct*, %struct.Connector_struct** %right204, align 4
  %multi205 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %229, i32 0, i32 3
  %230 = load i8, i8* %multi205, align 1
  %conv206 = sext i8 %230 to i32
  %tobool207 = icmp ne i32 %conv206, 0
  br i1 %tobool207, label %land.lhs.true208, label %if.end214

land.lhs.true208:                                 ; preds = %if.end203
  %231 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi209 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %231, i32 0, i32 3
  %232 = load i8, i8* %multi209, align 1
  %conv210 = sext i8 %232 to i32
  %tobool211 = icmp ne i32 %conv210, 0
  br i1 %tobool211, label %if.then212, label %if.end214

if.then212:                                       ; preds = %land.lhs.true208
  %233 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %234 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right213 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %234, i32 0, i32 5
  %235 = load %struct.Connector_struct*, %struct.Connector_struct** %right213, align 4
  %236 = load i32, i32* %rw.addr, align 4
  %237 = load i32, i32* %w, align 4
  call void @mark_region(i32 %237, i32 %236, %struct.Connector_struct* %235, %struct.Connector_struct* %233)
  br label %if.end214

if.end214:                                        ; preds = %if.then212, %land.lhs.true208, %if.end203
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %land.lhs.true181, %if.end179
  %238 = load i32, i32* %left_valid, align 4
  %tobool216 = icmp ne i32 %238, 0
  br i1 %tobool216, label %land.lhs.true217, label %if.end275

land.lhs.true217:                                 ; preds = %if.end215
  %239 = load i32, i32* %right_valid, align 4
  %tobool218 = icmp ne i32 %239, 0
  br i1 %tobool218, label %if.then219, label %if.end275

if.then219:                                       ; preds = %land.lhs.true217
  %240 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked220 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %240, i32 0, i32 2
  store i8 1, i8* %marked220, align 2
  %241 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left221 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %241, i32 0, i32 4
  %242 = load %struct.Connector_struct*, %struct.Connector_struct** %left221, align 4
  %next222 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %242, i32 0, i32 4
  %243 = load %struct.Connector_struct*, %struct.Connector_struct** %next222, align 4
  %244 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next223 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %244, i32 0, i32 4
  %245 = load %struct.Connector_struct*, %struct.Connector_struct** %next223, align 4
  %246 = load i32, i32* %w, align 4
  %247 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %247, i32 %246, %struct.Connector_struct* %245, %struct.Connector_struct* %243)
  %248 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi224 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %248, i32 0, i32 3
  %249 = load i8, i8* %multi224, align 1
  %tobool225 = icmp ne i8 %249, 0
  br i1 %tobool225, label %if.then226, label %if.end229

if.then226:                                       ; preds = %if.then219
  %250 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left227 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %250, i32 0, i32 4
  %251 = load %struct.Connector_struct*, %struct.Connector_struct** %left227, align 4
  %next228 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %251, i32 0, i32 4
  %252 = load %struct.Connector_struct*, %struct.Connector_struct** %next228, align 4
  %253 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %254 = load i32, i32* %w, align 4
  %255 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %255, i32 %254, %struct.Connector_struct* %253, %struct.Connector_struct* %252)
  br label %if.end229

if.end229:                                        ; preds = %if.then226, %if.then219
  %256 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left230 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %256, i32 0, i32 4
  %257 = load %struct.Connector_struct*, %struct.Connector_struct** %left230, align 4
  %multi231 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %257, i32 0, i32 3
  %258 = load i8, i8* %multi231, align 1
  %tobool232 = icmp ne i8 %258, 0
  br i1 %tobool232, label %if.then233, label %if.end236

if.then233:                                       ; preds = %if.end229
  %259 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left234 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %259, i32 0, i32 4
  %260 = load %struct.Connector_struct*, %struct.Connector_struct** %left234, align 4
  %261 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %next235 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %261, i32 0, i32 4
  %262 = load %struct.Connector_struct*, %struct.Connector_struct** %next235, align 4
  %263 = load i32, i32* %w, align 4
  %264 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %264, i32 %263, %struct.Connector_struct* %262, %struct.Connector_struct* %260)
  br label %if.end236

if.end236:                                        ; preds = %if.then233, %if.end229
  %265 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %multi237 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %265, i32 0, i32 3
  %266 = load i8, i8* %multi237, align 1
  %conv238 = sext i8 %266 to i32
  %tobool239 = icmp ne i32 %conv238, 0
  br i1 %tobool239, label %land.lhs.true240, label %if.end247

land.lhs.true240:                                 ; preds = %if.end236
  %267 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left241 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %267, i32 0, i32 4
  %268 = load %struct.Connector_struct*, %struct.Connector_struct** %left241, align 4
  %multi242 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %268, i32 0, i32 3
  %269 = load i8, i8* %multi242, align 1
  %conv243 = sext i8 %269 to i32
  %tobool244 = icmp ne i32 %conv243, 0
  br i1 %tobool244, label %if.then245, label %if.end247

if.then245:                                       ; preds = %land.lhs.true240
  %270 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left246 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %270, i32 0, i32 4
  %271 = load %struct.Connector_struct*, %struct.Connector_struct** %left246, align 4
  %272 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %273 = load i32, i32* %w, align 4
  %274 = load i32, i32* %lw.addr, align 4
  call void @mark_region(i32 %274, i32 %273, %struct.Connector_struct* %272, %struct.Connector_struct* %271)
  br label %if.end247

if.end247:                                        ; preds = %if.then245, %land.lhs.true240, %if.end236
  %275 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next248 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %275, i32 0, i32 4
  %276 = load %struct.Connector_struct*, %struct.Connector_struct** %next248, align 4
  %277 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right249 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %277, i32 0, i32 5
  %278 = load %struct.Connector_struct*, %struct.Connector_struct** %right249, align 4
  %next250 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %278, i32 0, i32 4
  %279 = load %struct.Connector_struct*, %struct.Connector_struct** %next250, align 4
  %280 = load i32, i32* %rw.addr, align 4
  %281 = load i32, i32* %w, align 4
  call void @mark_region(i32 %281, i32 %280, %struct.Connector_struct* %279, %struct.Connector_struct* %276)
  %282 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right251 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %282, i32 0, i32 5
  %283 = load %struct.Connector_struct*, %struct.Connector_struct** %right251, align 4
  %multi252 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %283, i32 0, i32 3
  %284 = load i8, i8* %multi252, align 1
  %tobool253 = icmp ne i8 %284, 0
  br i1 %tobool253, label %if.then254, label %if.end257

if.then254:                                       ; preds = %if.end247
  %285 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %next255 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %285, i32 0, i32 4
  %286 = load %struct.Connector_struct*, %struct.Connector_struct** %next255, align 4
  %287 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right256 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %287, i32 0, i32 5
  %288 = load %struct.Connector_struct*, %struct.Connector_struct** %right256, align 4
  %289 = load i32, i32* %rw.addr, align 4
  %290 = load i32, i32* %w, align 4
  call void @mark_region(i32 %290, i32 %289, %struct.Connector_struct* %288, %struct.Connector_struct* %286)
  br label %if.end257

if.end257:                                        ; preds = %if.then254, %if.end247
  %291 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi258 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %291, i32 0, i32 3
  %292 = load i8, i8* %multi258, align 1
  %tobool259 = icmp ne i8 %292, 0
  br i1 %tobool259, label %if.then260, label %if.end263

if.then260:                                       ; preds = %if.end257
  %293 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %294 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right261 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %294, i32 0, i32 5
  %295 = load %struct.Connector_struct*, %struct.Connector_struct** %right261, align 4
  %next262 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %295, i32 0, i32 4
  %296 = load %struct.Connector_struct*, %struct.Connector_struct** %next262, align 4
  %297 = load i32, i32* %rw.addr, align 4
  %298 = load i32, i32* %w, align 4
  call void @mark_region(i32 %298, i32 %297, %struct.Connector_struct* %296, %struct.Connector_struct* %293)
  br label %if.end263

if.end263:                                        ; preds = %if.then260, %if.end257
  %299 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right264 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %299, i32 0, i32 5
  %300 = load %struct.Connector_struct*, %struct.Connector_struct** %right264, align 4
  %multi265 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %300, i32 0, i32 3
  %301 = load i8, i8* %multi265, align 1
  %conv266 = sext i8 %301 to i32
  %tobool267 = icmp ne i32 %conv266, 0
  br i1 %tobool267, label %land.lhs.true268, label %if.end274

land.lhs.true268:                                 ; preds = %if.end263
  %302 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %multi269 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %302, i32 0, i32 3
  %303 = load i8, i8* %multi269, align 1
  %conv270 = sext i8 %303 to i32
  %tobool271 = icmp ne i32 %conv270, 0
  br i1 %tobool271, label %if.then272, label %if.end274

if.then272:                                       ; preds = %land.lhs.true268
  %304 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %305 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right273 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %305, i32 0, i32 5
  %306 = load %struct.Connector_struct*, %struct.Connector_struct** %right273, align 4
  %307 = load i32, i32* %rw.addr, align 4
  %308 = load i32, i32* %w, align 4
  call void @mark_region(i32 %308, i32 %307, %struct.Connector_struct* %306, %struct.Connector_struct* %304)
  br label %if.end274

if.end274:                                        ; preds = %if.then272, %land.lhs.true268, %if.end263
  br label %if.end275

if.end275:                                        ; preds = %if.end274, %land.lhs.true217, %if.end215
  br label %for.inc276

for.inc276:                                       ; preds = %if.end275
  %309 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %next277 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %309, i32 0, i32 0
  %310 = load %struct.Match_node_struct*, %struct.Match_node_struct** %next277, align 4
  store %struct.Match_node_struct* %310, %struct.Match_node_struct** %m, align 4
  br label %for.cond40

for.end278:                                       ; preds = %for.cond40
  %311 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m1, align 4
  call void @put_match_list(%struct.Match_node_struct* %311)
  br label %for.inc279

for.inc279:                                       ; preds = %for.end278
  %312 = load i32, i32* %w, align 4
  %inc280 = add nsw i32 %312, 1
  store i32 %inc280, i32* %w, align 4
  br label %for.cond35

for.end281:                                       ; preds = %for.cond35, %for.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @conjunction_prune() #0 {
entry:
  %d = alloca %struct.Disjunct_struct*, align 4
  %d_head = alloca %struct.Disjunct_struct*, align 4
  %dx = alloca %struct.Disjunct_struct*, align 4
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry, %for.inc5, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 2
  store i8 0, i8* %marked, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  br label %for.inc5

for.inc5:                                         ; preds = %for.end, %for.end
  %9 = load i32, i32* %w, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end6:                                         ; preds = %for.cond, %for.cond
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 72, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 87, i32 0)
  %10 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 0, i32 2
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %10, align 4
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %d, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc13, %for.end6, %for.inc13, %for.end6
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp8 = icmp ne %struct.Disjunct_struct* %12, null
  br i1 %cmp8, label %for.body9, label %for.end15

for.body9:                                        ; preds = %for.cond7, %for.cond7
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp10 = icmp eq %struct.Connector_struct* %14, null
  br i1 %cmp10, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body9, %for.body9
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 5
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %17 = load i32, i32* @N_words, align 4
  %call = call i32 @region_valid(i32 0, i32 %17, %struct.Connector_struct* %16, %struct.Connector_struct* null)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 5
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %right11, align 4
  %20 = load i32, i32* @N_words, align 4
  call void @mark_region(i32 0, i32 %20, %struct.Connector_struct* %19, %struct.Connector_struct* null)
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 2
  store i8 1, i8* %marked12, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body9, %if.then, %land.lhs.true, %for.body9
  br label %for.inc13

for.inc13:                                        ; preds = %if.end, %if.end
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next14 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 0
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next14, align 4
  store %struct.Disjunct_struct* %23, %struct.Disjunct_struct** %d, align 4
  br label %for.cond7

for.end15:                                        ; preds = %for.cond7, %for.cond7
  store i32 0, i32* %w, align 4
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc35, %for.end15, %for.inc35, %for.end15
  %24 = load i32, i32* %w, align 4
  %25 = load i32, i32* @N_words, align 4
  %cmp17 = icmp slt i32 %24, %25
  br i1 %cmp17, label %for.body18, label %for.end37

for.body18:                                       ; preds = %for.cond16, %for.cond16
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_head, align 4
  %26 = load i32, i32* %w, align 4
  %27 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %27, i32 0, i32 %26
  %d20 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx19, i32 0, i32 2
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d20, align 4
  store %struct.Disjunct_struct* %28, %struct.Disjunct_struct** %d, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc31, %for.body18, %for.inc31, %for.body18
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp22 = icmp ne %struct.Disjunct_struct* %29, null
  br i1 %cmp22, label %for.body23, label %for.end32

for.body23:                                       ; preds = %for.cond21, %for.cond21
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next24 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 0
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next24, align 4
  store %struct.Disjunct_struct* %31, %struct.Disjunct_struct** %dx, align 4
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked25 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %32, i32 0, i32 2
  %33 = load i8, i8* %marked25, align 2
  %tobool26 = icmp ne i8 %33, 0
  br i1 %tobool26, label %if.then27, label %if.else

if.then27:                                        ; preds = %for.body23, %for.body23
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_head, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next28 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 0
  store %struct.Disjunct_struct* %34, %struct.Disjunct_struct** %next28, align 4
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %36, %struct.Disjunct_struct** %d_head, align 4
  br label %if.end30

if.else:                                          ; preds = %for.body23, %for.body23
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next29 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %37, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next29, align 4
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %38)
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then27, %if.else, %if.then27
  br label %for.inc31

for.inc31:                                        ; preds = %if.end30, %if.end30
  %39 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %39, %struct.Disjunct_struct** %d, align 4
  br label %for.cond21

for.end32:                                        ; preds = %for.cond21, %for.cond21
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_head, align 4
  %41 = load i32, i32* %w, align 4
  %42 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx33 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %42, i32 0, i32 %41
  %d34 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx33, i32 0, i32 2
  store %struct.Disjunct_struct* %40, %struct.Disjunct_struct** %d34, align 4
  br label %for.inc35

for.inc35:                                        ; preds = %for.end32, %for.end32
  %43 = load i32, i32* %w, align 4
  %inc36 = add nsw i32 %43, 1
  store i32 %inc36, i32* %w, align 4
  br label %for.cond16

for.end37:                                        ; preds = %for.cond16, %for.cond16
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 71, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 88, i32 0)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @ppmatch(i8* %s, i8* %t) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %c = alloca i8, align 1
  store i8* %t, i8** %t.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %call = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv1 = sext i8 %3 to i32
  %call2 = call i32 @isupper_Package(i32 %conv1)
  %tobool3 = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %tobool3, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv4 = sext i8 %6 to i32
  %7 = load i8*, i8** %t.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv5 = sext i8 %8 to i32
  %cmp = icmp ne i32 %conv4, %conv5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.body
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %10 = load i8*, i8** %t.addr, align 4
  %incdec.ptr7 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr7, i8** %t.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %lor.end
  br label %while.cond8

while.cond8:                                      ; preds = %if.end28, %while.end
  %11 = load i8*, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv9 = sext i8 %12 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br i1 %cmp10, label %while.body12, label %while.end31

while.body12:                                     ; preds = %while.cond8
  %13 = load i8*, i8** %s.addr, align 4
  %14 = load i8, i8* %13, align 1
  %conv13 = sext i8 %14 to i32
  %cmp14 = icmp ne i32 %conv13, 35
  br i1 %cmp14, label %if.then16, label %if.end28

if.then16:                                        ; preds = %while.body12
  %15 = load i8*, i8** %t.addr, align 4
  %16 = load i8, i8* %15, align 1
  %conv17 = sext i8 %16 to i32
  %cmp18 = icmp eq i32 %conv17, 0
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.then16
  store i8 42, i8* %c, align 1
  br label %if.end21

if.else:                                          ; preds = %if.then16
  %17 = load i8*, i8** %t.addr, align 4
  %18 = load i8, i8* %17, align 1
  store i8 %18, i8* %c, align 1
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  %19 = load i8*, i8** %s.addr, align 4
  %20 = load i8, i8* %19, align 1
  %conv22 = sext i8 %20 to i32
  %21 = load i8, i8* %c, align 1
  %conv23 = sext i8 %21 to i32
  %cmp24 = icmp ne i32 %conv22, %conv23
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end21
  store i32 0, i32* %retval, align 4
  br label %return

if.end27:                                         ; preds = %if.end21
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %while.body12
  %22 = load i8*, i8** %s.addr, align 4
  %incdec.ptr29 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr29, i8** %s.addr, align 4
  %23 = load i8*, i8** %t.addr, align 4
  %incdec.ptr30 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %incdec.ptr30, i8** %t.addr, align 4
  br label %while.cond8

while.end31:                                      ; preds = %while.cond8
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end31, %if.then26, %if.then
  %24 = load i32, i32* %retval, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind
define i32 @find_domain_name(i8* %string) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [44 x %struct.connector_domain_name_pair_struct], [44 x %struct.connector_domain_name_pair_struct]* @CDNP_array, i32 0, i32 %0
  %string1 = getelementptr inbounds %struct.connector_domain_name_pair_struct, %struct.connector_domain_name_pair_struct* %arrayidx, i32 0, i32 0
  %1 = load i8*, i8** %string1, align 4
  %cmp = icmp ne i8* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [44 x %struct.connector_domain_name_pair_struct], [44 x %struct.connector_domain_name_pair_struct]* @CDNP_array, i32 0, i32 %3
  %string3 = getelementptr inbounds %struct.connector_domain_name_pair_struct, %struct.connector_domain_name_pair_struct* %arrayidx2, i32 0, i32 0
  %4 = load i8*, i8** %string3, align 4
  %call = call i32 @ppmatch(i8* %4, i8* %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [44 x %struct.connector_domain_name_pair_struct], [44 x %struct.connector_domain_name_pair_struct]* @CDNP_array, i32 0, i32 %5
  %n = getelementptr inbounds %struct.connector_domain_name_pair_struct, %struct.connector_domain_name_pair_struct* %arrayidx4, i32 0, i32 1
  %6 = load i32, i32* %n, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define void @print_domain(i32 %d) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %d.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %d.addr, align 4
  %0 = load i32, i32* %d.addr, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %0
  %lol1 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 2
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol1, align 4
  store %struct.List_o_links_struct* %1, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 0
  %4 = load i32, i32* %link, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx2 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx2, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %4, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 6, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %5, i32 0, i32 3
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %6, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %7 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.43.384, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %7)
  ret void
}

; Function Attrs: noinline nounwind
define void @print_domains() #0 {
entry:
  %d = alloca i32, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %string = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 0
  %3 = load i8*, i8** %string, align 4
  %4 = load i32, i32* %d, align 4
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.44.385, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %5, i32 %4, i8* %3)
  %6 = load i32, i32* %d, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %6, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 192, i32 10)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %d, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @post_process_match(i8* %s, i8* %t) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %call = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond, %while.cond
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv1 = sext i8 %3 to i32
  %call2 = call i32 @isupper_Package(i32 %conv1)
  %tobool3 = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond, %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %tobool3, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end, %lor.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv4 = sext i8 %6 to i32
  %7 = load i8*, i8** %t.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv5 = sext i8 %8 to i32
  %cmp = icmp ne i32 %conv4, %conv5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body, %while.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.body, %while.body
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %10 = load i8*, i8** %t.addr, align 4
  %incdec.ptr7 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr7, i8** %t.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %lor.end, %lor.end
  br label %while.cond8

while.cond8:                                      ; preds = %if.end33, %while.end, %if.end33, %while.end
  %11 = load i8*, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv9 = sext i8 %12 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br i1 %cmp10, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond8, %while.cond8
  %13 = load i8*, i8** %t.addr, align 4
  %14 = load i8, i8* %13, align 1
  %conv12 = sext i8 %14 to i32
  %cmp13 = icmp ne i32 %conv12, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond8, %land.rhs, %while.cond8
  %15 = phi i1 [ false, %while.cond8 ], [ %cmp13, %land.rhs ]
  br i1 %15, label %while.body15, label %while.end34

while.body15:                                     ; preds = %land.end, %land.end
  %16 = load i8*, i8** %s.addr, align 4
  %17 = load i8, i8* %16, align 1
  %conv16 = sext i8 %17 to i32
  %cmp17 = icmp eq i32 %conv16, 42
  br i1 %cmp17, label %if.then30, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body15, %while.body15
  %18 = load i8*, i8** %t.addr, align 4
  %19 = load i8, i8* %18, align 1
  %conv19 = sext i8 %19 to i32
  %cmp20 = icmp eq i32 %conv19, 42
  br i1 %cmp20, label %if.then30, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %lor.lhs.false, %lor.lhs.false
  %20 = load i8*, i8** %s.addr, align 4
  %21 = load i8, i8* %20, align 1
  %conv23 = sext i8 %21 to i32
  %22 = load i8*, i8** %t.addr, align 4
  %23 = load i8, i8* %22, align 1
  %conv24 = sext i8 %23 to i32
  %cmp25 = icmp eq i32 %conv23, %conv24
  br i1 %cmp25, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false22, %lor.lhs.false22
  %24 = load i8*, i8** %s.addr, align 4
  %25 = load i8, i8* %24, align 1
  %conv27 = sext i8 %25 to i32
  %cmp28 = icmp ne i32 %conv27, 94
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; preds = %land.lhs.true, %lor.lhs.false, %while.body15, %land.lhs.true, %lor.lhs.false, %while.body15
  %26 = load i8*, i8** %s.addr, align 4
  %incdec.ptr31 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %incdec.ptr31, i8** %s.addr, align 4
  %27 = load i8*, i8** %t.addr, align 4
  %incdec.ptr32 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr32, i8** %t.addr, align 4
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false22, %land.lhs.true, %lor.lhs.false22
  store i32 0, i32* %retval, align 4
  br label %return

if.end33:                                         ; preds = %if.then30, %if.then30
  br label %while.cond8

while.end34:                                      ; preds = %land.end, %land.end
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end34, %if.else, %if.then, %while.end34, %if.else, %if.then
  %28 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %28, i32* %struct.BigStruct_32
  ret i32 %28
}

; Function Attrs: noinline nounwind
define i32 @match_in_list(i8* %s, i8** %a) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8**, align 4
  %s.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8** %a, i8*** %a.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i8**, i8*** %a.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %0
  %2 = load i8*, i8** %arrayidx, align 4
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %4 = load i8**, i8*** %a.addr, align 4
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i32 %3
  %5 = load i8*, i8** %arrayidx1, align 4
  %6 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %6, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %5, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 193, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define i32 @string_in_list(i8* %s, i8** %a) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8**, align 4
  %s.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8** %a, i8*** %a.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i8**, i8*** %a.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %0
  %2 = load i8*, i8** %arrayidx, align 4
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s.addr, align 4
  %4 = load i32, i32* %i, align 4
  %5 = load i8**, i8*** %a.addr, align 4
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i32 %4
  %6 = load i8*, i8** %arrayidx1, align 4
  %call = call i32 @ppmatch(i8* %6, i8* %3)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define void @build_graph() #0 {
entry:
  %i = alloca i32, align 4
  %link = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc30, %for.end, %for.inc30, %for.end
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end32

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 0
  %8 = load i32, i32* %l, align 4
  %cmp5 = icmp eq i32 %8, -1
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3, %for.body3
  br label %for.inc30

if.end:                                           ; preds = %for.body3, %for.body3
  %9 = load i32, i32* %link, align 4
  %10 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %10, i32 0, i32 %9
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx6, i32 0, i32 4
  %11 = load i8*, i8** %name, align 4
  %12 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ignore_these_links, i32 0, i32 0
  %call = call i32 @string_in_list(i8* %11, i8** %12)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end, %if.end
  br label %for.inc30

if.end8:                                          ; preds = %if.end, %if.end
  %call9 = call i8* @xalloc(i32 16)
  %13 = bitcast i8* %call9 to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %13, %struct.List_o_links_struct** %lol, align 4
  %14 = load i32, i32* %link, align 4
  %15 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %15, i32 0, i32 %14
  %l11 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx10, i32 0, i32 0
  %16 = load i32, i32* %l11, align 4
  %arrayidx12 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %16
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx12, align 4
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %18, i32 0, i32 3
  store %struct.List_o_links_struct* %17, %struct.List_o_links_struct** %next, align 4
  %19 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %20 = load i32, i32* %link, align 4
  %21 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %21, i32 0, i32 %20
  %l14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 0
  %22 = load i32, i32* %l14, align 4
  %arrayidx15 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %22
  store %struct.List_o_links_struct* %19, %struct.List_o_links_struct** %arrayidx15, align 4
  %23 = load i32, i32* %link, align 4
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link16 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %24, i32 0, i32 0
  store i32 %23, i32* %link16, align 4
  %25 = load i32, i32* %link, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %27 = load i32, i32* %r, align 4
  %28 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %28, i32 0, i32 1
  store i32 %27, i32* %word, align 4
  %call18 = call i8* @xalloc(i32 16)
  %29 = bitcast i8* %call18 to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %29, %struct.List_o_links_struct** %lol, align 4
  %30 = load i32, i32* %link, align 4
  %31 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %31, i32 0, i32 %30
  %r20 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx19, i32 0, i32 1
  %32 = load i32, i32* %r20, align 4
  %arrayidx21 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %32
  %33 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx21, align 4
  %34 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next22 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %34, i32 0, i32 3
  store %struct.List_o_links_struct* %33, %struct.List_o_links_struct** %next22, align 4
  %35 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %36 = load i32, i32* %link, align 4
  %37 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %37, i32 0, i32 %36
  %r24 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx23, i32 0, i32 1
  %38 = load i32, i32* %r24, align 4
  %arrayidx25 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %38
  store %struct.List_o_links_struct* %35, %struct.List_o_links_struct** %arrayidx25, align 4
  %39 = load i32, i32* %link, align 4
  %40 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link26 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %40, i32 0, i32 0
  store i32 %39, i32* %link26, align 4
  %41 = load i32, i32* %link, align 4
  %42 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx27 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %42, i32 0, i32 %41
  %l28 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx27, i32 0, i32 0
  %43 = load i32, i32* %l28, align 4
  %44 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word29 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %44, i32 0, i32 1
  store i32 %43, i32* %word29, align 4
  br label %for.inc30

for.inc30:                                        ; preds = %if.end8, %if.then7, %if.then, %if.end8, %if.then7, %if.then
  %45 = load i32, i32* %link, align 4
  %inc31 = add nsw i32 %45, 1
  store i32 %inc31, i32* %link, align 4
  br label %for.cond1

for.end32:                                        ; preds = %for.cond1, %for.cond1
  ret void
}

; Function Attrs: noinline nounwind
define void @add_link_to_domain(i32 %link) #0 {
entry:
  %link.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %link, i32* %link.addr, align 4
  %call = call i8* @xalloc(i32 16)
  %0 = bitcast i8* %call to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %0, %struct.List_o_links_struct** %lol, align 4
  %1 = load i32, i32* @N_domains, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %1
  %lol1 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 2
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol1, align 4
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 3
  store %struct.List_o_links_struct* %2, %struct.List_o_links_struct** %next, align 4
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %5 = load i32, i32* @N_domains, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %5
  %lol3 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx2, i32 0, i32 2
  store %struct.List_o_links_struct* %4, %struct.List_o_links_struct** %lol3, align 4
  %6 = load i32, i32* @N_domains, align 4
  %arrayidx4 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %6
  %size = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx4, i32 0, i32 1
  %7 = load i32, i32* %size, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %size, align 4
  %8 = load i32, i32* %link.addr, align 4
  %9 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link5 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %9, i32 0, i32 0
  store i32 %8, i32* %link5, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @depth_first_search(i32 %w, i32 %root, i32 %start_link) #0 {
entry:
  %start_link.addr = alloca i32, align 4
  %root.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %start_link, i32* %start_link.addr, align 4
  store i32 %root, i32* %root.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %0
  store i32 1, i32* %arrayidx, align 4
  %1 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %1
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx1, align 4
  store %struct.List_o_links_struct* %2, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %4, i32 0, i32 1
  %5 = load i32, i32* %word, align 4
  %6 = load i32, i32* %w.addr, align 4
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %7, i32 0, i32 0
  %8 = load i32, i32* %link, align 4
  %9 = load i32, i32* %start_link.addr, align 4
  %cmp3 = icmp ne i32 %8, %9
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link4 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %10, i32 0, i32 0
  %11 = load i32, i32* %link4, align 4
  call void @add_link_to_domain(i32 %11)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 3
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %13, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %w.addr, align 4
  %arrayidx5 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %14
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx5, align 4
  store %struct.List_o_links_struct* %15, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc27, %for.end
  %16 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp7 = icmp ne %struct.List_o_links_struct* %16, null
  br i1 %cmp7, label %for.body8, label %for.end29

for.body8:                                        ; preds = %for.cond6
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word9 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %17, i32 0, i32 1
  %18 = load i32, i32* %word9, align 4
  %arrayidx10 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %18
  %19 = load i32, i32* %arrayidx10, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.end26, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %for.body8
  %20 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word12 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %20, i32 0, i32 1
  %21 = load i32, i32* %word12, align 4
  %22 = load i32, i32* %root.addr, align 4
  %cmp13 = icmp ne i32 %21, %22
  br i1 %cmp13, label %land.lhs.true14, label %if.end26

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %23 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word15 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %23, i32 0, i32 1
  %24 = load i32, i32* %word15, align 4
  %25 = load i32, i32* %root.addr, align 4
  %cmp16 = icmp slt i32 %24, %25
  br i1 %cmp16, label %land.lhs.true17, label %if.then24

land.lhs.true17:                                  ; preds = %land.lhs.true14
  %26 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word18 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %26, i32 0, i32 1
  %27 = load i32, i32* %word18, align 4
  %28 = load i32, i32* %w.addr, align 4
  %cmp19 = icmp slt i32 %27, %28
  br i1 %cmp19, label %land.lhs.true20, label %if.then24

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %29 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link21 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %29, i32 0, i32 0
  %30 = load i32, i32* %link21, align 4
  %31 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %31, i32 0, i32 %30
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 4
  %32 = load i8*, i8** %name, align 4
  %33 = getelementptr inbounds [22 x i8*], [22 x i8*]* @restricted_links, i32 0, i32 0
  %call = call i32 @string_in_list(i8* %32, i8** %33)
  %tobool23 = icmp ne i32 %call, 0
  br i1 %tobool23, label %if.end26, label %if.then24

if.then24:                                        ; preds = %land.lhs.true20, %land.lhs.true17, %land.lhs.true14
  %34 = load i32, i32* %start_link.addr, align 4
  %35 = load i32, i32* %root.addr, align 4
  %36 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word25 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %36, i32 0, i32 1
  %37 = load i32, i32* %word25, align 4
  call void @depth_first_search(i32 %37, i32 %35, i32 %34)
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %land.lhs.true20, %land.lhs.true11, %for.body8
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %38 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next28 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %38, i32 0, i32 3
  %39 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next28, align 4
  store %struct.List_o_links_struct* %39, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond6

for.end29:                                        ; preds = %for.cond6
  ret void
}

; Function Attrs: noinline nounwind
define void @bad_depth_first_search(i32 %w, i32 %root, i32 %start_link) #0 {
entry:
  %start_link.addr = alloca i32, align 4
  %root.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %start_link, i32* %start_link.addr, align 4
  store i32 %root, i32* %root.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %0
  store i32 1, i32* %arrayidx, align 4
  %1 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %1
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx1, align 4
  store %struct.List_o_links_struct* %2, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %4, i32 0, i32 1
  %5 = load i32, i32* %word, align 4
  %6 = load i32, i32* %w.addr, align 4
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %7, i32 0, i32 0
  %8 = load i32, i32* %link, align 4
  %9 = load i32, i32* %start_link.addr, align 4
  %cmp3 = icmp ne i32 %8, %9
  br i1 %cmp3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %10 = load i32, i32* %w.addr, align 4
  %11 = load i32, i32* %root.addr, align 4
  %cmp5 = icmp ne i32 %10, %11
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link6 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 0
  %13 = load i32, i32* %link6, align 4
  call void @add_link_to_domain(i32 %13)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %14, i32 0, i32 3
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %15, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %w.addr, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %16
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx7, align 4
  store %struct.List_o_links_struct* %17, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc31, %for.end
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp9 = icmp ne %struct.List_o_links_struct* %18, null
  br i1 %cmp9, label %for.body10, label %for.end33

for.body10:                                       ; preds = %for.cond8
  %19 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word11 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %19, i32 0, i32 1
  %20 = load i32, i32* %word11, align 4
  %arrayidx12 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %20
  %21 = load i32, i32* %arrayidx12, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.end30, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %for.body10
  %22 = load i32, i32* %w.addr, align 4
  %23 = load i32, i32* %root.addr, align 4
  %cmp14 = icmp eq i32 %22, %23
  br i1 %cmp14, label %land.lhs.true15, label %land.lhs.true18

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word16 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %24, i32 0, i32 1
  %25 = load i32, i32* %word16, align 4
  %26 = load i32, i32* %w.addr, align 4
  %cmp17 = icmp slt i32 %25, %26
  br i1 %cmp17, label %if.end30, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %land.lhs.true15, %land.lhs.true13
  %27 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word19 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %27, i32 0, i32 1
  %28 = load i32, i32* %word19, align 4
  %29 = load i32, i32* %root.addr, align 4
  %cmp20 = icmp slt i32 %28, %29
  br i1 %cmp20, label %land.lhs.true21, label %if.then28

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %30 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word22 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %30, i32 0, i32 1
  %31 = load i32, i32* %word22, align 4
  %32 = load i32, i32* %w.addr, align 4
  %cmp23 = icmp slt i32 %31, %32
  br i1 %cmp23, label %land.lhs.true24, label %if.then28

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %33 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link25 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %33, i32 0, i32 0
  %34 = load i32, i32* %link25, align 4
  %35 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx26 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %35, i32 0, i32 %34
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx26, i32 0, i32 4
  %36 = load i8*, i8** %name, align 4
  %37 = getelementptr inbounds [22 x i8*], [22 x i8*]* @restricted_links, i32 0, i32 0
  %call = call i32 @string_in_list(i8* %36, i8** %37)
  %tobool27 = icmp ne i32 %call, 0
  br i1 %tobool27, label %if.end30, label %if.then28

if.then28:                                        ; preds = %land.lhs.true24, %land.lhs.true21, %land.lhs.true18
  %38 = load i32, i32* %start_link.addr, align 4
  %39 = load i32, i32* %root.addr, align 4
  %40 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word29 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %40, i32 0, i32 1
  %41 = load i32, i32* %word29, align 4
  call void @bad_depth_first_search(i32 %41, i32 %39, i32 %38)
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %land.lhs.true24, %land.lhs.true15, %for.body10
  br label %for.inc31

for.inc31:                                        ; preds = %if.end30
  %42 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next32 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %42, i32 0, i32 3
  %43 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next32, align 4
  store %struct.List_o_links_struct* %43, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond8

for.end33:                                        ; preds = %for.cond8
  ret void
}

; Function Attrs: noinline nounwind
define void @d_depth_first_search(i32 %w, i32 %root, i32 %right, i32 %start_link) #0 {
entry:
  %start_link.addr = alloca i32, align 4
  %right.addr = alloca i32, align 4
  %root.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %start_link, i32* %start_link.addr, align 4
  store i32 %right, i32* %right.addr, align 4
  store i32 %root, i32* %root.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %0
  store i32 1, i32* %arrayidx, align 4
  %1 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %1
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx1, align 4
  store %struct.List_o_links_struct* %2, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %4, i32 0, i32 1
  %5 = load i32, i32* %word, align 4
  %6 = load i32, i32* %w.addr, align 4
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %7, i32 0, i32 0
  %8 = load i32, i32* %link, align 4
  %9 = load i32, i32* %start_link.addr, align 4
  %cmp3 = icmp ne i32 %8, %9
  br i1 %cmp3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %10 = load i32, i32* %w.addr, align 4
  %11 = load i32, i32* %root.addr, align 4
  %cmp5 = icmp ne i32 %10, %11
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link6 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 0
  %13 = load i32, i32* %link6, align 4
  call void @add_link_to_domain(i32 %13)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %14, i32 0, i32 3
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %15, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %w.addr, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %16
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx7, align 4
  store %struct.List_o_links_struct* %17, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc36, %for.end
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp9 = icmp ne %struct.List_o_links_struct* %18, null
  br i1 %cmp9, label %for.body10, label %for.end38

for.body10:                                       ; preds = %for.cond8
  %19 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word11 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %19, i32 0, i32 1
  %20 = load i32, i32* %word11, align 4
  %arrayidx12 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %20
  %21 = load i32, i32* %arrayidx12, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.end35, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %for.body10
  %22 = load i32, i32* %w.addr, align 4
  %23 = load i32, i32* %root.addr, align 4
  %cmp14 = icmp eq i32 %22, %23
  br i1 %cmp14, label %land.lhs.true15, label %land.lhs.true18

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word16 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %24, i32 0, i32 1
  %25 = load i32, i32* %word16, align 4
  %26 = load i32, i32* %right.addr, align 4
  %cmp17 = icmp sge i32 %25, %26
  br i1 %cmp17, label %if.end35, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %land.lhs.true15, %land.lhs.true13
  %27 = load i32, i32* %w.addr, align 4
  %28 = load i32, i32* %root.addr, align 4
  %cmp19 = icmp eq i32 %27, %28
  br i1 %cmp19, label %land.lhs.true20, label %land.lhs.true23

land.lhs.true20:                                  ; preds = %land.lhs.true18
  %29 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word21 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %29, i32 0, i32 1
  %30 = load i32, i32* %word21, align 4
  %31 = load i32, i32* %root.addr, align 4
  %cmp22 = icmp slt i32 %30, %31
  br i1 %cmp22, label %if.end35, label %land.lhs.true23

land.lhs.true23:                                  ; preds = %land.lhs.true20, %land.lhs.true18
  %32 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word24 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %32, i32 0, i32 1
  %33 = load i32, i32* %word24, align 4
  %34 = load i32, i32* %root.addr, align 4
  %cmp25 = icmp slt i32 %33, %34
  br i1 %cmp25, label %land.lhs.true26, label %if.then33

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %35 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word27 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %35, i32 0, i32 1
  %36 = load i32, i32* %word27, align 4
  %37 = load i32, i32* %w.addr, align 4
  %cmp28 = icmp slt i32 %36, %37
  br i1 %cmp28, label %land.lhs.true29, label %if.then33

land.lhs.true29:                                  ; preds = %land.lhs.true26
  %38 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link30 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %38, i32 0, i32 0
  %39 = load i32, i32* %link30, align 4
  %40 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx31 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %40, i32 0, i32 %39
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx31, i32 0, i32 4
  %41 = load i8*, i8** %name, align 4
  %42 = getelementptr inbounds [22 x i8*], [22 x i8*]* @restricted_links, i32 0, i32 0
  %call = call i32 @string_in_list(i8* %41, i8** %42)
  %tobool32 = icmp ne i32 %call, 0
  br i1 %tobool32, label %if.end35, label %if.then33

if.then33:                                        ; preds = %land.lhs.true29, %land.lhs.true26, %land.lhs.true23
  %43 = load i32, i32* %start_link.addr, align 4
  %44 = load i32, i32* %right.addr, align 4
  %45 = load i32, i32* %root.addr, align 4
  %46 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word34 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %46, i32 0, i32 1
  %47 = load i32, i32* %word34, align 4
  call void @d_depth_first_search(i32 %47, i32 %45, i32 %44, i32 %43)
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %land.lhs.true29, %land.lhs.true20, %land.lhs.true15, %for.body10
  br label %for.inc36

for.inc36:                                        ; preds = %if.end35
  %48 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next37 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %48, i32 0, i32 3
  %49 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next37, align 4
  store %struct.List_o_links_struct* %49, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond8

for.end38:                                        ; preds = %for.cond8
  ret void
}

; Function Attrs: noinline nounwind
define i32 @domain_compare(%struct.domain_struct* %d1, %struct.domain_struct* %d2) #0 {
entry:
  %d2.addr = alloca %struct.domain_struct*, align 4
  %d1.addr = alloca %struct.domain_struct*, align 4
  store %struct.domain_struct* %d2, %struct.domain_struct** %d2.addr, align 4
  store %struct.domain_struct* %d1, %struct.domain_struct** %d1.addr, align 4
  %0 = load %struct.domain_struct*, %struct.domain_struct** %d1.addr, align 4
  %size = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %0, i32 0, i32 1
  %1 = load i32, i32* %size, align 4
  %2 = load %struct.domain_struct*, %struct.domain_struct** %d2.addr, align 4
  %size1 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %2, i32 0, i32 1
  %3 = load i32, i32* %size1, align 4
  %sub = sub nsw i32 %1, %3
  ret i32 %sub
}

; Function Attrs: noinline nounwind
define void @build_domains() #0 {
entry:
  %link = alloca i32, align 4
  %i = alloca i32, align 4
  %d = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* @N_domains, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc78, %entry, %for.inc78, %entry
  %0 = load i32, i32* %link, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end80

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %link, align 4
  %3 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %3, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %4 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %4, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc78

if.end:                                           ; preds = %for.body, %for.body
  %5 = load i32, i32* %link, align 4
  %6 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx2 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %6, i32 0, i32 %5
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx2, i32 0, i32 4
  %7 = load i8*, i8** %name, align 4
  %8 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ignore_these_links, i32 0, i32 0
  %call = call i32 @string_in_list(i8* %7, i8** %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end, %if.end
  br label %for.inc78

if.end4:                                          ; preds = %if.end, %if.end
  %9 = load i32, i32* %link, align 4
  %10 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %10, i32 0, i32 %9
  %name6 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx5, i32 0, i32 4
  %11 = load i8*, i8** %name6, align 4
  store i8* %11, i8** %s, align 4
  %12 = load i8*, i8** %s, align 4
  %13 = getelementptr inbounds [38 x i8*], [38 x i8*]* @domain_starter_links, i32 0, i32 0
  %call7 = call i32 @string_in_list(i8* %12, i8** %13)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end4, %if.end4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc, %if.then9, %for.inc, %if.then9
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* @N_words, align 4
  %cmp11 = icmp slt i32 %14, %15
  br i1 %cmp11, label %for.body12, label %for.end

for.body12:                                       ; preds = %for.cond10, %for.cond10
  %16 = load i32, i32* %i, align 4
  %arrayidx13 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %16
  store i32 0, i32* %arrayidx13, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body12, %for.body12
  %17 = load i32, i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond10

for.end:                                          ; preds = %for.cond10, %for.cond10
  %18 = load i8*, i8** %s, align 4
  %19 = load i32, i32* @N_domains, align 4
  %arrayidx14 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %19
  %string = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx14, i32 0, i32 0
  store i8* %18, i8** %string, align 4
  %20 = load i32, i32* @N_domains, align 4
  %arrayidx15 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %20
  %lol = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx15, i32 0, i32 2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %lol, align 4
  %21 = load i32, i32* @N_domains, align 4
  %arrayidx16 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %21
  %size = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx16, i32 0, i32 1
  store i32 0, i32* %size, align 4
  %22 = load i32, i32* %link, align 4
  %23 = load i32, i32* @N_domains, align 4
  %arrayidx17 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %23
  %start_link = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx17, i32 0, i32 3
  store i32 %22, i32* %start_link, align 4
  %24 = load i8*, i8** %s, align 4
  %25 = getelementptr inbounds [21 x i8*], [21 x i8*]* @domain_contains_links, i32 0, i32 0
  %call18 = call i32 @string_in_list(i8* %24, i8** %25)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %for.end, %for.end
  %26 = load i32, i32* %link, align 4
  call void @add_link_to_domain(i32 %26)
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %for.end, %if.then20, %for.end
  %27 = load i32, i32* %link, align 4
  %28 = load i32, i32* %link, align 4
  %29 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %29, i32 0, i32 %28
  %l23 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 0
  %30 = load i32, i32* %l23, align 4
  %31 = load i32, i32* %link, align 4
  %32 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx24 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %32, i32 0, i32 %31
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 1
  %33 = load i32, i32* %r, align 4
  call void @depth_first_search(i32 %33, i32 %30, i32 %27)
  %34 = load i32, i32* @N_domains, align 4
  %inc25 = add nsw i32 %34, 1
  store i32 %inc25, i32* @N_domains, align 4
  br label %if.end77

if.else:                                          ; preds = %if.end4, %if.end4
  %35 = load i8*, i8** %s, align 4
  %36 = getelementptr inbounds [4 x i8*], [4 x i8*]* @urfl_domain_starter_links, i32 0, i32 0
  %call26 = call i32 @string_in_list(i8* %35, i8** %36)
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.then28, label %if.else49

if.then28:                                        ; preds = %if.else, %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc33, %if.then28, %for.inc33, %if.then28
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* @N_words, align 4
  %cmp30 = icmp slt i32 %37, %38
  br i1 %cmp30, label %for.body31, label %for.end35

for.body31:                                       ; preds = %for.cond29, %for.cond29
  %39 = load i32, i32* %i, align 4
  %arrayidx32 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %39
  store i32 0, i32* %arrayidx32, align 4
  br label %for.inc33

for.inc33:                                        ; preds = %for.body31, %for.body31
  %40 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %40, 1
  store i32 %inc34, i32* %i, align 4
  br label %for.cond29

for.end35:                                        ; preds = %for.cond29, %for.cond29
  %41 = load i8*, i8** %s, align 4
  %42 = load i32, i32* @N_domains, align 4
  %arrayidx36 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %42
  %string37 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx36, i32 0, i32 0
  store i8* %41, i8** %string37, align 4
  %43 = load i32, i32* @N_domains, align 4
  %arrayidx38 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %43
  %lol39 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx38, i32 0, i32 2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %lol39, align 4
  %44 = load i32, i32* @N_domains, align 4
  %arrayidx40 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %44
  %size41 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx40, i32 0, i32 1
  store i32 0, i32* %size41, align 4
  %45 = load i32, i32* %link, align 4
  %46 = load i32, i32* @N_domains, align 4
  %arrayidx42 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %46
  %start_link43 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx42, i32 0, i32 3
  store i32 %45, i32* %start_link43, align 4
  %47 = load i32, i32* %link, align 4
  call void @add_link_to_domain(i32 %47)
  %48 = load i32, i32* %link, align 4
  %49 = load i32, i32* %link, align 4
  %50 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx44 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %50, i32 0, i32 %49
  %l45 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx44, i32 0, i32 0
  %51 = load i32, i32* %l45, align 4
  %52 = load i32, i32* %link, align 4
  %53 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx46 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %53, i32 0, i32 %52
  %r47 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx46, i32 0, i32 1
  %54 = load i32, i32* %r47, align 4
  call void @bad_depth_first_search(i32 %54, i32 %51, i32 %48)
  %55 = load i32, i32* @N_domains, align 4
  %inc48 = add nsw i32 %55, 1
  store i32 %inc48, i32* @N_domains, align 4
  br label %if.end76

if.else49:                                        ; preds = %if.else, %if.else
  %56 = load i8*, i8** %s, align 4
  %57 = getelementptr inbounds [4 x i8*], [4 x i8*]* @urfl_only_domain_starter_links, i32 0, i32 0
  %call50 = call i32 @string_in_list(i8* %56, i8** %57)
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.then52, label %if.end75

if.then52:                                        ; preds = %if.else49, %if.else49
  store i32 0, i32* %i, align 4
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc57, %if.then52, %for.inc57, %if.then52
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* @N_words, align 4
  %cmp54 = icmp slt i32 %58, %59
  br i1 %cmp54, label %for.body55, label %for.end59

for.body55:                                       ; preds = %for.cond53, %for.cond53
  %60 = load i32, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %60
  store i32 0, i32* %arrayidx56, align 4
  br label %for.inc57

for.inc57:                                        ; preds = %for.body55, %for.body55
  %61 = load i32, i32* %i, align 4
  %inc58 = add nsw i32 %61, 1
  store i32 %inc58, i32* %i, align 4
  br label %for.cond53

for.end59:                                        ; preds = %for.cond53, %for.cond53
  %62 = load i8*, i8** %s, align 4
  %63 = load i32, i32* @N_domains, align 4
  %arrayidx60 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %63
  %string61 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx60, i32 0, i32 0
  store i8* %62, i8** %string61, align 4
  %64 = load i32, i32* @N_domains, align 4
  %arrayidx62 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %64
  %lol63 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx62, i32 0, i32 2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %lol63, align 4
  %65 = load i32, i32* @N_domains, align 4
  %arrayidx64 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %65
  %size65 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx64, i32 0, i32 1
  store i32 0, i32* %size65, align 4
  %66 = load i32, i32* %link, align 4
  %67 = load i32, i32* @N_domains, align 4
  %arrayidx66 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %67
  %start_link67 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx66, i32 0, i32 3
  store i32 %66, i32* %start_link67, align 4
  %68 = load i32, i32* %link, align 4
  %69 = load i32, i32* %link, align 4
  %70 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx68 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %70, i32 0, i32 %69
  %r69 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx68, i32 0, i32 1
  %71 = load i32, i32* %r69, align 4
  %72 = load i32, i32* %link, align 4
  %73 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx70 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %73, i32 0, i32 %72
  %l71 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx70, i32 0, i32 0
  %74 = load i32, i32* %l71, align 4
  %75 = load i32, i32* %link, align 4
  %76 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx72 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %76, i32 0, i32 %75
  %l73 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx72, i32 0, i32 0
  %77 = load i32, i32* %l73, align 4
  call void @d_depth_first_search(i32 %77, i32 %74, i32 %71, i32 %68)
  %78 = load i32, i32* @N_domains, align 4
  %inc74 = add nsw i32 %78, 1
  store i32 %inc74, i32* @N_domains, align 4
  br label %if.end75

if.end75:                                         ; preds = %for.end59, %if.else49, %for.end59, %if.else49
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %for.end35, %if.end75, %for.end35
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end21, %if.end76, %if.end21
  br label %for.inc78

for.inc78:                                        ; preds = %if.end77, %if.then3, %if.then, %if.end77, %if.then3, %if.then
  %79 = load i32, i32* %link, align 4
  %inc79 = add nsw i32 %79, 1
  store i32 %inc79, i32* %link, align 4
  br label %for.cond

for.end80:                                        ; preds = %for.cond, %for.cond
  %80 = load i32, i32* @N_domains, align 4
  %81 = bitcast [497 x %struct.domain_struct]* @domain_array to i8*
  %82 = bitcast i32 (%struct.domain_struct*, %struct.domain_struct*)* @domain_compare to i32 (i8*, i8*)*
  call void @qsort_Package(i8* %81, i32 %80, i32 28, i32 (i8*, i8*)* %82)
  store i32 0, i32* %d, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc94, %for.end80, %for.inc94, %for.end80
  %83 = load i32, i32* %d, align 4
  %84 = load i32, i32* @N_domains, align 4
  %cmp82 = icmp slt i32 %83, %84
  br i1 %cmp82, label %for.body83, label %for.end96

for.body83:                                       ; preds = %for.cond81, %for.cond81
  %85 = load i32, i32* %d, align 4
  %arrayidx84 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %85
  %string85 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx84, i32 0, i32 0
  %86 = load i8*, i8** %string85, align 4
  %call86 = call i32 @find_domain_name(i8* %86)
  store i32 %call86, i32* %i, align 4
  %87 = load i32, i32* %i, align 4
  %cmp87 = icmp eq i32 %87, 0
  br i1 %cmp87, label %if.then88, label %if.end92

if.then88:                                        ; preds = %for.body83, %for.body83
  %88 = load i32, i32* %d, align 4
  %arrayidx89 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %88
  %string90 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx89, i32 0, i32 0
  %89 = load i8*, i8** %string90, align 4
  %90 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.45.460, i32 0, i32 0
  %call91 = call i32 (i8*, ...) @printf(i8* %90, i8* %89)
  call void @exit_Package(i32 1) #5
  unreachable

if.end92:                                         ; preds = %for.body83, %for.body83
  %91 = load i32, i32* %i, align 4
  %92 = load i32, i32* %d, align 4
  %arrayidx93 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %92
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx93, i32 0, i32 4
  store i32 %91, i32* %type, align 4
  br label %for.inc94

for.inc94:                                        ; preds = %if.end92, %if.end92
  %93 = load i32, i32* %d, align 4
  %inc95 = add nsw i32 %93, 1
  store i32 %inc95, i32* %d, align 4
  br label %for.cond81

for.end96:                                        ; preds = %for.cond81, %for.cond81
  ret void
}

; Function Attrs: noinline nounwind
define i32 @contained_in(%struct.domain_struct* %d1, %struct.domain_struct* %d2) #0 {
entry:
  %retval = alloca i32, align 4
  %d2.addr = alloca %struct.domain_struct*, align 4
  %d1.addr = alloca %struct.domain_struct*, align 4
  %mark = alloca [497 x i8], align 1
  %lol = alloca %struct.List_o_links_struct*, align 4
  %i = alloca i32, align 4
  store %struct.domain_struct* %d2, %struct.domain_struct** %d2.addr, align 4
  store %struct.domain_struct* %d1, %struct.domain_struct** %d1.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x i8], [497 x i8]* %mark, i32 0, i32 %2
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %4 = load %struct.domain_struct*, %struct.domain_struct** %d2.addr, align 4
  %lol1 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %4, i32 0, i32 2
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol1, align 4
  store %struct.List_o_links_struct* %5, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc6, %for.end
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp3 = icmp ne %struct.List_o_links_struct* %6, null
  br i1 %cmp3, label %for.body4, label %for.end7

for.body4:                                        ; preds = %for.cond2
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %7, i32 0, i32 0
  %8 = load i32, i32* %link, align 4
  %arrayidx5 = getelementptr inbounds [497 x i8], [497 x i8]* %mark, i32 0, i32 %8
  store i8 1, i8* %arrayidx5, align 1
  br label %for.inc6

for.inc6:                                         ; preds = %for.body4
  %9 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %9, i32 0, i32 3
  %10 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %10, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond2

for.end7:                                         ; preds = %for.cond2
  %11 = load %struct.domain_struct*, %struct.domain_struct** %d1.addr, align 4
  %lol8 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %11, i32 0, i32 2
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol8, align 4
  store %struct.List_o_links_struct* %12, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc14, %for.end7
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp10 = icmp ne %struct.List_o_links_struct* %13, null
  br i1 %cmp10, label %for.body11, label %for.end16

for.body11:                                       ; preds = %for.cond9
  %14 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link12 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %14, i32 0, i32 0
  %15 = load i32, i32* %link12, align 4
  %arrayidx13 = getelementptr inbounds [497 x i8], [497 x i8]* %mark, i32 0, i32 %15
  %16 = load i8, i8* %arrayidx13, align 1
  %tobool = icmp ne i8 %16, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body11
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body11
  br label %for.inc14

for.inc14:                                        ; preds = %if.end
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next15 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %17, i32 0, i32 3
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next15, align 4
  store %struct.List_o_links_struct* %18, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond9

for.end16:                                        ; preds = %for.cond9
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end16, %if.then
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define i32 @link_in_domain(i32 %link, %struct.domain_struct* %d) #0 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.domain_struct*, align 4
  %link.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store %struct.domain_struct* %d, %struct.domain_struct** %d.addr, align 4
  store i32 %link, i32* %link.addr, align 4
  %0 = load %struct.domain_struct*, %struct.domain_struct** %d.addr, align 4
  %lol1 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %0, i32 0, i32 2
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol1, align 4
  store %struct.List_o_links_struct* %1, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link2 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 0
  %4 = load i32, i32* %link2, align 4
  %5 = load i32, i32* %link.addr, align 4
  %cmp3 = icmp eq i32 %4, %5
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %6, i32 0, i32 3
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %7, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define i32 @check_domain_nesting() #0 {
entry:
  %retval = alloca i32, align 4
  %d1 = alloca %struct.domain_struct*, align 4
  %d2 = alloca %struct.domain_struct*, align 4
  %counts = alloca [4 x i32], align 4
  %mark = alloca [497 x i8], align 1
  %lol = alloca %struct.List_o_links_struct*, align 4
  %i = alloca i32, align 4
  %0 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 0
  store %struct.domain_struct* %0, %struct.domain_struct** %d1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc53, %entry
  %1 = load %struct.domain_struct*, %struct.domain_struct** %d1, align 4
  %2 = load i32, i32* @N_domains, align 4
  %3 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 0
  %add.ptr = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %3, i32 %2
  %cmp = icmp ult %struct.domain_struct* %1, %add.ptr
  br i1 %cmp, label %for.body, label %for.end55

for.body:                                         ; preds = %for.cond
  %4 = load %struct.domain_struct*, %struct.domain_struct** %d1, align 4
  %add.ptr1 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %4, i32 1
  store %struct.domain_struct* %add.ptr1, %struct.domain_struct** %d2, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc51, %for.body
  %5 = load %struct.domain_struct*, %struct.domain_struct** %d2, align 4
  %6 = load i32, i32* @N_domains, align 4
  %7 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 0
  %add.ptr3 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %7, i32 %6
  %cmp4 = icmp ult %struct.domain_struct* %5, %add.ptr3
  br i1 %cmp4, label %for.body5, label %for.end52

for.body5:                                        ; preds = %for.cond2
  store i32 0, i32* %i, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body5
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* @N_links, align 4
  %cmp7 = icmp slt i32 %8, %9
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6
  %10 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x i8], [497 x i8]* %mark, i32 0, i32 %10
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body8
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  %12 = load %struct.domain_struct*, %struct.domain_struct** %d2, align 4
  %lol9 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %12, i32 0, i32 2
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol9, align 4
  store %struct.List_o_links_struct* %13, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc14, %for.end
  %14 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp11 = icmp ne %struct.List_o_links_struct* %14, null
  br i1 %cmp11, label %for.body12, label %for.end15

for.body12:                                       ; preds = %for.cond10
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %15, i32 0, i32 0
  %16 = load i32, i32* %link, align 4
  %arrayidx13 = getelementptr inbounds [497 x i8], [497 x i8]* %mark, i32 0, i32 %16
  store i8 1, i8* %arrayidx13, align 1
  br label %for.inc14

for.inc14:                                        ; preds = %for.body12
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %17, i32 0, i32 3
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %18, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond10

for.end15:                                        ; preds = %for.cond10
  %19 = load %struct.domain_struct*, %struct.domain_struct** %d1, align 4
  %lol16 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %19, i32 0, i32 2
  %20 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol16, align 4
  store %struct.List_o_links_struct* %20, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc23, %for.end15
  %21 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp18 = icmp ne %struct.List_o_links_struct* %21, null
  br i1 %cmp18, label %for.body19, label %for.end25

for.body19:                                       ; preds = %for.cond17
  %22 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link20 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %22, i32 0, i32 0
  %23 = load i32, i32* %link20, align 4
  %arrayidx21 = getelementptr inbounds [497 x i8], [497 x i8]* %mark, i32 0, i32 %23
  %24 = load i8, i8* %arrayidx21, align 1
  %conv = sext i8 %24 to i32
  %add = add nsw i32 %conv, 2
  %conv22 = trunc i32 %add to i8
  store i8 %conv22, i8* %arrayidx21, align 1
  br label %for.inc23

for.inc23:                                        ; preds = %for.body19
  %25 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next24 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %25, i32 0, i32 3
  %26 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next24, align 4
  store %struct.List_o_links_struct* %26, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond17

for.end25:                                        ; preds = %for.cond17
  %arrayidx26 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 3
  store i32 0, i32* %arrayidx26, align 4
  %arrayidx27 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 2
  store i32 0, i32* %arrayidx27, align 4
  %arrayidx28 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 1
  store i32 0, i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 0
  store i32 0, i32* %arrayidx29, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc38, %for.end25
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* @N_links, align 4
  %cmp31 = icmp slt i32 %27, %28
  br i1 %cmp31, label %for.body33, label %for.end40

for.body33:                                       ; preds = %for.cond30
  %29 = load i32, i32* %i, align 4
  %arrayidx34 = getelementptr inbounds [497 x i8], [497 x i8]* %mark, i32 0, i32 %29
  %30 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %30 to i32
  %arrayidx36 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 %conv35
  %31 = load i32, i32* %arrayidx36, align 4
  %inc37 = add nsw i32 %31, 1
  store i32 %inc37, i32* %arrayidx36, align 4
  br label %for.inc38

for.inc38:                                        ; preds = %for.body33
  %32 = load i32, i32* %i, align 4
  %inc39 = add nsw i32 %32, 1
  store i32 %inc39, i32* %i, align 4
  br label %for.cond30

for.end40:                                        ; preds = %for.cond30
  %arrayidx41 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 1
  %33 = load i32, i32* %arrayidx41, align 4
  %cmp42 = icmp sgt i32 %33, 0
  br i1 %cmp42, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.end40
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 2
  %34 = load i32, i32* %arrayidx44, align 4
  %cmp45 = icmp sgt i32 %34, 0
  br i1 %cmp45, label %land.lhs.true47, label %if.end

land.lhs.true47:                                  ; preds = %land.lhs.true
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %counts, i32 0, i32 3
  %35 = load i32, i32* %arrayidx48, align 4
  %cmp49 = icmp sgt i32 %35, 0
  br i1 %cmp49, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true47
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true47, %land.lhs.true, %for.end40
  br label %for.inc51

for.inc51:                                        ; preds = %if.end
  %36 = load %struct.domain_struct*, %struct.domain_struct** %d2, align 4
  %incdec.ptr = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %36, i32 1
  store %struct.domain_struct* %incdec.ptr, %struct.domain_struct** %d2, align 4
  br label %for.cond2

for.end52:                                        ; preds = %for.cond2
  br label %for.inc53

for.inc53:                                        ; preds = %for.end52
  %37 = load %struct.domain_struct*, %struct.domain_struct** %d1, align 4
  %incdec.ptr54 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %37, i32 1
  store %struct.domain_struct* %incdec.ptr54, %struct.domain_struct** %d1, align 4
  br label %for.cond

for.end55:                                        ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end55, %if.then
  %38 = load i32, i32* %retval, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind
define void @build_domain_forest() #0 {
entry:
  %d = alloca i32, align 4
  %d1 = alloca i32, align 4
  %link = alloca i32, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %0 = load i32, i32* @N_domains, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %1 = load i32, i32* @N_domains, align 4
  %sub = sub nsw i32 %1, 1
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %sub
  %parent = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 6
  store %struct.domain_struct* null, %struct.domain_struct** %parent, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  store i32 1, i32* @N_domain_trees, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc19, %if.end, %for.inc19, %if.end
  %2 = load i32, i32* %d, align 4
  %3 = load i32, i32* @N_domains, align 4
  %sub1 = sub nsw i32 %3, 1
  %cmp2 = icmp slt i32 %2, %sub1
  br i1 %cmp2, label %for.body, label %for.end21

for.body:                                         ; preds = %for.cond, %for.cond
  %4 = load i32, i32* %d, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %d1, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load i32, i32* %d1, align 4
  %6 = load i32, i32* @N_domains, align 4
  %cmp4 = icmp slt i32 %5, %6
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3, %for.cond3
  %7 = load i32, i32* %d1, align 4
  %arrayidx6 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %7
  %8 = load i32, i32* %d, align 4
  %arrayidx7 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %8
  %call = call i32 @contained_in(%struct.domain_struct* %arrayidx7, %struct.domain_struct* %arrayidx6)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then8, label %if.end12

if.then8:                                         ; preds = %for.body5, %for.body5
  %9 = load i32, i32* %d1, align 4
  %arrayidx9 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %9
  %10 = load i32, i32* %d, align 4
  %arrayidx10 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %10
  %parent11 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx10, i32 0, i32 6
  store %struct.domain_struct* %arrayidx9, %struct.domain_struct** %parent11, align 4
  br label %for.end

if.end12:                                         ; preds = %for.body5, %for.body5
  br label %for.inc

for.inc:                                          ; preds = %if.end12, %if.end12
  %11 = load i32, i32* %d1, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %d1, align 4
  br label %for.cond3

for.end:                                          ; preds = %if.then8, %for.cond3, %if.then8, %for.cond3
  %12 = load i32, i32* %d1, align 4
  %13 = load i32, i32* @N_domains, align 4
  %cmp13 = icmp eq i32 %12, %13
  br i1 %cmp13, label %if.then14, label %if.end18

if.then14:                                        ; preds = %for.end, %for.end
  %14 = load i32, i32* %d, align 4
  %arrayidx15 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %14
  %parent16 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx15, i32 0, i32 6
  store %struct.domain_struct* null, %struct.domain_struct** %parent16, align 4
  %15 = load i32, i32* @N_domain_trees, align 4
  %inc17 = add nsw i32 %15, 1
  store i32 %inc17, i32* @N_domain_trees, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then14, %for.end, %if.then14, %for.end
  br label %for.inc19

for.inc19:                                        ; preds = %if.end18, %if.end18
  %16 = load i32, i32* %d, align 4
  %inc20 = add nsw i32 %16, 1
  store i32 %inc20, i32* %d, align 4
  br label %for.cond

for.end21:                                        ; preds = %for.cond, %for.cond
  store i32 0, i32* %d, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc26, %for.end21, %for.inc26, %for.end21
  %17 = load i32, i32* %d, align 4
  %18 = load i32, i32* @N_domains, align 4
  %cmp23 = icmp slt i32 %17, %18
  br i1 %cmp23, label %for.body24, label %for.end28

for.body24:                                       ; preds = %for.cond22, %for.cond22
  %19 = load i32, i32* %d, align 4
  %arrayidx25 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %19
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx25, i32 0, i32 5
  store %struct.d_tree_leaf_struct* null, %struct.d_tree_leaf_struct** %child, align 4
  br label %for.inc26

for.inc26:                                        ; preds = %for.body24, %for.body24
  %20 = load i32, i32* %d, align 4
  %inc27 = add nsw i32 %20, 1
  store i32 %inc27, i32* %d, align 4
  br label %for.cond22

for.end28:                                        ; preds = %for.cond22, %for.cond22
  store i32 0, i32* %link, align 4
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc55, %for.end28, %for.inc55, %for.end28
  %21 = load i32, i32* %link, align 4
  %22 = load i32, i32* @N_links, align 4
  %cmp30 = icmp slt i32 %21, %22
  br i1 %cmp30, label %for.body31, label %for.end57

for.body31:                                       ; preds = %for.cond29, %for.cond29
  %23 = load i32, i32* %link, align 4
  %24 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx32 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %24, i32 0, i32 %23
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx32, i32 0, i32 0
  %25 = load i32, i32* %l, align 4
  %cmp33 = icmp eq i32 %25, -1
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %for.body31, %for.body31
  br label %for.inc55

if.end35:                                         ; preds = %for.body31, %for.body31
  store i32 0, i32* %d, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc52, %if.end35, %for.inc52, %if.end35
  %26 = load i32, i32* %d, align 4
  %27 = load i32, i32* @N_domains, align 4
  %cmp37 = icmp slt i32 %26, %27
  br i1 %cmp37, label %for.body38, label %for.end54

for.body38:                                       ; preds = %for.cond36, %for.cond36
  %28 = load i32, i32* %d, align 4
  %arrayidx39 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %28
  %29 = load i32, i32* %link, align 4
  %call40 = call i32 @link_in_domain(i32 %29, %struct.domain_struct* %arrayidx39)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.then42, label %if.end51

if.then42:                                        ; preds = %for.body38, %for.body38
  %call43 = call i8* @xalloc(i32 12)
  %30 = bitcast i8* %call43 to %struct.d_tree_leaf_struct*
  store %struct.d_tree_leaf_struct* %30, %struct.d_tree_leaf_struct** %dtl, align 4
  %31 = load i32, i32* %link, align 4
  %32 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link44 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %32, i32 0, i32 1
  store i32 %31, i32* %link44, align 4
  %33 = load i32, i32* %d, align 4
  %arrayidx45 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %33
  %34 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %parent46 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %34, i32 0, i32 0
  store %struct.domain_struct* %arrayidx45, %struct.domain_struct** %parent46, align 4
  %35 = load i32, i32* %d, align 4
  %arrayidx47 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %35
  %child48 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx47, i32 0, i32 5
  %36 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child48, align 4
  %37 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %37, i32 0, i32 2
  store %struct.d_tree_leaf_struct* %36, %struct.d_tree_leaf_struct** %next, align 4
  %38 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %39 = load i32, i32* %d, align 4
  %arrayidx49 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %39
  %child50 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx49, i32 0, i32 5
  store %struct.d_tree_leaf_struct* %38, %struct.d_tree_leaf_struct** %child50, align 4
  br label %for.end54

if.end51:                                         ; preds = %for.body38, %for.body38
  br label %for.inc52

for.inc52:                                        ; preds = %if.end51, %if.end51
  %40 = load i32, i32* %d, align 4
  %inc53 = add nsw i32 %40, 1
  store i32 %inc53, i32* %d, align 4
  br label %for.cond36

for.end54:                                        ; preds = %if.then42, %for.cond36, %if.then42, %for.cond36
  br label %for.inc55

for.inc55:                                        ; preds = %for.end54, %if.then34, %for.end54, %if.then34
  %41 = load i32, i32* %link, align 4
  %inc56 = add nsw i32 %41, 1
  store i32 %inc56, i32* %link, align 4
  br label %for.cond29

for.end57:                                        ; preds = %for.cond29, %for.cond29
  ret void
}

; Function Attrs: noinline nounwind
define void @free_list_o_links(%struct.List_o_links_struct* %lol) #0 {
entry:
  %lol.addr = alloca %struct.List_o_links_struct*, align 4
  %xlol = alloca %struct.List_o_links_struct*, align 4
  store %struct.List_o_links_struct* %lol, %struct.List_o_links_struct** %lol.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol.addr, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol.addr, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %1, i32 0, i32 3
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %2, %struct.List_o_links_struct** %xlol, align 4
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol.addr, align 4
  %4 = bitcast %struct.List_o_links_struct* %3 to i8*
  call void @xfree(i8* %4, i32 16)
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %xlol, align 4
  store %struct.List_o_links_struct* %5, %struct.List_o_links_struct** %lol.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_D_tree_leaves(%struct.d_tree_leaf_struct* %dtl) #0 {
entry:
  %dtl.addr = alloca %struct.d_tree_leaf_struct*, align 4
  %xdtl = alloca %struct.d_tree_leaf_struct*, align 4
  store %struct.d_tree_leaf_struct* %dtl, %struct.d_tree_leaf_struct** %dtl.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl.addr, align 4
  %cmp = icmp ne %struct.d_tree_leaf_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl.addr, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %1, i32 0, i32 2
  %2 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %2, %struct.d_tree_leaf_struct** %xdtl, align 4
  %3 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl.addr, align 4
  %4 = bitcast %struct.d_tree_leaf_struct* %3 to i8*
  call void @xfree(i8* %4, i32 12)
  %5 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %xdtl, align 4
  store %struct.d_tree_leaf_struct* %5, %struct.d_tree_leaf_struct** %dtl.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_post_processing_structures() #0 {
entry:
  %w = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %2
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  call void @free_list_o_links(%struct.List_o_links_struct* %3)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %4 = load i32, i32* %w, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %d, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc6, %for.end, %for.inc6, %for.end
  %5 = load i32, i32* %d, align 4
  %6 = load i32, i32* @N_domains, align 4
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %for.body3, label %for.end8

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %7 = load i32, i32* %d, align 4
  %arrayidx4 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %7
  %lol = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx4, i32 0, i32 2
  %8 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  call void @free_list_o_links(%struct.List_o_links_struct* %8)
  %9 = load i32, i32* %d, align 4
  %arrayidx5 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %9
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx5, i32 0, i32 5
  %10 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  call void @free_D_tree_leaves(%struct.d_tree_leaf_struct* %10)
  br label %for.inc6

for.inc6:                                         ; preds = %for.body3, %for.body3
  %11 = load i32, i32* %d, align 4
  %inc7 = add nsw i32 %11, 1
  store i32 %inc7, i32* %d, align 4
  br label %for.cond1

for.end8:                                         ; preds = %for.cond1, %for.cond1
  ret void
}

; Function Attrs: noinline nounwind
define void @print_domain_tree() #0 {
entry:
  %d = alloca i32, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %0 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.46.461, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %0)
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %d, align 4
  %2 = load i32, i32* @N_domains, align 4
  %sub = sub nsw i32 %2, 1
  %cmp = icmp slt i32 %1, %sub
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %3
  %parent = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 6
  %4 = load %struct.domain_struct*, %struct.domain_struct** %parent, align 4
  %sub.ptr.lhs.cast = ptrtoint %struct.domain_struct* %4 to i32
  %5 = ptrtoint [497 x %struct.domain_struct]* @domain_array to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %5
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 28
  %6 = load i32, i32* %d, align 4
  %7 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.47.462, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %7, i32 %6, i32 %sub.ptr.div)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %d, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %d, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc14, %for.end
  %9 = load i32, i32* %d, align 4
  %10 = load i32, i32* @N_domains, align 4
  %cmp3 = icmp slt i32 %9, %10
  br i1 %cmp3, label %for.body4, label %for.end16

for.body4:                                        ; preds = %for.cond2
  %11 = load i32, i32* %d, align 4
  %12 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.48.463, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %12, i32 %11)
  %13 = load i32, i32* %d, align 4
  %arrayidx6 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %13
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx6, i32 0, i32 5
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc12, %for.body4
  %15 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp8 = icmp ne %struct.d_tree_leaf_struct* %15, null
  br i1 %cmp8, label %for.body9, label %for.end13

for.body9:                                        ; preds = %for.cond7
  %16 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %16, i32 0, i32 1
  %17 = load i32, i32* %link, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx11 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx11, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %17, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 6, i32 0)
  br label %for.inc12

for.inc12:                                        ; preds = %for.body9
  %18 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %18, i32 0, i32 2
  %19 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %19, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond7

for.end13:                                        ; preds = %for.cond7
  br label %for.inc14

for.inc14:                                        ; preds = %for.end13
  %20 = load i32, i32* %d, align 4
  %inc15 = add nsw i32 %20, 1
  store i32 %inc15, i32* %d, align 4
  br label %for.cond2

for.end16:                                        ; preds = %for.cond2
  ret void
}

; Function Attrs: noinline nounwind
define i32 @CCG_rule() #0 {
entry:
  %retval = alloca i32, align 4
  %d = alloca i32, align 4
  %t = alloca i32, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 4
  %3 = load i32, i32* %type, align 4
  %cmp1 = icmp eq i32 %3, 99
  br i1 %cmp1, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %for.body
  %4 = load i32, i32* %d, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %4
  %parent = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx2, i32 0, i32 6
  %5 = load %struct.domain_struct*, %struct.domain_struct** %parent, align 4
  %cmp3 = icmp ne %struct.domain_struct* %5, null
  br i1 %cmp3, label %if.then, label %if.end11

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %d, align 4
  %arrayidx4 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %6
  %parent5 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx4, i32 0, i32 6
  %7 = load %struct.domain_struct*, %struct.domain_struct** %parent5, align 4
  %type6 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %7, i32 0, i32 4
  %8 = load i32, i32* %type6, align 4
  store i32 %8, i32* %t, align 4
  %9 = load i32, i32* %t, align 4
  %cmp7 = icmp ne i32 %9, 103
  br i1 %cmp7, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %if.then
  %10 = load i32, i32* %t, align 4
  %cmp9 = icmp ne i32 %10, 99
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %land.lhs.true8
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true8, %if.then
  br label %if.end11

if.end11:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %11 = load i32, i32* %d, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then10
  %12 = load i32, i32* %retval, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind
define i32 @domain_bounded(i32 %d_type) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %retval = alloca i32, align 4
  %d_type.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %lw = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %d_type.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc14, %entry, %for.inc14, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end15

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 4
  %3 = load i32, i32* %type, align 4
  %4 = load i32, i32* %d_type.addr, align 4
  %cmp1 = icmp ne i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc14

if.end:                                           ; preds = %for.body, %for.body
  %5 = load i32, i32* %d, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %5
  %start_link = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx2, i32 0, i32 3
  %6 = load i32, i32* %start_link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 0
  %8 = load i32, i32* %l, align 4
  store i32 %8, i32* %lw, align 4
  %9 = load i32, i32* %d, align 4
  %arrayidx4 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %9
  %lol5 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx4, i32 0, i32 2
  %10 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol5, align 4
  store %struct.List_o_links_struct* %10, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %if.end, %for.inc, %if.end
  %11 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp7 = icmp ne %struct.List_o_links_struct* %11, null
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6, %for.cond6
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 0
  %13 = load i32, i32* %link, align 4
  %14 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %14, i32 0, i32 %13
  %l10 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx9, i32 0, i32 0
  %15 = load i32, i32* %l10, align 4
  %16 = load i32, i32* %lw, align 4
  %cmp11 = icmp slt i32 %15, %16
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.body8, %for.body8
  store i32 0, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %for.body8, %for.body8
  br label %for.inc

for.inc:                                          ; preds = %if.end13, %if.end13
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %17, i32 0, i32 3
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %18, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6, %for.cond6
  br label %for.inc14

for.inc14:                                        ; preds = %for.end, %if.then, %for.end, %if.then
  %19 = load i32, i32* %d, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end15:                                        ; preds = %for.cond, %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end15, %if.then12, %for.end15, %if.then12
  %20 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %20, i32* %struct.BigStruct_32
  ret i32 %20
}

; Function Attrs: noinline nounwind
define i32 @link_inhabits(i8* %link_name, i32 %d_type) #0 {
entry:
  %retval = alloca i32, align 4
  %d_type.addr = alloca i32, align 4
  %link_name.addr = alloca i8*, align 4
  %d = alloca i32, align 4
  %c = alloca %struct.d_tree_leaf_struct*, align 4
  store i32 %d_type, i32* %d_type.addr, align 4
  store i8* %link_name, i8** %link_name.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end10

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 5
  %3 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %3, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %cmp2 = icmp ne %struct.d_tree_leaf_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %5 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %5, i32 0, i32 1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 4
  %8 = load i8*, i8** %name, align 4
  %9 = load i8*, i8** %link_name.addr, align 4
  %call = call i32 @ppmatch(i8* %9, i8* %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end8

if.then:                                          ; preds = %for.body3
  %10 = load i32, i32* %d, align 4
  %arrayidx5 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %10
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx5, i32 0, i32 4
  %11 = load i32, i32* %type, align 4
  %12 = load i32, i32* %d_type.addr, align 4
  %cmp6 = icmp ne i32 %11, %12
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end8

if.end8:                                          ; preds = %if.end, %for.body3
  br label %for.inc

for.inc:                                          ; preds = %if.end8
  %13 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %13, i32 0, i32 2
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %15 = load i32, i32* %d, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end10:                                        ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end10, %if.then7
  %16 = load i32, i32* %retval, align 4
  ret i32 %16
}

; Function Attrs: noinline nounwind
define i32 @group_type_contains(i32 %d_type, i8* %link_name) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %link_name.addr = alloca i8*, align 4
  %d_type.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %c = alloca %struct.d_tree_leaf_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %link_name.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %d_type.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc12, %entry, %for.inc12, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end13

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 4
  %3 = load i32, i32* %type, align 4
  %4 = load i32, i32* %d_type.addr, align 4
  %cmp1 = icmp ne i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc12

if.end:                                           ; preds = %for.body, %for.body
  %5 = load i32, i32* %d, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %5
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx2, i32 0, i32 5
  %6 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %6, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %if.end, %for.inc, %if.end
  %7 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %cmp4 = icmp ne %struct.d_tree_leaf_struct* %7, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3, %for.cond3
  %8 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %8, i32 0, i32 1
  %9 = load i32, i32* %link, align 4
  %10 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %10, i32 0, i32 %9
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx6, i32 0, i32 4
  %11 = load i8*, i8** %name, align 4
  %12 = load i8*, i8** %link_name.addr, align 4
  %call = call i32 @ppmatch(i8* %12, i8* %11)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then7, label %if.end8

if.then7:                                         ; preds = %for.body5, %for.body5
  br label %for.end

if.end8:                                          ; preds = %for.body5, %for.body5
  br label %for.inc

for.inc:                                          ; preds = %if.end8, %if.end8
  %13 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %13, i32 0, i32 2
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond3

for.end:                                          ; preds = %if.then7, %for.cond3, %if.then7, %for.cond3
  %15 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %cmp9 = icmp eq %struct.d_tree_leaf_struct* %15, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %for.end, %for.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %for.end, %for.end
  br label %for.inc12

for.inc12:                                        ; preds = %if.end11, %if.then, %if.end11, %if.then
  %16 = load i32, i32* %d, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end13:                                        ; preds = %for.cond, %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end13, %if.then10, %for.end13, %if.then10
  %17 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %17, i32* %struct.BigStruct_32
  ret i32 %17
}

; Function Attrs: noinline nounwind
define i32 @group_type_contains_all(i32 %d_type, i8** %name_list) #0 {
entry:
  %retval = alloca i32, align 4
  %name_list.addr = alloca i8**, align 4
  %d_type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i8** %name_list, i8*** %name_list.addr, align 4
  store i32 %d_type, i32* %d_type.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i8**, i8*** %name_list.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %0
  %2 = load i8*, i8** %arrayidx, align 4
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %4 = load i8**, i8*** %name_list.addr, align 4
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i32 %3
  %5 = load i8*, i8** %arrayidx1, align 4
  %6 = load i32, i32* %d_type.addr, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %6, i32* %struct.BigStruct_0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %5, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 194, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define i32 @group_type_contains_one(i32 %d_type, i8** %name_list) #0 {
entry:
  %retval = alloca i32, align 4
  %name_list.addr = alloca i8**, align 4
  %d_type.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %c = alloca %struct.d_tree_leaf_struct*, align 4
  store i8** %name_list, i8*** %name_list.addr, align 4
  store i32 %d_type, i32* %d_type.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc20, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end22

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 4
  %3 = load i32, i32* %type, align 4
  %4 = load i32, i32* %d_type.addr, align 4
  %cmp1 = icmp ne i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.inc20

if.end:                                           ; preds = %for.body
  store i32 0, i32* %count, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc14, %if.end
  %5 = load i32, i32* %i, align 4
  %6 = load i8**, i8*** %name_list.addr, align 4
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i32 %5
  %7 = load i8*, i8** %arrayidx3, align 4
  %cmp4 = icmp ne i8* %7, null
  br i1 %cmp4, label %for.body5, label %for.end16

for.body5:                                        ; preds = %for.cond2
  %8 = load i32, i32* %d, align 4
  %arrayidx6 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %8
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx6, i32 0, i32 5
  %9 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %9, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body5
  %10 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %cmp8 = icmp ne %struct.d_tree_leaf_struct* %10, null
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %11 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %11, i32 0, i32 1
  %12 = load i32, i32* %link, align 4
  %13 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %13, i32 0, i32 %12
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx10, i32 0, i32 4
  %14 = load i8*, i8** %name, align 4
  %15 = load i32, i32* %i, align 4
  %16 = load i8**, i8*** %name_list.addr, align 4
  %arrayidx11 = getelementptr inbounds i8*, i8** %16, i32 %15
  %17 = load i8*, i8** %arrayidx11, align 4
  %call = call i32 @ppmatch(i8* %17, i8* %14)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.body9
  %18 = load i32, i32* %count, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %count, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %for.body9
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %19 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %19, i32 0, i32 2
  %20 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %20, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  br label %for.inc14

for.inc14:                                        ; preds = %for.end
  %21 = load i32, i32* %i, align 4
  %inc15 = add nsw i32 %21, 1
  store i32 %inc15, i32* %i, align 4
  br label %for.cond2

for.end16:                                        ; preds = %for.cond2
  %22 = load i32, i32* %count, align 4
  %cmp17 = icmp ne i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %for.end16
  store i32 0, i32* %retval, align 4
  br label %return

if.end19:                                         ; preds = %for.end16
  br label %for.inc20

for.inc20:                                        ; preds = %if.end19, %if.then
  %23 = load i32, i32* %d, align 4
  %inc21 = add nsw i32 %23, 1
  store i32 %inc21, i32* %d, align 4
  br label %for.cond

for.end22:                                        ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end22, %if.then18
  %24 = load i32, i32* %retval, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind
define i32 @contains_none(i8* %selector, i8** %incompat) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  %load_struct.BigStruct_9 = load i8**, i8*** %struct.BigStruct_9
  %retval = alloca i32, align 4
  %incompat.addr = alloca i8**, align 4
  %selector.addr = alloca i8*, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %d = alloca i32, align 4
  store i8** %load_struct.BigStruct_9, i8*** %incompat.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %selector.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc23, %entry, %for.inc23, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end24

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 5
  %3 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %3, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %4 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp2 = icmp ne %struct.d_tree_leaf_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %5 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %5, i32 0, i32 1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 4
  %8 = load i8*, i8** %name, align 4
  %9 = load i8*, i8** %selector.addr, align 4
  %call = call i32 @ppmatch(i8* %9, i8* %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3, %for.body3
  br label %for.end

if.end:                                           ; preds = %for.body3, %for.body3
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %10 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %10, i32 0, i32 2
  %11 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %11, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.end:                                          ; preds = %if.then, %for.cond1, %if.then, %for.cond1
  %12 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp5 = icmp ne %struct.d_tree_leaf_struct* %12, null
  br i1 %cmp5, label %if.then6, label %if.end22

if.then6:                                         ; preds = %for.end, %for.end
  %13 = load i32, i32* %d, align 4
  %arrayidx7 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %13
  %child8 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx7, i32 0, i32 5
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child8, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc19, %if.then6, %for.inc19, %if.then6
  %15 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp10 = icmp ne %struct.d_tree_leaf_struct* %15, null
  br i1 %cmp10, label %for.body11, label %for.end21

for.body11:                                       ; preds = %for.cond9, %for.cond9
  %16 = load i8**, i8*** %incompat.addr, align 4
  %17 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link12 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %17, i32 0, i32 1
  %18 = load i32, i32* %link12, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %name14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 4
  %20 = load i8*, i8** %name14, align 4
  %call15 = call i32 @string_in_list(i8* %20, i8** %16)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %for.body11, %for.body11
  store i32 0, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %for.body11, %for.body11
  br label %for.inc19

for.inc19:                                        ; preds = %if.end18, %if.end18
  %21 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next20 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %21, i32 0, i32 2
  %22 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next20, align 4
  store %struct.d_tree_leaf_struct* %22, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.end21:                                        ; preds = %for.cond9, %for.cond9
  br label %if.end22

if.end22:                                         ; preds = %for.end21, %for.end, %for.end21, %for.end
  br label %for.inc23

for.inc23:                                        ; preds = %if.end22, %if.end22
  %23 = load i32, i32* %d, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end24:                                        ; preds = %for.cond, %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end24, %if.then17, %for.end24, %if.then17
  %24 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %24, i32* %struct.BigStruct_32
  ret i32 %24
}

; Function Attrs: noinline nounwind
define i32 @ordering_constraint(i8* %X, i8* %Y) #0 {
entry:
  %retval = alloca i32, align 4
  %Y.addr = alloca i8*, align 4
  %X.addr = alloca i8*, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %d = alloca i32, align 4
  %leftmost_y = alloca i32, align 4
  %rightmost_x = alloca i32, align 4
  store i8* %Y, i8** %Y.addr, align 4
  store i8* %X, i8** %X.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc33, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end34

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* @N_words, align 4
  store i32 %2, i32* %leftmost_y, align 4
  store i32 -1, i32* %rightmost_x, align 4
  %3 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %3
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 5
  %4 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %4, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp2 = icmp ne %struct.d_tree_leaf_struct* %5, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %6 = load i8*, i8** %Y.addr, align 4
  %7 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %7, i32 0, i32 1
  %8 = load i32, i32* %link, align 4
  %9 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %9, i32 0, i32 %8
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 4
  %10 = load i8*, i8** %name, align 4
  %call = call i32 @strcmp_Package(i8* %10, i8* %6)
  %cmp5 = icmp eq i32 %call, 0
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %for.body3
  %11 = load i32, i32* %leftmost_y, align 4
  %12 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link6 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %12, i32 0, i32 1
  %13 = load i32, i32* %link6, align 4
  %14 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx7 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %14, i32 0, i32 %13
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx7, i32 0, i32 1
  %15 = load i32, i32* %r, align 4
  %cmp8 = icmp sgt i32 %11, %15
  br i1 %cmp8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.then
  %16 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link10 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %16, i32 0, i32 1
  %17 = load i32, i32* %link10, align 4
  %18 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx11 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %18, i32 0, i32 %17
  %r12 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx11, i32 0, i32 1
  %19 = load i32, i32* %r12, align 4
  store i32 %19, i32* %leftmost_y, align 4
  br label %if.end

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end29

if.else:                                          ; preds = %for.body3
  %20 = load i8*, i8** %X.addr, align 4
  %21 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link13 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %21, i32 0, i32 1
  %22 = load i32, i32* %link13, align 4
  %23 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx14 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %23, i32 0, i32 %22
  %name15 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx14, i32 0, i32 4
  %24 = load i8*, i8** %name15, align 4
  %call16 = call i32 @strcmp_Package(i8* %24, i8* %20)
  %cmp17 = icmp eq i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end28

if.then18:                                        ; preds = %if.else
  %25 = load i32, i32* %rightmost_x, align 4
  %26 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link19 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %26, i32 0, i32 1
  %27 = load i32, i32* %link19, align 4
  %28 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx20 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %28, i32 0, i32 %27
  %r21 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx20, i32 0, i32 1
  %29 = load i32, i32* %r21, align 4
  %cmp22 = icmp slt i32 %25, %29
  br i1 %cmp22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.then18
  %30 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link24 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %30, i32 0, i32 1
  %31 = load i32, i32* %link24, align 4
  %32 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx25 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %32, i32 0, i32 %31
  %r26 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx25, i32 0, i32 1
  %33 = load i32, i32* %r26, align 4
  store i32 %33, i32* %rightmost_x, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.then18
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end29
  %34 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %34, i32 0, i32 2
  %35 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %35, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  %36 = load i32, i32* %leftmost_y, align 4
  %37 = load i32, i32* %rightmost_x, align 4
  %cmp30 = icmp sle i32 %36, %37
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end32:                                         ; preds = %for.end
  br label %for.inc33

for.inc33:                                        ; preds = %if.end32
  %38 = load i32, i32* %d, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end34:                                        ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end34, %if.then31
  %39 = load i32, i32* %retval, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind
define i32 @contains_one(i8* %selector, i8** %required) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  %load_struct.BigStruct_9 = load i8**, i8*** %struct.BigStruct_9
  %retval = alloca i32, align 4
  %required.addr = alloca i8**, align 4
  %selector.addr = alloca i8*, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %d = alloca i32, align 4
  %count = alloca i32, align 4
  store i8** %load_struct.BigStruct_9, i8*** %required.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %selector.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc26, %entry, %for.inc26, %entry
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end28

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 5
  %3 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %3, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %4 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp2 = icmp ne %struct.d_tree_leaf_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %5 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %5, i32 0, i32 1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 4
  %8 = load i8*, i8** %name, align 4
  %9 = load i8*, i8** %selector.addr, align 4
  %call = call i32 @ppmatch(i8* %9, i8* %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3, %for.body3
  br label %for.end

if.end:                                           ; preds = %for.body3, %for.body3
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %10 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %10, i32 0, i32 2
  %11 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %11, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.end:                                          ; preds = %if.then, %for.cond1, %if.then, %for.cond1
  %12 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp5 = icmp ne %struct.d_tree_leaf_struct* %12, null
  br i1 %cmp5, label %if.then6, label %if.end25

if.then6:                                         ; preds = %for.end, %for.end
  store i32 0, i32* %count, align 4
  %13 = load i32, i32* %d, align 4
  %arrayidx7 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %13
  %child8 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx7, i32 0, i32 5
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child8, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc19, %if.then6, %for.inc19, %if.then6
  %15 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp10 = icmp ne %struct.d_tree_leaf_struct* %15, null
  br i1 %cmp10, label %for.body11, label %for.end21

for.body11:                                       ; preds = %for.cond9, %for.cond9
  %16 = load i8**, i8*** %required.addr, align 4
  %17 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link12 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %17, i32 0, i32 1
  %18 = load i32, i32* %link12, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %name14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 4
  %20 = load i8*, i8** %name14, align 4
  %call15 = call i32 @string_in_list(i8* %20, i8** %16)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %for.body11, %for.body11
  %21 = load i32, i32* %count, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %count, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %for.body11, %if.then17, %for.body11
  br label %for.inc19

for.inc19:                                        ; preds = %if.end18, %if.end18
  %22 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next20 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %22, i32 0, i32 2
  %23 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next20, align 4
  store %struct.d_tree_leaf_struct* %23, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.end21:                                        ; preds = %for.cond9, %for.cond9
  %24 = load i32, i32* %count, align 4
  %cmp22 = icmp slt i32 %24, 1
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %for.end21, %for.end21
  store i32 0, i32* %retval, align 4
  br label %return

if.end24:                                         ; preds = %for.end21, %for.end21
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %for.end, %if.end24, %for.end
  br label %for.inc26

for.inc26:                                        ; preds = %if.end25, %if.end25
  %25 = load i32, i32* %d, align 4
  %inc27 = add nsw i32 %25, 1
  store i32 %inc27, i32* %d, align 4
  br label %for.cond

for.end28:                                        ; preds = %for.cond, %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end28, %if.then23, %for.end28, %if.then23
  %26 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %26, i32* %struct.BigStruct_32
  ret i32 %26
}

; Function Attrs: noinline nounwind
define void @connectivity_dfs(i32 %w, i8** %s) #0 {
entry:
  %s.addr = alloca i8**, align 4
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i8** %s, i8*** %s.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %0
  store i32 1, i32* %arrayidx, align 4
  %1 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %1
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx1, align 4
  store %struct.List_o_links_struct* %2, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %4, i32 0, i32 1
  %5 = load i32, i32* %word, align 4
  %arrayidx2 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %5
  %6 = load i32, i32* %arrayidx2, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %7 = load i8**, i8*** %s.addr, align 4
  %8 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %8, i32 0, i32 0
  %9 = load i32, i32* %link, align 4
  %10 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %10, i32 0, i32 %9
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 4
  %11 = load i8*, i8** %name, align 4
  %call = call i32 @string_in_list(i8* %11, i8** %7)
  %tobool4 = icmp ne i32 %call, 0
  br i1 %tobool4, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %12 = load i8**, i8*** %s.addr, align 4
  %13 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word5 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %13, i32 0, i32 1
  %14 = load i32, i32* %word5, align 4
  call void @connectivity_dfs(i32 %14, i8** %12)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %15, i32 0, i32 3
  %16 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %16, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @mark_reachable_words(i32 %w) #0 {
entry:
  %w.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %0
  %1 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %2
  store i32 1, i32* %arrayidx1, align 4
  %3 = load i32, i32* %w.addr, align 4
  %arrayidx2 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %3
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx2, align 4
  store %struct.List_o_links_struct* %4, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %6, i32 0, i32 1
  %7 = load i32, i32* %word, align 4
  call void @mark_reachable_words(i32 %7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %8, i32 0, i32 3
  %9 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %9, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define i32 @is_connected_without(i8** %s) #0 {
entry:
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  %load_struct.BigStruct_9 = load i8**, i8*** %struct.BigStruct_9
  %retval = alloca i32, align 4
  %s.addr = alloca i8**, align 4
  %i = alloca i32, align 4
  store i8** %load_struct.BigStruct_9, i8*** %s.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %2
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  call void @mark_reachable_words(i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc6, %for.end, %for.inc6, %for.end
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @N_words, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end8

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %6
  %7 = load i32, i32* %arrayidx4, align 4
  %tobool = icmp ne i32 %7, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %8 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %8
  store i32 %lnot.ext, i32* %arrayidx5, align 4
  br label %for.inc6

for.inc6:                                         ; preds = %for.body3, %for.body3
  %9 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %9, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond1

for.end8:                                         ; preds = %for.cond1, %for.cond1
  %10 = load i8**, i8*** %s.addr, align 4
  call void @connectivity_dfs(i32 0, i8** %10)
  store i32 0, i32* %i, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc14, %for.end8, %for.inc14, %for.end8
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* @N_words, align 4
  %cmp10 = icmp slt i32 %11, %12
  br i1 %cmp10, label %for.body11, label %for.end16

for.body11:                                       ; preds = %for.cond9, %for.cond9
  %13 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %13
  %14 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp eq i32 %14, 0
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %for.body11, %for.body11
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body11, %for.body11
  br label %for.inc14

for.inc14:                                        ; preds = %if.end, %if.end
  %15 = load i32, i32* %i, align 4
  %inc15 = add nsw i32 %15, 1
  store i32 %inc15, i32* %i, align 4
  br label %for.cond9

for.end16:                                        ; preds = %for.cond9, %for.cond9
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end16, %if.then, %for.end16, %if.then
  %16 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %16, i32* %struct.BigStruct_32
  ret i32 %16
}

; Function Attrs: noinline nounwind
define i32 @is_connected() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %2
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  %cmp1 = icmp eq %struct.List_o_links_struct* %3, null
  %conv = zext i1 %cmp1 to i32
  %4 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %4
  store i32 %conv, i32* %arrayidx2, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  call void @mark_reachable_words(i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc8, %for.end, %for.inc8, %for.end
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* @N_words, align 4
  %cmp4 = icmp slt i32 %6, %7
  br i1 %cmp4, label %for.body6, label %for.end10

for.body6:                                        ; preds = %for.cond3, %for.cond3
  %8 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %8
  %9 = load i32, i32* %arrayidx7, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body6, %for.body6
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body6, %for.body6
  br label %for.inc8

for.inc8:                                         ; preds = %if.end, %if.end
  %10 = load i32, i32* %i, align 4
  %inc9 = add nsw i32 %10, 1
  store i32 %inc9, i32* %i, align 4
  br label %for.cond3

for.end10:                                        ; preds = %for.cond3, %for.cond3
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end10, %if.then, %for.end10, %if.then
  %11 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret i32 %11
}

; Function Attrs: noinline nounwind
define void @free_PP_node(%struct.PP_node_struct* %p) #0 {
entry:
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  %load_struct.BigStruct_20 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_20
  %p.addr = alloca %struct.PP_node_struct*, align 4
  %dtl = alloca %struct.D_type_list_struct*, align 4
  %dtlx = alloca %struct.D_type_list_struct*, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %vx = alloca %struct.Violation_list_struct*, align 4
  %i = alloca i32, align 4
  store %struct.PP_node_struct* %load_struct.BigStruct_20, %struct.PP_node_struct** %p.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc4, %entry, %for.inc4, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %3, i32 0, i32 0
  %4 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array, align 4
  %arrayidx = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %4, i32 %2
  %5 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx, align 4
  store %struct.D_type_list_struct* %5, %struct.D_type_list_struct** %dtl, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %6 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %cmp2 = icmp ne %struct.D_type_list_struct* %6, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %7 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %7, i32 0, i32 0
  %8 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next, align 4
  store %struct.D_type_list_struct* %8, %struct.D_type_list_struct** %dtlx, align 4
  %9 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %10 = bitcast %struct.D_type_list_struct* %9 to i8*
  call void @xfree(i8* %10, i32 8)
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %for.body3
  %11 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtlx, align 4
  store %struct.D_type_list_struct* %11, %struct.D_type_list_struct** %dtl, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  br label %for.inc4

for.inc4:                                         ; preds = %for.end, %for.end
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end5:                                         ; preds = %for.cond, %for.cond
  %13 = load i32, i32* @N_links, align 4
  %cmp6 = icmp sgt i32 %13, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.end5, %for.end5
  %14 = load i32, i32* @N_links, align 4
  %mul = mul i32 %14, 4
  %15 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %d_type_array7 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %15, i32 0, i32 0
  %16 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array7, align 4
  %17 = bitcast %struct.D_type_list_struct** %16 to i8*
  call void @xfree(i8* %17, i32 %mul)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end5, %if.then, %for.end5
  %18 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %v8 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %18, i32 0, i32 1
  %19 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v8, align 4
  store %struct.Violation_list_struct* %19, %struct.Violation_list_struct** %v, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc13, %if.end, %for.inc13, %if.end
  %20 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp10 = icmp ne %struct.Violation_list_struct* %20, null
  br i1 %cmp10, label %for.body11, label %for.end14

for.body11:                                       ; preds = %for.cond9, %for.cond9
  %21 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next12 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %21, i32 0, i32 0
  %22 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next12, align 4
  store %struct.Violation_list_struct* %22, %struct.Violation_list_struct** %vx, align 4
  %23 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %24 = bitcast %struct.Violation_list_struct* %23 to i8*
  call void @xfree(i8* %24, i32 8)
  br label %for.inc13

for.inc13:                                        ; preds = %for.body11, %for.body11
  %25 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %vx, align 4
  store %struct.Violation_list_struct* %25, %struct.Violation_list_struct** %v, align 4
  br label %for.cond9

for.end14:                                        ; preds = %for.cond9, %for.cond9
  %26 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %27 = bitcast %struct.PP_node_struct* %26 to i8*
  call void @xfree(i8* %27, i32 8)
  ret void
}

; Function Attrs: noinline nounwind
define %struct.D_type_list_struct** @build_type_array() #0 {
entry:
  %array = alloca %struct.D_type_list_struct**, align 4
  %dtl = alloca %struct.D_type_list_struct*, align 4
  %d = alloca i32, align 4
  %i = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store %struct.D_type_list_struct** null, %struct.D_type_list_struct*** %array, align 4
  %0 = load i32, i32* @N_links, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %1 = load i32, i32* @N_links, align 4
  %mul = mul i32 %1, 4
  %call = call i8* @xalloc(i32 %mul)
  %2 = bitcast i8* %call to %struct.D_type_list_struct**
  store %struct.D_type_list_struct** %2, %struct.D_type_list_struct*** %array, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* @N_links, align 4
  %cmp1 = icmp slt i32 %3, %4
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %5 = load i32, i32* %i, align 4
  %6 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %arrayidx = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %6, i32 %5
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %d, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc19, %for.end, %for.inc19, %for.end
  %8 = load i32, i32* %d, align 4
  %9 = load i32, i32* @N_domains, align 4
  %cmp3 = icmp slt i32 %8, %9
  br i1 %cmp3, label %for.body4, label %for.end21

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %10 = load i32, i32* %d, align 4
  %arrayidx5 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %10
  %lol6 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx5, i32 0, i32 2
  %11 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol6, align 4
  store %struct.List_o_links_struct* %11, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc16, %for.body4, %for.inc16, %for.body4
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp8 = icmp ne %struct.List_o_links_struct* %12, null
  br i1 %cmp8, label %for.body9, label %for.end18

for.body9:                                        ; preds = %for.cond7, %for.cond7
  %call10 = call i8* @xalloc(i32 8)
  %13 = bitcast i8* %call10 to %struct.D_type_list_struct*
  store %struct.D_type_list_struct* %13, %struct.D_type_list_struct** %dtl, align 4
  %14 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %14, i32 0, i32 0
  %15 = load i32, i32* %link, align 4
  %16 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %arrayidx11 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %16, i32 %15
  %17 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx11, align 4
  %18 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %18, i32 0, i32 0
  store %struct.D_type_list_struct* %17, %struct.D_type_list_struct** %next, align 4
  %19 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %20 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link12 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %20, i32 0, i32 0
  %21 = load i32, i32* %link12, align 4
  %22 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %arrayidx13 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %22, i32 %21
  store %struct.D_type_list_struct* %19, %struct.D_type_list_struct** %arrayidx13, align 4
  %23 = load i32, i32* %d, align 4
  %arrayidx14 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %23
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx14, i32 0, i32 4
  %24 = load i32, i32* %type, align 4
  %25 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %type15 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %25, i32 0, i32 1
  store i32 %24, i32* %type15, align 4
  br label %for.inc16

for.inc16:                                        ; preds = %for.body9, %for.body9
  %26 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next17 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %26, i32 0, i32 3
  %27 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next17, align 4
  store %struct.List_o_links_struct* %27, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond7

for.end18:                                        ; preds = %for.cond7, %for.cond7
  br label %for.inc19

for.inc19:                                        ; preds = %for.end18, %for.end18
  %28 = load i32, i32* %d, align 4
  %inc20 = add nsw i32 %28, 1
  store i32 %inc20, i32* %d, align 4
  br label %for.cond2

for.end21:                                        ; preds = %for.cond2, %for.cond2
  %29 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %struct.BigStruct_35 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 35
  store %struct.D_type_list_struct** %29, %struct.D_type_list_struct*** %struct.BigStruct_35
  ret %struct.D_type_list_struct** %29
}

; Function Attrs: noinline nounwind
define %struct.PP_node_struct* @bogus_pp_node() #0 {
entry:
  %pp_return = alloca %struct.PP_node_struct*, align 4
  %link = alloca i32, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.PP_node_struct*
  store %struct.PP_node_struct* %0, %struct.PP_node_struct** %pp_return, align 4
  %1 = load i32, i32* @N_links, align 4
  %mul = mul i32 %1, 4
  %call1 = call i8* @xalloc(i32 %mul)
  %2 = bitcast i8* %call1 to %struct.D_type_list_struct**
  %3 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %3, i32 0, i32 0
  store %struct.D_type_list_struct** %2, %struct.D_type_list_struct*** %d_type_array, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %link, align 4
  %7 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %d_type_array2 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %7, i32 0, i32 0
  %8 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array2, align 4
  %arrayidx = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %8, i32 %6
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %9 = load i32, i32* %link, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %link, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %10 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %v = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %10, i32 0, i32 1
  store %struct.Violation_list_struct* null, %struct.Violation_list_struct** %v, align 4
  %11 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  store %struct.PP_node_struct* %11, %struct.PP_node_struct** %struct.BigStruct_36
  ret %struct.PP_node_struct* %11
}

; Function Attrs: noinline nounwind
define %struct.Violation_list_struct* @issue_violation(%struct.Violation_list_struct* %v, i8* %string) #0 {
entry:
  %struct.BigStruct_10 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  %load_struct.BigStruct_10 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_10
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %string.addr = alloca i8*, align 4
  %v.addr = alloca %struct.Violation_list_struct*, align 4
  %v1 = alloca %struct.Violation_list_struct*, align 4
  store i8* %load_struct.BigStruct_11, i8** %string.addr, align 4
  store %struct.Violation_list_struct* %load_struct.BigStruct_10, %struct.Violation_list_struct** %v.addr, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Violation_list_struct*
  store %struct.Violation_list_struct* %0, %struct.Violation_list_struct** %v1, align 4
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v1, align 4
  %string1 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %2, i32 0, i32 1
  store i8* %1, i8** %string1, align 4
  %3 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v.addr, align 4
  %4 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v1, align 4
  %next = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %4, i32 0, i32 0
  store %struct.Violation_list_struct* %3, %struct.Violation_list_struct** %next, align 4
  %5 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v1, align 4
  %struct.BigStruct_37 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  store %struct.Violation_list_struct* %5, %struct.Violation_list_struct** %struct.BigStruct_37
  ret %struct.Violation_list_struct* %5
}

; Function Attrs: noinline nounwind
define %struct.PP_node_struct* @post_process() #0 {
entry:
  %retval = alloca %struct.PP_node_struct*, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %pp_return = alloca %struct.PP_node_struct*, align 4
  %0 = load i32, i32* @postprocess_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 21, i32 0)
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  %load_struct.BigStruct_36 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_36
  store %struct.PP_node_struct* %load_struct.BigStruct_36, %struct.PP_node_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry, %entry
  %call1 = call i8* @xalloc(i32 8)
  %1 = bitcast i8* %call1 to %struct.PP_node_struct*
  store %struct.PP_node_struct* %1, %struct.PP_node_struct** %pp_return, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 11, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 12, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 13, i32 0)
  store %struct.Violation_list_struct* null, %struct.Violation_list_struct** %v, align 4
  %2 = getelementptr inbounds [8 x i8*], [8 x i8*]* @must_be_connected_without, i32 0, i32 0
  %struct.BigStruct_9238 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %2, i8*** %struct.BigStruct_9238
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 18, i32 0)
  %struct.BigStruct_32239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32239 = load i32, i32* %struct.BigStruct_32239
  %tobool3 = icmp ne i32 %load_struct.BigStruct_32239, 0
  br i1 %tobool3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end, %if.end
  %3 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %4 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.49.468, i32 0, i32 0
  %struct.BigStruct_10484 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %3, %struct.Violation_list_struct** %struct.BigStruct_10484
  %struct.BigStruct_11485 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %4, i8** %struct.BigStruct_11485
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37486 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37486 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37486
  store %struct.Violation_list_struct* %load_struct.BigStruct_37486, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end6:                                          ; preds = %if.end, %if.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 19, i32 0)
  %struct.BigStruct_32240 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32240 = load i32, i32* %struct.BigStruct_32240
  %tobool8 = icmp ne i32 %load_struct.BigStruct_32240, 0
  br i1 %tobool8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end6, %if.end6
  %5 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %6 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.50.469, i32 0, i32 0
  %struct.BigStruct_10481 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %5, %struct.Violation_list_struct** %struct.BigStruct_10481
  %struct.BigStruct_11482 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %6, i8** %struct.BigStruct_11482
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37483 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37483 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37483
  store %struct.Violation_list_struct* %load_struct.BigStruct_37483, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end11:                                         ; preds = %if.end6, %if.end6
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 115, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 15, i32 0)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %tobool13 = icmp ne i32 %load_struct.BigStruct_322, 0
  br i1 %tobool13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end11, %if.end11
  %7 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %8 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.51.470, i32 0, i32 0
  %struct.BigStruct_10478 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %7, %struct.Violation_list_struct** %struct.BigStruct_10478
  %struct.BigStruct_11479 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %8, i8** %struct.BigStruct_11479
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37480 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37480 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37480
  store %struct.Violation_list_struct* %load_struct.BigStruct_37480, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end16:                                         ; preds = %if.end11, %if.end11
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 114, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 15, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool18 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool18, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end16, %if.end16
  %9 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %10 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.52.471, i32 0, i32 0
  %struct.BigStruct_10475 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %9, %struct.Violation_list_struct** %struct.BigStruct_10475
  %struct.BigStruct_11476 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %10, i8** %struct.BigStruct_11476
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37477 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37477 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37477
  store %struct.Violation_list_struct* %load_struct.BigStruct_37477, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end21:                                         ; preds = %if.end16, %if.end16
  %11 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.53.472, i32 0, i32 0
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2235 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %11, i8** %struct.BigStruct_2235
  %struct.BigStruct_9236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %12, i8*** %struct.BigStruct_9236
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32237 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32237 = load i32, i32* %struct.BigStruct_32237
  %tobool23 = icmp ne i32 %load_struct.BigStruct_32237, 0
  br i1 %tobool23, label %if.end26, label %if.then24

if.then24:                                        ; preds = %if.end21, %if.end21
  %13 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %14 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.54.473, i32 0, i32 0
  %struct.BigStruct_10472 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %13, %struct.Violation_list_struct** %struct.BigStruct_10472
  %struct.BigStruct_11473 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %14, i8** %struct.BigStruct_11473
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37474 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37474 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37474
  store %struct.Violation_list_struct* %load_struct.BigStruct_37474, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end26:                                         ; preds = %if.end21, %if.end21
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.55.474, i32 0, i32 0
  %16 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2232 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_2232
  %struct.BigStruct_9233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %16, i8*** %struct.BigStruct_9233
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32234 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32234 = load i32, i32* %struct.BigStruct_32234
  %tobool28 = icmp ne i32 %load_struct.BigStruct_32234, 0
  br i1 %tobool28, label %if.end31, label %if.then29

if.then29:                                        ; preds = %if.end26, %if.end26
  %17 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %18 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.56.475, i32 0, i32 0
  %struct.BigStruct_10469 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %17, %struct.Violation_list_struct** %struct.BigStruct_10469
  %struct.BigStruct_11470 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %18, i8** %struct.BigStruct_11470
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37471 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37471 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37471
  store %struct.Violation_list_struct* %load_struct.BigStruct_37471, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end31:                                         ; preds = %if.end26, %if.end26
  %19 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.57.476, i32 0, i32 0
  %20 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2229 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %19, i8** %struct.BigStruct_2229
  %struct.BigStruct_9230 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %20, i8*** %struct.BigStruct_9230
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32231 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32231 = load i32, i32* %struct.BigStruct_32231
  %tobool33 = icmp ne i32 %load_struct.BigStruct_32231, 0
  br i1 %tobool33, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.end31, %if.end31
  %21 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %22 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.58.477, i32 0, i32 0
  %struct.BigStruct_10466 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %21, %struct.Violation_list_struct** %struct.BigStruct_10466
  %struct.BigStruct_11467 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %22, i8** %struct.BigStruct_11467
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37468 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37468 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37468
  store %struct.Violation_list_struct* %load_struct.BigStruct_37468, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end36:                                         ; preds = %if.end31, %if.end31
  %23 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.59.478, i32 0, i32 0
  %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2226 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %23, i8** %struct.BigStruct_2226
  %struct.BigStruct_9227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %24, i8*** %struct.BigStruct_9227
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32228 = load i32, i32* %struct.BigStruct_32228
  %tobool38 = icmp ne i32 %load_struct.BigStruct_32228, 0
  br i1 %tobool38, label %if.end41, label %if.then39

if.then39:                                        ; preds = %if.end36, %if.end36
  %25 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %26 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.60.479, i32 0, i32 0
  %struct.BigStruct_10463 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %25, %struct.Violation_list_struct** %struct.BigStruct_10463
  %struct.BigStruct_11464 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %26, i8** %struct.BigStruct_11464
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37465 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37465 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37465
  store %struct.Violation_list_struct* %load_struct.BigStruct_37465, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end41:                                         ; preds = %if.end36, %if.end36
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.61.480, i32 0, i32 0
  %28 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Incompat_with_Ws, i32 0, i32 0
  %struct.BigStruct_222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %27, i8** %struct.BigStruct_222
  %struct.BigStruct_923 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %28, i8*** %struct.BigStruct_923
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3224 = load i32, i32* %struct.BigStruct_3224
  %tobool43 = icmp ne i32 %load_struct.BigStruct_3224, 0
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %if.end41, %if.end41
  %29 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %30 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.62.481, i32 0, i32 0
  %struct.BigStruct_10460 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %29, %struct.Violation_list_struct** %struct.BigStruct_10460
  %struct.BigStruct_11461 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %30, i8** %struct.BigStruct_11461
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37462 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37462 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37462
  store %struct.Violation_list_struct* %load_struct.BigStruct_37462, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end46:                                         ; preds = %if.end41, %if.end41
  %31 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.63.482, i32 0, i32 0
  %32 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Nec_for_Ws_2, i32 0, i32 0
  %struct.BigStruct_2223 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %31, i8** %struct.BigStruct_2223
  %struct.BigStruct_9224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %32, i8*** %struct.BigStruct_9224
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32225 = load i32, i32* %struct.BigStruct_32225
  %tobool48 = icmp ne i32 %load_struct.BigStruct_32225, 0
  br i1 %tobool48, label %if.end51, label %if.then49

if.then49:                                        ; preds = %if.end46, %if.end46
  %33 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %34 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.64.483, i32 0, i32 0
  %struct.BigStruct_10457 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %33, %struct.Violation_list_struct** %struct.BigStruct_10457
  %struct.BigStruct_11458 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %34, i8** %struct.BigStruct_11458
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37459 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37459 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37459
  store %struct.Violation_list_struct* %load_struct.BigStruct_37459, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end51:                                         ; preds = %if.end46, %if.end46
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.65.484, i32 0, i32 0
  %36 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Ia, i32 0, i32 0
  %struct.BigStruct_2220 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %35, i8** %struct.BigStruct_2220
  %struct.BigStruct_9221 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %36, i8*** %struct.BigStruct_9221
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32222 = load i32, i32* %struct.BigStruct_32222
  %tobool53 = icmp ne i32 %load_struct.BigStruct_32222, 0
  br i1 %tobool53, label %if.end56, label %if.then54

if.then54:                                        ; preds = %if.end51, %if.end51
  %37 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %38 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.66.485, i32 0, i32 0
  %struct.BigStruct_10454 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %37, %struct.Violation_list_struct** %struct.BigStruct_10454
  %struct.BigStruct_11455 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %38, i8** %struct.BigStruct_11455
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37456 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37456 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37456
  store %struct.Violation_list_struct* %load_struct.BigStruct_37456, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end56:                                         ; preds = %if.end51, %if.end51
  %39 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.67.486, i32 0, i32 0
  %40 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Wq, i32 0, i32 0
  %struct.BigStruct_2217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %39, i8** %struct.BigStruct_2217
  %struct.BigStruct_9218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %40, i8*** %struct.BigStruct_9218
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32219 = load i32, i32* %struct.BigStruct_32219
  %tobool58 = icmp ne i32 %load_struct.BigStruct_32219, 0
  br i1 %tobool58, label %if.end61, label %if.then59

if.then59:                                        ; preds = %if.end56, %if.end56
  %41 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %42 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.68.487, i32 0, i32 0
  %struct.BigStruct_10451 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %41, %struct.Violation_list_struct** %struct.BigStruct_10451
  %struct.BigStruct_11452 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %42, i8** %struct.BigStruct_11452
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37453 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37453 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37453
  store %struct.Violation_list_struct* %load_struct.BigStruct_37453, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end61:                                         ; preds = %if.end56, %if.end56
  %43 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.69.488, i32 0, i32 0
  %44 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Wq, i32 0, i32 0
  %struct.BigStruct_2214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %43, i8** %struct.BigStruct_2214
  %struct.BigStruct_9215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %44, i8*** %struct.BigStruct_9215
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32216 = load i32, i32* %struct.BigStruct_32216
  %tobool63 = icmp ne i32 %load_struct.BigStruct_32216, 0
  br i1 %tobool63, label %if.end66, label %if.then64

if.then64:                                        ; preds = %if.end61, %if.end61
  %45 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %46 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.70.489, i32 0, i32 0
  %struct.BigStruct_10448 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %45, %struct.Violation_list_struct** %struct.BigStruct_10448
  %struct.BigStruct_11449 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %46, i8** %struct.BigStruct_11449
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37450 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37450 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37450
  store %struct.Violation_list_struct* %load_struct.BigStruct_37450, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end66:                                         ; preds = %if.end61, %if.end61
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.71.490, i32 0, i32 0
  %48 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Wq, i32 0, i32 0
  %struct.BigStruct_2211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %47, i8** %struct.BigStruct_2211
  %struct.BigStruct_9212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %48, i8*** %struct.BigStruct_9212
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32213 = load i32, i32* %struct.BigStruct_32213
  %tobool68 = icmp ne i32 %load_struct.BigStruct_32213, 0
  br i1 %tobool68, label %if.end71, label %if.then69

if.then69:                                        ; preds = %if.end66, %if.end66
  %49 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %50 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.72.491, i32 0, i32 0
  %struct.BigStruct_10445 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %49, %struct.Violation_list_struct** %struct.BigStruct_10445
  %struct.BigStruct_11446 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %50, i8** %struct.BigStruct_11446
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37447 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37447 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37447
  store %struct.Violation_list_struct* %load_struct.BigStruct_37447, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end71:                                         ; preds = %if.end66, %if.end66
  %51 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.73.492, i32 0, i32 0
  %52 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_j, i32 0, i32 0
  %struct.BigStruct_2208 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %51, i8** %struct.BigStruct_2208
  %struct.BigStruct_9209 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %52, i8*** %struct.BigStruct_9209
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32210 = load i32, i32* %struct.BigStruct_32210
  %tobool73 = icmp ne i32 %load_struct.BigStruct_32210, 0
  br i1 %tobool73, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.end71, %if.end71
  %53 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %54 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.74.493, i32 0, i32 0
  %struct.BigStruct_10442 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %53, %struct.Violation_list_struct** %struct.BigStruct_10442
  %struct.BigStruct_11443 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %54, i8** %struct.BigStruct_11443
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37444 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37444 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37444
  store %struct.Violation_list_struct* %load_struct.BigStruct_37444, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end76:                                         ; preds = %if.end71, %if.end71
  %55 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.75.494, i32 0, i32 0
  %56 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_j, i32 0, i32 0
  %struct.BigStruct_2205 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %55, i8** %struct.BigStruct_2205
  %struct.BigStruct_9206 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %56, i8*** %struct.BigStruct_9206
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32207 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32207 = load i32, i32* %struct.BigStruct_32207
  %tobool78 = icmp ne i32 %load_struct.BigStruct_32207, 0
  br i1 %tobool78, label %if.end81, label %if.then79

if.then79:                                        ; preds = %if.end76, %if.end76
  %57 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %58 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.76.495, i32 0, i32 0
  %struct.BigStruct_10439 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %57, %struct.Violation_list_struct** %struct.BigStruct_10439
  %struct.BigStruct_11440 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %58, i8** %struct.BigStruct_11440
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37441 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37441 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37441
  store %struct.Violation_list_struct* %load_struct.BigStruct_37441, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end81:                                         ; preds = %if.end76, %if.end76
  %59 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.77.496, i32 0, i32 0
  %60 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_j, i32 0, i32 0
  %struct.BigStruct_2202 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %59, i8** %struct.BigStruct_2202
  %struct.BigStruct_9203 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %60, i8*** %struct.BigStruct_9203
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32204 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32204 = load i32, i32* %struct.BigStruct_32204
  %tobool83 = icmp ne i32 %load_struct.BigStruct_32204, 0
  br i1 %tobool83, label %if.end86, label %if.then84

if.then84:                                        ; preds = %if.end81, %if.end81
  %61 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %62 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.78.497, i32 0, i32 0
  %struct.BigStruct_10436 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %61, %struct.Violation_list_struct** %struct.BigStruct_10436
  %struct.BigStruct_11437 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %62, i8** %struct.BigStruct_11437
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37438 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37438 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37438
  store %struct.Violation_list_struct* %load_struct.BigStruct_37438, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end86:                                         ; preds = %if.end81, %if.end81
  %63 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.79.498, i32 0, i32 0
  %64 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Mj_or_Wj, i32 0, i32 0
  %struct.BigStruct_2199 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %63, i8** %struct.BigStruct_2199
  %struct.BigStruct_9200 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %64, i8*** %struct.BigStruct_9200
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32201 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32201 = load i32, i32* %struct.BigStruct_32201
  %tobool88 = icmp ne i32 %load_struct.BigStruct_32201, 0
  br i1 %tobool88, label %if.end91, label %if.then89

if.then89:                                        ; preds = %if.end86, %if.end86
  %65 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %66 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.80.499, i32 0, i32 0
  %struct.BigStruct_10433 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %65, %struct.Violation_list_struct** %struct.BigStruct_10433
  %struct.BigStruct_11434 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %66, i8** %struct.BigStruct_11434
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37435 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37435 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37435
  store %struct.Violation_list_struct* %load_struct.BigStruct_37435, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end91:                                         ; preds = %if.end86, %if.end86
  %67 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.81.500, i32 0, i32 0
  %68 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Mj_or_Wj, i32 0, i32 0
  %struct.BigStruct_2196 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %67, i8** %struct.BigStruct_2196
  %struct.BigStruct_9197 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %68, i8*** %struct.BigStruct_9197
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32198 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32198 = load i32, i32* %struct.BigStruct_32198
  %tobool93 = icmp ne i32 %load_struct.BigStruct_32198, 0
  br i1 %tobool93, label %if.end96, label %if.then94

if.then94:                                        ; preds = %if.end91, %if.end91
  %69 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %70 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.82.501, i32 0, i32 0
  %struct.BigStruct_10430 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %69, %struct.Violation_list_struct** %struct.BigStruct_10430
  %struct.BigStruct_11431 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %70, i8** %struct.BigStruct_11431
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37432 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37432 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37432
  store %struct.Violation_list_struct* %load_struct.BigStruct_37432, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end96:                                         ; preds = %if.end91, %if.end91
  %71 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.83.502, i32 0, i32 0
  %72 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Jr, i32 0, i32 0
  %struct.BigStruct_2193 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %71, i8** %struct.BigStruct_2193
  %struct.BigStruct_9194 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %72, i8*** %struct.BigStruct_9194
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32195 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32195 = load i32, i32* %struct.BigStruct_32195
  %tobool98 = icmp ne i32 %load_struct.BigStruct_32195, 0
  br i1 %tobool98, label %if.end101, label %if.then99

if.then99:                                        ; preds = %if.end96, %if.end96
  %73 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %74 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.84.503, i32 0, i32 0
  %struct.BigStruct_10427 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %73, %struct.Violation_list_struct** %struct.BigStruct_10427
  %struct.BigStruct_11428 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %74, i8** %struct.BigStruct_11428
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37429 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37429 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37429
  store %struct.Violation_list_struct* %load_struct.BigStruct_37429, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end101:                                        ; preds = %if.end96, %if.end96
  %75 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.85.504, i32 0, i32 0
  %76 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Nec_for_Jr, i32 0, i32 0
  %struct.BigStruct_2190 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %75, i8** %struct.BigStruct_2190
  %struct.BigStruct_9191 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %76, i8*** %struct.BigStruct_9191
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32192 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32192 = load i32, i32* %struct.BigStruct_32192
  %tobool103 = icmp ne i32 %load_struct.BigStruct_32192, 0
  br i1 %tobool103, label %if.end106, label %if.then104

if.then104:                                       ; preds = %if.end101, %if.end101
  %77 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %78 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.86.505, i32 0, i32 0
  %struct.BigStruct_10424 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %77, %struct.Violation_list_struct** %struct.BigStruct_10424
  %struct.BigStruct_11425 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %78, i8** %struct.BigStruct_11425
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37426 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37426 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37426
  store %struct.Violation_list_struct* %load_struct.BigStruct_37426, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end106:                                        ; preds = %if.end101, %if.end101
  %79 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.87.506, i32 0, i32 0
  %80 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_EAh, i32 0, i32 0
  %struct.BigStruct_2187 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %79, i8** %struct.BigStruct_2187
  %struct.BigStruct_9188 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %80, i8*** %struct.BigStruct_9188
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32189 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32189 = load i32, i32* %struct.BigStruct_32189
  %tobool108 = icmp ne i32 %load_struct.BigStruct_32189, 0
  br i1 %tobool108, label %if.end111, label %if.then109

if.then109:                                       ; preds = %if.end106, %if.end106
  %81 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %82 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.88.508, i32 0, i32 0
  %struct.BigStruct_10421 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %81, %struct.Violation_list_struct** %struct.BigStruct_10421
  %struct.BigStruct_11422 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %82, i8** %struct.BigStruct_11422
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37423 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37423 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37423
  store %struct.Violation_list_struct* %load_struct.BigStruct_37423, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end111:                                        ; preds = %if.end106, %if.end106
  %83 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.89.509, i32 0, i32 0
  %84 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_EAh, i32 0, i32 0
  %struct.BigStruct_2184 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %83, i8** %struct.BigStruct_2184
  %struct.BigStruct_9185 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %84, i8*** %struct.BigStruct_9185
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32186 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32186 = load i32, i32* %struct.BigStruct_32186
  %tobool113 = icmp ne i32 %load_struct.BigStruct_32186, 0
  br i1 %tobool113, label %if.end116, label %if.then114

if.then114:                                       ; preds = %if.end111, %if.end111
  %85 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %86 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.90.510, i32 0, i32 0
  %struct.BigStruct_10418 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %85, %struct.Violation_list_struct** %struct.BigStruct_10418
  %struct.BigStruct_11419 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %86, i8** %struct.BigStruct_11419
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37420 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37420 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37420
  store %struct.Violation_list_struct* %load_struct.BigStruct_37420, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end116:                                        ; preds = %if.end111, %if.end111
  %87 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.91.511, i32 0, i32 0
  %88 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Nec_for_Qe, i32 0, i32 0
  %struct.BigStruct_2181 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %87, i8** %struct.BigStruct_2181
  %struct.BigStruct_9182 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %88, i8*** %struct.BigStruct_9182
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32183 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32183 = load i32, i32* %struct.BigStruct_32183
  %tobool118 = icmp ne i32 %load_struct.BigStruct_32183, 0
  br i1 %tobool118, label %if.end121, label %if.then119

if.then119:                                       ; preds = %if.end116, %if.end116
  %89 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %90 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.92.512, i32 0, i32 0
  %struct.BigStruct_10415 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %89, %struct.Violation_list_struct** %struct.BigStruct_10415
  %struct.BigStruct_11416 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %90, i8** %struct.BigStruct_11416
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37417 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37417 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37417
  store %struct.Violation_list_struct* %load_struct.BigStruct_37417, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end121:                                        ; preds = %if.end116, %if.end116
  %91 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.93.513, i32 0, i32 0
  %92 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2178 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %91, i8** %struct.BigStruct_2178
  %struct.BigStruct_9179 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %92, i8*** %struct.BigStruct_9179
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32180 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32180 = load i32, i32* %struct.BigStruct_32180
  %tobool123 = icmp ne i32 %load_struct.BigStruct_32180, 0
  br i1 %tobool123, label %if.end126, label %if.then124

if.then124:                                       ; preds = %if.end121, %if.end121
  %93 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %94 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.94.514, i32 0, i32 0
  %struct.BigStruct_10412 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %93, %struct.Violation_list_struct** %struct.BigStruct_10412
  %struct.BigStruct_11413 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %94, i8** %struct.BigStruct_11413
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37414 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37414 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37414
  store %struct.Violation_list_struct* %load_struct.BigStruct_37414, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end126:                                        ; preds = %if.end121, %if.end121
  %95 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.95.515, i32 0, i32 0
  %96 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2175 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %95, i8** %struct.BigStruct_2175
  %struct.BigStruct_9176 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %96, i8*** %struct.BigStruct_9176
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32177 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32177 = load i32, i32* %struct.BigStruct_32177
  %tobool128 = icmp ne i32 %load_struct.BigStruct_32177, 0
  br i1 %tobool128, label %if.end131, label %if.then129

if.then129:                                       ; preds = %if.end126, %if.end126
  %97 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %98 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.96.516, i32 0, i32 0
  %struct.BigStruct_10409 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %97, %struct.Violation_list_struct** %struct.BigStruct_10409
  %struct.BigStruct_11410 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %98, i8** %struct.BigStruct_11410
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37411 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37411 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37411
  store %struct.Violation_list_struct* %load_struct.BigStruct_37411, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end131:                                        ; preds = %if.end126, %if.end126
  %99 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.97.517, i32 0, i32 0
  %100 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2172 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %99, i8** %struct.BigStruct_2172
  %struct.BigStruct_9173 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %100, i8*** %struct.BigStruct_9173
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32174 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32174 = load i32, i32* %struct.BigStruct_32174
  %tobool133 = icmp ne i32 %load_struct.BigStruct_32174, 0
  br i1 %tobool133, label %if.end136, label %if.then134

if.then134:                                       ; preds = %if.end131, %if.end131
  %101 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %102 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.98.518, i32 0, i32 0
  %struct.BigStruct_10406 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %101, %struct.Violation_list_struct** %struct.BigStruct_10406
  %struct.BigStruct_11407 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %102, i8** %struct.BigStruct_11407
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37408 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37408 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37408
  store %struct.Violation_list_struct* %load_struct.BigStruct_37408, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end136:                                        ; preds = %if.end131, %if.end131
  %103 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.99.519, i32 0, i32 0
  %104 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2169 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %103, i8** %struct.BigStruct_2169
  %struct.BigStruct_9170 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %104, i8*** %struct.BigStruct_9170
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32171 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32171 = load i32, i32* %struct.BigStruct_32171
  %tobool138 = icmp ne i32 %load_struct.BigStruct_32171, 0
  br i1 %tobool138, label %if.end141, label %if.then139

if.then139:                                       ; preds = %if.end136, %if.end136
  %105 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %106 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.100.520, i32 0, i32 0
  %struct.BigStruct_10403 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %105, %struct.Violation_list_struct** %struct.BigStruct_10403
  %struct.BigStruct_11404 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %106, i8** %struct.BigStruct_11404
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37405 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37405 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37405
  store %struct.Violation_list_struct* %load_struct.BigStruct_37405, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end141:                                        ; preds = %if.end136, %if.end136
  %107 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.101.521, i32 0, i32 0
  %108 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2166 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %107, i8** %struct.BigStruct_2166
  %struct.BigStruct_9167 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %108, i8*** %struct.BigStruct_9167
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32168 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32168 = load i32, i32* %struct.BigStruct_32168
  %tobool143 = icmp ne i32 %load_struct.BigStruct_32168, 0
  br i1 %tobool143, label %if.end146, label %if.then144

if.then144:                                       ; preds = %if.end141, %if.end141
  %109 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %110 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.102.522, i32 0, i32 0
  %struct.BigStruct_10400 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %109, %struct.Violation_list_struct** %struct.BigStruct_10400
  %struct.BigStruct_11401 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %110, i8** %struct.BigStruct_11401
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37402 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37402 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37402
  store %struct.Violation_list_struct* %load_struct.BigStruct_37402, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end146:                                        ; preds = %if.end141, %if.end141
  %111 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.103.523, i32 0, i32 0
  %112 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2163 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %111, i8** %struct.BigStruct_2163
  %struct.BigStruct_9164 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %112, i8*** %struct.BigStruct_9164
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32165 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32165 = load i32, i32* %struct.BigStruct_32165
  %tobool148 = icmp ne i32 %load_struct.BigStruct_32165, 0
  br i1 %tobool148, label %if.end151, label %if.then149

if.then149:                                       ; preds = %if.end146, %if.end146
  %113 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %114 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.104.524, i32 0, i32 0
  %struct.BigStruct_10397 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %113, %struct.Violation_list_struct** %struct.BigStruct_10397
  %struct.BigStruct_11398 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %114, i8** %struct.BigStruct_11398
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37399 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37399 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37399
  store %struct.Violation_list_struct* %load_struct.BigStruct_37399, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end151:                                        ; preds = %if.end146, %if.end146
  %115 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.105.525, i32 0, i32 0
  %116 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2160 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %115, i8** %struct.BigStruct_2160
  %struct.BigStruct_9161 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %116, i8*** %struct.BigStruct_9161
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32162 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32162 = load i32, i32* %struct.BigStruct_32162
  %tobool153 = icmp ne i32 %load_struct.BigStruct_32162, 0
  br i1 %tobool153, label %if.end156, label %if.then154

if.then154:                                       ; preds = %if.end151, %if.end151
  %117 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %118 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.106.526, i32 0, i32 0
  %struct.BigStruct_10394 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %117, %struct.Violation_list_struct** %struct.BigStruct_10394
  %struct.BigStruct_11395 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %118, i8** %struct.BigStruct_11395
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37396 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37396 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37396
  store %struct.Violation_list_struct* %load_struct.BigStruct_37396, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end156:                                        ; preds = %if.end151, %if.end151
  %119 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.107.527, i32 0, i32 0
  %120 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2157 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %119, i8** %struct.BigStruct_2157
  %struct.BigStruct_9158 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %120, i8*** %struct.BigStruct_9158
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32159 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32159 = load i32, i32* %struct.BigStruct_32159
  %tobool158 = icmp ne i32 %load_struct.BigStruct_32159, 0
  br i1 %tobool158, label %if.end161, label %if.then159

if.then159:                                       ; preds = %if.end156, %if.end156
  %121 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %122 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.108.528, i32 0, i32 0
  %struct.BigStruct_10391 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %121, %struct.Violation_list_struct** %struct.BigStruct_10391
  %struct.BigStruct_11392 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %122, i8** %struct.BigStruct_11392
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37393 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37393 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37393
  store %struct.Violation_list_struct* %load_struct.BigStruct_37393, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end161:                                        ; preds = %if.end156, %if.end156
  %123 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.109.529, i32 0, i32 0
  %124 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2154 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %123, i8** %struct.BigStruct_2154
  %struct.BigStruct_9155 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %124, i8*** %struct.BigStruct_9155
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32156 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32156 = load i32, i32* %struct.BigStruct_32156
  %tobool163 = icmp ne i32 %load_struct.BigStruct_32156, 0
  br i1 %tobool163, label %if.end166, label %if.then164

if.then164:                                       ; preds = %if.end161, %if.end161
  %125 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %126 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.110.530, i32 0, i32 0
  %struct.BigStruct_10388 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %125, %struct.Violation_list_struct** %struct.BigStruct_10388
  %struct.BigStruct_11389 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %126, i8** %struct.BigStruct_11389
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37390 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37390 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37390
  store %struct.Violation_list_struct* %load_struct.BigStruct_37390, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end166:                                        ; preds = %if.end161, %if.end161
  %127 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.111.531, i32 0, i32 0
  %128 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2151 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %127, i8** %struct.BigStruct_2151
  %struct.BigStruct_9152 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %128, i8*** %struct.BigStruct_9152
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32153 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32153 = load i32, i32* %struct.BigStruct_32153
  %tobool168 = icmp ne i32 %load_struct.BigStruct_32153, 0
  br i1 %tobool168, label %if.end171, label %if.then169

if.then169:                                       ; preds = %if.end166, %if.end166
  %129 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %130 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.112.532, i32 0, i32 0
  %struct.BigStruct_10385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %129, %struct.Violation_list_struct** %struct.BigStruct_10385
  %struct.BigStruct_11386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %130, i8** %struct.BigStruct_11386
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37387 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37387 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37387
  store %struct.Violation_list_struct* %load_struct.BigStruct_37387, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end171:                                        ; preds = %if.end166, %if.end166
  %131 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.113.533, i32 0, i32 0
  %132 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2148 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %131, i8** %struct.BigStruct_2148
  %struct.BigStruct_9149 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %132, i8*** %struct.BigStruct_9149
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32150 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32150 = load i32, i32* %struct.BigStruct_32150
  %tobool173 = icmp ne i32 %load_struct.BigStruct_32150, 0
  br i1 %tobool173, label %if.end176, label %if.then174

if.then174:                                       ; preds = %if.end171, %if.end171
  %133 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %134 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.114.534, i32 0, i32 0
  %struct.BigStruct_10382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %133, %struct.Violation_list_struct** %struct.BigStruct_10382
  %struct.BigStruct_11383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %134, i8** %struct.BigStruct_11383
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37384 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37384
  store %struct.Violation_list_struct* %load_struct.BigStruct_37384, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end176:                                        ; preds = %if.end171, %if.end171
  %135 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.115.535, i32 0, i32 0
  %136 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2145 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %135, i8** %struct.BigStruct_2145
  %struct.BigStruct_9146 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %136, i8*** %struct.BigStruct_9146
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32147 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32147 = load i32, i32* %struct.BigStruct_32147
  %tobool178 = icmp ne i32 %load_struct.BigStruct_32147, 0
  br i1 %tobool178, label %if.end181, label %if.then179

if.then179:                                       ; preds = %if.end176, %if.end176
  %137 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %138 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.116.536, i32 0, i32 0
  %struct.BigStruct_10379 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %137, %struct.Violation_list_struct** %struct.BigStruct_10379
  %struct.BigStruct_11380 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %138, i8** %struct.BigStruct_11380
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37381 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37381
  store %struct.Violation_list_struct* %load_struct.BigStruct_37381, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end181:                                        ; preds = %if.end176, %if.end176
  %139 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.117.537, i32 0, i32 0
  %140 = getelementptr inbounds [13 x i8*], [13 x i8*]* @incompat_with_THi, i32 0, i32 0
  %struct.BigStruct_219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %139, i8** %struct.BigStruct_219
  %struct.BigStruct_920 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %140, i8*** %struct.BigStruct_920
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3221 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3221 = load i32, i32* %struct.BigStruct_3221
  %tobool183 = icmp ne i32 %load_struct.BigStruct_3221, 0
  br i1 %tobool183, label %if.end186, label %if.then184

if.then184:                                       ; preds = %if.end181, %if.end181
  %141 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %142 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.118.540, i32 0, i32 0
  %struct.BigStruct_10376 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %141, %struct.Violation_list_struct** %struct.BigStruct_10376
  %struct.BigStruct_11377 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %142, i8** %struct.BigStruct_11377
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37378 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37378 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37378
  store %struct.Violation_list_struct* %load_struct.BigStruct_37378, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end186:                                        ; preds = %if.end181, %if.end181
  %143 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.119.541, i32 0, i32 0
  %144 = getelementptr inbounds [13 x i8*], [13 x i8*]* @incompat_with_THi, i32 0, i32 0
  %struct.BigStruct_216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %143, i8** %struct.BigStruct_216
  %struct.BigStruct_917 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %144, i8*** %struct.BigStruct_917
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3218 = load i32, i32* %struct.BigStruct_3218
  %tobool188 = icmp ne i32 %load_struct.BigStruct_3218, 0
  br i1 %tobool188, label %if.end191, label %if.then189

if.then189:                                       ; preds = %if.end186, %if.end186
  %145 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %146 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.120.542, i32 0, i32 0
  %struct.BigStruct_10373 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %145, %struct.Violation_list_struct** %struct.BigStruct_10373
  %struct.BigStruct_11374 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %146, i8** %struct.BigStruct_11374
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37375 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37375 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37375
  store %struct.Violation_list_struct* %load_struct.BigStruct_37375, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end191:                                        ; preds = %if.end186, %if.end186
  %147 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.121.543, i32 0, i32 0
  %148 = getelementptr inbounds [13 x i8*], [13 x i8*]* @incompat_with_THi, i32 0, i32 0
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %147, i8** %struct.BigStruct_213
  %struct.BigStruct_914 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %148, i8*** %struct.BigStruct_914
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3215 = load i32, i32* %struct.BigStruct_3215
  %tobool193 = icmp ne i32 %load_struct.BigStruct_3215, 0
  br i1 %tobool193, label %if.end196, label %if.then194

if.then194:                                       ; preds = %if.end191, %if.end191
  %149 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %150 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.122.544, i32 0, i32 0
  %struct.BigStruct_10370 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %149, %struct.Violation_list_struct** %struct.BigStruct_10370
  %struct.BigStruct_11371 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %150, i8** %struct.BigStruct_11371
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37372 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37372 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37372
  store %struct.Violation_list_struct* %load_struct.BigStruct_37372, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end196:                                        ; preds = %if.end191, %if.end191
  %151 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.123.545, i32 0, i32 0
  %152 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Ost, i32 0, i32 0
  %struct.BigStruct_2142 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %151, i8** %struct.BigStruct_2142
  %struct.BigStruct_9143 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %152, i8*** %struct.BigStruct_9143
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32144 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32144 = load i32, i32* %struct.BigStruct_32144
  %tobool198 = icmp ne i32 %load_struct.BigStruct_32144, 0
  br i1 %tobool198, label %if.end201, label %if.then199

if.then199:                                       ; preds = %if.end196, %if.end196
  %153 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %154 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.124.546, i32 0, i32 0
  %struct.BigStruct_10367 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %153, %struct.Violation_list_struct** %struct.BigStruct_10367
  %struct.BigStruct_11368 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %154, i8** %struct.BigStruct_11368
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37369 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37369 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37369
  store %struct.Violation_list_struct* %load_struct.BigStruct_37369, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end201:                                        ; preds = %if.end196, %if.end196
  %155 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.125.547, i32 0, i32 0
  %156 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Ost, i32 0, i32 0
  %struct.BigStruct_2139 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %155, i8** %struct.BigStruct_2139
  %struct.BigStruct_9140 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %156, i8*** %struct.BigStruct_9140
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32141 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32141 = load i32, i32* %struct.BigStruct_32141
  %tobool203 = icmp ne i32 %load_struct.BigStruct_32141, 0
  br i1 %tobool203, label %if.end206, label %if.then204

if.then204:                                       ; preds = %if.end201, %if.end201
  %157 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %158 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.126.548, i32 0, i32 0
  %struct.BigStruct_10364 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %157, %struct.Violation_list_struct** %struct.BigStruct_10364
  %struct.BigStruct_11365 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %158, i8** %struct.BigStruct_11365
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37366 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37366 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37366
  store %struct.Violation_list_struct* %load_struct.BigStruct_37366, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end206:                                        ; preds = %if.end201, %if.end201
  %159 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.127.549, i32 0, i32 0
  %160 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Opt, i32 0, i32 0
  %struct.BigStruct_2136 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %159, i8** %struct.BigStruct_2136
  %struct.BigStruct_9137 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %160, i8*** %struct.BigStruct_9137
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32138 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32138 = load i32, i32* %struct.BigStruct_32138
  %tobool208 = icmp ne i32 %load_struct.BigStruct_32138, 0
  br i1 %tobool208, label %if.end211, label %if.then209

if.then209:                                       ; preds = %if.end206, %if.end206
  %161 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %162 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.128.550, i32 0, i32 0
  %struct.BigStruct_10361 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %161, %struct.Violation_list_struct** %struct.BigStruct_10361
  %struct.BigStruct_11362 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %162, i8** %struct.BigStruct_11362
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37363 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37363 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37363
  store %struct.Violation_list_struct* %load_struct.BigStruct_37363, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end211:                                        ; preds = %if.end206, %if.end206
  %163 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.129.551, i32 0, i32 0
  %164 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Opt, i32 0, i32 0
  %struct.BigStruct_2133 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %163, i8** %struct.BigStruct_2133
  %struct.BigStruct_9134 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %164, i8*** %struct.BigStruct_9134
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32135 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32135 = load i32, i32* %struct.BigStruct_32135
  %tobool213 = icmp ne i32 %load_struct.BigStruct_32135, 0
  br i1 %tobool213, label %if.end216, label %if.then214

if.then214:                                       ; preds = %if.end211, %if.end211
  %165 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %166 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.130.552, i32 0, i32 0
  %struct.BigStruct_10358 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %165, %struct.Violation_list_struct** %struct.BigStruct_10358
  %struct.BigStruct_11359 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %166, i8** %struct.BigStruct_11359
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37360 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37360 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37360
  store %struct.Violation_list_struct* %load_struct.BigStruct_37360, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end216:                                        ; preds = %if.end211, %if.end211
  %167 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.131.553, i32 0, i32 0
  %168 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Oxt, i32 0, i32 0
  %struct.BigStruct_2130 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %167, i8** %struct.BigStruct_2130
  %struct.BigStruct_9131 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %168, i8*** %struct.BigStruct_9131
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32132 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32132 = load i32, i32* %struct.BigStruct_32132
  %tobool218 = icmp ne i32 %load_struct.BigStruct_32132, 0
  br i1 %tobool218, label %if.end221, label %if.then219

if.then219:                                       ; preds = %if.end216, %if.end216
  %169 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %170 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.132.554, i32 0, i32 0
  %struct.BigStruct_10355 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %169, %struct.Violation_list_struct** %struct.BigStruct_10355
  %struct.BigStruct_11356 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %170, i8** %struct.BigStruct_11356
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37357 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37357 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37357
  store %struct.Violation_list_struct* %load_struct.BigStruct_37357, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end221:                                        ; preds = %if.end216, %if.end216
  %171 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.133.555, i32 0, i32 0
  %172 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Necessary_for_SF, i32 0, i32 0
  %struct.BigStruct_2127 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %171, i8** %struct.BigStruct_2127
  %struct.BigStruct_9128 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %172, i8*** %struct.BigStruct_9128
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32129 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32129 = load i32, i32* %struct.BigStruct_32129
  %tobool223 = icmp ne i32 %load_struct.BigStruct_32129, 0
  br i1 %tobool223, label %if.end226, label %if.then224

if.then224:                                       ; preds = %if.end221, %if.end221
  %173 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %174 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.134.556, i32 0, i32 0
  %struct.BigStruct_10352 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %173, %struct.Violation_list_struct** %struct.BigStruct_10352
  %struct.BigStruct_11353 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %174, i8** %struct.BigStruct_11353
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37354 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37354 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37354
  store %struct.Violation_list_struct* %load_struct.BigStruct_37354, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end226:                                        ; preds = %if.end221, %if.end221
  %175 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.135.557, i32 0, i32 0
  %176 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Necessary_for_SF, i32 0, i32 0
  %struct.BigStruct_2124 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %175, i8** %struct.BigStruct_2124
  %struct.BigStruct_9125 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %176, i8*** %struct.BigStruct_9125
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32126 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32126 = load i32, i32* %struct.BigStruct_32126
  %tobool228 = icmp ne i32 %load_struct.BigStruct_32126, 0
  br i1 %tobool228, label %if.end231, label %if.then229

if.then229:                                       ; preds = %if.end226, %if.end226
  %177 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %178 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.136.558, i32 0, i32 0
  %struct.BigStruct_10349 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %177, %struct.Violation_list_struct** %struct.BigStruct_10349
  %struct.BigStruct_11350 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %178, i8** %struct.BigStruct_11350
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37351 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37351 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37351
  store %struct.Violation_list_struct* %load_struct.BigStruct_37351, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end231:                                        ; preds = %if.end226, %if.end226
  %179 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.137.559, i32 0, i32 0
  %180 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_THb, i32 0, i32 0
  %struct.BigStruct_2121 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %179, i8** %struct.BigStruct_2121
  %struct.BigStruct_9122 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %180, i8*** %struct.BigStruct_9122
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32123 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32123 = load i32, i32* %struct.BigStruct_32123
  %tobool233 = icmp ne i32 %load_struct.BigStruct_32123, 0
  br i1 %tobool233, label %if.end236, label %if.then234

if.then234:                                       ; preds = %if.end231, %if.end231
  %181 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %182 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.138.560, i32 0, i32 0
  %struct.BigStruct_10346 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %181, %struct.Violation_list_struct** %struct.BigStruct_10346
  %struct.BigStruct_11347 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %182, i8** %struct.BigStruct_11347
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37348 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37348 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37348
  store %struct.Violation_list_struct* %load_struct.BigStruct_37348, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end236:                                        ; preds = %if.end231, %if.end231
  %183 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.139.561, i32 0, i32 0
  %184 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_BIh, i32 0, i32 0
  %struct.BigStruct_2118 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %183, i8** %struct.BigStruct_2118
  %struct.BigStruct_9119 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %184, i8*** %struct.BigStruct_9119
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32120 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32120 = load i32, i32* %struct.BigStruct_32120
  %tobool238 = icmp ne i32 %load_struct.BigStruct_32120, 0
  br i1 %tobool238, label %if.end241, label %if.then239

if.then239:                                       ; preds = %if.end236, %if.end236
  %185 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %186 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.140.562, i32 0, i32 0
  %struct.BigStruct_10343 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %185, %struct.Violation_list_struct** %struct.BigStruct_10343
  %struct.BigStruct_11344 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %186, i8** %struct.BigStruct_11344
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37345 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37345 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37345
  store %struct.Violation_list_struct* %load_struct.BigStruct_37345, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end241:                                        ; preds = %if.end236, %if.end236
  %187 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.141.563, i32 0, i32 0
  %188 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_BIq, i32 0, i32 0
  %struct.BigStruct_2115 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %187, i8** %struct.BigStruct_2115
  %struct.BigStruct_9116 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %188, i8*** %struct.BigStruct_9116
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32117 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32117 = load i32, i32* %struct.BigStruct_32117
  %tobool243 = icmp ne i32 %load_struct.BigStruct_32117, 0
  br i1 %tobool243, label %if.end246, label %if.then244

if.then244:                                       ; preds = %if.end241, %if.end241
  %189 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %190 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.142.564, i32 0, i32 0
  %struct.BigStruct_10340 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %189, %struct.Violation_list_struct** %struct.BigStruct_10340
  %struct.BigStruct_11341 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %190, i8** %struct.BigStruct_11341
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37342 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37342 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37342
  store %struct.Violation_list_struct* %load_struct.BigStruct_37342, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end246:                                        ; preds = %if.end241, %if.end241
  %191 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.143.565, i32 0, i32 0
  %192 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Necessary_for_SF, i32 0, i32 0
  %struct.BigStruct_2112 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %191, i8** %struct.BigStruct_2112
  %struct.BigStruct_9113 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %192, i8*** %struct.BigStruct_9113
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32114 = load i32, i32* %struct.BigStruct_32114
  %tobool248 = icmp ne i32 %load_struct.BigStruct_32114, 0
  br i1 %tobool248, label %if.end251, label %if.then249

if.then249:                                       ; preds = %if.end246, %if.end246
  %193 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %194 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.144.566, i32 0, i32 0
  %struct.BigStruct_10337 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %193, %struct.Violation_list_struct** %struct.BigStruct_10337
  %struct.BigStruct_11338 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %194, i8** %struct.BigStruct_11338
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37339 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37339 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37339
  store %struct.Violation_list_struct* %load_struct.BigStruct_37339, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end251:                                        ; preds = %if.end246, %if.end246
  %195 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.145.567, i32 0, i32 0
  %196 = getelementptr inbounds [15 x i8*], [15 x i8*]* @Necessary_for_MVt, i32 0, i32 0
  %struct.BigStruct_2109 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %195, i8** %struct.BigStruct_2109
  %struct.BigStruct_9110 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %196, i8*** %struct.BigStruct_9110
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32111 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32111 = load i32, i32* %struct.BigStruct_32111
  %tobool253 = icmp ne i32 %load_struct.BigStruct_32111, 0
  br i1 %tobool253, label %if.end256, label %if.then254

if.then254:                                       ; preds = %if.end251, %if.end251
  %197 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %198 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.146.568, i32 0, i32 0
  %struct.BigStruct_10334 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %197, %struct.Violation_list_struct** %struct.BigStruct_10334
  %struct.BigStruct_11335 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %198, i8** %struct.BigStruct_11335
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37336 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37336 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37336
  store %struct.Violation_list_struct* %load_struct.BigStruct_37336, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end256:                                        ; preds = %if.end251, %if.end251
  %199 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.147.569, i32 0, i32 0
  %200 = getelementptr inbounds [6 x i8*], [6 x i8*]* @Nec_for_MVz, i32 0, i32 0
  %struct.BigStruct_2106 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %199, i8** %struct.BigStruct_2106
  %struct.BigStruct_9107 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %200, i8*** %struct.BigStruct_9107
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32108 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32108 = load i32, i32* %struct.BigStruct_32108
  %tobool258 = icmp ne i32 %load_struct.BigStruct_32108, 0
  br i1 %tobool258, label %if.end261, label %if.then259

if.then259:                                       ; preds = %if.end256, %if.end256
  %201 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %202 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.148.570, i32 0, i32 0
  %struct.BigStruct_10331 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %201, %struct.Violation_list_struct** %struct.BigStruct_10331
  %struct.BigStruct_11332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %202, i8** %struct.BigStruct_11332
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37333 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37333 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37333
  store %struct.Violation_list_struct* %load_struct.BigStruct_37333, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end261:                                        ; preds = %if.end256, %if.end256
  %203 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.149.571, i32 0, i32 0
  %204 = getelementptr inbounds [9 x i8*], [9 x i8*]* @Nec_for_MVta, i32 0, i32 0
  %struct.BigStruct_2103 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %203, i8** %struct.BigStruct_2103
  %struct.BigStruct_9104 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %204, i8*** %struct.BigStruct_9104
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32105 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32105 = load i32, i32* %struct.BigStruct_32105
  %tobool263 = icmp ne i32 %load_struct.BigStruct_32105, 0
  br i1 %tobool263, label %if.end266, label %if.then264

if.then264:                                       ; preds = %if.end261, %if.end261
  %205 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %206 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.150.572, i32 0, i32 0
  %struct.BigStruct_10328 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %205, %struct.Violation_list_struct** %struct.BigStruct_10328
  %struct.BigStruct_11329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %206, i8** %struct.BigStruct_11329
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37330 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37330 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37330
  store %struct.Violation_list_struct* %load_struct.BigStruct_37330, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end266:                                        ; preds = %if.end261, %if.end261
  %207 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.151.573, i32 0, i32 0
  %208 = getelementptr inbounds [9 x i8*], [9 x i8*]* @Nec_for_MVta, i32 0, i32 0
  %struct.BigStruct_2100 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %207, i8** %struct.BigStruct_2100
  %struct.BigStruct_9101 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %208, i8*** %struct.BigStruct_9101
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32102 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32102 = load i32, i32* %struct.BigStruct_32102
  %tobool268 = icmp ne i32 %load_struct.BigStruct_32102, 0
  br i1 %tobool268, label %if.end271, label %if.then269

if.then269:                                       ; preds = %if.end266, %if.end266
  %209 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %210 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.152.574, i32 0, i32 0
  %struct.BigStruct_10325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %209, %struct.Violation_list_struct** %struct.BigStruct_10325
  %struct.BigStruct_11326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %210, i8** %struct.BigStruct_11326
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37327 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37327
  store %struct.Violation_list_struct* %load_struct.BigStruct_37327, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end271:                                        ; preds = %if.end266, %if.end266
  %211 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.153.575, i32 0, i32 0
  %212 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_MVto, i32 0, i32 0
  %struct.BigStruct_297 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %211, i8** %struct.BigStruct_297
  %struct.BigStruct_998 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %212, i8*** %struct.BigStruct_998
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3299 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3299 = load i32, i32* %struct.BigStruct_3299
  %tobool273 = icmp ne i32 %load_struct.BigStruct_3299, 0
  br i1 %tobool273, label %if.end276, label %if.then274

if.then274:                                       ; preds = %if.end271, %if.end271
  %213 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %214 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.154.576, i32 0, i32 0
  %struct.BigStruct_10322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %213, %struct.Violation_list_struct** %struct.BigStruct_10322
  %struct.BigStruct_11323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %214, i8** %struct.BigStruct_11323
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37324 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37324 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37324
  store %struct.Violation_list_struct* %load_struct.BigStruct_37324, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end276:                                        ; preds = %if.end271, %if.end271
  %215 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.155.577, i32 0, i32 0
  %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Nec_for_MVtp, i32 0, i32 0
  %struct.BigStruct_294 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %215, i8** %struct.BigStruct_294
  %struct.BigStruct_995 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %216, i8*** %struct.BigStruct_995
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3296 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3296 = load i32, i32* %struct.BigStruct_3296
  %tobool278 = icmp ne i32 %load_struct.BigStruct_3296, 0
  br i1 %tobool278, label %if.end281, label %if.then279

if.then279:                                       ; preds = %if.end276, %if.end276
  %217 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %218 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.156.578, i32 0, i32 0
  %struct.BigStruct_10319 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %217, %struct.Violation_list_struct** %struct.BigStruct_10319
  %struct.BigStruct_11320 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %218, i8** %struct.BigStruct_11320
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37321 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37321
  store %struct.Violation_list_struct* %load_struct.BigStruct_37321, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end281:                                        ; preds = %if.end276, %if.end276
  %219 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.157.579, i32 0, i32 0
  %220 = getelementptr inbounds [3 x i8*], [3 x i8*]* @EBmm, i32 0, i32 0
  %struct.BigStruct_291 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %219, i8** %struct.BigStruct_291
  %struct.BigStruct_992 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %220, i8*** %struct.BigStruct_992
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3293 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3293 = load i32, i32* %struct.BigStruct_3293
  %tobool283 = icmp ne i32 %load_struct.BigStruct_3293, 0
  br i1 %tobool283, label %if.end286, label %if.then284

if.then284:                                       ; preds = %if.end281, %if.end281
  %221 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %222 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.158.580, i32 0, i32 0
  %struct.BigStruct_10316 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %221, %struct.Violation_list_struct** %struct.BigStruct_10316
  %struct.BigStruct_11317 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %222, i8** %struct.BigStruct_11317
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37318 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37318 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37318
  store %struct.Violation_list_struct* %load_struct.BigStruct_37318, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end286:                                        ; preds = %if.end281, %if.end281
  %223 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.159.581, i32 0, i32 0
  %224 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Pa_or_Paf, i32 0, i32 0
  %struct.BigStruct_288 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %223, i8** %struct.BigStruct_288
  %struct.BigStruct_989 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %224, i8*** %struct.BigStruct_989
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3290 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3290 = load i32, i32* %struct.BigStruct_3290
  %tobool288 = icmp ne i32 %load_struct.BigStruct_3290, 0
  br i1 %tobool288, label %if.end291, label %if.then289

if.then289:                                       ; preds = %if.end286, %if.end286
  %225 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %226 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.160.582, i32 0, i32 0
  %struct.BigStruct_10313 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %225, %struct.Violation_list_struct** %struct.BigStruct_10313
  %struct.BigStruct_11314 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %226, i8** %struct.BigStruct_11314
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37315 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37315 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37315
  store %struct.Violation_list_struct* %load_struct.BigStruct_37315, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end291:                                        ; preds = %if.end286, %if.end286
  %227 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.161.583, i32 0, i32 0
  %228 = getelementptr inbounds [2 x i8*], [2 x i8*]* @MVm, i32 0, i32 0
  %struct.BigStruct_285 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %227, i8** %struct.BigStruct_285
  %struct.BigStruct_986 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %228, i8*** %struct.BigStruct_986
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3287 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3287 = load i32, i32* %struct.BigStruct_3287
  %tobool293 = icmp ne i32 %load_struct.BigStruct_3287, 0
  br i1 %tobool293, label %if.end296, label %if.then294

if.then294:                                       ; preds = %if.end291, %if.end291
  %229 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %230 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.162.584, i32 0, i32 0
  %struct.BigStruct_10310 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %229, %struct.Violation_list_struct** %struct.BigStruct_10310
  %struct.BigStruct_11311 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %230, i8** %struct.BigStruct_11311
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37312 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37312 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37312
  store %struct.Violation_list_struct* %load_struct.BigStruct_37312, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end296:                                        ; preds = %if.end291, %if.end291
  %231 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.163.585, i32 0, i32 0
  %232 = getelementptr inbounds [2 x i8*], [2 x i8*]* @MVm, i32 0, i32 0
  %struct.BigStruct_282 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %231, i8** %struct.BigStruct_282
  %struct.BigStruct_983 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %232, i8*** %struct.BigStruct_983
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3284 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3284 = load i32, i32* %struct.BigStruct_3284
  %tobool298 = icmp ne i32 %load_struct.BigStruct_3284, 0
  br i1 %tobool298, label %if.end301, label %if.then299

if.then299:                                       ; preds = %if.end296, %if.end296
  %233 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %234 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.164.586, i32 0, i32 0
  %struct.BigStruct_10307 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %233, %struct.Violation_list_struct** %struct.BigStruct_10307
  %struct.BigStruct_11308 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %234, i8** %struct.BigStruct_11308
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37309 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37309 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37309
  store %struct.Violation_list_struct* %load_struct.BigStruct_37309, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end301:                                        ; preds = %if.end296, %if.end296
  %235 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.165.587, i32 0, i32 0
  %236 = getelementptr inbounds [3 x i8*], [3 x i8*]* @MV, i32 0, i32 0
  %struct.BigStruct_279 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %235, i8** %struct.BigStruct_279
  %struct.BigStruct_980 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %236, i8*** %struct.BigStruct_980
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3281 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3281 = load i32, i32* %struct.BigStruct_3281
  %tobool303 = icmp ne i32 %load_struct.BigStruct_3281, 0
  br i1 %tobool303, label %if.end306, label %if.then304

if.then304:                                       ; preds = %if.end301, %if.end301
  %237 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %238 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.166.588, i32 0, i32 0
  %struct.BigStruct_10304 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %237, %struct.Violation_list_struct** %struct.BigStruct_10304
  %struct.BigStruct_11305 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %238, i8** %struct.BigStruct_11305
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37306 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37306 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37306
  store %struct.Violation_list_struct* %load_struct.BigStruct_37306, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end306:                                        ; preds = %if.end301, %if.end301
  %239 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.167.589, i32 0, i32 0
  %240 = getelementptr inbounds [3 x i8*], [3 x i8*]* @MV, i32 0, i32 0
  %struct.BigStruct_276 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %239, i8** %struct.BigStruct_276
  %struct.BigStruct_977 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %240, i8*** %struct.BigStruct_977
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3278 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3278 = load i32, i32* %struct.BigStruct_3278
  %tobool308 = icmp ne i32 %load_struct.BigStruct_3278, 0
  br i1 %tobool308, label %if.end311, label %if.then309

if.then309:                                       ; preds = %if.end306, %if.end306
  %241 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %242 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.168.590, i32 0, i32 0
  %struct.BigStruct_10301 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %241, %struct.Violation_list_struct** %struct.BigStruct_10301
  %struct.BigStruct_11302 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %242, i8** %struct.BigStruct_11302
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37303 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37303 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37303
  store %struct.Violation_list_struct* %load_struct.BigStruct_37303, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end311:                                        ; preds = %if.end306, %if.end306
  %243 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.169.591, i32 0, i32 0
  %244 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_MVto, i32 0, i32 0
  %struct.BigStruct_273 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %243, i8** %struct.BigStruct_273
  %struct.BigStruct_974 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %244, i8*** %struct.BigStruct_974
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3275 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3275 = load i32, i32* %struct.BigStruct_3275
  %tobool313 = icmp ne i32 %load_struct.BigStruct_3275, 0
  br i1 %tobool313, label %if.end316, label %if.then314

if.then314:                                       ; preds = %if.end311, %if.end311
  %245 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %246 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.170.592, i32 0, i32 0
  %struct.BigStruct_10298 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %245, %struct.Violation_list_struct** %struct.BigStruct_10298
  %struct.BigStruct_11299 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %246, i8** %struct.BigStruct_11299
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37300 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37300 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37300
  store %struct.Violation_list_struct* %load_struct.BigStruct_37300, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end316:                                        ; preds = %if.end311, %if.end311
  %247 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.171.593, i32 0, i32 0
  %248 = getelementptr inbounds [6 x i8*], [6 x i8*]* @Nec_for_Cc, i32 0, i32 0
  %struct.BigStruct_270 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %247, i8** %struct.BigStruct_270
  %struct.BigStruct_971 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %248, i8*** %struct.BigStruct_971
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3272 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3272 = load i32, i32* %struct.BigStruct_3272
  %tobool318 = icmp ne i32 %load_struct.BigStruct_3272, 0
  br i1 %tobool318, label %if.end321, label %if.then319

if.then319:                                       ; preds = %if.end316, %if.end316
  %249 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %250 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.172.594, i32 0, i32 0
  %struct.BigStruct_10295 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %249, %struct.Violation_list_struct** %struct.BigStruct_10295
  %struct.BigStruct_11296 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %250, i8** %struct.BigStruct_11296
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37297 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37297 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37297
  store %struct.Violation_list_struct* %load_struct.BigStruct_37297, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end321:                                        ; preds = %if.end316, %if.end316
  %251 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.173.595, i32 0, i32 0
  %252 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Nec_for_Mc, i32 0, i32 0
  %struct.BigStruct_267 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %251, i8** %struct.BigStruct_267
  %struct.BigStruct_968 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %252, i8*** %struct.BigStruct_968
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3269 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3269 = load i32, i32* %struct.BigStruct_3269
  %tobool323 = icmp ne i32 %load_struct.BigStruct_3269, 0
  br i1 %tobool323, label %if.end326, label %if.then324

if.then324:                                       ; preds = %if.end321, %if.end321
  %253 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %254 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.174.596, i32 0, i32 0
  %struct.BigStruct_10292 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %253, %struct.Violation_list_struct** %struct.BigStruct_10292
  %struct.BigStruct_11293 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %254, i8** %struct.BigStruct_11293
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37294 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37294 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37294
  store %struct.Violation_list_struct* %load_struct.BigStruct_37294, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end326:                                        ; preds = %if.end321, %if.end321
  %255 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.175.597, i32 0, i32 0
  %256 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_Sp_com, i32 0, i32 0
  %struct.BigStruct_264 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %255, i8** %struct.BigStruct_264
  %struct.BigStruct_965 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %256, i8*** %struct.BigStruct_965
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3266 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3266 = load i32, i32* %struct.BigStruct_3266
  %tobool328 = icmp ne i32 %load_struct.BigStruct_3266, 0
  br i1 %tobool328, label %if.end331, label %if.then329

if.then329:                                       ; preds = %if.end326, %if.end326
  %257 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.176.598, i32 0, i32 0
  %struct.BigStruct_10289 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %257, %struct.Violation_list_struct** %struct.BigStruct_10289
  %struct.BigStruct_11290 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %258, i8** %struct.BigStruct_11290
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37291 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37291 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37291
  store %struct.Violation_list_struct* %load_struct.BigStruct_37291, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end331:                                        ; preds = %if.end326, %if.end326
  %259 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.177.599, i32 0, i32 0
  %260 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_Ss_com, i32 0, i32 0
  %struct.BigStruct_261 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %259, i8** %struct.BigStruct_261
  %struct.BigStruct_962 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %260, i8*** %struct.BigStruct_962
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3263 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3263 = load i32, i32* %struct.BigStruct_3263
  %tobool333 = icmp ne i32 %load_struct.BigStruct_3263, 0
  br i1 %tobool333, label %if.end336, label %if.then334

if.then334:                                       ; preds = %if.end331, %if.end331
  %261 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %262 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.178.600, i32 0, i32 0
  %struct.BigStruct_10286 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %261, %struct.Violation_list_struct** %struct.BigStruct_10286
  %struct.BigStruct_11287 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %262, i8** %struct.BigStruct_11287
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37288 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37288 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37288
  store %struct.Violation_list_struct* %load_struct.BigStruct_37288, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end336:                                        ; preds = %if.end331, %if.end331
  %263 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.179.601, i32 0, i32 0
  %264 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_Ss_com, i32 0, i32 0
  %struct.BigStruct_258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %263, i8** %struct.BigStruct_258
  %struct.BigStruct_959 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %264, i8*** %struct.BigStruct_959
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3260 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3260 = load i32, i32* %struct.BigStruct_3260
  %tobool338 = icmp ne i32 %load_struct.BigStruct_3260, 0
  br i1 %tobool338, label %if.end341, label %if.then339

if.then339:                                       ; preds = %if.end336, %if.end336
  %265 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %266 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.180.602, i32 0, i32 0
  %struct.BigStruct_10283 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %265, %struct.Violation_list_struct** %struct.BigStruct_10283
  %struct.BigStruct_11284 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %266, i8** %struct.BigStruct_11284
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37285 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37285 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37285
  store %struct.Violation_list_struct* %load_struct.BigStruct_37285, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end341:                                        ; preds = %if.end336, %if.end336
  %267 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.181.603, i32 0, i32 0
  %268 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_S_com, i32 0, i32 0
  %struct.BigStruct_255 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %267, i8** %struct.BigStruct_255
  %struct.BigStruct_956 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %268, i8*** %struct.BigStruct_956
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3257 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3257 = load i32, i32* %struct.BigStruct_3257
  %tobool343 = icmp ne i32 %load_struct.BigStruct_3257, 0
  br i1 %tobool343, label %if.end346, label %if.then344

if.then344:                                       ; preds = %if.end341, %if.end341
  %269 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %270 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.182.604, i32 0, i32 0
  %struct.BigStruct_10280 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %269, %struct.Violation_list_struct** %struct.BigStruct_10280
  %struct.BigStruct_11281 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %270, i8** %struct.BigStruct_11281
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37282 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37282 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37282
  store %struct.Violation_list_struct* %load_struct.BigStruct_37282, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end346:                                        ; preds = %if.end341, %if.end341
  %271 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.183.605, i32 0, i32 0
  %272 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Necessary_for_Thcom, i32 0, i32 0
  %struct.BigStruct_252 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %271, i8** %struct.BigStruct_252
  %struct.BigStruct_953 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %272, i8*** %struct.BigStruct_953
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3254 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3254 = load i32, i32* %struct.BigStruct_3254
  %tobool348 = icmp ne i32 %load_struct.BigStruct_3254, 0
  br i1 %tobool348, label %if.end351, label %if.then349

if.then349:                                       ; preds = %if.end346, %if.end346
  %273 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %274 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.184.606, i32 0, i32 0
  %struct.BigStruct_10277 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %273, %struct.Violation_list_struct** %struct.BigStruct_10277
  %struct.BigStruct_11278 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %274, i8** %struct.BigStruct_11278
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37279 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37279 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37279
  store %struct.Violation_list_struct* %load_struct.BigStruct_37279, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end351:                                        ; preds = %if.end346, %if.end346
  %275 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.185.607, i32 0, i32 0
  %276 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Necessary_for_Tocom, i32 0, i32 0
  %struct.BigStruct_249 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %275, i8** %struct.BigStruct_249
  %struct.BigStruct_950 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %276, i8*** %struct.BigStruct_950
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3251 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3251 = load i32, i32* %struct.BigStruct_3251
  %tobool353 = icmp ne i32 %load_struct.BigStruct_3251, 0
  br i1 %tobool353, label %if.end356, label %if.then354

if.then354:                                       ; preds = %if.end351, %if.end351
  %277 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %278 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.186.608, i32 0, i32 0
  %struct.BigStruct_10274 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %277, %struct.Violation_list_struct** %struct.BigStruct_10274
  %struct.BigStruct_11275 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %278, i8** %struct.BigStruct_11275
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37276 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37276 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37276
  store %struct.Violation_list_struct* %load_struct.BigStruct_37276, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end356:                                        ; preds = %if.end351, %if.end351
  %279 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.187.609, i32 0, i32 0
  %280 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Necessary_for_Tvcom, i32 0, i32 0
  %struct.BigStruct_246 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %279, i8** %struct.BigStruct_246
  %struct.BigStruct_947 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %280, i8*** %struct.BigStruct_947
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3248 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3248 = load i32, i32* %struct.BigStruct_3248
  %tobool358 = icmp ne i32 %load_struct.BigStruct_3248, 0
  br i1 %tobool358, label %if.end361, label %if.then359

if.then359:                                       ; preds = %if.end356, %if.end356
  %281 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %282 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.188.610, i32 0, i32 0
  %struct.BigStruct_10271 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %281, %struct.Violation_list_struct** %struct.BigStruct_10271
  %struct.BigStruct_11272 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %282, i8** %struct.BigStruct_11272
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37273 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37273 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37273
  store %struct.Violation_list_struct* %load_struct.BigStruct_37273, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end361:                                        ; preds = %if.end356, %if.end356
  %283 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.189.611, i32 0, i32 0
  %284 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Necessary_for_Tvcom_Trans, i32 0, i32 0
  %struct.BigStruct_243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %283, i8** %struct.BigStruct_243
  %struct.BigStruct_944 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %284, i8*** %struct.BigStruct_944
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3245 = load i32, i32* %struct.BigStruct_3245
  %tobool363 = icmp ne i32 %load_struct.BigStruct_3245, 0
  br i1 %tobool363, label %if.end366, label %if.then364

if.then364:                                       ; preds = %if.end361, %if.end361
  %285 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %286 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.190.612, i32 0, i32 0
  %struct.BigStruct_10268 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %285, %struct.Violation_list_struct** %struct.BigStruct_10268
  %struct.BigStruct_11269 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %286, i8** %struct.BigStruct_11269
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37270 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37270 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37270
  store %struct.Violation_list_struct* %load_struct.BigStruct_37270, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end366:                                        ; preds = %if.end361, %if.end361
  %287 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.191.613, i32 0, i32 0
  %288 = getelementptr inbounds [13 x i8*], [13 x i8*]* @Nec_for_Ma, i32 0, i32 0
  %struct.BigStruct_240 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %287, i8** %struct.BigStruct_240
  %struct.BigStruct_941 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %288, i8*** %struct.BigStruct_941
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3242 = load i32, i32* %struct.BigStruct_3242
  %tobool368 = icmp ne i32 %load_struct.BigStruct_3242, 0
  br i1 %tobool368, label %if.end371, label %if.then369

if.then369:                                       ; preds = %if.end366, %if.end366
  %289 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %290 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.192.614, i32 0, i32 0
  %struct.BigStruct_10265 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %289, %struct.Violation_list_struct** %struct.BigStruct_10265
  %struct.BigStruct_11266 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %290, i8** %struct.BigStruct_11266
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37267 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37267 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37267
  store %struct.Violation_list_struct* %load_struct.BigStruct_37267, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end371:                                        ; preds = %if.end366, %if.end366
  %291 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.193.615, i32 0, i32 0
  %292 = getelementptr inbounds [13 x i8*], [13 x i8*]* @Nec_for_Ma, i32 0, i32 0
  %struct.BigStruct_237 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %291, i8** %struct.BigStruct_237
  %struct.BigStruct_938 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %292, i8*** %struct.BigStruct_938
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3239 = load i32, i32* %struct.BigStruct_3239
  %tobool373 = icmp ne i32 %load_struct.BigStruct_3239, 0
  br i1 %tobool373, label %if.end376, label %if.then374

if.then374:                                       ; preds = %if.end371, %if.end371
  %293 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %294 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.194.616, i32 0, i32 0
  %struct.BigStruct_10262 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %293, %struct.Violation_list_struct** %struct.BigStruct_10262
  %struct.BigStruct_11263 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %294, i8** %struct.BigStruct_11263
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37264 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37264 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37264
  store %struct.Violation_list_struct* %load_struct.BigStruct_37264, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end376:                                        ; preds = %if.end371, %if.end371
  %295 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.195.617, i32 0, i32 0
  %296 = getelementptr inbounds [13 x i8*], [13 x i8*]* @Nec_for_Ma, i32 0, i32 0
  %struct.BigStruct_234 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %295, i8** %struct.BigStruct_234
  %struct.BigStruct_935 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %296, i8*** %struct.BigStruct_935
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3236 = load i32, i32* %struct.BigStruct_3236
  %tobool378 = icmp ne i32 %load_struct.BigStruct_3236, 0
  br i1 %tobool378, label %if.end381, label %if.then379

if.then379:                                       ; preds = %if.end376, %if.end376
  %297 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %298 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.196.618, i32 0, i32 0
  %struct.BigStruct_10259 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %297, %struct.Violation_list_struct** %struct.BigStruct_10259
  %struct.BigStruct_11260 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %298, i8** %struct.BigStruct_11260
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37261 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37261 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37261
  store %struct.Violation_list_struct* %load_struct.BigStruct_37261, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end381:                                        ; preds = %if.end376, %if.end376
  %299 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.197.619, i32 0, i32 0
  %300 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ZZ, i32 0, i32 0
  %struct.BigStruct_231 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %299, i8** %struct.BigStruct_231
  %struct.BigStruct_932 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %300, i8*** %struct.BigStruct_932
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3233 = load i32, i32* %struct.BigStruct_3233
  %tobool383 = icmp ne i32 %load_struct.BigStruct_3233, 0
  br i1 %tobool383, label %if.end386, label %if.then384

if.then384:                                       ; preds = %if.end381, %if.end381
  %301 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %302 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.198.620, i32 0, i32 0
  %struct.BigStruct_10256 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %301, %struct.Violation_list_struct** %struct.BigStruct_10256
  %struct.BigStruct_11257 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %302, i8** %struct.BigStruct_11257
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37258 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37258
  store %struct.Violation_list_struct* %load_struct.BigStruct_37258, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end386:                                        ; preds = %if.end381, %if.end381
  %303 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.199.621, i32 0, i32 0
  %304 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ZZ, i32 0, i32 0
  %struct.BigStruct_228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %303, i8** %struct.BigStruct_228
  %struct.BigStruct_929 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %304, i8*** %struct.BigStruct_929
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3230 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3230 = load i32, i32* %struct.BigStruct_3230
  %tobool388 = icmp ne i32 %load_struct.BigStruct_3230, 0
  br i1 %tobool388, label %if.end391, label %if.then389

if.then389:                                       ; preds = %if.end386, %if.end386
  %305 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %306 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.200.622, i32 0, i32 0
  %struct.BigStruct_10253 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %305, %struct.Violation_list_struct** %struct.BigStruct_10253
  %struct.BigStruct_11254 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %306, i8** %struct.BigStruct_11254
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37255 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37255 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37255
  store %struct.Violation_list_struct* %load_struct.BigStruct_37255, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end391:                                        ; preds = %if.end386, %if.end386
  %307 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.201.623, i32 0, i32 0
  %308 = getelementptr inbounds [7 x i8*], [7 x i8*]* @illegal_S_types, i32 0, i32 0
  %struct.BigStruct_210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %307, i8** %struct.BigStruct_210
  %struct.BigStruct_911 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %308, i8*** %struct.BigStruct_911
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %tobool393 = icmp ne i32 %load_struct.BigStruct_3212, 0
  br i1 %tobool393, label %if.end396, label %if.then394

if.then394:                                       ; preds = %if.end391, %if.end391
  %309 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %310 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.202.624, i32 0, i32 0
  %struct.BigStruct_10250 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %309, %struct.Violation_list_struct** %struct.BigStruct_10250
  %struct.BigStruct_11251 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %310, i8** %struct.BigStruct_11251
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37252 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37252 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37252
  store %struct.Violation_list_struct* %load_struct.BigStruct_37252, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end396:                                        ; preds = %if.end391, %if.end391
  %311 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.203.625, i32 0, i32 0
  %312 = getelementptr inbounds [6 x i8*], [6 x i8*]* @illegal_SI_types, i32 0, i32 0
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %311, i8** %struct.BigStruct_27
  %struct.BigStruct_98 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %312, i8*** %struct.BigStruct_98
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_329 = load i32, i32* %struct.BigStruct_329
  %tobool398 = icmp ne i32 %load_struct.BigStruct_329, 0
  br i1 %tobool398, label %if.end401, label %if.then399

if.then399:                                       ; preds = %if.end396, %if.end396
  %313 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %314 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.204.626, i32 0, i32 0
  %struct.BigStruct_10247 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %313, %struct.Violation_list_struct** %struct.BigStruct_10247
  %struct.BigStruct_11248 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %314, i8** %struct.BigStruct_11248
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37249 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37249 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37249
  store %struct.Violation_list_struct* %load_struct.BigStruct_37249, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end401:                                        ; preds = %if.end396, %if.end396
  %315 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.205.627, i32 0, i32 0
  %316 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Nec_for_MVh, i32 0, i32 0
  %struct.BigStruct_225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %315, i8** %struct.BigStruct_225
  %struct.BigStruct_926 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %316, i8*** %struct.BigStruct_926
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3227 = load i32, i32* %struct.BigStruct_3227
  %tobool403 = icmp ne i32 %load_struct.BigStruct_3227, 0
  br i1 %tobool403, label %if.end406, label %if.then404

if.then404:                                       ; preds = %if.end401, %if.end401
  %317 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %318 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.206.628, i32 0, i32 0
  %struct.BigStruct_10244 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %317, %struct.Violation_list_struct** %struct.BigStruct_10244
  %struct.BigStruct_11245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %318, i8** %struct.BigStruct_11245
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37246 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37246 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37246
  store %struct.Violation_list_struct* %load_struct.BigStruct_37246, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end406:                                        ; preds = %if.end401, %if.end401
  %319 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.207.629, i32 0, i32 0
  %320 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Incompat_with_MXsr, i32 0, i32 0
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %319, i8** %struct.BigStruct_24
  %struct.BigStruct_95 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %320, i8*** %struct.BigStruct_95
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_326 = load i32, i32* %struct.BigStruct_326
  %tobool408 = icmp ne i32 %load_struct.BigStruct_326, 0
  br i1 %tobool408, label %if.end411, label %if.then409

if.then409:                                       ; preds = %if.end406, %if.end406
  %321 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %322 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.208.630, i32 0, i32 0
  %struct.BigStruct_10241 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %321, %struct.Violation_list_struct** %struct.BigStruct_10241
  %struct.BigStruct_11242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %322, i8** %struct.BigStruct_11242
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37243 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37243
  store %struct.Violation_list_struct* %load_struct.BigStruct_37243, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end411:                                        ; preds = %if.end406, %if.end406
  %323 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.209.631, i32 0, i32 0
  %324 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Incompat_with_MXpr, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %323, i8** %struct.BigStruct_2
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %324, i8*** %struct.BigStruct_9
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool413 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool413, label %if.end416, label %if.then414

if.then414:                                       ; preds = %if.end411, %if.end411
  %325 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %326 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.210.632, i32 0, i32 0
  %struct.BigStruct_10 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %325, %struct.Violation_list_struct** %struct.BigStruct_10
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %326, i8** %struct.BigStruct_11
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37
  store %struct.Violation_list_struct* %load_struct.BigStruct_37, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end416:                                        ; preds = %if.end411, %if.end411
  br label %done_checking

done_checking:                                    ; preds = %if.end416, %if.then414, %if.then409, %if.then404, %if.then399, %if.then394, %if.then389, %if.then384, %if.then379, %if.then374, %if.then369, %if.then364, %if.then359, %if.then354, %if.then349, %if.then344, %if.then339, %if.then334, %if.then329, %if.then324, %if.then319, %if.then314, %if.then309, %if.then304, %if.then299, %if.then294, %if.then289, %if.then284, %if.then279, %if.then274, %if.then269, %if.then264, %if.then259, %if.then254, %if.then249, %if.then244, %if.then239, %if.then234, %if.then229, %if.then224, %if.then219, %if.then214, %if.then209, %if.then204, %if.then199, %if.then194, %if.then189, %if.then184, %if.then179, %if.then174, %if.then169, %if.then164, %if.then159, %if.then154, %if.then149, %if.then144, %if.then139, %if.then134, %if.then129, %if.then124, %if.then119, %if.then114, %if.then109, %if.then104, %if.then99, %if.then94, %if.then89, %if.then84, %if.then79, %if.then74, %if.then69, %if.then64, %if.then59, %if.then54, %if.then49, %if.then44, %if.then39, %if.then34, %if.then29, %if.then24, %if.then19, %if.then14, %if.then9, %if.then4, %if.end416, %if.then414, %if.then409, %if.then404, %if.then399, %if.then394, %if.then389, %if.then384, %if.then379, %if.then374, %if.then369, %if.then364, %if.then359, %if.then354, %if.then349, %if.then344, %if.then339, %if.then334, %if.then329, %if.then324, %if.then319, %if.then314, %if.then309, %if.then304, %if.then299, %if.then294, %if.then289, %if.then284, %if.then279, %if.then274, %if.then269, %if.then264, %if.then259, %if.then254, %if.then249, %if.then244, %if.then239, %if.then234, %if.then229, %if.then224, %if.then219, %if.then214, %if.then209, %if.then204, %if.then199, %if.then194, %if.then189, %if.then184, %if.then179, %if.then174, %if.then169, %if.then164, %if.then159, %if.then154, %if.then149, %if.then144, %if.then139, %if.then134, %if.then129, %if.then124, %if.then119, %if.then114, %if.then109, %if.then104, %if.then99, %if.then94, %if.then89, %if.then84, %if.then79, %if.then74, %if.then69, %if.then64, %if.then59, %if.then54, %if.then49, %if.then44, %if.then39, %if.then34, %if.then29, %if.then24, %if.then19, %if.then14, %if.then9, %if.then4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 20, i32 0)
  %struct.BigStruct_35 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 35
  %load_struct.BigStruct_35 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %struct.BigStruct_35
  %327 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %327, i32 0, i32 0
  store %struct.D_type_list_struct** %load_struct.BigStruct_35, %struct.D_type_list_struct*** %d_type_array, align 4
  %328 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %329 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %v418 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %329, i32 0, i32 1
  store %struct.Violation_list_struct* %328, %struct.Violation_list_struct** %v418, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 14, i32 0)
  %330 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  store %struct.PP_node_struct* %330, %struct.PP_node_struct** %retval, align 4
  br label %return

return:                                           ; preds = %done_checking, %if.then, %done_checking, %if.then
  %331 = load %struct.PP_node_struct*, %struct.PP_node_struct** %retval, align 4
  %struct.BigStruct_36487 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  store %struct.PP_node_struct* %331, %struct.PP_node_struct** %struct.BigStruct_36487
  ret %struct.PP_node_struct* %331
}

; Function Attrs: noinline nounwind
define void @set_centers(i32 %print_word_0) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %print_word_0.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %tot = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %print_word_0.addr, align 4
  store i32 0, i32* %tot, align 4
  %0 = load i32, i32* %print_word_0.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %i, align 4
  br label %if.end

if.else:                                          ; preds = %entry, %entry
  store i32 1, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* @N_words_to_print, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 @strlen_Package(i8* %4)
  store i32 %call, i32* %len, align 4
  %5 = load i32, i32* %tot, align 4
  %6 = load i32, i32* %len, align 4
  %div = sdiv i32 %6, 2
  %add = add nsw i32 %5, %div
  %7 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %7
  store i32 %add, i32* %arrayidx1, align 4
  %8 = load i32, i32* %len, align 4
  %add2 = add nsw i32 %8, 1
  %9 = load i32, i32* %tot, align 4
  %add3 = add nsw i32 %9, %add2
  store i32 %add3, i32* %tot, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @print_postscript_data(%struct._iobuf* %fp, i32 %print_word_0, i32 %print_word_N) #0 {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %print_word_N.addr = alloca i32, align 4
  %print_word_0.addr = alloca i32, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %link = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 %load_struct.BigStruct_8, i32* %print_word_N.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %print_word_0.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  %0 = load i32, i32* %print_word_0.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %d, align 4
  br label %if.end

if.else:                                          ; preds = %entry, %entry
  store i32 1, i32* %d, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  store i32 0, i32* %i, align 4
  %1 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %2 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.635, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %1, i8* %2)
  %3 = load i32, i32* %d, align 4
  store i32 %3, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %4 = load i32, i32* %j, align 4
  %5 = load i32, i32* @N_words_to_print, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %i, align 4
  %rem = srem i32 %6, 7
  %cmp1 = icmp eq i32 %rem, 0
  br i1 %cmp1, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %for.body, %for.body
  %7 = load i32, i32* %i, align 4
  %cmp2 = icmp sgt i32 %7, 0
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %land.lhs.true, %land.lhs.true
  %8 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.1.636, i32 0, i32 0
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %8, i8* %9)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %land.lhs.true, %for.body, %if.then3, %land.lhs.true, %for.body
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  %11 = load i32, i32* %j, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %11
  %12 = load i8*, i8** %arrayidx, align 4
  %13 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.2.637, i32 0, i32 0
  %call6 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %13, i8* %14, i8* %12)
  br label %for.inc

for.inc:                                          ; preds = %if.end5, %if.end5
  %15 = load i32, i32* %j, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %16 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %17 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.3.638, i32 0, i32 0
  %call8 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %16, i8* %17)
  %18 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.4.639, i32 0, i32 0
  %call9 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %18, i8* %19)
  %20 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %21 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.5.640, i32 0, i32 0
  %call10 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %20, i8* %21)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc56, %for.end, %for.inc56, %for.end
  %22 = load i32, i32* %link, align 4
  %23 = load i32, i32* @N_links, align 4
  %cmp12 = icmp slt i32 %22, %23
  br i1 %cmp12, label %for.body13, label %for.end58

for.body13:                                       ; preds = %for.cond11, %for.cond11
  %24 = load i32, i32* %print_word_0.addr, align 4
  %tobool14 = icmp ne i32 %24, 0
  br i1 %tobool14, label %if.end19, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %for.body13, %for.body13
  %25 = load i32, i32* %link, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx16 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx16, i32 0, i32 0
  %27 = load i32, i32* %l, align 4
  %cmp17 = icmp eq i32 %27, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %land.lhs.true15, %land.lhs.true15
  br label %for.inc56

if.end19:                                         ; preds = %land.lhs.true15, %for.body13, %land.lhs.true15, %for.body13
  %28 = load i32, i32* %print_word_N.addr, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %if.end25, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %if.end19, %if.end19
  %29 = load i32, i32* %link, align 4
  %30 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %30, i32 0, i32 %29
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 1
  %31 = load i32, i32* %r, align 4
  %32 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %32, 1
  %cmp23 = icmp eq i32 %31, %sub
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %land.lhs.true21, %land.lhs.true21
  br label %for.inc56

if.end25:                                         ; preds = %land.lhs.true21, %if.end19, %land.lhs.true21, %if.end19
  %33 = load i32, i32* %link, align 4
  %34 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx26 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %34, i32 0, i32 %33
  %l27 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx26, i32 0, i32 0
  %35 = load i32, i32* %l27, align 4
  %cmp28 = icmp eq i32 %35, -1
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end25, %if.end25
  br label %for.inc56

if.end30:                                         ; preds = %if.end25, %if.end25
  %36 = load i32, i32* %j, align 4
  %rem31 = srem i32 %36, 5
  %cmp32 = icmp eq i32 %rem31, 0
  br i1 %cmp32, label %land.lhs.true33, label %if.end37

land.lhs.true33:                                  ; preds = %if.end30, %if.end30
  %37 = load i32, i32* %j, align 4
  %cmp34 = icmp sgt i32 %37, 0
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %land.lhs.true33, %land.lhs.true33
  %38 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %39 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.6.641, i32 0, i32 0
  %call36 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %38, i8* %39)
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %land.lhs.true33, %if.end30, %if.then35, %land.lhs.true33, %if.end30
  %40 = load i32, i32* %j, align 4
  %inc38 = add nsw i32 %40, 1
  store i32 %inc38, i32* %j, align 4
  %41 = load i32, i32* %link, align 4
  %arrayidx39 = getelementptr inbounds [497 x i32], [497 x i32]* @link_heights, i32 0, i32 %41
  %42 = load i32, i32* %arrayidx39, align 4
  %43 = load i32, i32* %link, align 4
  %44 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx40 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %44, i32 0, i32 %43
  %r41 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx40, i32 0, i32 1
  %45 = load i32, i32* %r41, align 4
  %46 = load i32, i32* %d, align 4
  %sub42 = sub nsw i32 %45, %46
  %47 = load i32, i32* %link, align 4
  %48 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx43 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %48, i32 0, i32 %47
  %l44 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx43, i32 0, i32 0
  %49 = load i32, i32* %l44, align 4
  %50 = load i32, i32* %d, align 4
  %sub45 = sub nsw i32 %49, %50
  %51 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.7.642, i32 0, i32 0
  %call46 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %51, i8* %52, i32 %sub45, i32 %sub42, i32 %42)
  %53 = load i32, i32* %link, align 4
  %54 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx47 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %54, i32 0, i32 %53
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx47, i32 0, i32 2
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %55, i32 0, i32 0
  %56 = load i16, i16* %label, align 4
  %conv = sext i16 %56 to i32
  %cmp48 = icmp slt i32 %conv, 0
  br i1 %cmp48, label %if.then50, label %if.else53

if.then50:                                        ; preds = %if.end37, %if.end37
  %57 = load i32, i32* %link, align 4
  %58 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx51 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %58, i32 0, i32 %57
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx51, i32 0, i32 4
  %59 = load i8*, i8** %name, align 4
  %60 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %61 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.8.643, i32 0, i32 0
  %call52 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %60, i8* %61, i8* %59)
  br label %if.end55

if.else53:                                        ; preds = %if.end37, %if.end37
  %62 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %63 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.9.644, i32 0, i32 0
  %call54 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %62, i8* %63)
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then50, %if.else53, %if.then50
  br label %for.inc56

for.inc56:                                        ; preds = %if.end55, %if.then29, %if.then24, %if.then18, %if.end55, %if.then29, %if.then24, %if.then18
  %64 = load i32, i32* %link, align 4
  %inc57 = add nsw i32 %64, 1
  store i32 %inc57, i32* %link, align 4
  br label %for.cond11

for.end58:                                        ; preds = %for.cond11, %for.cond11
  %65 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %66 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.10.645, i32 0, i32 0
  %call59 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %65, i8* %66)
  %67 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %68 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.11.646, i32 0, i32 0
  %call60 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %67, i8* %68)
  %69 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %70 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.12.647, i32 0, i32 0
  %call61 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %69, i8* %70)
  store i32 0, i32* %j, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc68, %for.end58, %for.inc68, %for.end58
  %71 = load i32, i32* %j, align 4
  %72 = load i32, i32* @N_rows, align 4
  %cmp63 = icmp slt i32 %71, %72
  br i1 %cmp63, label %for.body65, label %for.end70

for.body65:                                       ; preds = %for.cond62, %for.cond62
  %73 = load i32, i32* %j, align 4
  %arrayidx66 = getelementptr inbounds [250 x i32], [250 x i32]* @row_starts, i32 0, i32 %73
  %74 = load i32, i32* %arrayidx66, align 4
  %75 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.13.648, i32 0, i32 0
  %call67 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %75, i8* %76, i32 %74)
  br label %for.inc68

for.inc68:                                        ; preds = %for.body65, %for.body65
  %77 = load i32, i32* %j, align 4
  %inc69 = add nsw i32 %77, 1
  store i32 %inc69, i32* %j, align 4
  br label %for.cond62

for.end70:                                        ; preds = %for.cond62, %for.cond62
  %78 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %79 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.14.649, i32 0, i32 0
  %call71 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %78, i8* %79)
  ret void
}

; Function Attrs: noinline nounwind
define void @compute_chosen_words() #0 {
entry:
  %i = alloca i32, align 4
  %l = alloca i32, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %u = alloca i8*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc30, %entry, %for.inc30, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end31

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %4 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %4
  store i8* %arraydecay, i8** %arrayidx1, align 4
  %5 = load i32, i32* %i, align 4
  %6 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx2 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %6, i32 0, i32 %5
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx2, align 4
  %cmp3 = icmp eq %struct.Disjunct_struct* %7, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %for.body, %for.body
  %8 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %8
  %9 = load i8*, i8** %arrayidx4, align 4
  store i8* %9, i8** %t, align 4
  %10 = load i8*, i8** %t, align 4
  %call = call i32 @strlen_Package(i8* %10)
  %add = add i32 %call, 2
  store i32 %add, i32* %l, align 4
  %11 = load i32, i32* %l, align 4
  %add5 = add nsw i32 %11, 1
  %call6 = call i8* @xalloc(i32 %add5)
  store i8* %call6, i8** %s, align 4
  %12 = load i8*, i8** %t, align 4
  %13 = load i8*, i8** %s, align 4
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.15.652, i32 0, i32 0
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* %13, i8* %14, i8* %12)
  %15 = load i32, i32* %l, align 4
  %add8 = add nsw i32 %15, 1
  %16 = load i8*, i8** %s, align 4
  call void @free_this_string_later(i8* %16, i32 %add8)
  %17 = load i8*, i8** %s, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %18
  store i8* %17, i8** %arrayidx9, align 4
  br label %if.end29

if.else:                                          ; preds = %for.body, %for.body
  %19 = load i32, i32* @display_word_subscripts, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.then10, label %if.end28

if.then10:                                        ; preds = %if.else, %if.else
  %20 = load i32, i32* %i, align 4
  %21 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx11 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %21, i32 0, i32 %20
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx11, align 4
  %string12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 3
  %23 = load i8*, i8** %string12, align 4
  store i8* %23, i8** %t, align 4
  %24 = load i8*, i8** %t, align 4
  %call13 = call i32 @is_idiom_word(i8* %24)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then15, label %if.else26

if.then15:                                        ; preds = %if.then10, %if.then10
  %25 = load i8*, i8** %t, align 4
  %call16 = call i32 @strlen_Package(i8* %25)
  store i32 %call16, i32* %l, align 4
  %26 = load i32, i32* %l, align 4
  %add17 = add nsw i32 %26, 1
  %call18 = call i8* @xalloc(i32 %add17)
  store i8* %call18, i8** %s, align 4
  %27 = load i32, i32* %l, align 4
  %add19 = add nsw i32 %27, 1
  %28 = load i8*, i8** %s, align 4
  call void @free_this_string_later(i8* %28, i32 %add19)
  %29 = load i8*, i8** %t, align 4
  %30 = load i8*, i8** %s, align 4
  %call20 = call i8* @strcpy_Package(i8* %30, i8* %29)
  %31 = load i8*, i8** %s, align 4
  store i8* %31, i8** %u, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc, %if.then15, %for.inc, %if.then15
  %32 = load i8*, i8** %u, align 4
  %33 = load i8, i8* %32, align 1
  %conv = sext i8 %33 to i32
  %cmp22 = icmp ne i32 %conv, 46
  br i1 %cmp22, label %for.body24, label %for.end

for.body24:                                       ; preds = %for.cond21, %for.cond21
  br label %for.inc

for.inc:                                          ; preds = %for.body24, %for.body24
  %34 = load i8*, i8** %u, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr, i8** %u, align 4
  br label %for.cond21

for.end:                                          ; preds = %for.cond21, %for.cond21
  %35 = load i8*, i8** %u, align 4
  store i8 0, i8* %35, align 1
  %36 = load i8*, i8** %s, align 4
  %37 = load i32, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %37
  store i8* %36, i8** %arrayidx25, align 4
  br label %if.end

if.else26:                                        ; preds = %if.then10, %if.then10
  %38 = load i8*, i8** %t, align 4
  %39 = load i32, i32* %i, align 4
  %arrayidx27 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %39
  store i8* %38, i8** %arrayidx27, align 4
  br label %if.end

if.end:                                           ; preds = %if.else26, %for.end, %if.else26, %for.end
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.else, %if.end, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then, %if.end28, %if.then
  br label %for.inc30

for.inc30:                                        ; preds = %if.end29, %if.end29
  %40 = load i32, i32* %i, align 4
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end31:                                        ; preds = %for.cond, %for.cond
  %41 = load i32, i32* @left_wall_defined, align 4
  %tobool32 = icmp ne i32 %41, 0
  br i1 %tobool32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %for.end31, %for.end31
  %42 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.16.653, i32 0, i32 0
  %43 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 0
  store i8* %42, i8** %43, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %for.end31, %if.then33, %for.end31
  %44 = load i32, i32* @right_wall_defined, align 4
  %tobool35 = icmp ne i32 %44, 0
  br i1 %tobool35, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end34, %if.end34
  %45 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %45, 1
  %arrayidx37 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %sub
  %46 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.17.654, i32 0, i32 0
  store i8* %46, i8** %arrayidx37, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end34, %if.then36, %if.end34
  ret void
}

; Function Attrs: noinline nounwind
define void @print_links_graphically(%struct._iobuf* %fp) #0 {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %fp.addr = alloca %struct._iobuf*, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %cl = alloca i32, align 4
  %cr = alloca i32, align 4
  %row = alloca i32, align 4
  %top_row = alloca i32, align 4
  %width = alloca i32, align 4
  %flag = alloca i32, align 4
  %t = alloca i8*, align 4
  %s = alloca i8*, align 4
  %print_word_0 = alloca i32, align 4
  %print_word_N = alloca i32, align 4
  %N_wall_connectors = alloca i32, align 4
  %suppressor_used = alloca i32, align 4
  %connector = alloca [50 x i8], align 1
  %line_len = alloca i32, align 4
  %link_length = alloca i32, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  store i32 0, i32* %print_word_0, align 4
  store i32 0, i32* %print_word_N, align 4
  store i32 0, i32* %N_wall_connectors, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %suppressor_used, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then, %for.inc, %if.then
  %1 = load i32, i32* %j, align 4
  %2 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %j, align 4
  %4 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %4, i32 0, i32 %3
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %5 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %5, 0
  br i1 %cmp1, label %if.then2, label %if.end6

if.then2:                                         ; preds = %for.body, %for.body
  %6 = load i32, i32* %N_wall_connectors, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %N_wall_connectors, align 4
  %7 = load i32, i32* %j, align 4
  %8 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %8, i32 0, i32 %7
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 2
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 5
  %10 = load i8*, i8** %string, align 4
  %11 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.18.657, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %10, i8* %11)
  %cmp4 = icmp eq i32 %call, 0
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then2, %if.then2
  store i32 1, i32* %suppressor_used, align 4
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then2, %if.then5, %if.then2
  br label %if.end6

if.end6:                                          ; preds = %if.end, %for.body, %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end6, %if.end6
  %12 = load i32, i32* %j, align 4
  %inc7 = add nsw i32 %12, 1
  store i32 %inc7, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %13 = load i32, i32* %suppressor_used, align 4
  %tobool8 = icmp ne i32 %13, 0
  br i1 %tobool8, label %lor.lhs.false, label %lor.end

lor.lhs.false:                                    ; preds = %for.end, %for.end
  %14 = load i32, i32* %N_wall_connectors, align 4
  %cmp9 = icmp sgt i32 %14, 1
  br i1 %cmp9, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  %15 = load i32, i32* @display_walls, align 4
  %tobool10 = icmp ne i32 %15, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.end, %lor.rhs, %lor.lhs.false, %for.end
  %16 = phi i1 [ true, %lor.lhs.false ], [ true, %for.end ], [ %tobool10, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32
  store i32 %lor.ext, i32* %print_word_0, align 4
  br label %if.end11

if.else:                                          ; preds = %entry, %entry
  store i32 1, i32* %print_word_0, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.else, %lor.end, %if.else, %lor.end
  store i32 0, i32* %N_wall_connectors, align 4
  %17 = load i32, i32* @right_wall_defined, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.else39

if.then13:                                        ; preds = %if.end11, %if.end11
  store i32 0, i32* %suppressor_used, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc29, %if.then13, %for.inc29, %if.then13
  %18 = load i32, i32* %j, align 4
  %19 = load i32, i32* @N_links, align 4
  %cmp15 = icmp slt i32 %18, %19
  br i1 %cmp15, label %for.body16, label %for.end31

for.body16:                                       ; preds = %for.cond14, %for.cond14
  %20 = load i32, i32* %j, align 4
  %21 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %21, i32 0, i32 %20
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %22 = load i32, i32* %r, align 4
  %23 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %23, 1
  %cmp18 = icmp eq i32 %22, %sub
  br i1 %cmp18, label %if.then19, label %if.end28

if.then19:                                        ; preds = %for.body16, %for.body16
  %24 = load i32, i32* %N_wall_connectors, align 4
  %inc20 = add nsw i32 %24, 1
  store i32 %inc20, i32* %N_wall_connectors, align 4
  %25 = load i32, i32* %j, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx21 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %lc22 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx21, i32 0, i32 2
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %lc22, align 4
  %string23 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 5
  %28 = load i8*, i8** %string23, align 4
  %29 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.19.658, i32 0, i32 0
  %call24 = call i32 @strcmp_Package(i8* %28, i8* %29)
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.then19, %if.then19
  store i32 1, i32* %suppressor_used, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.then19, %if.then26, %if.then19
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %for.body16, %if.end27, %for.body16
  br label %for.inc29

for.inc29:                                        ; preds = %if.end28, %if.end28
  %30 = load i32, i32* %j, align 4
  %inc30 = add nsw i32 %30, 1
  store i32 %inc30, i32* %j, align 4
  br label %for.cond14

for.end31:                                        ; preds = %for.cond14, %for.cond14
  %31 = load i32, i32* %suppressor_used, align 4
  %tobool32 = icmp ne i32 %31, 0
  br i1 %tobool32, label %lor.lhs.false33, label %lor.end37

lor.lhs.false33:                                  ; preds = %for.end31, %for.end31
  %32 = load i32, i32* %N_wall_connectors, align 4
  %cmp34 = icmp sgt i32 %32, 1
  br i1 %cmp34, label %lor.end37, label %lor.rhs35

lor.rhs35:                                        ; preds = %lor.lhs.false33, %lor.lhs.false33
  %33 = load i32, i32* @display_walls, align 4
  %tobool36 = icmp ne i32 %33, 0
  br label %lor.end37

lor.end37:                                        ; preds = %lor.rhs35, %lor.lhs.false33, %for.end31, %lor.rhs35, %lor.lhs.false33, %for.end31
  %34 = phi i1 [ true, %lor.lhs.false33 ], [ true, %for.end31 ], [ %tobool36, %lor.rhs35 ]
  %lor.ext38 = zext i1 %34 to i32
  store i32 %lor.ext38, i32* %print_word_N, align 4
  br label %if.end40

if.else39:                                        ; preds = %if.end11, %if.end11
  store i32 1, i32* %print_word_N, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %lor.end37, %if.else39, %lor.end37
  %35 = load i32, i32* @N_words, align 4
  store i32 %35, i32* @N_words_to_print, align 4
  %36 = load i32, i32* %print_word_N, align 4
  %tobool41 = icmp ne i32 %36, 0
  br i1 %tobool41, label %if.end43, label %if.then42

if.then42:                                        ; preds = %if.end40, %if.end40
  %37 = load i32, i32* @N_words_to_print, align 4
  %dec = add nsw i32 %37, -1
  store i32 %dec, i32* @N_words_to_print, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end40, %if.then42, %if.end40
  %38 = load i32, i32* %print_word_0, align 4
  %struct.BigStruct_013 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %38, i32* %struct.BigStruct_013
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 39, i32 0)
  %39 = load i32, i32* @N_words_to_print, align 4
  %sub44 = sub nsw i32 %39, 1
  %arrayidx45 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %sub44
  %40 = load i32, i32* %arrayidx45, align 4
  %add = add nsw i32 %40, 1
  store i32 %add, i32* %line_len, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc59, %if.end43, %for.inc59, %if.end43
  %41 = load i32, i32* %k, align 4
  %cmp47 = icmp slt i32 %41, 30
  br i1 %cmp47, label %for.body48, label %for.end61

for.body48:                                       ; preds = %for.cond46, %for.cond46
  store i32 0, i32* %j, align 4
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc54, %for.body48, %for.inc54, %for.body48
  %42 = load i32, i32* %j, align 4
  %43 = load i32, i32* %line_len, align 4
  %cmp50 = icmp slt i32 %42, %43
  br i1 %cmp50, label %for.body51, label %for.end56

for.body51:                                       ; preds = %for.cond49, %for.cond49
  %44 = load i32, i32* %j, align 4
  %45 = load i32, i32* %k, align 4
  %arrayidx52 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %45
  %arrayidx53 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx52, i32 0, i32 %44
  store i8 32, i8* %arrayidx53, align 1
  br label %for.inc54

for.inc54:                                        ; preds = %for.body51, %for.body51
  %46 = load i32, i32* %j, align 4
  %inc55 = add nsw i32 %46, 1
  store i32 %inc55, i32* %j, align 4
  br label %for.cond49

for.end56:                                        ; preds = %for.cond49, %for.cond49
  %47 = load i32, i32* %line_len, align 4
  %48 = load i32, i32* %k, align 4
  %arrayidx57 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %48
  %arrayidx58 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx57, i32 0, i32 %47
  store i8 0, i8* %arrayidx58, align 1
  br label %for.inc59

for.inc59:                                        ; preds = %for.end56, %for.end56
  %49 = load i32, i32* %k, align 4
  %inc60 = add nsw i32 %49, 1
  store i32 %inc60, i32* %k, align 4
  br label %for.cond46

for.end61:                                        ; preds = %for.cond46, %for.cond46
  store i32 0, i32* %top_row, align 4
  store i32 1, i32* %link_length, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc253, %for.end61, %for.inc253, %for.end61
  %50 = load i32, i32* %link_length, align 4
  %51 = load i32, i32* @N_words_to_print, align 4
  %cmp63 = icmp slt i32 %50, %51
  br i1 %cmp63, label %for.body64, label %for.end255

for.body64:                                       ; preds = %for.cond62, %for.cond62
  store i32 0, i32* %j, align 4
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc250, %for.body64, %for.inc250, %for.body64
  %52 = load i32, i32* %j, align 4
  %53 = load i32, i32* @N_links, align 4
  %cmp66 = icmp slt i32 %52, %53
  br i1 %cmp66, label %for.body67, label %for.end252

for.body67:                                       ; preds = %for.cond65, %for.cond65
  %54 = load i32, i32* %j, align 4
  %55 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx68 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %55, i32 0, i32 %54
  %l69 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx68, i32 0, i32 0
  %56 = load i32, i32* %l69, align 4
  %cmp70 = icmp eq i32 %56, -1
  br i1 %cmp70, label %if.then71, label %if.end72

if.then71:                                        ; preds = %for.body67, %for.body67
  br label %for.inc250

if.end72:                                         ; preds = %for.body67, %for.body67
  %57 = load i32, i32* %j, align 4
  %58 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx73 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %58, i32 0, i32 %57
  %r74 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx73, i32 0, i32 1
  %59 = load i32, i32* %r74, align 4
  %60 = load i32, i32* %j, align 4
  %61 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx75 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %61, i32 0, i32 %60
  %l76 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx75, i32 0, i32 0
  %62 = load i32, i32* %l76, align 4
  %sub77 = sub nsw i32 %59, %62
  %63 = load i32, i32* %link_length, align 4
  %cmp78 = icmp ne i32 %sub77, %63
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.end72, %if.end72
  br label %for.inc250

if.end80:                                         ; preds = %if.end72, %if.end72
  %64 = load i32, i32* %print_word_0, align 4
  %tobool81 = icmp ne i32 %64, 0
  br i1 %tobool81, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end80, %if.end80
  %65 = load i32, i32* %j, align 4
  %66 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx82 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %66, i32 0, i32 %65
  %l83 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx82, i32 0, i32 0
  %67 = load i32, i32* %l83, align 4
  %cmp84 = icmp eq i32 %67, 0
  br i1 %cmp84, label %if.then85, label %if.end86

if.then85:                                        ; preds = %land.lhs.true, %land.lhs.true
  br label %for.inc250

if.end86:                                         ; preds = %land.lhs.true, %if.end80, %land.lhs.true, %if.end80
  %68 = load i32, i32* %print_word_N, align 4
  %tobool87 = icmp ne i32 %68, 0
  br i1 %tobool87, label %if.end94, label %land.lhs.true88

land.lhs.true88:                                  ; preds = %if.end86, %if.end86
  %69 = load i32, i32* %j, align 4
  %70 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx89 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %70, i32 0, i32 %69
  %r90 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx89, i32 0, i32 1
  %71 = load i32, i32* %r90, align 4
  %72 = load i32, i32* @N_words, align 4
  %sub91 = sub nsw i32 %72, 1
  %cmp92 = icmp eq i32 %71, %sub91
  br i1 %cmp92, label %if.then93, label %if.end94

if.then93:                                        ; preds = %land.lhs.true88, %land.lhs.true88
  br label %for.inc250

if.end94:                                         ; preds = %land.lhs.true88, %if.end86, %land.lhs.true88, %if.end86
  %73 = load i32, i32* %j, align 4
  %74 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx95 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %74, i32 0, i32 %73
  %l96 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx95, i32 0, i32 0
  %75 = load i32, i32* %l96, align 4
  %arrayidx97 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %75
  %76 = load i32, i32* %arrayidx97, align 4
  store i32 %76, i32* %cl, align 4
  %77 = load i32, i32* %j, align 4
  %78 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx98 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %78, i32 0, i32 %77
  %r99 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx98, i32 0, i32 1
  %79 = load i32, i32* %r99, align 4
  %arrayidx100 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %79
  %80 = load i32, i32* %arrayidx100, align 4
  store i32 %80, i32* %cr, align 4
  store i32 0, i32* %row, align 4
  br label %for.cond101

for.cond101:                                      ; preds = %for.inc121, %if.end94, %for.inc121, %if.end94
  %81 = load i32, i32* %row, align 4
  %cmp102 = icmp slt i32 %81, 30
  br i1 %cmp102, label %for.body103, label %for.end123

for.body103:                                      ; preds = %for.cond101, %for.cond101
  %82 = load i32, i32* %cl, align 4
  %add104 = add nsw i32 %82, 1
  store i32 %add104, i32* %k, align 4
  br label %for.cond105

for.cond105:                                      ; preds = %for.inc114, %for.body103, %for.inc114, %for.body103
  %83 = load i32, i32* %k, align 4
  %84 = load i32, i32* %cr, align 4
  %cmp106 = icmp slt i32 %83, %84
  br i1 %cmp106, label %for.body107, label %for.end116

for.body107:                                      ; preds = %for.cond105, %for.cond105
  %85 = load i32, i32* %k, align 4
  %86 = load i32, i32* %row, align 4
  %arrayidx108 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %86
  %arrayidx109 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx108, i32 0, i32 %85
  %87 = load i8, i8* %arrayidx109, align 1
  %conv = sext i8 %87 to i32
  %cmp110 = icmp ne i32 %conv, 32
  br i1 %cmp110, label %if.then112, label %if.end113

if.then112:                                       ; preds = %for.body107, %for.body107
  br label %for.end116

if.end113:                                        ; preds = %for.body107, %for.body107
  br label %for.inc114

for.inc114:                                       ; preds = %if.end113, %if.end113
  %88 = load i32, i32* %k, align 4
  %inc115 = add nsw i32 %88, 1
  store i32 %inc115, i32* %k, align 4
  br label %for.cond105

for.end116:                                       ; preds = %if.then112, %for.cond105, %if.then112, %for.cond105
  %89 = load i32, i32* %k, align 4
  %90 = load i32, i32* %cr, align 4
  %cmp117 = icmp eq i32 %89, %90
  br i1 %cmp117, label %if.then119, label %if.end120

if.then119:                                       ; preds = %for.end116, %for.end116
  br label %for.end123

if.end120:                                        ; preds = %for.end116, %for.end116
  br label %for.inc121

for.inc121:                                       ; preds = %if.end120, %if.end120
  %91 = load i32, i32* %row, align 4
  %inc122 = add nsw i32 %91, 1
  store i32 %inc122, i32* %row, align 4
  br label %for.cond101

for.end123:                                       ; preds = %if.then119, %for.cond101, %if.then119, %for.cond101
  %92 = load i32, i32* %row, align 4
  %93 = load i32, i32* %j, align 4
  %arrayidx124 = getelementptr inbounds [497 x i32], [497 x i32]* @link_heights, i32 0, i32 %93
  store i32 %92, i32* %arrayidx124, align 4
  %94 = load i32, i32* %row, align 4
  %mul = mul nsw i32 2, %94
  %add125 = add nsw i32 %mul, 2
  %cmp126 = icmp sgt i32 %add125, 29
  br i1 %cmp126, label %if.then128, label %if.end130

if.then128:                                       ; preds = %for.end123, %for.end123
  %95 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %96 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.20.659, i32 0, i32 0
  %call129 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %95, i8* %96)
  br label %if.end467

if.end130:                                        ; preds = %for.end123, %for.end123
  %97 = load i32, i32* %row, align 4
  %98 = load i32, i32* %top_row, align 4
  %cmp131 = icmp sgt i32 %97, %98
  br i1 %cmp131, label %if.then133, label %if.end134

if.then133:                                       ; preds = %if.end130, %if.end130
  %99 = load i32, i32* %row, align 4
  store i32 %99, i32* %top_row, align 4
  br label %if.end134

if.end134:                                        ; preds = %if.then133, %if.end130, %if.then133, %if.end130
  %100 = load i32, i32* %cl, align 4
  %101 = load i32, i32* %row, align 4
  %arrayidx135 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %101
  %arrayidx136 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx135, i32 0, i32 %100
  store i8 43, i8* %arrayidx136, align 1
  %102 = load i32, i32* %cr, align 4
  %103 = load i32, i32* %row, align 4
  %arrayidx137 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %103
  %arrayidx138 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx137, i32 0, i32 %102
  store i8 43, i8* %arrayidx138, align 1
  %104 = load i32, i32* %cl, align 4
  %add139 = add nsw i32 %104, 1
  store i32 %add139, i32* %k, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %if.end134, %for.inc146, %if.end134
  %105 = load i32, i32* %k, align 4
  %106 = load i32, i32* %cr, align 4
  %cmp141 = icmp slt i32 %105, %106
  br i1 %cmp141, label %for.body143, label %for.end148

for.body143:                                      ; preds = %for.cond140, %for.cond140
  %107 = load i32, i32* %k, align 4
  %108 = load i32, i32* %row, align 4
  %arrayidx144 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %108
  %arrayidx145 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx144, i32 0, i32 %107
  store i8 45, i8* %arrayidx145, align 1
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143, %for.body143
  %109 = load i32, i32* %k, align 4
  %inc147 = add nsw i32 %109, 1
  store i32 %inc147, i32* %k, align 4
  br label %for.cond140

for.end148:                                       ; preds = %for.cond140, %for.cond140
  %110 = load i32, i32* %j, align 4
  %111 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx149 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %111, i32 0, i32 %110
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx149, i32 0, i32 4
  %112 = load i8*, i8** %name, align 4
  store i8* %112, i8** %s, align 4
  %113 = load i32, i32* @display_link_subscripts, align 4
  %tobool150 = icmp ne i32 %113, 0
  br i1 %tobool150, label %if.then151, label %if.else157

if.then151:                                       ; preds = %for.end148, %for.end148
  %114 = load i8*, i8** %s, align 4
  %115 = load i8, i8* %114, align 1
  %conv152 = sext i8 %115 to i32
  %struct.BigStruct_011 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv152, i32* %struct.BigStruct_011
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 4, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %tobool154 = icmp ne i32 %load_struct.BigStruct_3212, 0
  br i1 %tobool154, label %if.end156, label %if.then155

if.then155:                                       ; preds = %if.then151, %if.then151
  %116 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.21.660, i32 0, i32 0
  store i8* %116, i8** %s, align 4
  br label %if.end156

if.end156:                                        ; preds = %if.then155, %if.then151, %if.then155, %if.then151
  br label %if.end163

if.else157:                                       ; preds = %for.end148, %for.end148
  %117 = load i8*, i8** %s, align 4
  %118 = load i8, i8* %117, align 1
  %conv158 = sext i8 %118 to i32
  %call159 = call i32 @isupper_Package(i32 %conv158)
  %tobool160 = icmp ne i32 %call159, 0
  br i1 %tobool160, label %if.end162, label %if.then161

if.then161:                                       ; preds = %if.else157, %if.else157
  %119 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.22.661, i32 0, i32 0
  store i8* %119, i8** %s, align 4
  br label %if.end162

if.end162:                                        ; preds = %if.then161, %if.else157, %if.then161, %if.else157
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end156, %if.end162, %if.end156
  %120 = load i8*, i8** %s, align 4
  %arraydecay = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %120, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 49, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 3, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %arrayidx165 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 49
  store i8 0, i8* %arrayidx165, align 1
  store i32 0, i32* %k, align 4
  %121 = load i32, i32* @display_link_subscripts, align 4
  %tobool166 = icmp ne i32 %121, 0
  br i1 %tobool166, label %if.then167, label %if.else170

if.then167:                                       ; preds = %if.end163, %if.end163
  %arraydecay168 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  %call169 = call i32 @strlen_Package(i8* %arraydecay168)
  store i32 %call169, i32* %k, align 4
  br label %if.end180

if.else170:                                       ; preds = %if.end163, %if.end163
  %arraydecay171 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  store i8* %arraydecay171, i8** %t, align 4
  br label %for.cond172

for.cond172:                                      ; preds = %for.inc178, %if.else170, %for.inc178, %if.else170
  %122 = load i8*, i8** %t, align 4
  %123 = load i8, i8* %122, align 1
  %conv173 = sext i8 %123 to i32
  %call174 = call i32 @isupper_Package(i32 %conv173)
  %tobool175 = icmp ne i32 %call174, 0
  br i1 %tobool175, label %for.body176, label %for.end179

for.body176:                                      ; preds = %for.cond172, %for.cond172
  %124 = load i32, i32* %k, align 4
  %inc177 = add nsw i32 %124, 1
  store i32 %inc177, i32* %k, align 4
  br label %for.inc178

for.inc178:                                       ; preds = %for.body176, %for.body176
  %125 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %125, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  br label %for.cond172

for.end179:                                       ; preds = %for.cond172, %for.cond172
  br label %if.end180

if.end180:                                        ; preds = %for.end179, %if.then167, %for.end179, %if.then167
  %126 = load i32, i32* %cl, align 4
  %127 = load i32, i32* %cr, align 4
  %add181 = add nsw i32 %126, %127
  %128 = load i32, i32* %k, align 4
  %sub182 = sub nsw i32 %add181, %128
  %div = sdiv i32 %sub182, 2
  %add183 = add nsw i32 %div, 1
  %129 = load i32, i32* %cl, align 4
  %cmp184 = icmp sle i32 %add183, %129
  br i1 %cmp184, label %if.then186, label %if.else190

if.then186:                                       ; preds = %if.end180, %if.end180
  %130 = load i32, i32* %row, align 4
  %arrayidx187 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %130
  %arraydecay188 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx187, i32 0, i32 0
  %131 = load i32, i32* %cl, align 4
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay188, i32 %131
  %add.ptr189 = getelementptr inbounds i8, i8* %add.ptr, i32 1
  store i8* %add.ptr189, i8** %t, align 4
  br label %if.end198

if.else190:                                       ; preds = %if.end180, %if.end180
  %132 = load i32, i32* %row, align 4
  %arrayidx191 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %132
  %arraydecay192 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx191, i32 0, i32 0
  %133 = load i32, i32* %cl, align 4
  %134 = load i32, i32* %cr, align 4
  %add193 = add nsw i32 %133, %134
  %135 = load i32, i32* %k, align 4
  %sub194 = sub nsw i32 %add193, %135
  %div195 = sdiv i32 %sub194, 2
  %add.ptr196 = getelementptr inbounds i8, i8* %arraydecay192, i32 %div195
  %add.ptr197 = getelementptr inbounds i8, i8* %add.ptr196, i32 1
  store i8* %add.ptr197, i8** %t, align 4
  br label %if.end198

if.end198:                                        ; preds = %if.else190, %if.then186, %if.else190, %if.then186
  %arraydecay199 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  store i8* %arraydecay199, i8** %s, align 4
  %136 = load i32, i32* @display_link_subscripts, align 4
  %tobool200 = icmp ne i32 %136, 0
  br i1 %tobool200, label %if.then201, label %if.else210

if.then201:                                       ; preds = %if.end198, %if.end198
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then201, %while.body, %if.then201
  %137 = load i8*, i8** %s, align 4
  %138 = load i8, i8* %137, align 1
  %conv202 = sext i8 %138 to i32
  %cmp203 = icmp ne i32 %conv202, 0
  br i1 %cmp203, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond, %while.cond
  %139 = load i8*, i8** %t, align 4
  %140 = load i8, i8* %139, align 1
  %conv205 = sext i8 %140 to i32
  %cmp206 = icmp eq i32 %conv205, 45
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond, %land.rhs, %while.cond
  %141 = phi i1 [ false, %while.cond ], [ %cmp206, %land.rhs ]
  br i1 %141, label %while.body, label %while.end

while.body:                                       ; preds = %land.end, %land.end
  %142 = load i8*, i8** %s, align 4
  %incdec.ptr208 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr208, i8** %s, align 4
  %143 = load i8, i8* %142, align 1
  %144 = load i8*, i8** %t, align 4
  %incdec.ptr209 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %incdec.ptr209, i8** %t, align 4
  store i8 %143, i8* %144, align 1
  br label %while.cond

while.end:                                        ; preds = %land.end, %land.end
  br label %if.end224

if.else210:                                       ; preds = %if.end198, %if.end198
  br label %while.cond211

while.cond211:                                    ; preds = %while.body220, %if.else210, %while.body220, %if.else210
  %145 = load i8*, i8** %s, align 4
  %146 = load i8, i8* %145, align 1
  %conv212 = sext i8 %146 to i32
  %call213 = call i32 @isupper_Package(i32 %conv212)
  %tobool214 = icmp ne i32 %call213, 0
  br i1 %tobool214, label %land.rhs215, label %land.end219

land.rhs215:                                      ; preds = %while.cond211, %while.cond211
  %147 = load i8*, i8** %t, align 4
  %148 = load i8, i8* %147, align 1
  %conv216 = sext i8 %148 to i32
  %cmp217 = icmp eq i32 %conv216, 45
  br label %land.end219

land.end219:                                      ; preds = %land.rhs215, %while.cond211, %land.rhs215, %while.cond211
  %149 = phi i1 [ false, %while.cond211 ], [ %cmp217, %land.rhs215 ]
  br i1 %149, label %while.body220, label %while.end223

while.body220:                                    ; preds = %land.end219, %land.end219
  %150 = load i8*, i8** %s, align 4
  %incdec.ptr221 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %incdec.ptr221, i8** %s, align 4
  %151 = load i8, i8* %150, align 1
  %152 = load i8*, i8** %t, align 4
  %incdec.ptr222 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %incdec.ptr222, i8** %t, align 4
  store i8 %151, i8* %152, align 1
  br label %while.cond211

while.end223:                                     ; preds = %land.end219, %land.end219
  br label %if.end224

if.end224:                                        ; preds = %while.end223, %while.end, %while.end223, %while.end
  store i32 0, i32* %k, align 4
  br label %for.cond225

for.cond225:                                      ; preds = %for.inc247, %if.end224, %for.inc247, %if.end224
  %153 = load i32, i32* %k, align 4
  %154 = load i32, i32* %row, align 4
  %cmp226 = icmp slt i32 %153, %154
  br i1 %cmp226, label %for.body228, label %for.end249

for.body228:                                      ; preds = %for.cond225, %for.cond225
  %155 = load i32, i32* %cl, align 4
  %156 = load i32, i32* %k, align 4
  %arrayidx229 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %156
  %arrayidx230 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx229, i32 0, i32 %155
  %157 = load i8, i8* %arrayidx230, align 1
  %conv231 = sext i8 %157 to i32
  %cmp232 = icmp eq i32 %conv231, 32
  br i1 %cmp232, label %if.then234, label %if.end237

if.then234:                                       ; preds = %for.body228, %for.body228
  %158 = load i32, i32* %cl, align 4
  %159 = load i32, i32* %k, align 4
  %arrayidx235 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %159
  %arrayidx236 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx235, i32 0, i32 %158
  store i8 124, i8* %arrayidx236, align 1
  br label %if.end237

if.end237:                                        ; preds = %if.then234, %for.body228, %if.then234, %for.body228
  %160 = load i32, i32* %cr, align 4
  %161 = load i32, i32* %k, align 4
  %arrayidx238 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %161
  %arrayidx239 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx238, i32 0, i32 %160
  %162 = load i8, i8* %arrayidx239, align 1
  %conv240 = sext i8 %162 to i32
  %cmp241 = icmp eq i32 %conv240, 32
  br i1 %cmp241, label %if.then243, label %if.end246

if.then243:                                       ; preds = %if.end237, %if.end237
  %163 = load i32, i32* %cr, align 4
  %164 = load i32, i32* %k, align 4
  %arrayidx244 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %164
  %arrayidx245 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx244, i32 0, i32 %163
  store i8 124, i8* %arrayidx245, align 1
  br label %if.end246

if.end246:                                        ; preds = %if.then243, %if.end237, %if.then243, %if.end237
  br label %for.inc247

for.inc247:                                       ; preds = %if.end246, %if.end246
  %165 = load i32, i32* %k, align 4
  %inc248 = add nsw i32 %165, 1
  store i32 %inc248, i32* %k, align 4
  br label %for.cond225

for.end249:                                       ; preds = %for.cond225, %for.cond225
  br label %for.inc250

for.inc250:                                       ; preds = %for.end249, %if.then93, %if.then85, %if.then79, %if.then71, %for.end249, %if.then93, %if.then85, %if.then79, %if.then71
  %166 = load i32, i32* %j, align 4
  %inc251 = add nsw i32 %166, 1
  store i32 %inc251, i32* %j, align 4
  br label %for.cond65

for.end252:                                       ; preds = %for.cond65, %for.cond65
  br label %for.inc253

for.inc253:                                       ; preds = %for.end252, %for.end252
  %167 = load i32, i32* %link_length, align 4
  %inc254 = add nsw i32 %167, 1
  store i32 %inc254, i32* %link_length, align 4
  br label %for.cond62

for.end255:                                       ; preds = %for.cond62, %for.cond62
  %168 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 0, i32 0
  store i8* %168, i8** %s, align 4
  %169 = load i32, i32* %print_word_0, align 4
  %tobool256 = icmp ne i32 %169, 0
  br i1 %tobool256, label %if.then257, label %if.else258

if.then257:                                       ; preds = %for.end255, %for.end255
  store i32 0, i32* %k, align 4
  br label %if.end259

if.else258:                                       ; preds = %for.end255, %for.end255
  store i32 1, i32* %k, align 4
  br label %if.end259

if.end259:                                        ; preds = %if.else258, %if.then257, %if.else258, %if.then257
  br label %for.cond260

for.cond260:                                      ; preds = %for.inc275, %if.end259, %for.inc275, %if.end259
  %170 = load i32, i32* %k, align 4
  %171 = load i32, i32* @N_words_to_print, align 4
  %cmp261 = icmp slt i32 %170, %171
  br i1 %cmp261, label %for.body263, label %for.end277

for.body263:                                      ; preds = %for.cond260, %for.cond260
  %172 = load i32, i32* %k, align 4
  %arrayidx264 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %172
  %173 = load i8*, i8** %arrayidx264, align 4
  store i8* %173, i8** %t, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond265

while.cond265:                                    ; preds = %while.body269, %for.body263, %while.body269, %for.body263
  %174 = load i8*, i8** %t, align 4
  %175 = load i8, i8* %174, align 1
  %conv266 = sext i8 %175 to i32
  %cmp267 = icmp ne i32 %conv266, 0
  br i1 %cmp267, label %while.body269, label %while.end273

while.body269:                                    ; preds = %while.cond265, %while.cond265
  %176 = load i8*, i8** %t, align 4
  %incdec.ptr270 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %incdec.ptr270, i8** %t, align 4
  %177 = load i8, i8* %176, align 1
  %178 = load i8*, i8** %s, align 4
  %incdec.ptr271 = getelementptr inbounds i8, i8* %178, i32 1
  store i8* %incdec.ptr271, i8** %s, align 4
  store i8 %177, i8* %178, align 1
  %179 = load i32, i32* %i, align 4
  %inc272 = add nsw i32 %179, 1
  store i32 %inc272, i32* %i, align 4
  br label %while.cond265

while.end273:                                     ; preds = %while.cond265, %while.cond265
  %180 = load i8*, i8** %s, align 4
  %incdec.ptr274 = getelementptr inbounds i8, i8* %180, i32 1
  store i8* %incdec.ptr274, i8** %s, align 4
  store i8 32, i8* %180, align 1
  br label %for.inc275

for.inc275:                                       ; preds = %while.end273, %while.end273
  %181 = load i32, i32* %k, align 4
  %inc276 = add nsw i32 %181, 1
  store i32 %inc276, i32* %k, align 4
  br label %for.cond260

for.end277:                                       ; preds = %for.cond260, %for.cond260
  %182 = load i8*, i8** %s, align 4
  store i8 0, i8* %182, align 1
  %183 = load i32, i32* @display_short, align 4
  %tobool278 = icmp ne i32 %183, 0
  br i1 %tobool278, label %if.then279, label %if.else318

if.then279:                                       ; preds = %for.end277, %for.end277
  store i32 0, i32* %k, align 4
  br label %for.cond280

for.cond280:                                      ; preds = %for.inc300, %if.then279, %for.inc300, %if.then279
  %184 = load i32, i32* %k, align 4
  %185 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 0
  %arrayidx281 = getelementptr inbounds [1500 x i8], [1500 x i8]* %185, i32 0, i32 %184
  %186 = load i8, i8* %arrayidx281, align 1
  %conv282 = sext i8 %186 to i32
  %cmp283 = icmp ne i32 %conv282, 0
  br i1 %cmp283, label %for.body285, label %for.end302

for.body285:                                      ; preds = %for.cond280, %for.cond280
  %187 = load i32, i32* %k, align 4
  %188 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 0
  %arrayidx286 = getelementptr inbounds [1500 x i8], [1500 x i8]* %188, i32 0, i32 %187
  %189 = load i8, i8* %arrayidx286, align 1
  %conv287 = sext i8 %189 to i32
  %cmp288 = icmp eq i32 %conv287, 43
  br i1 %cmp288, label %if.then295, label %lor.lhs.false290

lor.lhs.false290:                                 ; preds = %for.body285, %for.body285
  %190 = load i32, i32* %k, align 4
  %191 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 0
  %arrayidx291 = getelementptr inbounds [1500 x i8], [1500 x i8]* %191, i32 0, i32 %190
  %192 = load i8, i8* %arrayidx291, align 1
  %conv292 = sext i8 %192 to i32
  %cmp293 = icmp eq i32 %conv292, 124
  br i1 %cmp293, label %if.then295, label %if.else297

if.then295:                                       ; preds = %lor.lhs.false290, %for.body285, %lor.lhs.false290, %for.body285
  %193 = load i32, i32* %k, align 4
  %194 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 1
  %arrayidx296 = getelementptr inbounds [1500 x i8], [1500 x i8]* %194, i32 0, i32 %193
  store i8 124, i8* %arrayidx296, align 1
  br label %if.end299

if.else297:                                       ; preds = %lor.lhs.false290, %lor.lhs.false290
  %195 = load i32, i32* %k, align 4
  %196 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 1
  %arrayidx298 = getelementptr inbounds [1500 x i8], [1500 x i8]* %196, i32 0, i32 %195
  store i8 32, i8* %arrayidx298, align 1
  br label %if.end299

if.end299:                                        ; preds = %if.else297, %if.then295, %if.else297, %if.then295
  br label %for.inc300

for.inc300:                                       ; preds = %if.end299, %if.end299
  %197 = load i32, i32* %k, align 4
  %inc301 = add nsw i32 %197, 1
  store i32 %inc301, i32* %k, align 4
  br label %for.cond280

for.end302:                                       ; preds = %for.cond280, %for.cond280
  %198 = load i32, i32* %k, align 4
  %199 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1500 x i8], [1500 x i8]* %199, i32 0, i32 %198
  store i8 0, i8* %arrayidx303, align 1
  store i32 0, i32* %row, align 4
  br label %for.cond304

for.cond304:                                      ; preds = %for.inc314, %for.end302, %for.inc314, %for.end302
  %200 = load i32, i32* %row, align 4
  %201 = load i32, i32* %top_row, align 4
  %cmp305 = icmp sle i32 %200, %201
  br i1 %cmp305, label %for.body307, label %for.end316

for.body307:                                      ; preds = %for.cond304, %for.cond304
  %202 = load i32, i32* %row, align 4
  %arrayidx308 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %202
  %arraydecay309 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx308, i32 0, i32 0
  %203 = load i32, i32* %row, align 4
  %add310 = add nsw i32 %203, 2
  %arrayidx311 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add310
  %arraydecay312 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx311, i32 0, i32 0
  %call313 = call i8* @strcpy_Package(i8* %arraydecay312, i8* %arraydecay309)
  br label %for.inc314

for.inc314:                                       ; preds = %for.body307, %for.body307
  %204 = load i32, i32* %row, align 4
  %inc315 = add nsw i32 %204, 1
  store i32 %inc315, i32* %row, align 4
  br label %for.cond304

for.end316:                                       ; preds = %for.cond304, %for.cond304
  %205 = load i32, i32* %top_row, align 4
  %add317 = add nsw i32 %205, 2
  store i32 %add317, i32* %top_row, align 4
  br label %if.end371

if.else318:                                       ; preds = %for.end277, %for.end277
  store i32 0, i32* %row, align 4
  br label %for.cond319

for.cond319:                                      ; preds = %for.inc366, %if.else318, %for.inc366, %if.else318
  %206 = load i32, i32* %row, align 4
  %207 = load i32, i32* %top_row, align 4
  %cmp320 = icmp sle i32 %206, %207
  br i1 %cmp320, label %for.body322, label %for.end368

for.body322:                                      ; preds = %for.cond319, %for.cond319
  %208 = load i32, i32* %row, align 4
  %arrayidx323 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %208
  %arraydecay324 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx323, i32 0, i32 0
  %209 = load i32, i32* %row, align 4
  %mul325 = mul nsw i32 2, %209
  %add326 = add nsw i32 %mul325, 2
  %arrayidx327 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add326
  %arraydecay328 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx327, i32 0, i32 0
  %call329 = call i8* @strcpy_Package(i8* %arraydecay328, i8* %arraydecay324)
  store i32 0, i32* %k, align 4
  br label %for.cond330

for.cond330:                                      ; preds = %for.inc359, %for.body322, %for.inc359, %for.body322
  %210 = load i32, i32* %k, align 4
  %211 = load i32, i32* %row, align 4
  %arrayidx331 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %211
  %arrayidx332 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx331, i32 0, i32 %210
  %212 = load i8, i8* %arrayidx332, align 1
  %conv333 = sext i8 %212 to i32
  %cmp334 = icmp ne i32 %conv333, 0
  br i1 %cmp334, label %for.body336, label %for.end361

for.body336:                                      ; preds = %for.cond330, %for.cond330
  %213 = load i32, i32* %k, align 4
  %214 = load i32, i32* %row, align 4
  %arrayidx337 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %214
  %arrayidx338 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx337, i32 0, i32 %213
  %215 = load i8, i8* %arrayidx338, align 1
  %conv339 = sext i8 %215 to i32
  %cmp340 = icmp eq i32 %conv339, 43
  br i1 %cmp340, label %if.then348, label %lor.lhs.false342

lor.lhs.false342:                                 ; preds = %for.body336, %for.body336
  %216 = load i32, i32* %k, align 4
  %217 = load i32, i32* %row, align 4
  %arrayidx343 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %217
  %arrayidx344 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx343, i32 0, i32 %216
  %218 = load i8, i8* %arrayidx344, align 1
  %conv345 = sext i8 %218 to i32
  %cmp346 = icmp eq i32 %conv345, 124
  br i1 %cmp346, label %if.then348, label %if.else353

if.then348:                                       ; preds = %lor.lhs.false342, %for.body336, %lor.lhs.false342, %for.body336
  %219 = load i32, i32* %k, align 4
  %220 = load i32, i32* %row, align 4
  %mul349 = mul nsw i32 2, %220
  %add350 = add nsw i32 %mul349, 1
  %arrayidx351 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add350
  %arrayidx352 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx351, i32 0, i32 %219
  store i8 124, i8* %arrayidx352, align 1
  br label %if.end358

if.else353:                                       ; preds = %lor.lhs.false342, %lor.lhs.false342
  %221 = load i32, i32* %k, align 4
  %222 = load i32, i32* %row, align 4
  %mul354 = mul nsw i32 2, %222
  %add355 = add nsw i32 %mul354, 1
  %arrayidx356 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add355
  %arrayidx357 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx356, i32 0, i32 %221
  store i8 32, i8* %arrayidx357, align 1
  br label %if.end358

if.end358:                                        ; preds = %if.else353, %if.then348, %if.else353, %if.then348
  br label %for.inc359

for.inc359:                                       ; preds = %if.end358, %if.end358
  %223 = load i32, i32* %k, align 4
  %inc360 = add nsw i32 %223, 1
  store i32 %inc360, i32* %k, align 4
  br label %for.cond330

for.end361:                                       ; preds = %for.cond330, %for.cond330
  %224 = load i32, i32* %k, align 4
  %225 = load i32, i32* %row, align 4
  %mul362 = mul nsw i32 2, %225
  %add363 = add nsw i32 %mul362, 1
  %arrayidx364 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add363
  %arrayidx365 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx364, i32 0, i32 %224
  store i8 0, i8* %arrayidx365, align 1
  br label %for.inc366

for.inc366:                                       ; preds = %for.end361, %for.end361
  %226 = load i32, i32* %row, align 4
  %inc367 = add nsw i32 %226, 1
  store i32 %inc367, i32* %row, align 4
  br label %for.cond319

for.end368:                                       ; preds = %for.cond319, %for.cond319
  %227 = load i32, i32* %top_row, align 4
  %mul369 = mul nsw i32 2, %227
  %add370 = add nsw i32 %mul369, 2
  store i32 %add370, i32* %top_row, align 4
  br label %if.end371

if.end371:                                        ; preds = %for.end368, %for.end316, %for.end368, %for.end316
  %228 = load i32, i32* %print_word_0, align 4
  %tobool372 = icmp ne i32 %228, 0
  br i1 %tobool372, label %if.then373, label %if.else374

if.then373:                                       ; preds = %if.end371, %if.end371
  store i32 0, i32* %i, align 4
  br label %if.end375

if.else374:                                       ; preds = %if.end371, %if.end371
  store i32 1, i32* %i, align 4
  br label %if.end375

if.end375:                                        ; preds = %if.else374, %if.then373, %if.else374, %if.then373
  store i32 0, i32* %k, align 4
  store i32 0, i32* @N_rows, align 4
  %229 = load i32, i32* @N_rows, align 4
  %arrayidx376 = getelementptr inbounds [250 x i32], [250 x i32]* @row_starts, i32 0, i32 %229
  store i32 0, i32* %arrayidx376, align 4
  %230 = load i32, i32* @N_rows, align 4
  %inc377 = add nsw i32 %230, 1
  store i32 %inc377, i32* @N_rows, align 4
  br label %while.cond378

while.cond378:                                    ; preds = %for.end461, %if.end375, %for.end461, %if.end375
  %231 = load i32, i32* %i, align 4
  %232 = load i32, i32* @N_words_to_print, align 4
  %cmp379 = icmp slt i32 %231, %232
  br i1 %cmp379, label %while.body381, label %while.end464

while.body381:                                    ; preds = %while.cond378, %while.cond378
  %233 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_0
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %233, %struct._iobuf** %struct.BigStruct_11
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 0, i32* %width, align 4
  br label %do.body

do.body:                                          ; preds = %land.end397, %while.body381, %land.end397, %while.body381
  %234 = load i32, i32* %i, align 4
  %arrayidx383 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %234
  %235 = load i8*, i8** %arrayidx383, align 4
  %call384 = call i32 @strlen_Package(i8* %235)
  %add385 = add i32 %call384, 1
  %236 = load i32, i32* %width, align 4
  %add386 = add i32 %236, %add385
  store i32 %add386, i32* %width, align 4
  %237 = load i32, i32* %i, align 4
  %inc387 = add nsw i32 %237, 1
  store i32 %inc387, i32* %i, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body, %do.body
  %238 = load i32, i32* %i, align 4
  %239 = load i32, i32* @N_words_to_print, align 4
  %cmp388 = icmp slt i32 %238, %239
  br i1 %cmp388, label %land.rhs390, label %land.end397

land.rhs390:                                      ; preds = %do.cond, %do.cond
  %240 = load i32, i32* %width, align 4
  %241 = load i32, i32* %i, align 4
  %arrayidx391 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %241
  %242 = load i8*, i8** %arrayidx391, align 4
  %call392 = call i32 @strlen_Package(i8* %242)
  %add393 = add nsw i32 %240, %call392
  %add394 = add nsw i32 %add393, 1
  %243 = load i32, i32* @screen_width, align 4
  %cmp395 = icmp slt i32 %add394, %243
  br label %land.end397

land.end397:                                      ; preds = %land.rhs390, %do.cond, %land.rhs390, %do.cond
  %244 = phi i1 [ false, %do.cond ], [ %cmp395, %land.rhs390 ]
  br i1 %244, label %do.body, label %do.end

do.end:                                           ; preds = %land.end397, %land.end397
  %245 = load i32, i32* %i, align 4
  %246 = load i32, i32* %print_word_0, align 4
  %tobool398 = icmp ne i32 %246, 0
  %lnot = xor i1 %tobool398, true
  %lnot.ext = zext i1 %lnot to i32
  %sub399 = sub nsw i32 %245, %lnot.ext
  %247 = load i32, i32* @N_rows, align 4
  %arrayidx400 = getelementptr inbounds [250 x i32], [250 x i32]* @row_starts, i32 0, i32 %247
  store i32 %sub399, i32* %arrayidx400, align 4
  %248 = load i32, i32* %i, align 4
  %249 = load i32, i32* @N_words_to_print, align 4
  %cmp401 = icmp slt i32 %248, %249
  br i1 %cmp401, label %if.then403, label %if.end405

if.then403:                                       ; preds = %do.end, %do.end
  %250 = load i32, i32* @N_rows, align 4
  %inc404 = add nsw i32 %250, 1
  store i32 %inc404, i32* @N_rows, align 4
  br label %if.end405

if.end405:                                        ; preds = %if.then403, %do.end, %if.then403, %do.end
  %251 = load i32, i32* %top_row, align 4
  store i32 %251, i32* %row, align 4
  br label %for.cond406

for.cond406:                                      ; preds = %for.inc459, %if.end405, %for.inc459, %if.end405
  %252 = load i32, i32* %row, align 4
  %cmp407 = icmp sge i32 %252, 0
  br i1 %cmp407, label %for.body409, label %for.end461

for.body409:                                      ; preds = %for.cond406, %for.cond406
  store i32 1, i32* %flag, align 4
  %253 = load i32, i32* %k, align 4
  store i32 %253, i32* %j, align 4
  br label %for.cond410

for.cond410:                                      ; preds = %for.inc432, %for.body409, %for.inc432, %for.body409
  %254 = load i32, i32* %flag, align 4
  %tobool411 = icmp ne i32 %254, 0
  br i1 %tobool411, label %land.lhs.true412, label %land.end422

land.lhs.true412:                                 ; preds = %for.cond410, %for.cond410
  %255 = load i32, i32* %j, align 4
  %256 = load i32, i32* %k, align 4
  %257 = load i32, i32* %width, align 4
  %add413 = add nsw i32 %256, %257
  %cmp414 = icmp slt i32 %255, %add413
  br i1 %cmp414, label %land.rhs416, label %land.end422

land.rhs416:                                      ; preds = %land.lhs.true412, %land.lhs.true412
  %258 = load i32, i32* %j, align 4
  %259 = load i32, i32* %row, align 4
  %arrayidx417 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %259
  %arrayidx418 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx417, i32 0, i32 %258
  %260 = load i8, i8* %arrayidx418, align 1
  %conv419 = sext i8 %260 to i32
  %cmp420 = icmp ne i32 %conv419, 0
  br label %land.end422

land.end422:                                      ; preds = %land.rhs416, %land.lhs.true412, %for.cond410, %land.rhs416, %land.lhs.true412, %for.cond410
  %261 = phi i1 [ false, %land.lhs.true412 ], [ false, %for.cond410 ], [ %cmp420, %land.rhs416 ]
  br i1 %261, label %for.body423, label %for.end434

for.body423:                                      ; preds = %land.end422, %land.end422
  %262 = load i32, i32* %flag, align 4
  %tobool424 = icmp ne i32 %262, 0
  br i1 %tobool424, label %land.rhs425, label %land.end431

land.rhs425:                                      ; preds = %for.body423, %for.body423
  %263 = load i32, i32* %j, align 4
  %264 = load i32, i32* %row, align 4
  %arrayidx426 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %264
  %arrayidx427 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx426, i32 0, i32 %263
  %265 = load i8, i8* %arrayidx427, align 1
  %conv428 = sext i8 %265 to i32
  %cmp429 = icmp eq i32 %conv428, 32
  br label %land.end431

land.end431:                                      ; preds = %land.rhs425, %for.body423, %land.rhs425, %for.body423
  %266 = phi i1 [ false, %for.body423 ], [ %cmp429, %land.rhs425 ]
  %land.ext = zext i1 %266 to i32
  store i32 %land.ext, i32* %flag, align 4
  br label %for.inc432

for.inc432:                                       ; preds = %land.end431, %land.end431
  %267 = load i32, i32* %j, align 4
  %inc433 = add nsw i32 %267, 1
  store i32 %inc433, i32* %j, align 4
  br label %for.cond410

for.end434:                                       ; preds = %land.end422, %land.end422
  %268 = load i32, i32* %flag, align 4
  %tobool435 = icmp ne i32 %268, 0
  br i1 %tobool435, label %if.end458, label %if.then436

if.then436:                                       ; preds = %for.end434, %for.end434
  %269 = load i32, i32* %k, align 4
  store i32 %269, i32* %j, align 4
  br label %for.cond437

for.cond437:                                      ; preds = %for.inc454, %if.then436, %for.inc454, %if.then436
  %270 = load i32, i32* %j, align 4
  %271 = load i32, i32* %k, align 4
  %272 = load i32, i32* %width, align 4
  %add438 = add nsw i32 %271, %272
  %cmp439 = icmp slt i32 %270, %add438
  br i1 %cmp439, label %land.rhs441, label %land.end447

land.rhs441:                                      ; preds = %for.cond437, %for.cond437
  %273 = load i32, i32* %j, align 4
  %274 = load i32, i32* %row, align 4
  %arrayidx442 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %274
  %arrayidx443 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx442, i32 0, i32 %273
  %275 = load i8, i8* %arrayidx443, align 1
  %conv444 = sext i8 %275 to i32
  %cmp445 = icmp ne i32 %conv444, 0
  br label %land.end447

land.end447:                                      ; preds = %land.rhs441, %for.cond437, %land.rhs441, %for.cond437
  %276 = phi i1 [ false, %for.cond437 ], [ %cmp445, %land.rhs441 ]
  br i1 %276, label %for.body449, label %for.end456

for.body449:                                      ; preds = %land.end447, %land.end447
  %277 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %278 = load i32, i32* %j, align 4
  %279 = load i32, i32* %row, align 4
  %arrayidx450 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %279
  %arrayidx451 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx450, i32 0, i32 %278
  %280 = load i8, i8* %arrayidx451, align 1
  %conv452 = sext i8 %280 to i32
  %struct.BigStruct_02 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv452, i32* %struct.BigStruct_02
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %277, %struct._iobuf** %struct.BigStruct_13
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_324 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_324 = load i32, i32* %struct.BigStruct_324
  br label %for.inc454

for.inc454:                                       ; preds = %for.body449, %for.body449
  %281 = load i32, i32* %j, align 4
  %inc455 = add nsw i32 %281, 1
  store i32 %inc455, i32* %j, align 4
  br label %for.cond437

for.end456:                                       ; preds = %land.end447, %land.end447
  %282 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_05 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_05
  %struct.BigStruct_16 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %282, %struct._iobuf** %struct.BigStruct_16
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  br label %if.end458

if.end458:                                        ; preds = %for.end456, %for.end434, %for.end456, %for.end434
  br label %for.inc459

for.inc459:                                       ; preds = %if.end458, %if.end458
  %283 = load i32, i32* %row, align 4
  %dec460 = add nsw i32 %283, -1
  store i32 %dec460, i32* %row, align 4
  br label %for.cond406

for.end461:                                       ; preds = %for.cond406, %for.cond406
  %284 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_08 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_08
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %284, %struct._iobuf** %struct.BigStruct_19
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_3210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3210 = load i32, i32* %struct.BigStruct_3210
  %285 = load i32, i32* %width, align 4
  %286 = load i32, i32* %k, align 4
  %add463 = add nsw i32 %286, %285
  store i32 %add463, i32* %k, align 4
  br label %while.cond378

while.end464:                                     ; preds = %while.cond378, %while.cond378
  %287 = load i32, i32* @display_postscript, align 4
  %tobool465 = icmp ne i32 %287, 0
  br i1 %tobool465, label %if.then466, label %if.end467

if.then466:                                       ; preds = %while.end464, %while.end464
  %288 = load i32, i32* %print_word_N, align 4
  %289 = load i32, i32* %print_word_0, align 4
  %290 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %290, %struct._iobuf** %struct.BigStruct_114
  %struct.BigStruct_515 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %289, i32* %struct.BigStruct_515
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %288, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 40, i32 0)
  br label %if.end467

if.end467:                                        ; preds = %if.then466, %while.end464, %if.then128, %if.then466, %while.end464, %if.then128
  ret void
}

declare dllimport i32 @putc(i32, %struct._iobuf*) #1

; Function Attrs: noinline nounwind
define void @print_disjunct_counts() #0 {
entry:
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry, %for.inc6, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond, %for.cond
  store i32 0, i32* %c, align 4
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load i32, i32* %c, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %c, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  %9 = load i32, i32* %c, align 4
  %10 = load i32, i32* %i, align 4
  %11 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %11, i32 0, i32 %10
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %12 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.23.664, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %12, i8* %arraydecay, i32 %9)
  br label %for.inc6

for.inc6:                                         ; preds = %for.end, %for.end
  %13 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %13, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond, %for.cond
  %14 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.24.665, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %14)
  ret void
}

; Function Attrs: noinline nounwind
define void @print_expression_sizes() #0 {
entry:
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  %size = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc7, %entry, %for.inc7, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond, %for.cond
  store i32 0, i32* %size, align 4
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call i32 @size_of_expression(%struct.Exp_struct* %7)
  %8 = load i32, i32* %size, align 4
  %add = add nsw i32 %8, %call
  store i32 %add, i32* %size, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  %11 = load i32, i32* %size, align 4
  %12 = load i32, i32* %w, align 4
  %13 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %13, i32 0, i32 %12
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.25.668, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %14, i8* %arraydecay, i32 %11)
  br label %for.inc7

for.inc7:                                         ; preds = %for.end, %for.end
  %15 = load i32, i32* %w, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond, %for.cond
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.26.669, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %16)
  ret void
}

; Function Attrs: noinline nounwind
define void @print_sentence(%struct._iobuf* %fp, i32 %w) #0 {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %w.addr = alloca i32, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %i = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %w.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  store i32 1, i32* %i, align 4
  br label %if.end

if.else:                                          ; preds = %entry, %entry
  store i32 0, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  %1 = load i32, i32* %w.addr, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end, %if.end
  %2 = load i32, i32* %w.addr, align 4
  %3 = load i32, i32* %i, align 4
  %add = add nsw i32 %3, %2
  store i32 %add, i32* %i, align 4
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end, %if.then1, %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end2, %for.inc, %if.end2
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @N_words, align 4
  %6 = load i32, i32* @right_wall_defined, align 4
  %sub = sub nsw i32 %5, %6
  %cmp3 = icmp slt i32 %4, %sub
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %7 = load i32, i32* %i, align 4
  %8 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %8, i32 0, i32 %7
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %9 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.27.672, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %9, i8* %10, i8* %arraydecay)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %12 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.28.673, i32 0, i32 0
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %12, i8* %13)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @prune_match(%struct.Connector_struct* %a, %struct.Connector_struct* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %b.addr = alloca %struct.Connector_struct*, align 4
  %a.addr = alloca %struct.Connector_struct*, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.Connector_struct* %b, %struct.Connector_struct** %b.addr, align 4
  store %struct.Connector_struct* %a, %struct.Connector_struct** %a.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %b.addr, align 4
  %label1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 0
  %3 = load i16, i16* %label1, align 4
  %conv2 = sext i16 %3 to i32
  %cmp = icmp ne i32 %conv, %conv2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 2
  %5 = load i8, i8* %priority, align 4
  %conv4 = sext i8 %5 to i32
  store i32 %conv4, i32* %x, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %b.addr, align 4
  %priority5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 2
  %7 = load i8, i8* %priority5, align 4
  %conv6 = sext i8 %7 to i32
  store i32 %conv6, i32* %y, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 5
  %9 = load i8*, i8** %string, align 4
  store i8* %9, i8** %s, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %b.addr, align 4
  %string7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 5
  %11 = load i8*, i8** %string7, align 4
  store i8* %11, i8** %t, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end17, %if.end
  %12 = load i8*, i8** %s, align 4
  %13 = load i8, i8* %12, align 1
  %conv8 = sext i8 %13 to i32
  %call = call i32 @isupper_Package(i32 %conv8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %14 = load i8*, i8** %t, align 4
  %15 = load i8, i8* %14, align 1
  %conv9 = sext i8 %15 to i32
  %call10 = call i32 @isupper_Package(i32 %conv9)
  %tobool11 = icmp ne i32 %call10, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %16 = phi i1 [ true, %while.cond ], [ %tobool11, %lor.rhs ]
  br i1 %16, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %17 = load i8*, i8** %s, align 4
  %18 = load i8, i8* %17, align 1
  %conv12 = sext i8 %18 to i32
  %19 = load i8*, i8** %t, align 4
  %20 = load i8, i8* %19, align 1
  %conv13 = sext i8 %20 to i32
  %cmp14 = icmp ne i32 %conv12, %conv13
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end17:                                         ; preds = %while.body
  %21 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  %22 = load i8*, i8** %t, align 4
  %incdec.ptr18 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr18, i8** %t, align 4
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %23 = load i32, i32* %x, align 4
  %cmp19 = icmp eq i32 %23, 0
  br i1 %cmp19, label %land.lhs.true, label %if.else88

land.lhs.true:                                    ; preds = %while.end
  %24 = load i32, i32* %y, align 4
  %cmp21 = icmp eq i32 %24, 0
  br i1 %cmp21, label %if.then23, label %if.else88

if.then23:                                        ; preds = %land.lhs.true
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %string24 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 5
  %26 = load i8*, i8** %string24, align 4
  %27 = load i8, i8* %26, align 1
  %conv25 = sext i8 %27 to i32
  %cmp26 = icmp eq i32 %conv25, 83
  br i1 %cmp26, label %land.lhs.true28, label %if.end58

land.lhs.true28:                                  ; preds = %if.then23
  %28 = load i8*, i8** %s, align 4
  %29 = load i8, i8* %28, align 1
  %conv29 = sext i8 %29 to i32
  %cmp30 = icmp eq i32 %conv29, 115
  br i1 %cmp30, label %land.lhs.true35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true28
  %30 = load i8*, i8** %s, align 4
  %31 = load i8, i8* %30, align 1
  %conv32 = sext i8 %31 to i32
  %cmp33 = icmp eq i32 %conv32, 112
  br i1 %cmp33, label %land.lhs.true35, label %if.end58

land.lhs.true35:                                  ; preds = %lor.lhs.false, %land.lhs.true28
  %32 = load i8*, i8** %t, align 4
  %33 = load i8, i8* %32, align 1
  %conv36 = sext i8 %33 to i32
  %cmp37 = icmp eq i32 %conv36, 112
  br i1 %cmp37, label %land.lhs.true43, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %land.lhs.true35
  %34 = load i8*, i8** %t, align 4
  %35 = load i8, i8* %34, align 1
  %conv40 = sext i8 %35 to i32
  %cmp41 = icmp eq i32 %conv40, 115
  br i1 %cmp41, label %land.lhs.true43, label %if.end58

land.lhs.true43:                                  ; preds = %lor.lhs.false39, %land.lhs.true35
  %36 = load i8*, i8** %s, align 4
  %add.ptr = getelementptr inbounds i8, i8* %36, i32 -1
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %string44 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 5
  %38 = load i8*, i8** %string44, align 4
  %cmp45 = icmp eq i8* %add.ptr, %38
  br i1 %cmp45, label %if.then57, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %land.lhs.true43
  %39 = load i8*, i8** %s, align 4
  %add.ptr48 = getelementptr inbounds i8, i8* %39, i32 -2
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %a.addr, align 4
  %string49 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %40, i32 0, i32 5
  %41 = load i8*, i8** %string49, align 4
  %cmp50 = icmp eq i8* %add.ptr48, %41
  br i1 %cmp50, label %land.lhs.true52, label %if.end58

land.lhs.true52:                                  ; preds = %lor.lhs.false47
  %42 = load i8*, i8** %s, align 4
  %add.ptr53 = getelementptr inbounds i8, i8* %42, i32 -1
  %43 = load i8, i8* %add.ptr53, align 1
  %conv54 = sext i8 %43 to i32
  %cmp55 = icmp eq i32 %conv54, 73
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %land.lhs.true52, %land.lhs.true43
  store i32 1, i32* %retval, align 4
  br label %return

if.end58:                                         ; preds = %land.lhs.true52, %lor.lhs.false47, %lor.lhs.false39, %lor.lhs.false, %if.then23
  br label %while.cond59

while.cond59:                                     ; preds = %if.end86, %if.end58
  %44 = load i8*, i8** %s, align 4
  %45 = load i8, i8* %44, align 1
  %conv60 = sext i8 %45 to i32
  %cmp61 = icmp ne i32 %conv60, 0
  br i1 %cmp61, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond59
  %46 = load i8*, i8** %t, align 4
  %47 = load i8, i8* %46, align 1
  %conv63 = sext i8 %47 to i32
  %cmp64 = icmp ne i32 %conv63, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond59
  %48 = phi i1 [ false, %while.cond59 ], [ %cmp64, %land.rhs ]
  br i1 %48, label %while.body66, label %while.end87

while.body66:                                     ; preds = %land.end
  %49 = load i8*, i8** %s, align 4
  %50 = load i8, i8* %49, align 1
  %conv67 = sext i8 %50 to i32
  %cmp68 = icmp eq i32 %conv67, 42
  br i1 %cmp68, label %if.then83, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %while.body66
  %51 = load i8*, i8** %t, align 4
  %52 = load i8, i8* %51, align 1
  %conv71 = sext i8 %52 to i32
  %cmp72 = icmp eq i32 %conv71, 42
  br i1 %cmp72, label %if.then83, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %lor.lhs.false70
  %53 = load i8*, i8** %s, align 4
  %54 = load i8, i8* %53, align 1
  %conv75 = sext i8 %54 to i32
  %55 = load i8*, i8** %t, align 4
  %56 = load i8, i8* %55, align 1
  %conv76 = sext i8 %56 to i32
  %cmp77 = icmp eq i32 %conv75, %conv76
  br i1 %cmp77, label %land.lhs.true79, label %if.else

land.lhs.true79:                                  ; preds = %lor.lhs.false74
  %57 = load i8*, i8** %s, align 4
  %58 = load i8, i8* %57, align 1
  %conv80 = sext i8 %58 to i32
  %cmp81 = icmp ne i32 %conv80, 94
  br i1 %cmp81, label %if.then83, label %if.else

if.then83:                                        ; preds = %land.lhs.true79, %lor.lhs.false70, %while.body66
  %59 = load i8*, i8** %s, align 4
  %incdec.ptr84 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %incdec.ptr84, i8** %s, align 4
  %60 = load i8*, i8** %t, align 4
  %incdec.ptr85 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %incdec.ptr85, i8** %t, align 4
  br label %if.end86

if.else:                                          ; preds = %land.lhs.true79, %lor.lhs.false74
  store i32 0, i32* %retval, align 4
  br label %return

if.end86:                                         ; preds = %if.then83
  br label %while.cond59

while.end87:                                      ; preds = %land.end
  store i32 1, i32* %retval, align 4
  br label %return

if.else88:                                        ; preds = %land.lhs.true, %while.end
  %61 = load i32, i32* %x, align 4
  %cmp89 = icmp eq i32 %61, 1
  br i1 %cmp89, label %land.lhs.true91, label %if.else123

land.lhs.true91:                                  ; preds = %if.else88
  %62 = load i32, i32* %y, align 4
  %cmp92 = icmp eq i32 %62, 2
  br i1 %cmp92, label %if.then94, label %if.else123

if.then94:                                        ; preds = %land.lhs.true91
  br label %while.cond95

while.cond95:                                     ; preds = %if.end121, %if.then94
  %63 = load i8*, i8** %s, align 4
  %64 = load i8, i8* %63, align 1
  %conv96 = sext i8 %64 to i32
  %cmp97 = icmp ne i32 %conv96, 0
  br i1 %cmp97, label %land.rhs99, label %land.end103

land.rhs99:                                       ; preds = %while.cond95
  %65 = load i8*, i8** %t, align 4
  %66 = load i8, i8* %65, align 1
  %conv100 = sext i8 %66 to i32
  %cmp101 = icmp ne i32 %conv100, 0
  br label %land.end103

land.end103:                                      ; preds = %land.rhs99, %while.cond95
  %67 = phi i1 [ false, %while.cond95 ], [ %cmp101, %land.rhs99 ]
  br i1 %67, label %while.body104, label %while.end122

while.body104:                                    ; preds = %land.end103
  %68 = load i8*, i8** %s, align 4
  %69 = load i8, i8* %68, align 1
  %conv105 = sext i8 %69 to i32
  %70 = load i8*, i8** %t, align 4
  %71 = load i8, i8* %70, align 1
  %conv106 = sext i8 %71 to i32
  %cmp107 = icmp eq i32 %conv105, %conv106
  br i1 %cmp107, label %if.then117, label %lor.lhs.false109

lor.lhs.false109:                                 ; preds = %while.body104
  %72 = load i8*, i8** %s, align 4
  %73 = load i8, i8* %72, align 1
  %conv110 = sext i8 %73 to i32
  %cmp111 = icmp eq i32 %conv110, 42
  br i1 %cmp111, label %if.then117, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %lor.lhs.false109
  %74 = load i8*, i8** %t, align 4
  %75 = load i8, i8* %74, align 1
  %conv114 = sext i8 %75 to i32
  %cmp115 = icmp eq i32 %conv114, 94
  br i1 %cmp115, label %if.then117, label %if.else120

if.then117:                                       ; preds = %lor.lhs.false113, %lor.lhs.false109, %while.body104
  %76 = load i8*, i8** %s, align 4
  %incdec.ptr118 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr118, i8** %s, align 4
  %77 = load i8*, i8** %t, align 4
  %incdec.ptr119 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr119, i8** %t, align 4
  br label %if.end121

if.else120:                                       ; preds = %lor.lhs.false113
  store i32 0, i32* %retval, align 4
  br label %return

if.end121:                                        ; preds = %if.then117
  br label %while.cond95

while.end122:                                     ; preds = %land.end103
  store i32 1, i32* %retval, align 4
  br label %return

if.else123:                                       ; preds = %land.lhs.true91, %if.else88
  %78 = load i32, i32* %y, align 4
  %cmp124 = icmp eq i32 %78, 1
  br i1 %cmp124, label %land.lhs.true126, label %if.else158

land.lhs.true126:                                 ; preds = %if.else123
  %79 = load i32, i32* %x, align 4
  %cmp127 = icmp eq i32 %79, 2
  br i1 %cmp127, label %if.then129, label %if.else158

if.then129:                                       ; preds = %land.lhs.true126
  br label %while.cond130

while.cond130:                                    ; preds = %if.end156, %if.then129
  %80 = load i8*, i8** %s, align 4
  %81 = load i8, i8* %80, align 1
  %conv131 = sext i8 %81 to i32
  %cmp132 = icmp ne i32 %conv131, 0
  br i1 %cmp132, label %land.rhs134, label %land.end138

land.rhs134:                                      ; preds = %while.cond130
  %82 = load i8*, i8** %t, align 4
  %83 = load i8, i8* %82, align 1
  %conv135 = sext i8 %83 to i32
  %cmp136 = icmp ne i32 %conv135, 0
  br label %land.end138

land.end138:                                      ; preds = %land.rhs134, %while.cond130
  %84 = phi i1 [ false, %while.cond130 ], [ %cmp136, %land.rhs134 ]
  br i1 %84, label %while.body139, label %while.end157

while.body139:                                    ; preds = %land.end138
  %85 = load i8*, i8** %s, align 4
  %86 = load i8, i8* %85, align 1
  %conv140 = sext i8 %86 to i32
  %87 = load i8*, i8** %t, align 4
  %88 = load i8, i8* %87, align 1
  %conv141 = sext i8 %88 to i32
  %cmp142 = icmp eq i32 %conv140, %conv141
  br i1 %cmp142, label %if.then152, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %while.body139
  %89 = load i8*, i8** %t, align 4
  %90 = load i8, i8* %89, align 1
  %conv145 = sext i8 %90 to i32
  %cmp146 = icmp eq i32 %conv145, 42
  br i1 %cmp146, label %if.then152, label %lor.lhs.false148

lor.lhs.false148:                                 ; preds = %lor.lhs.false144
  %91 = load i8*, i8** %s, align 4
  %92 = load i8, i8* %91, align 1
  %conv149 = sext i8 %92 to i32
  %cmp150 = icmp eq i32 %conv149, 94
  br i1 %cmp150, label %if.then152, label %if.else155

if.then152:                                       ; preds = %lor.lhs.false148, %lor.lhs.false144, %while.body139
  %93 = load i8*, i8** %s, align 4
  %incdec.ptr153 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %incdec.ptr153, i8** %s, align 4
  %94 = load i8*, i8** %t, align 4
  %incdec.ptr154 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %incdec.ptr154, i8** %t, align 4
  br label %if.end156

if.else155:                                       ; preds = %lor.lhs.false148
  store i32 0, i32* %retval, align 4
  br label %return

if.end156:                                        ; preds = %if.then152
  br label %while.cond130

while.end157:                                     ; preds = %land.end138
  store i32 1, i32* %retval, align 4
  br label %return

if.else158:                                       ; preds = %land.lhs.true126, %if.else123
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else158, %while.end157, %if.else155, %while.end122, %if.else120, %while.end87, %if.else, %if.then57, %if.then16, %if.then
  %95 = load i32, i32* %retval, align 4
  ret i32 %95
}

; Function Attrs: noinline nounwind
define void @free_S() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @s_table_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %3, i32 %2
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body, %for.body
  %5 = load i32, i32* %i, align 4
  %6 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx2 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %6, i32 %5
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx2, align 4
  call void @free_connectors(%struct.Connector_struct* %7)
  %8 = load i32, i32* %i, align 4
  %9 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx3 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %9, i32 %8
  store %struct.Connector_struct* null, %struct.Connector_struct** %arrayidx3, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then, %if.end, %if.then
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @hash_S(%struct.Connector_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Connector_struct*, align 4
  %s = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  store i32 %conv, i32* %i, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 5
  %3 = load i8*, i8** %string, align 4
  store i8* %3, i8** %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i8*, i8** %s, align 4
  %5 = load i8, i8* %4, align 1
  %conv1 = sext i8 %5 to i32
  %call = call i32 @isupper_Package(i32 %conv1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %i, align 4
  %shl = shl i32 %7, 1
  %add = add nsw i32 %6, %shl
  %8 = load i8*, i8** %s, align 4
  %9 = load i8, i8* %8, align 1
  %conv2 = sext i8 %9 to i32
  %10 = load i32, i32* %i, align 4
  %add3 = add nsw i32 %conv2, %10
  %and = and i32 %add3, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %11 = load i32, i32* %arrayidx, align 4
  %add4 = add i32 %add, %11
  store i32 %add4, i32* %i, align 4
  %12 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* @s_table_size, align 4
  %sub = sub nsw i32 %14, 1
  %and5 = and i32 %13, %sub
  ret i32 %and5
}

; Function Attrs: noinline nounwind
define void @insert_S(%struct.Connector_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Connector_struct*, align 4
  %h = alloca i32, align 4
  %e = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @hash_S(%struct.Connector_struct* %0)
  store i32 %call, i32* %h, align 4
  %1 = load i32, i32* %h, align 4
  %2 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %2, i32 %1
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx, align 4
  store %struct.Connector_struct* %3, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp = icmp ne %struct.Connector_struct* %4, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 5
  %6 = load i8*, i8** %string, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 5
  %8 = load i8*, i8** %string1, align 4
  %call2 = call i32 @strcmp_Package(i8* %8, i8* %6)
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 0
  %10 = load i16, i16* %label, align 4
  %conv = sext i16 %10 to i32
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %label4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 0
  %12 = load i16, i16* %label4, align 4
  %conv5 = sext i16 %12 to i32
  %cmp6 = icmp eq i32 %conv, %conv5
  br i1 %cmp6, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %land.lhs.true
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 2
  %14 = load i8, i8* %priority, align 4
  %conv9 = sext i8 %14 to i32
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %priority10 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %15, i32 0, i32 2
  %16 = load i8, i8* %priority10, align 4
  %conv11 = sext i8 %16 to i32
  %cmp12 = icmp eq i32 %conv9, %conv11
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true8
  br label %return

if.end:                                           ; preds = %land.lhs.true8, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call i8* @xalloc(i32 16)
  %19 = bitcast i8* %call14 to %struct.Connector_struct*
  store %struct.Connector_struct* %19, %struct.Connector_struct** %e, align 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %22 = bitcast %struct.Connector_struct* %20 to i8*
  %23 = bitcast %struct.Connector_struct* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %22, i8* %23, i32 16, i32 4, i1 false)
  %24 = load i32, i32* %h, align 4
  %25 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx15 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %25, i32 %24
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx15, align 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next16 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 4
  store %struct.Connector_struct* %26, %struct.Connector_struct** %next16, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %29 = load i32, i32* %h, align 4
  %30 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx17 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %30, i32 %29
  store %struct.Connector_struct* %28, %struct.Connector_struct** %arrayidx17, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @zero_S() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @s_table_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %3, i32 %2
  store %struct.Connector_struct* null, %struct.Connector_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @init_S(%struct.Connector_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Connector_struct*, align 4
  %h = alloca i32, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %cmp = icmp ne %struct.Connector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @hash_S(%struct.Connector_struct* %1)
  store i32 %call, i32* %h, align 4
  %call1 = call i8* @xalloc(i32 16)
  %2 = bitcast i8* %call1 to %struct.Connector_struct*
  store %struct.Connector_struct* %2, %struct.Connector_struct** %c1, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %5 = bitcast %struct.Connector_struct* %3 to i8*
  %6 = bitcast %struct.Connector_struct* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %5, i8* %6, i32 16, i32 4, i1 false)
  %7 = load i32, i32* %h, align 4
  %8 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %8, i32 %7
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %next, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %12 = load i32, i32* %h, align 4
  %13 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx2 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %13, i32 %12
  store %struct.Connector_struct* %11, %struct.Connector_struct** %arrayidx2, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %next3, align 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %c.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @matches_S(%struct.Connector_struct* %c, i32 %dir) #0 {
entry:
  %retval = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %h = alloca i32, align 4
  %e = alloca %struct.Connector_struct*, align 4
  store i32 %dir, i32* %dir.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @hash_S(%struct.Connector_struct* %0)
  store i32 %call, i32* %h, align 4
  %1 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %1, 45
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %h, align 4
  %3 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %3, i32 %2
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx, align 4
  store %struct.Connector_struct* %4, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp1 = icmp ne %struct.Connector_struct* %5, null
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %call2 = call i32 @prune_match(%struct.Connector_struct* %7, %struct.Connector_struct* %6)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.then3, label %if.end

if.then3:                                         ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end15

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %h, align 4
  %11 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx4 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %11, i32 %10
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx4, align 4
  store %struct.Connector_struct* %12, %struct.Connector_struct** %e, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc12, %if.else
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp6 = icmp ne %struct.Connector_struct* %13, null
  br i1 %cmp6, label %for.body7, label %for.end14

for.body7:                                        ; preds = %for.cond5
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call8 = call i32 @prune_match(%struct.Connector_struct* %15, %struct.Connector_struct* %14)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %for.body7
  store i32 1, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %for.body7
  br label %for.inc12

for.inc12:                                        ; preds = %if.end11
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %next13, align 4
  store %struct.Connector_struct* %17, %struct.Connector_struct** %e, align 4
  br label %for.cond5

for.end14:                                        ; preds = %for.cond5
  br label %if.end15

if.end15:                                         ; preds = %for.end14, %for.end
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end15, %if.then10, %if.then3
  %18 = load i32, i32* %retval, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind
define void @clean_up(i32 %w) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %w.addr = alloca i32, align 4
  %head_disjunct = alloca %struct.Disjunct_struct, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %w.addr, align 4
  store %struct.Disjunct_struct* %head_disjunct, %struct.Disjunct_struct** %d, align 4
  %0 = load i32, i32* %w.addr, align 4
  %1 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %1, i32 0, i32 %0
  %d2 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 0
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %next, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next3 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next3, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next4 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 0
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next4, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp5 = icmp eq %struct.Connector_struct* %8, null
  br i1 %cmp5, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body, %while.body
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 0
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next6, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 5
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp7 = icmp eq %struct.Connector_struct* %11, null
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 0
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next8, align 4
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %d1, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next9 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 0
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next9, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next10 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 0
  store %struct.Disjunct_struct* %15, %struct.Disjunct_struct** %next10, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %18 = bitcast %struct.Disjunct_struct* %17 to i8*
  call void @xfree(i8* %18, i32 20)
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %while.body, %land.lhs.true, %while.body
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 0
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next11, align 4
  store %struct.Disjunct_struct* %20, %struct.Disjunct_struct** %d, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %next12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %head_disjunct, i32 0, i32 0
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next12, align 4
  %22 = load i32, i32* %w.addr, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 2
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %d14, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i32 @count_disjuncts(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %count = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %count, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load i32, i32* %count, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %count, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 0
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %3, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %4 = load i32, i32* %count, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %4, i32* %struct.BigStruct_32
  ret i32 %4
}

; Function Attrs: noinline nounwind
define i32 @count_disjuncts_in_sentence() #0 {
entry:
  %w = alloca i32, align 4
  %count = alloca i32, align 4
  store i32 0, i32* %count, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 93, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %5 = load i32, i32* %count, align 4
  %add = add nsw i32 %5, %load_struct.BigStruct_32
  store i32 %add, i32* %count, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %6 = load i32, i32* %w, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %7 = load i32, i32* %count, align 4
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %7, i32* %struct.BigStruct_321
  ret i32 %7
}

; Function Attrs: noinline nounwind
define void @prune() #0 {
entry:
  %N_deleted = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %e = alloca %struct.Connector_struct*, align 4
  %w = alloca i32, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 143, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %call1 = call i32 @next_power_of_two_up(i32 %load_struct.BigStruct_32)
  store i32 %call1, i32* @s_table_size, align 4
  %0 = load i32, i32* @s_table_size, align 4
  %mul = mul i32 %0, 4
  %call2 = call i8* @xalloc(i32 %mul)
  %1 = bitcast i8* %call2 to %struct.Connector_struct**
  store %struct.Connector_struct** %1, %struct.Connector_struct*** @table.676, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 142, i32 10)
  store i32 1, i32* %N_deleted, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end99, %entry, %if.end99, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc36, %for.cond, %for.inc36, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end38

for.body:                                         ; preds = %for.cond3, %for.cond3
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %5, i32 0, i32 %4
  %d4 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d4, align 4
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %d, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc18, %for.body, %for.inc18, %for.body
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp6 = icmp ne %struct.Disjunct_struct* %7, null
  br i1 %cmp6, label %for.body7, label %for.end20

for.body7:                                        ; preds = %for.cond5, %for.cond5
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %8, i32 0, i32 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %e, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc, %for.body7, %for.inc, %for.body7
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp9 = icmp ne %struct.Connector_struct* %10, null
  br i1 %cmp9, label %for.body10, label %for.end

for.body10:                                       ; preds = %for.cond8, %for.cond8
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %call11 = call i32 @matches_S(%struct.Connector_struct* %11, i32 45)
  %tobool = icmp ne i32 %call11, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body10, %for.body10
  br label %for.end

if.end:                                           ; preds = %for.body10, %for.body10
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 4
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %13, %struct.Connector_struct** %e, align 4
  br label %for.cond8

for.end:                                          ; preds = %if.then, %for.cond8, %if.then, %for.cond8
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %14, null
  br i1 %cmp12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %for.end, %for.end
  %15 = load i32, i32* %N_deleted, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %N_deleted, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left14 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %left14, align 4
  call void @free_connectors(%struct.Connector_struct* %17)
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 5
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  call void @free_connectors(%struct.Connector_struct* %19)
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right15 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right15, align 4
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left16, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %for.end, %if.then13, %for.end
  br label %for.inc18

for.inc18:                                        ; preds = %if.end17, %if.end17
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next19 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 0
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next19, align 4
  store %struct.Disjunct_struct* %23, %struct.Disjunct_struct** %d, align 4
  br label %for.cond5

for.end20:                                        ; preds = %for.cond5, %for.cond5
  %24 = load i32, i32* %w, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %24, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 24, i32 0)
  %25 = load i32, i32* %w, align 4
  %26 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx21 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %26, i32 0, i32 %25
  %d22 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx21, i32 0, i32 2
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d22, align 4
  store %struct.Disjunct_struct* %27, %struct.Disjunct_struct** %d, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc33, %for.end20, %for.inc33, %for.end20
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp24 = icmp ne %struct.Disjunct_struct* %28, null
  br i1 %cmp24, label %for.body25, label %for.end35

for.body25:                                       ; preds = %for.cond23, %for.cond23
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right26 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %29, i32 0, i32 5
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %right26, align 4
  store %struct.Connector_struct* %30, %struct.Connector_struct** %e, align 4
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc30, %for.body25, %for.inc30, %for.body25
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp28 = icmp ne %struct.Connector_struct* %31, null
  br i1 %cmp28, label %for.body29, label %for.end32

for.body29:                                       ; preds = %for.cond27, %for.cond27
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  call void @insert_S(%struct.Connector_struct* %32)
  br label %for.inc30

for.inc30:                                        ; preds = %for.body29, %for.body29
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next31 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %33, i32 0, i32 4
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %next31, align 4
  store %struct.Connector_struct* %34, %struct.Connector_struct** %e, align 4
  br label %for.cond27

for.end32:                                        ; preds = %for.cond27, %for.cond27
  br label %for.inc33

for.inc33:                                        ; preds = %for.end32, %for.end32
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next34 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 0
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next34, align 4
  store %struct.Disjunct_struct* %36, %struct.Disjunct_struct** %d, align 4
  br label %for.cond23

for.end35:                                        ; preds = %for.cond23, %for.cond23
  br label %for.inc36

for.inc36:                                        ; preds = %for.end35, %for.end35
  %37 = load i32, i32* %w, align 4
  %inc37 = add nsw i32 %37, 1
  store i32 %inc37, i32* %w, align 4
  br label %for.cond3

for.end38:                                        ; preds = %for.cond3, %for.cond3
  %38 = load i32, i32* @verbosity, align 4
  %cmp39 = icmp sgt i32 %38, 2
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; preds = %for.end38, %for.end38
  %39 = load i32, i32* %N_deleted, align 4
  %40 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.679, i32 0, i32 0
  %call41 = call i32 (i8*, ...) @printf(i8* %40, i32 %39)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %for.end38, %if.then40, %for.end38
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %41 = load i32, i32* %N_deleted, align 4
  %cmp43 = icmp eq i32 %41, 0
  br i1 %cmp43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.end42, %if.end42
  br label %for.end100

if.end45:                                         ; preds = %if.end42, %if.end42
  store i32 0, i32* %N_deleted, align 4
  %42 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %42, 1
  store i32 %sub, i32* %w, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc91, %if.end45, %for.inc91, %if.end45
  %43 = load i32, i32* %w, align 4
  %cmp47 = icmp sge i32 %43, 0
  br i1 %cmp47, label %for.body48, label %for.end92

for.body48:                                       ; preds = %for.cond46, %for.cond46
  %44 = load i32, i32* %w, align 4
  %45 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx49 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %45, i32 0, i32 %44
  %d50 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx49, i32 0, i32 2
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d50, align 4
  store %struct.Disjunct_struct* %46, %struct.Disjunct_struct** %d, align 4
  br label %for.cond51

for.cond51:                                       ; preds = %for.inc73, %for.body48, %for.inc73, %for.body48
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp52 = icmp ne %struct.Disjunct_struct* %47, null
  br i1 %cmp52, label %for.body53, label %for.end75

for.body53:                                       ; preds = %for.cond51, %for.cond51
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right54 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %48, i32 0, i32 5
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %right54, align 4
  store %struct.Connector_struct* %49, %struct.Connector_struct** %e, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc62, %for.body53, %for.inc62, %for.body53
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp56 = icmp ne %struct.Connector_struct* %50, null
  br i1 %cmp56, label %for.body57, label %for.end64

for.body57:                                       ; preds = %for.cond55, %for.cond55
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %call58 = call i32 @matches_S(%struct.Connector_struct* %51, i32 43)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end61, label %if.then60

if.then60:                                        ; preds = %for.body57, %for.body57
  br label %for.end64

if.end61:                                         ; preds = %for.body57, %for.body57
  br label %for.inc62

for.inc62:                                        ; preds = %if.end61, %if.end61
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next63 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %52, i32 0, i32 4
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %next63, align 4
  store %struct.Connector_struct* %53, %struct.Connector_struct** %e, align 4
  br label %for.cond55

for.end64:                                        ; preds = %if.then60, %for.cond55, %if.then60, %for.cond55
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp65 = icmp ne %struct.Connector_struct* %54, null
  br i1 %cmp65, label %if.then66, label %if.end72

if.then66:                                        ; preds = %for.end64, %for.end64
  %55 = load i32, i32* %N_deleted, align 4
  %inc67 = add nsw i32 %55, 1
  store i32 %inc67, i32* %N_deleted, align 4
  %56 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left68 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %56, i32 0, i32 4
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %left68, align 4
  call void @free_connectors(%struct.Connector_struct* %57)
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %58, i32 0, i32 5
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %right69, align 4
  call void @free_connectors(%struct.Connector_struct* %59)
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right70 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %60, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right70, align 4
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left71 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %61, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left71, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then66, %for.end64, %if.then66, %for.end64
  br label %for.inc73

for.inc73:                                        ; preds = %if.end72, %if.end72
  %62 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next74 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %62, i32 0, i32 0
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next74, align 4
  store %struct.Disjunct_struct* %63, %struct.Disjunct_struct** %d, align 4
  br label %for.cond51

for.end75:                                        ; preds = %for.cond51, %for.cond51
  %64 = load i32, i32* %w, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %64, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 24, i32 0)
  %65 = load i32, i32* %w, align 4
  %66 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx76 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %66, i32 0, i32 %65
  %d77 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx76, i32 0, i32 2
  %67 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d77, align 4
  store %struct.Disjunct_struct* %67, %struct.Disjunct_struct** %d, align 4
  br label %for.cond78

for.cond78:                                       ; preds = %for.inc88, %for.end75, %for.inc88, %for.end75
  %68 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp79 = icmp ne %struct.Disjunct_struct* %68, null
  br i1 %cmp79, label %for.body80, label %for.end90

for.body80:                                       ; preds = %for.cond78, %for.cond78
  %69 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left81 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %69, i32 0, i32 4
  %70 = load %struct.Connector_struct*, %struct.Connector_struct** %left81, align 4
  store %struct.Connector_struct* %70, %struct.Connector_struct** %e, align 4
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc85, %for.body80, %for.inc85, %for.body80
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp83 = icmp ne %struct.Connector_struct* %71, null
  br i1 %cmp83, label %for.body84, label %for.end87

for.body84:                                       ; preds = %for.cond82, %for.cond82
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  call void @insert_S(%struct.Connector_struct* %72)
  br label %for.inc85

for.inc85:                                        ; preds = %for.body84, %for.body84
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next86 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %73, i32 0, i32 4
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %next86, align 4
  store %struct.Connector_struct* %74, %struct.Connector_struct** %e, align 4
  br label %for.cond82

for.end87:                                        ; preds = %for.cond82, %for.cond82
  br label %for.inc88

for.inc88:                                        ; preds = %for.end87, %for.end87
  %75 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next89 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %75, i32 0, i32 0
  %76 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next89, align 4
  store %struct.Disjunct_struct* %76, %struct.Disjunct_struct** %d, align 4
  br label %for.cond78

for.end90:                                        ; preds = %for.cond78, %for.cond78
  br label %for.inc91

for.inc91:                                        ; preds = %for.end90, %for.end90
  %77 = load i32, i32* %w, align 4
  %dec = add nsw i32 %77, -1
  store i32 %dec, i32* %w, align 4
  br label %for.cond46

for.end92:                                        ; preds = %for.cond46, %for.cond46
  %78 = load i32, i32* @verbosity, align 4
  %cmp93 = icmp sgt i32 %78, 2
  br i1 %cmp93, label %if.then94, label %if.end96

if.then94:                                        ; preds = %for.end92, %for.end92
  %79 = load i32, i32* %N_deleted, align 4
  %80 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1.680, i32 0, i32 0
  %call95 = call i32 (i8*, ...) @printf(i8* %80, i32 %79)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %for.end92, %if.then94, %for.end92
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %81 = load i32, i32* %N_deleted, align 4
  %cmp97 = icmp eq i32 %81, 0
  br i1 %cmp97, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.end96, %if.end96
  br label %for.end100

if.end99:                                         ; preds = %if.end96, %if.end96
  store i32 0, i32* %N_deleted, align 4
  br label %for.cond

for.end100:                                       ; preds = %if.then98, %if.then44, %if.then98, %if.then44
  %82 = load i32, i32* @s_table_size, align 4
  %mul101 = mul i32 %82, 4
  %83 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %84 = bitcast %struct.Connector_struct** %83 to i8*
  call void @xfree(i8* %84, i32 %mul101)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @string_hash(i8* %s, i32 %i) #0 {
entry:
  %i.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i32 %i, i32* %i.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i.addr, align 4
  %3 = load i32, i32* %i.addr, align 4
  %shl = shl i32 %3, 1
  %add = add nsw i32 %2, %shl
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %6 = load i32, i32* %i.addr, align 4
  %add3 = add nsw i32 %conv2, %6
  %and = and i32 %add3, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %7 = load i32, i32* %arrayidx, align 4
  %add4 = add i32 %add, %7
  store i32 %add4, i32* %i.addr, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %i.addr, align 4
  %10 = load i32, i32* @dup_table_size, align 4
  %sub = sub nsw i32 %10, 1
  %and5 = and i32 %9, %sub
  ret i32 %and5
}

; Function Attrs: noinline nounwind
define i32 @old_hash_disjunct(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  %e = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %3 = load i32, i32* %i, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 5
  %5 = load i8*, i8** %string, align 4
  %call = call i32 @string_hash(i8* %5, i32 %3)
  store i32 %call, i32* %i, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %8, i32 0, i32 5
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %e, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc6, %for.end, %for.inc6, %for.end
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %10, null
  br i1 %cmp2, label %for.body3, label %for.end8

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %11 = load i32, i32* %i, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %string4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 5
  %13 = load i8*, i8** %string4, align 4
  %call5 = call i32 @string_hash(i8* %13, i32 %11)
  store i32 %call5, i32* %i, align 4
  br label %for.inc6

for.inc6:                                         ; preds = %for.body3, %for.body3
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %next7, align 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %e, align 4
  br label %for.cond1

for.end8:                                         ; preds = %for.cond1, %for.cond1
  %16 = load i32, i32* %i, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %string9 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 3
  %18 = load i8*, i8** %string9, align 4
  %call10 = call i32 @string_hash(i8* %18, i32 %16)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call10, i32* %struct.BigStruct_32
  ret i32 %call10
}

; Function Attrs: noinline nounwind
define i32 @connectors_equal_prune(%struct.Connector_struct* %c1, %struct.Connector_struct* %c2) #0 {
entry:
  %c2.addr = alloca %struct.Connector_struct*, align 4
  %c1.addr = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %c2, %struct.Connector_struct** %c2.addr, align 4
  store %struct.Connector_struct* %c1, %struct.Connector_struct** %c1.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %label1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 0
  %3 = load i16, i16* %label1, align 4
  %conv2 = sext i16 %3 to i32
  %cmp = icmp eq i32 %conv, %conv2
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 3
  %5 = load i8, i8* %multi, align 1
  %conv4 = sext i8 %5 to i32
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %multi5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 3
  %7 = load i8, i8* %multi5, align 1
  %conv6 = sext i8 %7 to i32
  %cmp7 = icmp eq i32 %conv4, %conv6
  br i1 %cmp7, label %land.lhs.true9, label %land.end

land.lhs.true9:                                   ; preds = %land.lhs.true
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 2
  %9 = load i8, i8* %priority, align 4
  %conv10 = sext i8 %9 to i32
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %priority11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 2
  %11 = load i8, i8* %priority11, align 4
  %conv12 = sext i8 %11 to i32
  %cmp13 = icmp eq i32 %conv10, %conv12
  br i1 %cmp13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true9
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c2.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 5
  %13 = load i8*, i8** %string, align 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %c1.addr, align 4
  %string15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 5
  %15 = load i8*, i8** %string15, align 4
  %call = call i32 @strcmp_Package(i8* %15, i8* %13)
  %cmp16 = icmp eq i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true9, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true9 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp16, %land.rhs ]
  %land.ext = zext i1 %16 to i32
  ret i32 %land.ext
}

; Function Attrs: noinline nounwind
define i32 @disjuncts_equal(%struct.Disjunct_struct* %d1, %struct.Disjunct_struct* %d2) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  %load_struct.BigStruct_12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_12
  %retval = alloca i32, align 4
  %d2.addr = alloca %struct.Disjunct_struct*, align 4
  %d1.addr = alloca %struct.Disjunct_struct*, align 4
  %e1 = alloca %struct.Connector_struct*, align 4
  %e2 = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_12, %struct.Disjunct_struct** %d2.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d1.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %e1, align 4
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %left1, align 4
  store %struct.Connector_struct* %3, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp = icmp ne %struct.Connector_struct* %4, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond, %while.cond
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %5, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond, %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end, %land.end
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call = call i32 @connectors_equal_prune(%struct.Connector_struct* %8, %struct.Connector_struct* %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %while.body, %while.body
  br label %while.end

if.end:                                           ; preds = %while.body, %while.body
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %e1, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %next3, align 4
  store %struct.Connector_struct* %12, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then, %land.end, %if.then, %land.end
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %13, null
  br i1 %cmp4, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end, %while.end
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp5 = icmp ne %struct.Connector_struct* %14, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false, %while.end, %lor.lhs.false, %while.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 5
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %16, %struct.Connector_struct** %e1, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %right8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 5
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %right8, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.cond9:                                      ; preds = %if.end18, %if.end7, %if.end18, %if.end7
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp10 = icmp ne %struct.Connector_struct* %19, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond9, %while.cond9
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %20, null
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond9, %land.rhs11, %while.cond9
  %21 = phi i1 [ false, %while.cond9 ], [ %cmp12, %land.rhs11 ]
  br i1 %21, label %while.body14, label %while.end21

while.body14:                                     ; preds = %land.end13, %land.end13
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call15 = call i32 @connectors_equal_prune(%struct.Connector_struct* %23, %struct.Connector_struct* %22)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %while.body14, %while.body14
  br label %while.end21

if.end18:                                         ; preds = %while.body14, %while.body14
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %next19, align 4
  store %struct.Connector_struct* %25, %struct.Connector_struct** %e1, align 4
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next20 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %next20, align 4
  store %struct.Connector_struct* %27, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.end21:                                      ; preds = %if.then17, %land.end13, %if.then17, %land.end13
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp22 = icmp ne %struct.Connector_struct* %28, null
  br i1 %cmp22, label %if.then25, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %while.end21, %while.end21
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp24 = icmp ne %struct.Connector_struct* %29, null
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %lor.lhs.false23, %while.end21, %lor.lhs.false23, %while.end21
  store i32 0, i32* %retval, align 4
  br label %return

if.end26:                                         ; preds = %lor.lhs.false23, %lor.lhs.false23
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 3
  %31 = load i8*, i8** %string, align 4
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %string27 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %32, i32 0, i32 3
  %33 = load i8*, i8** %string27, align 4
  %call28 = call i32 @strcmp_Package(i8* %33, i8* %31)
  %cmp29 = icmp eq i32 %call28, 0
  %conv = zext i1 %cmp29 to i32
  store i32 %conv, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then25, %if.then6, %if.end26, %if.then25, %if.then6
  %34 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %34, i32* %struct.BigStruct_32
  ret i32 %34
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @eliminate_duplicate_disjuncts(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  %h = alloca i32, align 4
  %count = alloca i32, align 4
  %dn = alloca %struct.Disjunct_struct*, align 4
  %dx = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %count, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_44 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %struct.BigStruct_44
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 93, i32 0)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %mul = mul nsw i32 2, %load_struct.BigStruct_325
  %call1 = call i32 @next_power_of_two_up(i32 %mul)
  store i32 %call1, i32* @dup_table_size, align 4
  %1 = load i32, i32* @dup_table_size, align 4
  %mul2 = mul i32 %1, 4
  %call3 = call i8* @xalloc(i32 %mul2)
  %2 = bitcast i8* %call3 to %struct.Disjunct_struct**
  store %struct.Disjunct_struct** %2, %struct.Disjunct_struct*** @dup_table, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* @dup_table_size, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %5 = load i32, i32* %i, align 4
  %6 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %6, i32 %5
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  br label %while.cond

while.cond:                                       ; preds = %if.end29, %for.end, %if.end29, %for.end
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp4 = icmp ne %struct.Disjunct_struct* %8, null
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 0
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %10, %struct.Disjunct_struct** %dn, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %struct.BigStruct_42
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 42, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  store i32 %load_struct.BigStruct_323, i32* %h, align 4
  %12 = load i32, i32* %h, align 4
  %13 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx6 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %13, i32 %12
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx6, align 4
  store %struct.Disjunct_struct* %14, %struct.Disjunct_struct** %dx, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc11, %while.body, %for.inc11, %while.body
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cmp8 = icmp ne %struct.Disjunct_struct* %15, null
  br i1 %cmp8, label %for.body9, label %for.end13

for.body9:                                        ; preds = %for.cond7, %for.cond7
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %struct.BigStruct_41
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  store %struct.Disjunct_struct* %16, %struct.Disjunct_struct** %struct.BigStruct_12
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 25, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body9, %for.body9
  br label %for.end13

if.end:                                           ; preds = %for.body9, %for.body9
  br label %for.inc11

for.inc11:                                        ; preds = %if.end, %if.end
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %next12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 0
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next12, align 4
  store %struct.Disjunct_struct* %19, %struct.Disjunct_struct** %dx, align 4
  br label %for.cond7

for.end13:                                        ; preds = %if.then, %for.cond7, %if.then, %for.cond7
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cmp14 = icmp eq %struct.Disjunct_struct* %20, null
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; preds = %for.end13, %for.end13
  %21 = load i32, i32* %h, align 4
  %22 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx16 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %22, i32 %21
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx16, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next17 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 0
  store %struct.Disjunct_struct* %23, %struct.Disjunct_struct** %next17, align 4
  %25 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %26 = load i32, i32* %h, align 4
  %27 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx18 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %27, i32 %26
  store %struct.Disjunct_struct* %25, %struct.Disjunct_struct** %arrayidx18, align 4
  br label %if.end29

if.else:                                          ; preds = %for.end13, %for.end13
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next19 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %28, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next19, align 4
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %29, i32 0, i32 1
  %30 = load i16, i16* %cost, align 4
  %conv = sext i16 %30 to i32
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cost20 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 1
  %32 = load i16, i16* %cost20, align 4
  %conv21 = sext i16 %32 to i32
  %cmp22 = icmp slt i32 %conv, %conv21
  br i1 %cmp22, label %if.then24, label %if.end27

if.then24:                                        ; preds = %if.else, %if.else
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cost25 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %33, i32 0, i32 1
  %34 = load i16, i16* %cost25, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cost26 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 1
  store i16 %34, i16* %cost26, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then24, %if.else, %if.then24, %if.else
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %36)
  %37 = load i32, i32* %count, align 4
  %inc28 = add nsw i32 %37, 1
  store i32 %inc28, i32* %count, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %if.then15, %if.end27, %if.then15
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  store %struct.Disjunct_struct* %38, %struct.Disjunct_struct** %d.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  store i32 0, i32* %i, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc43, %while.end, %for.inc43, %while.end
  %39 = load i32, i32* %i, align 4
  %40 = load i32, i32* @dup_table_size, align 4
  %cmp31 = icmp slt i32 %39, %40
  br i1 %cmp31, label %for.body33, label %for.end45

for.body33:                                       ; preds = %for.cond30, %for.cond30
  %41 = load i32, i32* %i, align 4
  %42 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx34 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %42, i32 %41
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx34, align 4
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %dn, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc41, %for.body33, %for.inc41, %for.body33
  %44 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  %cmp36 = icmp ne %struct.Disjunct_struct* %44, null
  br i1 %cmp36, label %for.body38, label %for.end42

for.body38:                                       ; preds = %for.cond35, %for.cond35
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  %next39 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 0
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next39, align 4
  store %struct.Disjunct_struct* %46, %struct.Disjunct_struct** %dx, align 4
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  %next40 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %48, i32 0, i32 0
  store %struct.Disjunct_struct* %47, %struct.Disjunct_struct** %next40, align 4
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  store %struct.Disjunct_struct* %49, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.inc41

for.inc41:                                        ; preds = %for.body38, %for.body38
  %50 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %50, %struct.Disjunct_struct** %dn, align 4
  br label %for.cond35

for.end42:                                        ; preds = %for.cond35, %for.cond35
  br label %for.inc43

for.inc43:                                        ; preds = %for.end42, %for.end42
  %51 = load i32, i32* %i, align 4
  %inc44 = add nsw i32 %51, 1
  store i32 %inc44, i32* %i, align 4
  br label %for.cond30

for.end45:                                        ; preds = %for.cond30, %for.cond30
  %52 = load i32, i32* @dup_table_size, align 4
  %mul46 = mul i32 %52, 4
  %53 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %54 = bitcast %struct.Disjunct_struct** %53 to i8*
  call void @xfree(i8* %54, i32 %mul46)
  %55 = load i32, i32* @verbosity, align 4
  %cmp47 = icmp sgt i32 %55, 2
  br i1 %cmp47, label %land.lhs.true, label %if.end53

land.lhs.true:                                    ; preds = %for.end45, %for.end45
  %56 = load i32, i32* %count, align 4
  %cmp49 = icmp ne i32 %56, 0
  br i1 %cmp49, label %if.then51, label %if.end53

if.then51:                                        ; preds = %land.lhs.true, %land.lhs.true
  %57 = load i32, i32* %count, align 4
  %58 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.2.683, i32 0, i32 0
  %call52 = call i32 (i8*, ...) @printf(i8* %58, i32 %57)
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %land.lhs.true, %for.end45, %if.then51, %land.lhs.true, %for.end45
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %59, %struct.Disjunct_struct** %struct.BigStruct_33
  ret %struct.Disjunct_struct* %59
}

; Function Attrs: noinline nounwind
define i32 @size_of_sentence_expressions() #0 {
entry:
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  %size = alloca i32, align 4
  store i32 0, i32* %size, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry, %for.inc5, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call i32 @size_of_expression(%struct.Exp_struct* %7)
  %8 = load i32, i32* %size, align 4
  %add = add nsw i32 %8, %call
  store i32 %add, i32* %size, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %for.body4
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  br label %for.inc5

for.inc5:                                         ; preds = %for.end, %for.end
  %11 = load i32, i32* %w, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end6:                                         ; preds = %for.cond, %for.cond
  %12 = load i32, i32* %size, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %12, i32* %struct.BigStruct_32
  ret i32 %12
}

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @purge_Exp(%struct.Exp_struct* %e) #0 {
entry:
  %retval = alloca %struct.Exp_struct*, align 4
  %e.addr = alloca %struct.Exp_struct*, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %0, i32 0, i32 0
  %1 = load i8, i8* %type, align 4
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 4
  %string = bitcast %union.anon* %u to i8**
  %3 = load i8*, i8** %string, align 4
  %cmp2 = icmp eq i8* %3, null
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %5 = bitcast %struct.Exp_struct* %4 to i8*
  call void @xfree(i8* %5, i32 8)
  store %struct.Exp_struct* null, %struct.Exp_struct** %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then
  %6 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  store %struct.Exp_struct* %6, %struct.Exp_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type5 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %7, i32 0, i32 0
  %8 = load i8, i8* %type5, align 4
  %conv6 = sext i8 %8 to i32
  %cmp7 = icmp eq i32 %conv6, 1
  br i1 %cmp7, label %if.then9, label %if.else15

if.then9:                                         ; preds = %if.end
  %9 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u10 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %9, i32 0, i32 4
  %l = bitcast %union.anon* %u10 to %struct.E_list_struct**
  %10 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %call = call i32 @and_purge_E_list(%struct.E_list_struct* %10)
  %cmp11 = icmp eq i32 %call, 0
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then9
  %11 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %12 = bitcast %struct.Exp_struct* %11 to i8*
  call void @xfree(i8* %12, i32 8)
  store %struct.Exp_struct* null, %struct.Exp_struct** %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.then9
  br label %if.end27

if.else15:                                        ; preds = %if.end
  %13 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u16 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %13, i32 0, i32 4
  %l17 = bitcast %union.anon* %u16 to %struct.E_list_struct**
  %14 = load %struct.E_list_struct*, %struct.E_list_struct** %l17, align 4
  %call18 = call %struct.E_list_struct* @or_purge_E_list(%struct.E_list_struct* %14)
  %15 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u19 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %15, i32 0, i32 4
  %l20 = bitcast %union.anon* %u19 to %struct.E_list_struct**
  store %struct.E_list_struct* %call18, %struct.E_list_struct** %l20, align 4
  %16 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u21 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %16, i32 0, i32 4
  %l22 = bitcast %union.anon* %u21 to %struct.E_list_struct**
  %17 = load %struct.E_list_struct*, %struct.E_list_struct** %l22, align 4
  %cmp23 = icmp eq %struct.E_list_struct* %17, null
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.else15
  %18 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %19 = bitcast %struct.Exp_struct* %18 to i8*
  call void @xfree(i8* %19, i32 8)
  store %struct.Exp_struct* null, %struct.Exp_struct** %retval, align 4
  br label %return

if.end26:                                         ; preds = %if.else15
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end14
  %20 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  store %struct.Exp_struct* %20, %struct.Exp_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end27, %if.then25, %if.then13, %if.else, %if.then4
  %21 = load %struct.Exp_struct*, %struct.Exp_struct** %retval, align 4
  ret %struct.Exp_struct* %21
}

; Function Attrs: noinline nounwind
define i32 @and_purge_E_list(%struct.E_list_struct* %l) #0 {
entry:
  %retval = alloca i32, align 4
  %l.addr = alloca %struct.E_list_struct*, align 4
  store %struct.E_list_struct* %l, %struct.E_list_struct** %l.addr, align 4
  %0 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %cmp = icmp eq %struct.E_list_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %1, i32 0, i32 1
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  %call = call %struct.Exp_struct* @purge_Exp(%struct.Exp_struct* %2)
  %3 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %e1 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %3, i32 0, i32 1
  store %struct.Exp_struct* %call, %struct.Exp_struct** %e1, align 4
  %cmp2 = icmp eq %struct.Exp_struct* %call, null
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %4 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %4, i32 0, i32 0
  %5 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  call void @free_E_list(%struct.E_list_struct* %5)
  %6 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %7 = bitcast %struct.E_list_struct* %6 to i8*
  call void @xfree(i8* %7, i32 8)
  store i32 0, i32* %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %8 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %next5 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %8, i32 0, i32 0
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %next5, align 4
  %call6 = call i32 @and_purge_E_list(%struct.E_list_struct* %9)
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end4
  %10 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %e9 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %10, i32 0, i32 1
  %11 = load %struct.Exp_struct*, %struct.Exp_struct** %e9, align 4
  call void @free_Exp(%struct.Exp_struct* %11)
  %12 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %13 = bitcast %struct.E_list_struct* %12 to i8*
  call void @xfree(i8* %13, i32 8)
  store i32 0, i32* %retval, align 4
  br label %return

if.end10:                                         ; preds = %if.end4
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end10, %if.then8, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind
define %struct.E_list_struct* @or_purge_E_list(%struct.E_list_struct* %l) #0 {
entry:
  %retval = alloca %struct.E_list_struct*, align 4
  %l.addr = alloca %struct.E_list_struct*, align 4
  %el = alloca %struct.E_list_struct*, align 4
  store %struct.E_list_struct* %l, %struct.E_list_struct** %l.addr, align 4
  %0 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %cmp = icmp eq %struct.E_list_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.E_list_struct* null, %struct.E_list_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %1, i32 0, i32 1
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  %call = call %struct.Exp_struct* @purge_Exp(%struct.Exp_struct* %2)
  %3 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %e1 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %3, i32 0, i32 1
  store %struct.Exp_struct* %call, %struct.Exp_struct** %e1, align 4
  %cmp2 = icmp eq %struct.Exp_struct* %call, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %4 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %4, i32 0, i32 0
  %5 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  %call4 = call %struct.E_list_struct* @or_purge_E_list(%struct.E_list_struct* %5)
  store %struct.E_list_struct* %call4, %struct.E_list_struct** %el, align 4
  %6 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %7 = bitcast %struct.E_list_struct* %6 to i8*
  call void @xfree(i8* %7, i32 8)
  %8 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  store %struct.E_list_struct* %8, %struct.E_list_struct** %retval, align 4
  br label %return

if.end5:                                          ; preds = %if.end
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %next6 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %9, i32 0, i32 0
  %10 = load %struct.E_list_struct*, %struct.E_list_struct** %next6, align 4
  %call7 = call %struct.E_list_struct* @or_purge_E_list(%struct.E_list_struct* %10)
  %11 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %next8 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %11, i32 0, i32 0
  store %struct.E_list_struct* %call7, %struct.E_list_struct** %next8, align 4
  %12 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  store %struct.E_list_struct* %12, %struct.E_list_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %13 = load %struct.E_list_struct*, %struct.E_list_struct** %retval, align 4
  ret %struct.E_list_struct* %13
}

; Function Attrs: noinline nounwind
define i32 @mark_dead_connectors(%struct.Exp_struct* %e, i32 %dir) #0 {
entry:
  %dir.addr = alloca i32, align 4
  %e.addr = alloca %struct.Exp_struct*, align 4
  %dummy = alloca %struct.Connector_struct, align 4
  %count = alloca i32, align 4
  %l = alloca %struct.E_list_struct*, align 4
  store i32 %dir, i32* %dir.addr, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy, i32 0, i32 0
  store i16 -1, i16* %label, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  store i32 0, i32* %count, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %0, i32 0, i32 0
  %1 = load i8, i8* %type, align 4
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %dir2 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 2
  %3 = load i8, i8* %dir2, align 2
  %conv3 = sext i8 %3 to i32
  %4 = load i32, i32* %dir.addr, align 4
  %cmp4 = icmp eq i32 %conv3, %4
  br i1 %cmp4, label %if.then6, label %if.end11

if.then6:                                         ; preds = %if.then
  %5 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %5, i32 0, i32 4
  %string = bitcast %union.anon* %u to i8**
  %6 = load i8*, i8** %string, align 4
  %string7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy, i32 0, i32 5
  store i8* %6, i8** %string7, align 4
  %7 = load i32, i32* %dir.addr, align 4
  %call = call i32 @matches_S(%struct.Connector_struct* %dummy, i32 %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then8

if.then8:                                         ; preds = %if.then6
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u9 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %8, i32 0, i32 4
  %string10 = bitcast %union.anon* %u9 to i8**
  store i8* null, i8** %string10, align 4
  %9 = load i32, i32* %count, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %count, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.then6
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end18

if.else:                                          ; preds = %entry
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u12 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %10, i32 0, i32 4
  %l13 = bitcast %union.anon* %u12 to %struct.E_list_struct**
  %11 = load %struct.E_list_struct*, %struct.E_list_struct** %l13, align 4
  store %struct.E_list_struct* %11, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %12 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %cmp14 = icmp ne %struct.E_list_struct* %12, null
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %dir.addr, align 4
  %14 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %e16 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %14, i32 0, i32 1
  %15 = load %struct.Exp_struct*, %struct.Exp_struct** %e16, align 4
  %call17 = call i32 @mark_dead_connectors(%struct.Exp_struct* %15, i32 %13)
  %16 = load i32, i32* %count, align 4
  %add = add nsw i32 %16, %call17
  store i32 %add, i32* %count, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %17, i32 0, i32 0
  %18 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  store %struct.E_list_struct* %18, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end18

if.end18:                                         ; preds = %for.end, %if.end11
  %19 = load i32, i32* %count, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define void @insert_connectors(%struct.Exp_struct* %e, i32 %dir) #0 {
entry:
  %dir.addr = alloca i32, align 4
  %e.addr = alloca %struct.Exp_struct*, align 4
  %dummy = alloca %struct.Connector_struct, align 4
  %l = alloca %struct.E_list_struct*, align 4
  store i32 %dir, i32* %dir.addr, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy, i32 0, i32 0
  store i16 -1, i16* %label, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %0, i32 0, i32 0
  %1 = load i8, i8* %type, align 4
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %dir2 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 2
  %3 = load i8, i8* %dir2, align 2
  %conv3 = sext i8 %3 to i32
  %4 = load i32, i32* %dir.addr, align 4
  %cmp4 = icmp eq i32 %conv3, %4
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  %5 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %5, i32 0, i32 4
  %string = bitcast %union.anon* %u to i8**
  %6 = load i8*, i8** %string, align 4
  %string7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy, i32 0, i32 5
  store i8* %6, i8** %string7, align 4
  call void @insert_S(%struct.Connector_struct* %dummy)
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end13

if.else:                                          ; preds = %entry
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u8 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %7, i32 0, i32 4
  %l9 = bitcast %union.anon* %u8 to %struct.E_list_struct**
  %8 = load %struct.E_list_struct*, %struct.E_list_struct** %l9, align 4
  store %struct.E_list_struct* %8, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %cmp10 = icmp ne %struct.E_list_struct* %9, null
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %dir.addr, align 4
  %11 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %e12 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %11, i32 0, i32 1
  %12 = load %struct.Exp_struct*, %struct.Exp_struct** %e12, align 4
  call void @insert_connectors(%struct.Exp_struct* %12, i32 %10)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %13, i32 0, i32 0
  %14 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  store %struct.E_list_struct* %14, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end13

if.end13:                                         ; preds = %for.end, %if.end
  ret void
}

; Function Attrs: noinline nounwind
define void @clean_up_expressions(i32 %w) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %w.addr = alloca i32, align 4
  %head_node = alloca %struct.X_node_struct, align 4
  %d = alloca %struct.X_node_struct*, align 4
  %d1 = alloca %struct.X_node_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %w.addr, align 4
  store %struct.X_node_struct* %head_node, %struct.X_node_struct** %d, align 4
  %0 = load i32, i32* %w.addr, align 4
  %1 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %1, i32 0, i32 %0
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %2 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %3, i32 0, i32 2
  store %struct.X_node_struct* %2, %struct.X_node_struct** %next, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry, %if.end, %entry
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next1 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %4, i32 0, i32 2
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %next1, align 4
  %cmp = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next2 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 2
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %next2, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %7, i32 0, i32 1
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %cmp3 = icmp eq %struct.Exp_struct* %8, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %while.body, %while.body
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next4 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next4, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %d1, align 4
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %d1, align 4
  %next5 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %11, i32 0, i32 2
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %next5, align 4
  %13 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next6 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %13, i32 0, i32 2
  store %struct.X_node_struct* %12, %struct.X_node_struct** %next6, align 4
  %14 = load %struct.X_node_struct*, %struct.X_node_struct** %d1, align 4
  %15 = bitcast %struct.X_node_struct* %14 to i8*
  call void @xfree(i8* %15, i32 12)
  br label %if.end

if.else:                                          ; preds = %while.body, %while.body
  %16 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next7 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %16, i32 0, i32 2
  %17 = load %struct.X_node_struct*, %struct.X_node_struct** %next7, align 4
  store %struct.X_node_struct* %17, %struct.X_node_struct** %d, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %next8 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %head_node, i32 0, i32 2
  %18 = load %struct.X_node_struct*, %struct.X_node_struct** %next8, align 4
  %19 = load i32, i32* %w.addr, align 4
  %20 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %20, i32 0, i32 %19
  %x10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 1
  store %struct.X_node_struct* %18, %struct.X_node_struct** %x10, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @expression_prune() #0 {
entry:
  %N_deleted = alloca i32, align 4
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 173, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %call1 = call i32 @next_power_of_two_up(i32 %load_struct.BigStruct_32)
  store i32 %call1, i32* @s_table_size, align 4
  %0 = load i32, i32* @s_table_size, align 4
  %mul = mul i32 %0, 4
  %call2 = call i8* @xalloc(i32 %mul)
  %1 = bitcast i8* %call2 to %struct.Connector_struct**
  store %struct.Connector_struct** %1, %struct.Connector_struct*** @table.676, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 142, i32 10)
  store i32 1, i32* %N_deleted, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end78, %entry, %if.end78, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc29, %for.cond, %for.inc29, %for.cond
  %2 = load i32, i32* %w, align 4
  %3 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end30

for.body:                                         ; preds = %for.cond3, %for.cond3
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %5, i32 0, i32 %4
  %x4 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x4, align 4
  store %struct.X_node_struct* %6, %struct.X_node_struct** %x, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp6 = icmp ne %struct.X_node_struct* %7, null
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.cond5, %for.cond5
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %8, i32 0, i32 1
  %9 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call8 = call i32 @mark_dead_connectors(%struct.Exp_struct* %9, i32 45)
  %10 = load i32, i32* %N_deleted, align 4
  %add = add nsw i32 %10, %call8
  store i32 %add, i32* %N_deleted, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body7, %for.body7
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %11, i32 0, i32 2
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %12, %struct.X_node_struct** %x, align 4
  br label %for.cond5

for.end:                                          ; preds = %for.cond5, %for.cond5
  %13 = load i32, i32* %w, align 4
  %14 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %14, i32 0, i32 %13
  %x10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 1
  %15 = load %struct.X_node_struct*, %struct.X_node_struct** %x10, align 4
  store %struct.X_node_struct* %15, %struct.X_node_struct** %x, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc17, %for.end, %for.inc17, %for.end
  %16 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp12 = icmp ne %struct.X_node_struct* %16, null
  br i1 %cmp12, label %for.body13, label %for.end19

for.body13:                                       ; preds = %for.cond11, %for.cond11
  %17 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp14 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %17, i32 0, i32 1
  %18 = load %struct.Exp_struct*, %struct.Exp_struct** %exp14, align 4
  %call15 = call %struct.Exp_struct* @purge_Exp(%struct.Exp_struct* %18)
  %19 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp16 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %19, i32 0, i32 1
  store %struct.Exp_struct* %call15, %struct.Exp_struct** %exp16, align 4
  br label %for.inc17

for.inc17:                                        ; preds = %for.body13, %for.body13
  %20 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next18 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %20, i32 0, i32 2
  %21 = load %struct.X_node_struct*, %struct.X_node_struct** %next18, align 4
  store %struct.X_node_struct* %21, %struct.X_node_struct** %x, align 4
  br label %for.cond11

for.end19:                                        ; preds = %for.cond11, %for.cond11
  %22 = load i32, i32* %w, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %22, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 43, i32 0)
  %23 = load i32, i32* %w, align 4
  %24 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx20 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %24, i32 0, i32 %23
  %x21 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx20, i32 0, i32 1
  %25 = load %struct.X_node_struct*, %struct.X_node_struct** %x21, align 4
  store %struct.X_node_struct* %25, %struct.X_node_struct** %x, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc26, %for.end19, %for.inc26, %for.end19
  %26 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp23 = icmp ne %struct.X_node_struct* %26, null
  br i1 %cmp23, label %for.body24, label %for.end28

for.body24:                                       ; preds = %for.cond22, %for.cond22
  %27 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp25 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %27, i32 0, i32 1
  %28 = load %struct.Exp_struct*, %struct.Exp_struct** %exp25, align 4
  call void @insert_connectors(%struct.Exp_struct* %28, i32 43)
  br label %for.inc26

for.inc26:                                        ; preds = %for.body24, %for.body24
  %29 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next27 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %29, i32 0, i32 2
  %30 = load %struct.X_node_struct*, %struct.X_node_struct** %next27, align 4
  store %struct.X_node_struct* %30, %struct.X_node_struct** %x, align 4
  br label %for.cond22

for.end28:                                        ; preds = %for.cond22, %for.cond22
  br label %for.inc29

for.inc29:                                        ; preds = %for.end28, %for.end28
  %31 = load i32, i32* %w, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond3

for.end30:                                        ; preds = %for.cond3, %for.cond3
  %32 = load i32, i32* @verbosity, align 4
  %cmp31 = icmp sgt i32 %32, 2
  br i1 %cmp31, label %if.then, label %if.end

if.then:                                          ; preds = %for.end30, %for.end30
  %33 = load i32, i32* %N_deleted, align 4
  %34 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.3.686, i32 0, i32 0
  %call32 = call i32 (i8*, ...) @printf(i8* %34, i32 %33)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 140, i32 10)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end30, %if.then, %for.end30
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %35 = load i32, i32* %N_deleted, align 4
  %cmp33 = icmp eq i32 %35, 0
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end, %if.end
  br label %for.end79

if.end35:                                         ; preds = %if.end, %if.end
  store i32 0, i32* %N_deleted, align 4
  %36 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %36, 1
  store i32 %sub, i32* %w, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc70, %if.end35, %for.inc70, %if.end35
  %37 = load i32, i32* %w, align 4
  %cmp37 = icmp sge i32 %37, 0
  br i1 %cmp37, label %for.body38, label %for.end71

for.body38:                                       ; preds = %for.cond36, %for.cond36
  %38 = load i32, i32* %w, align 4
  %39 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx39 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %39, i32 0, i32 %38
  %x40 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx39, i32 0, i32 1
  %40 = load %struct.X_node_struct*, %struct.X_node_struct** %x40, align 4
  store %struct.X_node_struct* %40, %struct.X_node_struct** %x, align 4
  br label %for.cond41

for.cond41:                                       ; preds = %for.inc47, %for.body38, %for.inc47, %for.body38
  %41 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp42 = icmp ne %struct.X_node_struct* %41, null
  br i1 %cmp42, label %for.body43, label %for.end49

for.body43:                                       ; preds = %for.cond41, %for.cond41
  %42 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp44 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %42, i32 0, i32 1
  %43 = load %struct.Exp_struct*, %struct.Exp_struct** %exp44, align 4
  %call45 = call i32 @mark_dead_connectors(%struct.Exp_struct* %43, i32 43)
  %44 = load i32, i32* %N_deleted, align 4
  %add46 = add nsw i32 %44, %call45
  store i32 %add46, i32* %N_deleted, align 4
  br label %for.inc47

for.inc47:                                        ; preds = %for.body43, %for.body43
  %45 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next48 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %45, i32 0, i32 2
  %46 = load %struct.X_node_struct*, %struct.X_node_struct** %next48, align 4
  store %struct.X_node_struct* %46, %struct.X_node_struct** %x, align 4
  br label %for.cond41

for.end49:                                        ; preds = %for.cond41, %for.cond41
  %47 = load i32, i32* %w, align 4
  %48 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx50 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %48, i32 0, i32 %47
  %x51 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx50, i32 0, i32 1
  %49 = load %struct.X_node_struct*, %struct.X_node_struct** %x51, align 4
  store %struct.X_node_struct* %49, %struct.X_node_struct** %x, align 4
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc58, %for.end49, %for.inc58, %for.end49
  %50 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp53 = icmp ne %struct.X_node_struct* %50, null
  br i1 %cmp53, label %for.body54, label %for.end60

for.body54:                                       ; preds = %for.cond52, %for.cond52
  %51 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp55 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %51, i32 0, i32 1
  %52 = load %struct.Exp_struct*, %struct.Exp_struct** %exp55, align 4
  %call56 = call %struct.Exp_struct* @purge_Exp(%struct.Exp_struct* %52)
  %53 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp57 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %53, i32 0, i32 1
  store %struct.Exp_struct* %call56, %struct.Exp_struct** %exp57, align 4
  br label %for.inc58

for.inc58:                                        ; preds = %for.body54, %for.body54
  %54 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next59 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %54, i32 0, i32 2
  %55 = load %struct.X_node_struct*, %struct.X_node_struct** %next59, align 4
  store %struct.X_node_struct* %55, %struct.X_node_struct** %x, align 4
  br label %for.cond52

for.end60:                                        ; preds = %for.cond52, %for.cond52
  %56 = load i32, i32* %w, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %56, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 43, i32 0)
  %57 = load i32, i32* %w, align 4
  %58 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx61 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %58, i32 0, i32 %57
  %x62 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx61, i32 0, i32 1
  %59 = load %struct.X_node_struct*, %struct.X_node_struct** %x62, align 4
  store %struct.X_node_struct* %59, %struct.X_node_struct** %x, align 4
  br label %for.cond63

for.cond63:                                       ; preds = %for.inc67, %for.end60, %for.inc67, %for.end60
  %60 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp64 = icmp ne %struct.X_node_struct* %60, null
  br i1 %cmp64, label %for.body65, label %for.end69

for.body65:                                       ; preds = %for.cond63, %for.cond63
  %61 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp66 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %61, i32 0, i32 1
  %62 = load %struct.Exp_struct*, %struct.Exp_struct** %exp66, align 4
  call void @insert_connectors(%struct.Exp_struct* %62, i32 45)
  br label %for.inc67

for.inc67:                                        ; preds = %for.body65, %for.body65
  %63 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next68 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %63, i32 0, i32 2
  %64 = load %struct.X_node_struct*, %struct.X_node_struct** %next68, align 4
  store %struct.X_node_struct* %64, %struct.X_node_struct** %x, align 4
  br label %for.cond63

for.end69:                                        ; preds = %for.cond63, %for.cond63
  br label %for.inc70

for.inc70:                                        ; preds = %for.end69, %for.end69
  %65 = load i32, i32* %w, align 4
  %dec = add nsw i32 %65, -1
  store i32 %dec, i32* %w, align 4
  br label %for.cond36

for.end71:                                        ; preds = %for.cond36, %for.cond36
  %66 = load i32, i32* @verbosity, align 4
  %cmp72 = icmp sgt i32 %66, 2
  br i1 %cmp72, label %if.then73, label %if.end75

if.then73:                                        ; preds = %for.end71, %for.end71
  %67 = load i32, i32* %N_deleted, align 4
  %68 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.4.687, i32 0, i32 0
  %call74 = call i32 (i8*, ...) @printf(i8* %68, i32 %67)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 140, i32 10)
  br label %if.end75

if.end75:                                         ; preds = %if.then73, %for.end71, %if.then73, %for.end71
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %69 = load i32, i32* %N_deleted, align 4
  %cmp76 = icmp eq i32 %69, 0
  br i1 %cmp76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end75, %if.end75
  br label %for.end79

if.end78:                                         ; preds = %if.end75, %if.end75
  store i32 0, i32* %N_deleted, align 4
  br label %for.cond

for.end79:                                        ; preds = %if.then77, %if.then34, %if.then77, %if.then34
  %70 = load i32, i32* @s_table_size, align 4
  %mul80 = mul i32 %70, 4
  %71 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %72 = bitcast %struct.Connector_struct** %71 to i8*
  call void @xfree(i8* %72, i32 %mul80)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @left_connector_count(%struct.Disjunct_struct* %d) #0 {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc4, %entry, %for.inc4, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %2, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %3, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %for.body3
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  br label %for.inc4

for.inc4:                                         ; preds = %for.end, %for.end
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next5 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next5, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end6:                                         ; preds = %for.cond, %for.cond
  %9 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %9, i32* %struct.BigStruct_32
  ret i32 %9
}

; Function Attrs: noinline nounwind
define i32 @right_connector_count(%struct.Disjunct_struct* %d) #0 {
entry:
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Disjunct_struct* %d, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc4, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 5
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %2, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %3, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc4

for.inc4:                                         ; preds = %for.end
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next5 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next5, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end6:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4
  ret i32 %9
}

; Function Attrs: noinline nounwind
define void @free_C_list(%struct.c_list_struct* %t) #0 {
entry:
  %t.addr = alloca %struct.c_list_struct*, align 4
  %xt = alloca %struct.c_list_struct*, align 4
  store %struct.c_list_struct* %t, %struct.c_list_struct** %t.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.c_list_struct*, %struct.c_list_struct** %t.addr, align 4
  %cmp = icmp ne %struct.c_list_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.c_list_struct*, %struct.c_list_struct** %t.addr, align 4
  %next = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %1, i32 0, i32 2
  %2 = load %struct.c_list_struct*, %struct.c_list_struct** %next, align 4
  store %struct.c_list_struct* %2, %struct.c_list_struct** %xt, align 4
  %3 = load %struct.c_list_struct*, %struct.c_list_struct** %t.addr, align 4
  %4 = bitcast %struct.c_list_struct* %3 to i8*
  call void @xfree(i8* %4, i32 12)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load %struct.c_list_struct*, %struct.c_list_struct** %xt, align 4
  store %struct.c_list_struct* %5, %struct.c_list_struct** %t.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_power_tables() #0 {
entry:
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc20, %entry, %for.inc20, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end22

for.body:                                         ; preds = %for.cond, %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %3
  %4 = load i32, i32* %arrayidx, align 4
  %cmp2 = icmp slt i32 %2, %4
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %w, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %6
  %7 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx4, align 4
  %arrayidx5 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %7, i32 %5
  %8 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx5, align 4
  call void @free_C_list(%struct.c_list_struct* %8)
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %for.body3
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  %10 = load i32, i32* %w, align 4
  %arrayidx6 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %10
  %11 = load i32, i32* %arrayidx6, align 4
  %mul = mul i32 %11, 4
  %12 = load i32, i32* %w, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %12
  %13 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx7, align 4
  %14 = bitcast %struct.c_list_struct** %13 to i8*
  call void @xfree(i8* %14, i32 %mul)
  store i32 0, i32* %i, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc14, %for.end, %for.inc14, %for.end
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %w, align 4
  %arrayidx9 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %16
  %17 = load i32, i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %15, %17
  br i1 %cmp10, label %for.body11, label %for.end16

for.body11:                                       ; preds = %for.cond8, %for.cond8
  %18 = load i32, i32* %i, align 4
  %19 = load i32, i32* %w, align 4
  %arrayidx12 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %19
  %20 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx12, align 4
  %arrayidx13 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %20, i32 %18
  %21 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx13, align 4
  call void @free_C_list(%struct.c_list_struct* %21)
  br label %for.inc14

for.inc14:                                        ; preds = %for.body11, %for.body11
  %22 = load i32, i32* %i, align 4
  %inc15 = add nsw i32 %22, 1
  store i32 %inc15, i32* %i, align 4
  br label %for.cond8

for.end16:                                        ; preds = %for.cond8, %for.cond8
  %23 = load i32, i32* %w, align 4
  %arrayidx17 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %23
  %24 = load i32, i32* %arrayidx17, align 4
  %mul18 = mul i32 %24, 4
  %25 = load i32, i32* %w, align 4
  %arrayidx19 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %25
  %26 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx19, align 4
  %27 = bitcast %struct.c_list_struct** %26 to i8*
  call void @xfree(i8* %27, i32 %mul18)
  br label %for.inc20

for.inc20:                                        ; preds = %for.end16, %for.end16
  %28 = load i32, i32* %w, align 4
  %inc21 = add nsw i32 %28, 1
  store i32 %inc21, i32* %w, align 4
  br label %for.cond

for.end22:                                        ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @power_hash(%struct.Connector_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Connector_struct*, align 4
  %s = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 0
  %1 = load i16, i16* %label, align 4
  %conv = sext i16 %1 to i32
  %and = and i32 %conv, 255
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and
  %2 = load i32, i32* %arrayidx, align 4
  store i32 %2, i32* %i, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %3, i32 0, i32 5
  %4 = load i8*, i8** %string, align 4
  store i8* %4, i8** %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %5 = load i8*, i8** %s, align 4
  %6 = load i8, i8* %5, align 1
  %conv1 = sext i8 %6 to i32
  %call = call i32 @isupper_Package(i32 %conv1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %i, align 4
  %shl = shl i32 %8, 1
  %add = add nsw i32 %7, %shl
  %9 = load i8*, i8** %s, align 4
  %10 = load i8, i8* %9, align 1
  %conv2 = sext i8 %10 to i32
  %11 = load i32, i32* %i, align 4
  %add3 = add nsw i32 %conv2, %11
  %and4 = and i32 %add3, 255
  %arrayidx5 = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %and4
  %12 = load i32, i32* %arrayidx5, align 4
  %add6 = add i32 %add, %12
  store i32 %add6, i32* %i, align 4
  %13 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %i, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind
define void @put_into_power_table(i32 %size, %struct.c_list_struct** %t, %struct.Connector_struct* %c, i32 %shal) #0 {
entry:
  %shal.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %t.addr = alloca %struct.c_list_struct**, align 4
  %size.addr = alloca i32, align 4
  %h = alloca i32, align 4
  %m = alloca %struct.c_list_struct*, align 4
  store i32 %shal, i32* %shal.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  store %struct.c_list_struct** %t, %struct.c_list_struct*** %t.addr, align 4
  store i32 %size, i32* %size.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @power_hash(%struct.Connector_struct* %0)
  %1 = load i32, i32* %size.addr, align 4
  %sub = sub nsw i32 %1, 1
  %and = and i32 %call, %sub
  store i32 %and, i32* %h, align 4
  %call1 = call i8* @xalloc(i32 12)
  %2 = bitcast i8* %call1 to %struct.c_list_struct*
  store %struct.c_list_struct* %2, %struct.c_list_struct** %m, align 4
  %3 = load i32, i32* %h, align 4
  %4 = load %struct.c_list_struct**, %struct.c_list_struct*** %t.addr, align 4
  %arrayidx = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %4, i32 %3
  %5 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx, align 4
  %6 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %next = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %6, i32 0, i32 2
  store %struct.c_list_struct* %5, %struct.c_list_struct** %next, align 4
  %7 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %8 = load i32, i32* %h, align 4
  %9 = load %struct.c_list_struct**, %struct.c_list_struct*** %t.addr, align 4
  %arrayidx2 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %9, i32 %8
  store %struct.c_list_struct* %7, %struct.c_list_struct** %arrayidx2, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %11 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %c3 = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %11, i32 0, i32 0
  store %struct.Connector_struct* %10, %struct.Connector_struct** %c3, align 4
  %12 = load i32, i32* %shal.addr, align 4
  %13 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %shallow = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %13, i32 0, i32 1
  store i32 %12, i32* %shallow, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i32 @set_dist_fields(%struct.Connector_struct* %c, i32 %w, i32 %delta) #0 {
entry:
  %retval = alloca i32, align 4
  %delta.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %i = alloca i32, align 4
  store i32 %delta, i32* %delta.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %cmp = icmp eq %struct.Connector_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %w.addr, align 4
  store i32 %1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %delta.addr, align 4
  %3 = load i32, i32* %w.addr, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %call = call i32 @set_dist_fields(%struct.Connector_struct* %5, i32 %3, i32 %2)
  %6 = load i32, i32* %delta.addr, align 4
  %add = add nsw i32 %call, %6
  store i32 %add, i32* %i, align 4
  %7 = load i32, i32* %i, align 4
  %conv = trunc i32 %7 to i16
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 1
  store i16 %conv, i16* %word, align 2
  %9 = load i32, i32* %i, align 4
  store i32 %9, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind
define void @init_power() #0 {
entry:
  %w = alloca i32, align 4
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca %struct.c_list_struct**, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %xd = alloca %struct.Disjunct_struct*, align 4
  %head = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc12, %entry, %for.inc12, %entry
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end13

for.body:                                         ; preds = %for.cond, %for.cond
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %head, align 4
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 0
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %7, %struct.Disjunct_struct** %xd, align 4
  %8 = load i32, i32* %w, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %call = call i32 @set_dist_fields(%struct.Connector_struct* %10, i32 %8, i32 -1)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body4, %for.body4
  %11 = load i32, i32* %w, align 4
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 5
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %call6 = call i32 @set_dist_fields(%struct.Connector_struct* %13, i32 %11, i32 1)
  %14 = load i32, i32* @N_words, align 4
  %cmp7 = icmp sge i32 %call6, %14
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %for.body4, %lor.lhs.false, %for.body4
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next8, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %16)
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false, %lor.lhs.false
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %head, align 4
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next9 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 0
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %next9, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %19, %struct.Disjunct_struct** %head, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %xd, align 4
  store %struct.Disjunct_struct* %20, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2, %for.cond2
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %head, align 4
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d11 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx10, i32 0, i32 2
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %d11, align 4
  br label %for.inc12

for.inc12:                                        ; preds = %for.end, %for.end
  %24 = load i32, i32* %w, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end13:                                        ; preds = %for.cond, %for.cond
  store i32 0, i32* %w, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc84, %for.end13, %for.inc84, %for.end13
  %25 = load i32, i32* %w, align 4
  %26 = load i32, i32* @N_words, align 4
  %cmp15 = icmp slt i32 %25, %26
  br i1 %cmp15, label %for.body16, label %for.end86

for.body16:                                       ; preds = %for.cond14, %for.cond14
  %27 = load i32, i32* %w, align 4
  %28 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %28, i32 0, i32 %27
  %d18 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx17, i32 0, i32 2
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d18, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %29, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 95, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 %load_struct.BigStruct_32, i32* %len, align 4
  %30 = load i32, i32* %len, align 4
  %call20 = call i32 @next_power_of_two_up(i32 %30)
  store i32 %call20, i32* %size, align 4
  %31 = load i32, i32* %size, align 4
  %32 = load i32, i32* %w, align 4
  %arrayidx21 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %32
  store i32 %31, i32* %arrayidx21, align 4
  %33 = load i32, i32* %size, align 4
  %mul = mul i32 %33, 4
  %call22 = call i8* @xalloc(i32 %mul)
  %34 = bitcast i8* %call22 to %struct.c_list_struct**
  %35 = load i32, i32* %w, align 4
  %arrayidx23 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %35
  store %struct.c_list_struct** %34, %struct.c_list_struct*** %arrayidx23, align 4
  store %struct.c_list_struct** %34, %struct.c_list_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc28, %for.body16, %for.inc28, %for.body16
  %36 = load i32, i32* %i, align 4
  %37 = load i32, i32* %size, align 4
  %cmp25 = icmp slt i32 %36, %37
  br i1 %cmp25, label %for.body26, label %for.end30

for.body26:                                       ; preds = %for.cond24, %for.cond24
  %38 = load i32, i32* %i, align 4
  %39 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %arrayidx27 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %39, i32 %38
  store %struct.c_list_struct* null, %struct.c_list_struct** %arrayidx27, align 4
  br label %for.inc28

for.inc28:                                        ; preds = %for.body26, %for.body26
  %40 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %40, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond24

for.end30:                                        ; preds = %for.cond24, %for.cond24
  %41 = load i32, i32* %w, align 4
  %42 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx31 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %42, i32 0, i32 %41
  %d32 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx31, i32 0, i32 2
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d32, align 4
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %d, align 4
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc47, %for.end30, %for.inc47, %for.end30
  %44 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp34 = icmp ne %struct.Disjunct_struct* %44, null
  br i1 %cmp34, label %for.body35, label %for.end49

for.body35:                                       ; preds = %for.cond33, %for.cond33
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left36 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 4
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %left36, align 4
  store %struct.Connector_struct* %46, %struct.Connector_struct** %c, align 4
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp37 = icmp ne %struct.Connector_struct* %47, null
  br i1 %cmp37, label %if.then38, label %if.end46

if.then38:                                        ; preds = %for.body35, %for.body35
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %49 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %50 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %50, %struct.c_list_struct** %49, %struct.Connector_struct* %48, i32 1)
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next39 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %next39, align 4
  store %struct.Connector_struct* %52, %struct.Connector_struct** %c, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc43, %if.then38, %for.inc43, %if.then38
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp41 = icmp ne %struct.Connector_struct* %53, null
  br i1 %cmp41, label %for.body42, label %for.end45

for.body42:                                       ; preds = %for.cond40, %for.cond40
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %55 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %56 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %56, %struct.c_list_struct** %55, %struct.Connector_struct* %54, i32 0)
  br label %for.inc43

for.inc43:                                        ; preds = %for.body42, %for.body42
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next44 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %57, i32 0, i32 4
  %58 = load %struct.Connector_struct*, %struct.Connector_struct** %next44, align 4
  store %struct.Connector_struct* %58, %struct.Connector_struct** %c, align 4
  br label %for.cond40

for.end45:                                        ; preds = %for.cond40, %for.cond40
  br label %if.end46

if.end46:                                         ; preds = %for.end45, %for.body35, %for.end45, %for.body35
  br label %for.inc47

for.inc47:                                        ; preds = %if.end46, %if.end46
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next48 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %59, i32 0, i32 0
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next48, align 4
  store %struct.Disjunct_struct* %60, %struct.Disjunct_struct** %d, align 4
  br label %for.cond33

for.end49:                                        ; preds = %for.cond33, %for.cond33
  %61 = load i32, i32* %w, align 4
  %62 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx50 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %62, i32 0, i32 %61
  %d51 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx50, i32 0, i32 2
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d51, align 4
  %call52 = call i32 @right_connector_count(%struct.Disjunct_struct* %63)
  store i32 %call52, i32* %len, align 4
  %64 = load i32, i32* %len, align 4
  %call53 = call i32 @next_power_of_two_up(i32 %64)
  store i32 %call53, i32* %size, align 4
  %65 = load i32, i32* %size, align 4
  %66 = load i32, i32* %w, align 4
  %arrayidx54 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %66
  store i32 %65, i32* %arrayidx54, align 4
  %67 = load i32, i32* %size, align 4
  %mul55 = mul i32 %67, 4
  %call56 = call i8* @xalloc(i32 %mul55)
  %68 = bitcast i8* %call56 to %struct.c_list_struct**
  %69 = load i32, i32* %w, align 4
  %arrayidx57 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %69
  store %struct.c_list_struct** %68, %struct.c_list_struct*** %arrayidx57, align 4
  store %struct.c_list_struct** %68, %struct.c_list_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc62, %for.end49, %for.inc62, %for.end49
  %70 = load i32, i32* %i, align 4
  %71 = load i32, i32* %size, align 4
  %cmp59 = icmp slt i32 %70, %71
  br i1 %cmp59, label %for.body60, label %for.end64

for.body60:                                       ; preds = %for.cond58, %for.cond58
  %72 = load i32, i32* %i, align 4
  %73 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %arrayidx61 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %73, i32 %72
  store %struct.c_list_struct* null, %struct.c_list_struct** %arrayidx61, align 4
  br label %for.inc62

for.inc62:                                        ; preds = %for.body60, %for.body60
  %74 = load i32, i32* %i, align 4
  %inc63 = add nsw i32 %74, 1
  store i32 %inc63, i32* %i, align 4
  br label %for.cond58

for.end64:                                        ; preds = %for.cond58, %for.cond58
  %75 = load i32, i32* %w, align 4
  %76 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx65 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %76, i32 0, i32 %75
  %d66 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx65, i32 0, i32 2
  %77 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d66, align 4
  store %struct.Disjunct_struct* %77, %struct.Disjunct_struct** %d, align 4
  br label %for.cond67

for.cond67:                                       ; preds = %for.inc81, %for.end64, %for.inc81, %for.end64
  %78 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp68 = icmp ne %struct.Disjunct_struct* %78, null
  br i1 %cmp68, label %for.body69, label %for.end83

for.body69:                                       ; preds = %for.cond67, %for.cond67
  %79 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right70 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %79, i32 0, i32 5
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %right70, align 4
  store %struct.Connector_struct* %80, %struct.Connector_struct** %c, align 4
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp71 = icmp ne %struct.Connector_struct* %81, null
  br i1 %cmp71, label %if.then72, label %if.end80

if.then72:                                        ; preds = %for.body69, %for.body69
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %83 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %84 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %84, %struct.c_list_struct** %83, %struct.Connector_struct* %82, i32 1)
  %85 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next73 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %85, i32 0, i32 4
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %next73, align 4
  store %struct.Connector_struct* %86, %struct.Connector_struct** %c, align 4
  br label %for.cond74

for.cond74:                                       ; preds = %for.inc77, %if.then72, %for.inc77, %if.then72
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp75 = icmp ne %struct.Connector_struct* %87, null
  br i1 %cmp75, label %for.body76, label %for.end79

for.body76:                                       ; preds = %for.cond74, %for.cond74
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %89 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %90 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %90, %struct.c_list_struct** %89, %struct.Connector_struct* %88, i32 0)
  br label %for.inc77

for.inc77:                                        ; preds = %for.body76, %for.body76
  %91 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next78 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %91, i32 0, i32 4
  %92 = load %struct.Connector_struct*, %struct.Connector_struct** %next78, align 4
  store %struct.Connector_struct* %92, %struct.Connector_struct** %c, align 4
  br label %for.cond74

for.end79:                                        ; preds = %for.cond74, %for.cond74
  br label %if.end80

if.end80:                                         ; preds = %for.end79, %for.body69, %for.end79, %for.body69
  br label %for.inc81

for.inc81:                                        ; preds = %if.end80, %if.end80
  %93 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next82 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %93, i32 0, i32 0
  %94 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next82, align 4
  store %struct.Disjunct_struct* %94, %struct.Disjunct_struct** %d, align 4
  br label %for.cond67

for.end83:                                        ; preds = %for.cond67, %for.cond67
  br label %for.inc84

for.inc84:                                        ; preds = %for.end83, %for.end83
  %95 = load i32, i32* %w, align 4
  %inc85 = add nsw i32 %95, 1
  store i32 %inc85, i32* %w, align 4
  br label %for.cond14

for.end86:                                        ; preds = %for.cond14, %for.cond14
  ret void
}

; Function Attrs: noinline nounwind
define void @clean_table(i32 %size, %struct.c_list_struct** %t) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 13
  %load_struct.BigStruct_13 = load %struct.c_list_struct**, %struct.c_list_struct*** %struct.BigStruct_13
  %t.addr = alloca %struct.c_list_struct**, align 4
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca %struct.c_list_struct*, align 4
  %xm = alloca %struct.c_list_struct*, align 4
  %head = alloca %struct.c_list_struct*, align 4
  store %struct.c_list_struct** %load_struct.BigStruct_13, %struct.c_list_struct*** %t.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %size.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc8, %entry, %for.inc8, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %size.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end9

for.body:                                         ; preds = %for.cond, %for.cond
  store %struct.c_list_struct* null, %struct.c_list_struct** %head, align 4
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.c_list_struct**, %struct.c_list_struct*** %t.addr, align 4
  %arrayidx = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %3, i32 %2
  %4 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx, align 4
  store %struct.c_list_struct* %4, %struct.c_list_struct** %m, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body, %for.inc, %for.body
  %5 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %cmp2 = icmp ne %struct.c_list_struct* %5, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1, %for.cond1
  %6 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %next = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %6, i32 0, i32 2
  %7 = load %struct.c_list_struct*, %struct.c_list_struct** %next, align 4
  store %struct.c_list_struct* %7, %struct.c_list_struct** %xm, align 4
  %8 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %c = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %8, i32 0, i32 0
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 1
  %10 = load i16, i16* %word, align 2
  %conv = sext i16 %10 to i32
  %cmp4 = icmp ne i32 %conv, 251
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %for.body3, %for.body3
  %11 = load %struct.c_list_struct*, %struct.c_list_struct** %head, align 4
  %12 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %next6 = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %12, i32 0, i32 2
  store %struct.c_list_struct* %11, %struct.c_list_struct** %next6, align 4
  %13 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  store %struct.c_list_struct* %13, %struct.c_list_struct** %head, align 4
  br label %if.end

if.else:                                          ; preds = %for.body3, %for.body3
  %14 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %15 = bitcast %struct.c_list_struct* %14 to i8*
  call void @xfree(i8* %15, i32 12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %16 = load %struct.c_list_struct*, %struct.c_list_struct** %xm, align 4
  store %struct.c_list_struct* %16, %struct.c_list_struct** %m, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1, %for.cond1
  %17 = load %struct.c_list_struct*, %struct.c_list_struct** %head, align 4
  %18 = load i32, i32* %i, align 4
  %19 = load %struct.c_list_struct**, %struct.c_list_struct*** %t.addr, align 4
  %arrayidx7 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %19, i32 %18
  store %struct.c_list_struct* %17, %struct.c_list_struct** %arrayidx7, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.end, %for.end
  %20 = load i32, i32* %i, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end9:                                         ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @possible_connection(%struct.Connector_struct* %lc, %struct.Connector_struct* %rc, i32 %lshallow, i32 %rshallow, i32 %lword, i32 %rword) #0 {
entry:
  %retval = alloca i32, align 4
  %rword.addr = alloca i32, align 4
  %lword.addr = alloca i32, align 4
  %rshallow.addr = alloca i32, align 4
  %lshallow.addr = alloca i32, align 4
  %rc.addr = alloca %struct.Connector_struct*, align 4
  %lc.addr = alloca %struct.Connector_struct*, align 4
  store i32 %rword, i32* %rword.addr, align 4
  store i32 %lword, i32* %lword.addr, align 4
  store i32 %rshallow, i32* %rshallow.addr, align 4
  store i32 %lshallow, i32* %lshallow.addr, align 4
  store %struct.Connector_struct* %rc, %struct.Connector_struct** %rc.addr, align 4
  store %struct.Connector_struct* %lc, %struct.Connector_struct** %lc.addr, align 4
  %0 = load i32, i32* %lshallow.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %rshallow.addr, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 1
  %3 = load i16, i16* %word, align 2
  %conv = sext i16 %3 to i32
  %4 = load i32, i32* %rword.addr, align 4
  %cmp = icmp sgt i32 %conv, %4
  br i1 %cmp, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %word3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 1
  %6 = load i16, i16* %word3, align 2
  %conv4 = sext i16 %6 to i32
  %7 = load i32, i32* %lword.addr, align 4
  %cmp5 = icmp slt i32 %conv4, %7
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end8:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* @power_prune_mode, align 4
  %cmp9 = icmp eq i32 %8, 0
  br i1 %cmp9, label %if.then11, label %if.else40

if.then11:                                        ; preds = %if.end8
  %9 = load i32, i32* %lword.addr, align 4
  %10 = load i32, i32* %rword.addr, align 4
  %sub = sub nsw i32 %10, 1
  %cmp12 = icmp eq i32 %9, %sub
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then11
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %cmp15 = icmp eq %struct.Connector_struct* %12, null
  br i1 %cmp15, label %land.lhs.true17, label %if.then21

land.lhs.true17:                                  ; preds = %if.then14
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %next18 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next18, align 4
  %cmp19 = icmp eq %struct.Connector_struct* %14, null
  br i1 %cmp19, label %if.end22, label %if.then21

if.then21:                                        ; preds = %land.lhs.true17, %if.then14
  store i32 0, i32* %retval, align 4
  br label %return

if.end22:                                         ; preds = %land.lhs.true17
  br label %if.end39

if.else:                                          ; preds = %if.then11
  %15 = load i32, i32* @null_links, align 4
  %tobool23 = icmp ne i32 %15, 0
  br i1 %tobool23, label %if.end38, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %if.else
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %next25 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %next25, align 4
  %cmp26 = icmp eq %struct.Connector_struct* %17, null
  br i1 %cmp26, label %land.lhs.true28, label %if.end38

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %next29 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %next29, align 4
  %cmp30 = icmp eq %struct.Connector_struct* %19, null
  br i1 %cmp30, label %land.lhs.true32, label %if.end38

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %20, i32 0, i32 3
  %21 = load i8, i8* %multi, align 1
  %tobool33 = icmp ne i8 %21, 0
  br i1 %tobool33, label %if.end38, label %land.lhs.true34

land.lhs.true34:                                  ; preds = %land.lhs.true32
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %multi35 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 3
  %23 = load i8, i8* %multi35, align 1
  %tobool36 = icmp ne i8 %23, 0
  br i1 %tobool36, label %if.end38, label %if.then37

if.then37:                                        ; preds = %land.lhs.true34
  store i32 0, i32* %retval, align 4
  br label %return

if.end38:                                         ; preds = %land.lhs.true34, %land.lhs.true32, %land.lhs.true28, %land.lhs.true24, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end22
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %call = call i32 @match(%struct.Connector_struct* %25, %struct.Connector_struct* %24)
  store i32 %call, i32* %retval, align 4
  br label %return

if.else40:                                        ; preds = %if.end8
  %26 = load i32, i32* %lword.addr, align 4
  %27 = load i32, i32* %rword.addr, align 4
  %sub41 = sub nsw i32 %27, 1
  %cmp42 = icmp eq i32 %26, %sub41
  br i1 %cmp42, label %if.then44, label %if.else54

if.then44:                                        ; preds = %if.else40
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %next45 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %28, i32 0, i32 4
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %next45, align 4
  %cmp46 = icmp eq %struct.Connector_struct* %29, null
  br i1 %cmp46, label %land.lhs.true48, label %if.then52

land.lhs.true48:                                  ; preds = %if.then44
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %next49 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %30, i32 0, i32 4
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %next49, align 4
  %cmp50 = icmp eq %struct.Connector_struct* %31, null
  br i1 %cmp50, label %if.end53, label %if.then52

if.then52:                                        ; preds = %land.lhs.true48, %if.then44
  store i32 0, i32* %retval, align 4
  br label %return

if.end53:                                         ; preds = %land.lhs.true48
  br label %if.end75

if.else54:                                        ; preds = %if.else40
  %32 = load i32, i32* @null_links, align 4
  %tobool55 = icmp ne i32 %32, 0
  br i1 %tobool55, label %if.end74, label %land.lhs.true56

land.lhs.true56:                                  ; preds = %if.else54
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %next57 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %33, i32 0, i32 4
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %next57, align 4
  %cmp58 = icmp eq %struct.Connector_struct* %34, null
  br i1 %cmp58, label %land.lhs.true60, label %if.end74

land.lhs.true60:                                  ; preds = %land.lhs.true56
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %next61 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %35, i32 0, i32 4
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %next61, align 4
  %cmp62 = icmp eq %struct.Connector_struct* %36, null
  br i1 %cmp62, label %land.lhs.true64, label %if.end74

land.lhs.true64:                                  ; preds = %land.lhs.true60
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %multi65 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 3
  %38 = load i8, i8* %multi65, align 1
  %tobool66 = icmp ne i8 %38, 0
  br i1 %tobool66, label %if.end74, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %land.lhs.true64
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %multi68 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %39, i32 0, i32 3
  %40 = load i8, i8* %multi68, align 1
  %tobool69 = icmp ne i8 %40, 0
  br i1 %tobool69, label %if.end74, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %land.lhs.true67
  %41 = load i32, i32* %rword.addr, align 4
  %42 = load i32, i32* %lword.addr, align 4
  %43 = bitcast [250 x i8*]* @deletable to [0 x i8*]*
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* %43, i32 0, i32 %42
  %44 = load i8*, i8** %arrayidx, align 4
  %arrayidx71 = getelementptr inbounds i8, i8* %44, i32 %41
  %45 = load i8, i8* %arrayidx71, align 1
  %tobool72 = icmp ne i8 %45, 0
  br i1 %tobool72, label %if.end74, label %if.then73

if.then73:                                        ; preds = %land.lhs.true70
  store i32 0, i32* %retval, align 4
  br label %return

if.end74:                                         ; preds = %land.lhs.true70, %land.lhs.true67, %land.lhs.true64, %land.lhs.true60, %land.lhs.true56, %if.else54
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end53
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %rc.addr, align 4
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %lc.addr, align 4
  %call76 = call i32 @prune_match(%struct.Connector_struct* %47, %struct.Connector_struct* %46)
  store i32 %call76, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end75, %if.then73, %if.then52, %if.end39, %if.then37, %if.then21, %if.then7, %if.then
  %48 = load i32, i32* %retval, align 4
  ret i32 %48
}

; Function Attrs: noinline nounwind
define i32 @right_table_search(i32 %w, %struct.Connector_struct* %c, i32 %shallow, i32 %word_c) #0 {
entry:
  %retval = alloca i32, align 4
  %word_c.addr = alloca i32, align 4
  %shallow.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %w.addr = alloca i32, align 4
  %size = alloca i32, align 4
  %h = alloca i32, align 4
  %cl = alloca %struct.c_list_struct*, align 4
  store i32 %word_c, i32* %word_c.addr, align 4
  store i32 %shallow, i32* %shallow.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %size, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @power_hash(%struct.Connector_struct* %2)
  %3 = load i32, i32* %size, align 4
  %sub = sub nsw i32 %3, 1
  %and = and i32 %call, %sub
  store i32 %and, i32* %h, align 4
  %4 = load i32, i32* %h, align 4
  %5 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %5
  %6 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx1, align 4
  %arrayidx2 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %6, i32 %4
  %7 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx2, align 4
  store %struct.c_list_struct* %7, %struct.c_list_struct** %cl, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %cmp = icmp ne %struct.c_list_struct* %8, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %word_c.addr, align 4
  %10 = load i32, i32* %w.addr, align 4
  %11 = load i32, i32* %shallow.addr, align 4
  %12 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %shallow3 = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %12, i32 0, i32 1
  %13 = load i32, i32* %shallow3, align 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %15 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %c4 = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %15, i32 0, i32 0
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c4, align 4
  %call5 = call i32 @possible_connection(%struct.Connector_struct* %16, %struct.Connector_struct* %14, i32 %13, i32 %11, i32 %10, i32 %9)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %next = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %17, i32 0, i32 2
  %18 = load %struct.c_list_struct*, %struct.c_list_struct** %next, align 4
  store %struct.c_list_struct* %18, %struct.c_list_struct** %cl, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define i32 @left_table_search(i32 %w, %struct.Connector_struct* %c, i32 %shallow, i32 %word_c) #0 {
entry:
  %retval = alloca i32, align 4
  %word_c.addr = alloca i32, align 4
  %shallow.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %w.addr = alloca i32, align 4
  %size = alloca i32, align 4
  %h = alloca i32, align 4
  %cl = alloca %struct.c_list_struct*, align 4
  store i32 %word_c, i32* %word_c.addr, align 4
  store i32 %shallow, i32* %shallow.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  %0 = load i32, i32* %w.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %size, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @power_hash(%struct.Connector_struct* %2)
  %3 = load i32, i32* %size, align 4
  %sub = sub nsw i32 %3, 1
  %and = and i32 %call, %sub
  store i32 %and, i32* %h, align 4
  %4 = load i32, i32* %h, align 4
  %5 = load i32, i32* %w.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %5
  %6 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx1, align 4
  %arrayidx2 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %6, i32 %4
  %7 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx2, align 4
  store %struct.c_list_struct* %7, %struct.c_list_struct** %cl, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %cmp = icmp ne %struct.c_list_struct* %8, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %w.addr, align 4
  %10 = load i32, i32* %word_c.addr, align 4
  %11 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %shallow3 = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %11, i32 0, i32 1
  %12 = load i32, i32* %shallow3, align 4
  %13 = load i32, i32* %shallow.addr, align 4
  %14 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %c4 = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %14, i32 0, i32 0
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %c4, align 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call5 = call i32 @possible_connection(%struct.Connector_struct* %16, %struct.Connector_struct* %15, i32 %13, i32 %12, i32 %10, i32 %9)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %struct.c_list_struct*, %struct.c_list_struct** %cl, align 4
  %next = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %17, i32 0, i32 2
  %18 = load %struct.c_list_struct*, %struct.c_list_struct** %next, align 4
  store %struct.c_list_struct* %18, %struct.c_list_struct** %cl, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define i32 @ok_cwords(%struct.Connector_struct* %c) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %cmp = icmp ne %struct.Connector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %1, i32 0, i32 1
  %2 = load i16, i16* %word, align 2
  %conv = sext i16 %2 to i32
  %cmp1 = icmp eq i32 %conv, 251
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %3, i32 0, i32 1
  %4 = load i16, i16* %word3, align 2
  %conv4 = sext i16 %4 to i32
  %5 = load i32, i32* @N_words, align 4
  %cmp5 = icmp sge i32 %conv4, %5
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end8:                                          ; preds = %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end8
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %c.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define i32 @left_connector_list_update(%struct.Connector_struct* %c, i32 %word_c, i32 %w, i32 %shallow) #0 {
entry:
  %retval = alloca i32, align 4
  %shallow.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %word_c.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %n = alloca i32, align 4
  %foundmatch = alloca i32, align 4
  store i32 %shallow, i32* %shallow.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  store i32 %word_c, i32* %word_c.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %cmp = icmp eq %struct.Connector_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %w.addr, align 4
  store i32 %1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %w.addr, align 4
  %3 = load i32, i32* %word_c.addr, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %call = call i32 @left_connector_list_update(%struct.Connector_struct* %5, i32 %3, i32 %2, i32 0)
  %sub = sub nsw i32 %call, 1
  store i32 %sub, i32* %n, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 1
  %7 = load i16, i16* %word, align 2
  %conv = sext i16 %7 to i32
  %8 = load i32, i32* %n, align 4
  %cmp1 = icmp slt i32 %conv, %8
  br i1 %cmp1, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 1
  %10 = load i16, i16* %word4, align 2
  %conv5 = sext i16 %10 to i32
  store i32 %conv5, i32* %n, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %foundmatch, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end6
  %11 = load i32, i32* %n, align 4
  %cmp7 = icmp sge i32 %11, 0
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %12 = load i32, i32* %w.addr, align 4
  %13 = load i32, i32* %n, align 4
  %sub9 = sub nsw i32 %12, %13
  %14 = load i32, i32* @maxlinklength, align 4
  %cmp10 = icmp sle i32 %sub9, %14
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %15 = phi i1 [ false, %for.cond ], [ %cmp10, %land.rhs ]
  br i1 %15, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %16 = load i32, i32* @power_cost, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* @power_cost, align 4
  %17 = load i32, i32* %word_c.addr, align 4
  %18 = load i32, i32* %shallow.addr, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %20 = load i32, i32* %n, align 4
  %call12 = call i32 @right_table_search(i32 %20, %struct.Connector_struct* %19, i32 %18, i32 %17)
  %tobool = icmp ne i32 %call12, 0
  br i1 %tobool, label %if.then13, label %if.end14

if.then13:                                        ; preds = %for.body
  store i32 1, i32* %foundmatch, align 4
  br label %for.end

if.end14:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end14
  %21 = load i32, i32* %n, align 4
  %dec = add nsw i32 %21, -1
  store i32 %dec, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then13, %land.end
  %22 = load i32, i32* %n, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 1
  %24 = load i16, i16* %word15, align 2
  %conv16 = sext i16 %24 to i32
  %cmp17 = icmp slt i32 %22, %conv16
  br i1 %cmp17, label %if.then19, label %if.end23

if.then19:                                        ; preds = %for.end
  %25 = load i32, i32* %n, align 4
  %conv20 = trunc i32 %25 to i16
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word21 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 1
  store i16 %conv20, i16* %word21, align 2
  %27 = load i32, i32* @N_changed, align 4
  %inc22 = add nsw i32 %27, 1
  store i32 %inc22, i32* @N_changed, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %for.end
  %28 = load i32, i32* %foundmatch, align 4
  %tobool24 = icmp ne i32 %28, 0
  br i1 %tobool24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end23
  %29 = load i32, i32* %n, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end23
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %29, %cond.true ], [ -1, %cond.false ]
  store i32 %cond, i32* %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %30 = load i32, i32* %retval, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind
define i32 @right_connector_list_update(%struct.Connector_struct* %c, i32 %word_c, i32 %w, i32 %shallow) #0 {
entry:
  %retval = alloca i32, align 4
  %shallow.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %word_c.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %n = alloca i32, align 4
  %foundmatch = alloca i32, align 4
  store i32 %shallow, i32* %shallow.addr, align 4
  store i32 %w, i32* %w.addr, align 4
  store i32 %word_c, i32* %word_c.addr, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %cmp = icmp eq %struct.Connector_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %w.addr, align 4
  store i32 %1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %w.addr, align 4
  %3 = load i32, i32* %word_c.addr, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %call = call i32 @right_connector_list_update(%struct.Connector_struct* %5, i32 %3, i32 %2, i32 0)
  %add = add nsw i32 %call, 1
  store i32 %add, i32* %n, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 1
  %7 = load i16, i16* %word, align 2
  %conv = sext i16 %7 to i32
  %8 = load i32, i32* %n, align 4
  %cmp1 = icmp sgt i32 %conv, %8
  br i1 %cmp1, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 1
  %10 = load i16, i16* %word4, align 2
  %conv5 = sext i16 %10 to i32
  store i32 %conv5, i32* %n, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %foundmatch, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end6
  %11 = load i32, i32* %n, align 4
  %12 = load i32, i32* @N_words, align 4
  %cmp7 = icmp slt i32 %11, %12
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %13 = load i32, i32* %n, align 4
  %14 = load i32, i32* %w.addr, align 4
  %sub = sub nsw i32 %13, %14
  %15 = load i32, i32* @maxlinklength, align 4
  %cmp9 = icmp sle i32 %sub, %15
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %16 = phi i1 [ false, %for.cond ], [ %cmp9, %land.rhs ]
  br i1 %16, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %17 = load i32, i32* @power_cost, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* @power_cost, align 4
  %18 = load i32, i32* %word_c.addr, align 4
  %19 = load i32, i32* %shallow.addr, align 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %21 = load i32, i32* %n, align 4
  %call11 = call i32 @left_table_search(i32 %21, %struct.Connector_struct* %20, i32 %19, i32 %18)
  %tobool = icmp ne i32 %call11, 0
  br i1 %tobool, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.body
  store i32 1, i32* %foundmatch, align 4
  br label %for.end

if.end13:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %22 = load i32, i32* %n, align 4
  %inc14 = add nsw i32 %22, 1
  store i32 %inc14, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then12, %land.end
  %23 = load i32, i32* %n, align 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 1
  %25 = load i16, i16* %word15, align 2
  %conv16 = sext i16 %25 to i32
  %cmp17 = icmp sgt i32 %23, %conv16
  br i1 %cmp17, label %if.then19, label %if.end23

if.then19:                                        ; preds = %for.end
  %26 = load i32, i32* %n, align 4
  %conv20 = trunc i32 %26 to i16
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %word21 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 1
  store i16 %conv20, i16* %word21, align 2
  %28 = load i32, i32* @N_changed, align 4
  %inc22 = add nsw i32 %28, 1
  store i32 %inc22, i32* @N_changed, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %for.end
  %29 = load i32, i32* %foundmatch, align 4
  %tobool24 = icmp ne i32 %29, 0
  br i1 %tobool24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end23
  %30 = load i32, i32* %n, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end23
  %31 = load i32, i32* @N_words, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %30, %cond.true ], [ %31, %cond.false ]
  store i32 %cond, i32* %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %32 = load i32, i32* %retval, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind
define void @power_prune(i32 %mode) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %mode.addr = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %free_later = alloca %struct.Disjunct_struct*, align 4
  %dx = alloca %struct.Disjunct_struct*, align 4
  %nd = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %w = alloca i32, align 4
  %N_deleted = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %mode.addr, align 4
  %0 = load i32, i32* %mode.addr, align 4
  store i32 %0, i32* @power_prune_mode, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 145, i32 10)
  store i32 0, i32* @power_cost, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %free_later, align 4
  store i32 1, i32* @N_changed, align 4
  store i32 0, i32* %N_deleted, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end139, %entry, %if.end139, %entry
  store i32 0, i32* %w, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc47, %for.cond, %for.inc47, %for.cond
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end49

for.body:                                         ; preds = %for.cond1, %for.cond1
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %d2 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %d, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc22, %for.body, %for.inc22, %for.body
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp4 = icmp ne %struct.Disjunct_struct* %6, null
  br i1 %cmp4, label %for.body5, label %for.end24

for.body5:                                        ; preds = %for.cond3, %for.cond3
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp6 = icmp eq %struct.Connector_struct* %8, null
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body5, %for.body5
  br label %for.inc22

if.end:                                           ; preds = %for.body5, %for.body5
  %9 = load i32, i32* %w, align 4
  %10 = load i32, i32* %w, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %11, i32 0, i32 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %left7, align 4
  %call = call i32 @left_connector_list_update(%struct.Connector_struct* %12, i32 %10, i32 %9, i32 1)
  %cmp8 = icmp slt i32 %call, 0
  br i1 %cmp8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end, %if.end
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left10 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %left10, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %c, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc, %if.then9, %for.inc, %if.then9
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %15, null
  br i1 %cmp12, label %for.body13, label %for.end

for.body13:                                       ; preds = %for.cond11, %for.cond11
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 1
  store i16 251, i16* %word, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body13, %for.body13
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %c, align 4
  br label %for.cond11

for.end:                                          ; preds = %for.cond11, %for.cond11
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 5
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %20, %struct.Connector_struct** %c, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc18, %for.end, %for.inc18, %for.end
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp15 = icmp ne %struct.Connector_struct* %21, null
  br i1 %cmp15, label %for.body16, label %for.end20

for.body16:                                       ; preds = %for.cond14, %for.cond14
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word17 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 1
  store i16 251, i16* %word17, align 2
  br label %for.inc18

for.inc18:                                        ; preds = %for.body16, %for.body16
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %next19, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %c, align 4
  br label %for.cond14

for.end20:                                        ; preds = %for.cond14, %for.cond14
  %25 = load i32, i32* %N_deleted, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %N_deleted, align 4
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end, %for.end20, %if.end
  br label %for.inc22

for.inc22:                                        ; preds = %if.end21, %if.then, %if.end21, %if.then
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next23 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 0
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next23, align 4
  store %struct.Disjunct_struct* %27, %struct.Disjunct_struct** %d, align 4
  br label %for.cond3

for.end24:                                        ; preds = %for.cond3, %for.cond3
  %28 = load i32, i32* %w, align 4
  %arrayidx25 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %28
  %29 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx25, align 4
  %30 = load i32, i32* %w, align 4
  %arrayidx26 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %30
  %31 = load i32, i32* %arrayidx26, align 4
  %struct.BigStruct_02 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %31, i32* %struct.BigStruct_02
  %struct.BigStruct_133 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 13
  store %struct.c_list_struct** %29, %struct.c_list_struct*** %struct.BigStruct_133
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 26, i32 0)
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %nd, align 4
  %32 = load i32, i32* %w, align 4
  %33 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx27 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %33, i32 0, i32 %32
  %d28 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx27, i32 0, i32 2
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d28, align 4
  store %struct.Disjunct_struct* %34, %struct.Disjunct_struct** %d, align 4
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc43, %for.end24, %for.inc43, %for.end24
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp30 = icmp ne %struct.Disjunct_struct* %35, null
  br i1 %cmp30, label %for.body31, label %for.end44

for.body31:                                       ; preds = %for.cond29, %for.cond29
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next32 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %36, i32 0, i32 0
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next32, align 4
  store %struct.Disjunct_struct* %37, %struct.Disjunct_struct** %dx, align 4
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left33 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %38, i32 0, i32 4
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %left33, align 4
  %cmp34 = icmp ne %struct.Connector_struct* %39, null
  br i1 %cmp34, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body31, %for.body31
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left35 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %40, i32 0, i32 4
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %left35, align 4
  %word36 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %41, i32 0, i32 1
  %42 = load i16, i16* %word36, align 2
  %conv = sext i16 %42 to i32
  %cmp37 = icmp eq i32 %conv, 251
  br i1 %cmp37, label %if.then39, label %if.else

if.then39:                                        ; preds = %land.lhs.true, %land.lhs.true
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %free_later, align 4
  %44 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next40 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %44, i32 0, i32 0
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %next40, align 4
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %45, %struct.Disjunct_struct** %free_later, align 4
  br label %if.end42

if.else:                                          ; preds = %land.lhs.true, %for.body31, %land.lhs.true, %for.body31
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next41 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 0
  store %struct.Disjunct_struct* %46, %struct.Disjunct_struct** %next41, align 4
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %48, %struct.Disjunct_struct** %nd, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then39, %if.else, %if.then39
  br label %for.inc43

for.inc43:                                        ; preds = %if.end42, %if.end42
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %49, %struct.Disjunct_struct** %d, align 4
  br label %for.cond29

for.end44:                                        ; preds = %for.cond29, %for.cond29
  %50 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %51 = load i32, i32* %w, align 4
  %52 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx45 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %52, i32 0, i32 %51
  %d46 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx45, i32 0, i32 2
  store %struct.Disjunct_struct* %50, %struct.Disjunct_struct** %d46, align 4
  br label %for.inc47

for.inc47:                                        ; preds = %for.end44, %for.end44
  %53 = load i32, i32* %w, align 4
  %inc48 = add nsw i32 %53, 1
  store i32 %inc48, i32* %w, align 4
  br label %for.cond1

for.end49:                                        ; preds = %for.cond1, %for.cond1
  %54 = load i32, i32* @verbosity, align 4
  %cmp50 = icmp sgt i32 %54, 2
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %for.end49, %for.end49
  %55 = load i32, i32* %N_deleted, align 4
  %56 = load i32, i32* @N_changed, align 4
  %57 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.5.694, i32 0, i32 0
  %call53 = call i32 (i8*, ...) @printf(i8* %57, i32 %56, i32 %55)
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %for.end49, %if.then52, %for.end49
  %58 = load i32, i32* @N_changed, align 4
  %cmp55 = icmp eq i32 %58, 0
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end54, %if.end54
  br label %for.end140

if.end58:                                         ; preds = %if.end54, %if.end54
  store i32 0, i32* %N_deleted, align 4
  store i32 0, i32* @N_changed, align 4
  %59 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %59, 1
  store i32 %sub, i32* %w, align 4
  br label %for.cond59

for.cond59:                                       ; preds = %for.inc129, %if.end58, %for.inc129, %if.end58
  %60 = load i32, i32* %w, align 4
  %cmp60 = icmp sge i32 %60, 0
  br i1 %cmp60, label %for.body62, label %for.end130

for.body62:                                       ; preds = %for.cond59, %for.cond59
  %61 = load i32, i32* %w, align 4
  %62 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx63 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %62, i32 0, i32 %61
  %d64 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx63, i32 0, i32 2
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d64, align 4
  store %struct.Disjunct_struct* %63, %struct.Disjunct_struct** %d, align 4
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc99, %for.body62, %for.inc99, %for.body62
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp66 = icmp ne %struct.Disjunct_struct* %64, null
  br i1 %cmp66, label %for.body68, label %for.end101

for.body68:                                       ; preds = %for.cond65, %for.cond65
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %65, i32 0, i32 5
  %66 = load %struct.Connector_struct*, %struct.Connector_struct** %right69, align 4
  %cmp70 = icmp eq %struct.Connector_struct* %66, null
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %for.body68, %for.body68
  br label %for.inc99

if.end73:                                         ; preds = %for.body68, %for.body68
  %67 = load i32, i32* %w, align 4
  %68 = load i32, i32* %w, align 4
  %69 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right74 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %69, i32 0, i32 5
  %70 = load %struct.Connector_struct*, %struct.Connector_struct** %right74, align 4
  %call75 = call i32 @right_connector_list_update(%struct.Connector_struct* %70, i32 %68, i32 %67, i32 1)
  %71 = load i32, i32* @N_words, align 4
  %cmp76 = icmp sge i32 %call75, %71
  br i1 %cmp76, label %if.then78, label %if.end98

if.then78:                                        ; preds = %if.end73, %if.end73
  %72 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right79 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %72, i32 0, i32 5
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %right79, align 4
  store %struct.Connector_struct* %73, %struct.Connector_struct** %c, align 4
  br label %for.cond80

for.cond80:                                       ; preds = %for.inc85, %if.then78, %for.inc85, %if.then78
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp81 = icmp ne %struct.Connector_struct* %74, null
  br i1 %cmp81, label %for.body83, label %for.end87

for.body83:                                       ; preds = %for.cond80, %for.cond80
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word84 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %75, i32 0, i32 1
  store i16 251, i16* %word84, align 2
  br label %for.inc85

for.inc85:                                        ; preds = %for.body83, %for.body83
  %76 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next86 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %76, i32 0, i32 4
  %77 = load %struct.Connector_struct*, %struct.Connector_struct** %next86, align 4
  store %struct.Connector_struct* %77, %struct.Connector_struct** %c, align 4
  br label %for.cond80

for.end87:                                        ; preds = %for.cond80, %for.cond80
  %78 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left88 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %78, i32 0, i32 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %left88, align 4
  store %struct.Connector_struct* %79, %struct.Connector_struct** %c, align 4
  br label %for.cond89

for.cond89:                                       ; preds = %for.inc94, %for.end87, %for.inc94, %for.end87
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp90 = icmp ne %struct.Connector_struct* %80, null
  br i1 %cmp90, label %for.body92, label %for.end96

for.body92:                                       ; preds = %for.cond89, %for.cond89
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word93 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %81, i32 0, i32 1
  store i16 251, i16* %word93, align 2
  br label %for.inc94

for.inc94:                                        ; preds = %for.body92, %for.body92
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next95 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %82, i32 0, i32 4
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %next95, align 4
  store %struct.Connector_struct* %83, %struct.Connector_struct** %c, align 4
  br label %for.cond89

for.end96:                                        ; preds = %for.cond89, %for.cond89
  %84 = load i32, i32* %N_deleted, align 4
  %inc97 = add nsw i32 %84, 1
  store i32 %inc97, i32* %N_deleted, align 4
  br label %if.end98

if.end98:                                         ; preds = %for.end96, %if.end73, %for.end96, %if.end73
  br label %for.inc99

for.inc99:                                        ; preds = %if.end98, %if.then72, %if.end98, %if.then72
  %85 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next100 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %85, i32 0, i32 0
  %86 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next100, align 4
  store %struct.Disjunct_struct* %86, %struct.Disjunct_struct** %d, align 4
  br label %for.cond65

for.end101:                                       ; preds = %for.cond65, %for.cond65
  %87 = load i32, i32* %w, align 4
  %arrayidx102 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %87
  %88 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx102, align 4
  %89 = load i32, i32* %w, align 4
  %arrayidx103 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %89
  %90 = load i32, i32* %arrayidx103, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %90, i32* %struct.BigStruct_01
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 13
  store %struct.c_list_struct** %88, %struct.c_list_struct*** %struct.BigStruct_13
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 26, i32 0)
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %nd, align 4
  %91 = load i32, i32* %w, align 4
  %92 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx104 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %92, i32 0, i32 %91
  %d105 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx104, i32 0, i32 2
  %93 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d105, align 4
  store %struct.Disjunct_struct* %93, %struct.Disjunct_struct** %d, align 4
  br label %for.cond106

for.cond106:                                      ; preds = %for.inc125, %for.end101, %for.inc125, %for.end101
  %94 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp107 = icmp ne %struct.Disjunct_struct* %94, null
  br i1 %cmp107, label %for.body109, label %for.end126

for.body109:                                      ; preds = %for.cond106, %for.cond106
  %95 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next110 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %95, i32 0, i32 0
  %96 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next110, align 4
  store %struct.Disjunct_struct* %96, %struct.Disjunct_struct** %dx, align 4
  %97 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right111 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %97, i32 0, i32 5
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %right111, align 4
  %cmp112 = icmp ne %struct.Connector_struct* %98, null
  br i1 %cmp112, label %land.lhs.true114, label %if.else122

land.lhs.true114:                                 ; preds = %for.body109, %for.body109
  %99 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right115 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %99, i32 0, i32 5
  %100 = load %struct.Connector_struct*, %struct.Connector_struct** %right115, align 4
  %word116 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %100, i32 0, i32 1
  %101 = load i16, i16* %word116, align 2
  %conv117 = sext i16 %101 to i32
  %cmp118 = icmp eq i32 %conv117, 251
  br i1 %cmp118, label %if.then120, label %if.else122

if.then120:                                       ; preds = %land.lhs.true114, %land.lhs.true114
  %102 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %free_later, align 4
  %103 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next121 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %103, i32 0, i32 0
  store %struct.Disjunct_struct* %102, %struct.Disjunct_struct** %next121, align 4
  %104 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %104, %struct.Disjunct_struct** %free_later, align 4
  br label %if.end124

if.else122:                                       ; preds = %land.lhs.true114, %for.body109, %land.lhs.true114, %for.body109
  %105 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %106 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next123 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %106, i32 0, i32 0
  store %struct.Disjunct_struct* %105, %struct.Disjunct_struct** %next123, align 4
  %107 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %107, %struct.Disjunct_struct** %nd, align 4
  br label %if.end124

if.end124:                                        ; preds = %if.else122, %if.then120, %if.else122, %if.then120
  br label %for.inc125

for.inc125:                                       ; preds = %if.end124, %if.end124
  %108 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %108, %struct.Disjunct_struct** %d, align 4
  br label %for.cond106

for.end126:                                       ; preds = %for.cond106, %for.cond106
  %109 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %110 = load i32, i32* %w, align 4
  %111 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx127 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %111, i32 0, i32 %110
  %d128 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx127, i32 0, i32 2
  store %struct.Disjunct_struct* %109, %struct.Disjunct_struct** %d128, align 4
  br label %for.inc129

for.inc129:                                       ; preds = %for.end126, %for.end126
  %112 = load i32, i32* %w, align 4
  %dec = add nsw i32 %112, -1
  store i32 %dec, i32* %w, align 4
  br label %for.cond59

for.end130:                                       ; preds = %for.cond59, %for.cond59
  %113 = load i32, i32* @verbosity, align 4
  %cmp131 = icmp sgt i32 %113, 2
  br i1 %cmp131, label %if.then133, label %if.end135

if.then133:                                       ; preds = %for.end130, %for.end130
  %114 = load i32, i32* %N_deleted, align 4
  %115 = load i32, i32* @N_changed, align 4
  %116 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.6.695, i32 0, i32 0
  %call134 = call i32 (i8*, ...) @printf(i8* %116, i32 %115, i32 %114)
  br label %if.end135

if.end135:                                        ; preds = %if.then133, %for.end130, %if.then133, %for.end130
  %117 = load i32, i32* @N_changed, align 4
  %cmp136 = icmp eq i32 %117, 0
  br i1 %cmp136, label %if.then138, label %if.end139

if.then138:                                       ; preds = %if.end135, %if.end135
  br label %for.end140

if.end139:                                        ; preds = %if.end135, %if.end135
  store i32 0, i32* %N_deleted, align 4
  store i32 0, i32* @N_changed, align 4
  br label %for.cond

for.end140:                                       ; preds = %if.then138, %if.then57, %if.then138, %if.then57
  %118 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %free_later, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %118)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 96, i32 0)
  %119 = load i32, i32* @verbosity, align 4
  %cmp141 = icmp sgt i32 %119, 2
  br i1 %cmp141, label %if.then143, label %if.end145

if.then143:                                       ; preds = %for.end140, %for.end140
  %120 = load i32, i32* @power_cost, align 4
  %121 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.7.696, i32 0, i32 0
  %call144 = call i32 (i8*, ...) @printf(i8* %121, i32 %120)
  br label %if.end145

if.end145:                                        ; preds = %if.then143, %for.end140, %if.then143, %for.end140
  ret void
}

; Function Attrs: noinline nounwind
define void @error(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.705, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1, i8* %0)
  %2 = load i32, i32* @line_number, align 4
  %3 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.1.706, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %3, i32 %2)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %4, 5
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %5 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp2 = icmp ne i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp2, %land.rhs ]
  br i1 %7, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %8 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.2.707, i32 0, i32 0
  %9 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %8, i8* %9)
  call void @advance()
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %11 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.3.712, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %11)
  call void @exit_Package(i32 1) #5
  unreachable

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: noinline nounwind
define void @advance() #0 {
entry:
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %quote_mode = alloca i32, align 4
  store i32 0, i32* @is_special, align 4
  %0 = load i32, i32* @advance.already_got_it, align 4
  %cmp = icmp ne i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @advance.already_got_it, align 4
  %2 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.6.708, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %2, i8** %struct.BigStruct_2
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %1, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 79, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %cmp1 = icmp ne i8* %load_struct.BigStruct_34, null
  %conv = zext i1 %cmp1 to i32
  store i32 %conv, i32* @is_special, align 4
  %3 = load i32, i32* @advance.already_got_it, align 4
  %cmp2 = icmp eq i32 %3, -1
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %4 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  store i8 0, i8* %4, align 1
  br label %if.end

if.else:                                          ; preds = %if.then
  %5 = load i32, i32* @advance.already_got_it, align 4
  %conv5 = trunc i32 %5 to i8
  %6 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  store i8 %conv5, i8* %6, align 1
  %7 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 1
  store i8 0, i8* %7, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  store i32 0, i32* @advance.already_got_it, align 4
  br label %return

if.end6:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end6
  %struct.BigStruct_04 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_04
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 97, i32 0)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  store i32 %load_struct.BigStruct_325, i32* %c, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %8 = load i32, i32* %c, align 4
  %call8 = call i32 @isspace_Package(i32 %8)
  %tobool = icmp ne i32 %call8, 0
  br i1 %tobool, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %quote_mode, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end59, %do.end
  %9 = load i32, i32* %i, align 4
  %cmp9 = icmp sgt i32 %9, 49
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %for.cond
  %10 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.7.709, i32 0, i32 0
  call void @error(i8* %10)
  br label %return

if.end12:                                         ; preds = %for.cond
  %11 = load i32, i32* %quote_mode, align 4
  %tobool13 = icmp ne i32 %11, 0
  br i1 %tobool13, label %if.then14, label %if.else25

if.then14:                                        ; preds = %if.end12
  %12 = load i32, i32* %c, align 4
  %cmp15 = icmp eq i32 %12, 34
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.then14
  store i32 0, i32* %quote_mode, align 4
  %13 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %13
  store i8 0, i8* %arrayidx, align 1
  br label %return

if.end18:                                         ; preds = %if.then14
  %14 = load i32, i32* %c, align 4
  %call19 = call i32 @isspace_Package(i32 %14)
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end18
  %15 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.8.710, i32 0, i32 0
  call void @error(i8* %15)
  br label %return

if.end22:                                         ; preds = %if.end18
  %16 = load i32, i32* %c, align 4
  %conv23 = trunc i32 %16 to i8
  %17 = load i32, i32* %i, align 4
  %arrayidx24 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %17
  store i8 %conv23, i8* %arrayidx24, align 1
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end59

if.else25:                                        ; preds = %if.end12
  %19 = load i32, i32* %c, align 4
  %20 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.9.711, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %20, i8** %struct.BigStruct_21
  %struct.BigStruct_52 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %19, i32* %struct.BigStruct_52
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 79, i32 0)
  %struct.BigStruct_343 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_343 = load i8*, i8** %struct.BigStruct_343
  %cmp27 = icmp ne i8* %load_struct.BigStruct_343, null
  br i1 %cmp27, label %if.then29, label %if.end36

if.then29:                                        ; preds = %if.else25
  %21 = load i32, i32* %i, align 4
  %cmp30 = icmp eq i32 %21, 0
  br i1 %cmp30, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.then29
  %22 = load i32, i32* %c, align 4
  %conv33 = trunc i32 %22 to i8
  %23 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  store i8 %conv33, i8* %23, align 1
  %24 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 1
  store i8 0, i8* %24, align 1
  store i32 1, i32* @is_special, align 4
  br label %return

if.end34:                                         ; preds = %if.then29
  %25 = load i32, i32* %i, align 4
  %arrayidx35 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %25
  store i8 0, i8* %arrayidx35, align 1
  %26 = load i32, i32* %c, align 4
  store i32 %26, i32* @advance.already_got_it, align 4
  br label %return

if.end36:                                         ; preds = %if.else25
  %27 = load i32, i32* %c, align 4
  %cmp37 = icmp eq i32 %27, -1
  br i1 %cmp37, label %if.then39, label %if.end45

if.then39:                                        ; preds = %if.end36
  %28 = load i32, i32* %i, align 4
  %cmp40 = icmp eq i32 %28, 0
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.then39
  %29 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  store i8 0, i8* %29, align 1
  br label %return

if.end43:                                         ; preds = %if.then39
  %30 = load i32, i32* %i, align 4
  %arrayidx44 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %30
  store i8 0, i8* %arrayidx44, align 1
  %31 = load i32, i32* %c, align 4
  store i32 %31, i32* @advance.already_got_it, align 4
  br label %return

if.end45:                                         ; preds = %if.end36
  %32 = load i32, i32* %c, align 4
  %call46 = call i32 @isspace_Package(i32 %32)
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.end45
  %33 = load i32, i32* %i, align 4
  %arrayidx49 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %33
  store i8 0, i8* %arrayidx49, align 1
  br label %return

if.end50:                                         ; preds = %if.end45
  %34 = load i32, i32* %c, align 4
  %cmp51 = icmp eq i32 %34, 34
  br i1 %cmp51, label %if.then53, label %if.else54

if.then53:                                        ; preds = %if.end50
  store i32 1, i32* %quote_mode, align 4
  br label %if.end58

if.else54:                                        ; preds = %if.end50
  %35 = load i32, i32* %c, align 4
  %conv55 = trunc i32 %35 to i8
  %36 = load i32, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %36
  store i8 %conv55, i8* %arrayidx56, align 1
  %37 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %37, 1
  store i32 %inc57, i32* %i, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.else54, %if.then53
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end22
  %38 = load i32, i32* %quote_mode, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %38, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 97, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 %load_struct.BigStruct_32, i32* %c, align 4
  br label %for.cond

return:                                           ; preds = %if.then48, %if.end43, %if.then42, %if.end34, %if.then32, %if.then21, %if.then17, %if.then11, %if.end
  ret void
}

; Function Attrs: noinline nounwind
define i32 @get_character(i32 %quote_mode) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %quote_mode.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %quote_mode.addr, align 4
  %0 = load %struct._iobuf*, %struct._iobuf** @dict_file, align 4
  %call = call i32 @fgetc_Package(%struct._iobuf* %0)
  store i32 %call, i32* %c, align 4
  %1 = load i32, i32* %c, align 4
  %cmp = icmp eq i32 %1, 37
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry, %entry
  %2 = load i32, i32* %quote_mode.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then, %while.body, %if.then
  %3 = load i32, i32* %c, align 4
  %cmp1 = icmp ne i32 %3, -1
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond, %while.cond
  %4 = load i32, i32* %c, align 4
  %cmp2 = icmp ne i32 %4, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond, %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %5, label %while.body, label %while.end

while.body:                                       ; preds = %land.end, %land.end
  %6 = load %struct._iobuf*, %struct._iobuf** @dict_file, align 4
  %call3 = call i32 @fgetc_Package(%struct._iobuf* %6)
  store i32 %call3, i32* %c, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end, %land.end
  br label %if.end

if.end:                                           ; preds = %while.end, %land.lhs.true, %entry, %while.end, %land.lhs.true, %entry
  %7 = load i32, i32* %c, align 4
  %cmp4 = icmp eq i32 %7, 10
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end, %if.end
  %8 = load i32, i32* @line_number, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* @line_number, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end, %if.then5, %if.end
  %9 = load i32, i32* %c, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %9, i32* %struct.BigStruct_32
  ret i32 %9
}

declare dllimport i32 @fgetc(%struct._iobuf*) #1

; Function Attrs: noinline nounwind
define void @warning(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.4.713, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1, i8* %0)
  %2 = load i32, i32* @line_number, align 4
  %3 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.5.714, i32 0, i32 0
  %4 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %3, i32 %2, i8* %4)
  ret void
}

; Function Attrs: noinline nounwind
define i32 @is_equal(i32 %c) #0 {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %c.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %c.addr, align 4
  %0 = load i32, i32* @is_special, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry, %entry
  %1 = load i32, i32* %c.addr, align 4
  %2 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %1, %conv
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true, %land.lhs.true
  %4 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 1
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp eq i32 %conv2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry, %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp3, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %land.ext, i32* %struct.BigStruct_32
  ret i32 %land.ext
}

; Function Attrs: noinline nounwind
define i8* @copy_string(i8* %str) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %str.addr = alloca i8*, align 4
  %s = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %str.addr, align 4
  %0 = load i8*, i8** %str.addr, align 4
  %call = call i32 @strlen_Package(i8* %0)
  %add = add i32 %call, 1
  %call1 = call i8* @xalloc(i32 %add)
  store i8* %call1, i8** %s, align 4
  %1 = load i8*, i8** %str.addr, align 4
  %2 = load i8*, i8** %s, align 4
  %call2 = call i8* @strcpy_Package(i8* %2, i8* %1)
  %3 = load i8*, i8** %s, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %3, i8** %struct.BigStruct_34
  ret i8* %3
}

; Function Attrs: noinline nounwind
define void @check_connector(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strlen_Package(i8* %0)
  store i32 %call, i32* %i, align 4
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %2 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.10.715, i32 0, i32 0
  call void @error(i8* %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry, %if.then, %entry
  %3 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %3, 1
  %4 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %sub
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  store i32 %conv, i32* %i, align 4
  %6 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %6, 43
  br i1 %cmp1, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end, %if.end
  %7 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %7, 45
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true, %land.lhs.true
  %8 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.11.716, i32 0, i32 0
  call void @error(i8* %8)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %land.lhs.true, %if.end, %if.then5, %land.lhs.true, %if.end
  %9 = load i8*, i8** %s.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv7 = sext i8 %10 to i32
  %cmp8 = icmp eq i32 %conv7, 64
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6, %if.end6
  %11 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end6, %if.then10, %if.end6
  %12 = load i8*, i8** %s.addr, align 4
  %13 = load i8, i8* %12, align 1
  %conv12 = sext i8 %13 to i32
  %call13 = call i32 @isupper_Package(i32 %conv12)
  %tobool = icmp ne i32 %call13, 0
  br i1 %tobool, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.end11, %if.end11
  %14 = getelementptr inbounds [51 x i8], [51 x i8]* @.str.12.717, i32 0, i32 0
  call void @error(i8* %14)
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end11, %if.then14, %if.end11
  %15 = load i8*, i8** %s.addr, align 4
  %16 = load i8, i8* %15, align 1
  %conv16 = sext i8 %16 to i32
  %cmp17 = icmp eq i32 %conv16, 73
  br i1 %cmp17, label %land.lhs.true19, label %if.end24

land.lhs.true19:                                  ; preds = %if.end15, %if.end15
  %17 = load i8*, i8** %s.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %17, i32 1
  %18 = load i8, i8* %add.ptr, align 1
  %conv20 = sext i8 %18 to i32
  %cmp21 = icmp eq i32 %conv20, 68
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %land.lhs.true19, %land.lhs.true19
  %19 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.13.718, i32 0, i32 0
  call void @error(i8* %19)
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true19, %if.end15, %if.then23, %land.lhs.true19, %if.end15
  br label %while.cond

while.cond:                                       ; preds = %if.end39, %if.end24, %if.end39, %if.end24
  %20 = load i8*, i8** %s.addr, align 4
  %add.ptr25 = getelementptr inbounds i8, i8* %20, i32 1
  %21 = load i8, i8* %add.ptr25, align 1
  %tobool26 = icmp ne i8 %21, 0
  br i1 %tobool26, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %22 = load i8*, i8** %s.addr, align 4
  %23 = load i8, i8* %22, align 1
  %conv27 = sext i8 %23 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv27, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 98, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool29 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool29, label %if.end39, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %while.body, %while.body
  %24 = load i8*, i8** %s.addr, align 4
  %25 = load i8, i8* %24, align 1
  %conv31 = sext i8 %25 to i32
  %cmp32 = icmp ne i32 %conv31, 42
  br i1 %cmp32, label %land.lhs.true34, label %if.end39

land.lhs.true34:                                  ; preds = %land.lhs.true30, %land.lhs.true30
  %26 = load i8*, i8** %s.addr, align 4
  %27 = load i8, i8* %26, align 1
  %conv35 = sext i8 %27 to i32
  %cmp36 = icmp ne i32 %conv35, 94
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %land.lhs.true34, %land.lhs.true34
  %28 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.14.719, i32 0, i32 0
  call void @error(i8* %28)
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %land.lhs.true34, %land.lhs.true30, %while.body, %if.then38, %land.lhs.true34, %land.lhs.true30, %while.body
  %29 = load i8*, i8** %s.addr, align 4
  %incdec.ptr40 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr40, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  ret void
}

declare dllimport i32 @isalnum(i32) #1

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @connector() #0 {
entry:
  %n = alloca %struct.Exp_struct*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %i = alloca i32, align 4
  %0 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %call = call i32 @strlen_Package(i8* %0)
  %sub = sub i32 %call, 1
  store i32 %sub, i32* %i, align 4
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 43
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry, %entry
  %3 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %3
  %4 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %4 to i32
  %cmp4 = icmp ne i32 %conv3, 45
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %5 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %5, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then, %while.body, %if.then
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp7 = icmp ne %struct.Dict_node_struct* %6, null
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond, %while.cond
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %7, i32 0, i32 0
  %8 = load i8*, i8** %string, align 4
  %9 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %call9 = call i32 @strcmp_Package(i8* %8, i8* %9)
  %cmp10 = icmp ne i32 %call9, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond, %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %land.end, %land.end
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %11, i32 0, i32 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end, %land.end
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp12 = icmp eq %struct.Dict_node_struct* %13, null
  br i1 %cmp12, label %if.then14, label %if.end

if.then14:                                        ; preds = %while.end, %while.end
  %14 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.15.724, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printf(i8* %14)
  %15 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.16.725, i32 0, i32 0
  %call16 = call i32 (i8*, ...) @printf(i8* %15)
  %16 = getelementptr inbounds [48 x i8], [48 x i8]* @.str.17.726, i32 0, i32 0
  call void @error(i8* %16)
  br label %if.end

if.end:                                           ; preds = %if.then14, %while.end, %if.then14, %while.end
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 2
  %18 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 28
  store %struct.Exp_struct* %18, %struct.Exp_struct** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 153, i32 10)
  %struct.BigStruct_425 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  %load_struct.BigStruct_425 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_425
  store %struct.Exp_struct* %load_struct.BigStruct_425, %struct.Exp_struct** %n, align 4
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true, %entry, %land.lhs.true, %entry
  %19 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %19, i8** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 150, i32 10)
  %call18 = call i8* @xalloc(i32 8)
  %20 = bitcast i8* %call18 to %struct.Exp_struct*
  store %struct.Exp_struct* %20, %struct.Exp_struct** %n, align 4
  %21 = load i32, i32* %i, align 4
  %arrayidx19 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %21
  %22 = load i8, i8* %arrayidx19, align 1
  %23 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %dir = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %23, i32 0, i32 2
  store i8 %22, i8* %dir, align 2
  %24 = load i32, i32* %i, align 4
  %arrayidx20 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %24
  store i8 0, i8* %arrayidx20, align 1
  %25 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %26 = load i8, i8* %25, align 1
  %conv21 = sext i8 %26 to i32
  %cmp22 = icmp eq i32 %conv21, 64
  br i1 %cmp22, label %if.then24, label %if.else27

if.then24:                                        ; preds = %if.else, %if.else
  %27 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 1
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %27, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 149, i32 10)
  %struct.BigStruct_342 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_342 = load i8*, i8** %struct.BigStruct_342
  %28 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %28, i32 0, i32 4
  %string26 = bitcast %union.anon* %u to i8**
  store i8* %load_struct.BigStruct_342, i8** %string26, align 4
  %29 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %multi = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %29, i32 0, i32 3
  store i8 1, i8* %multi, align 1
  br label %if.end32

if.else27:                                        ; preds = %if.else, %if.else
  %30 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %30, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 149, i32 10)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %31 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u29 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %31, i32 0, i32 4
  %string30 = bitcast %union.anon* %u29 to i8**
  store i8* %load_struct.BigStruct_34, i8** %string30, align 4
  %32 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %multi31 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %32, i32 0, i32 3
  store i8 0, i8* %multi31, align 1
  br label %if.end32

if.end32:                                         ; preds = %if.else27, %if.then24, %if.else27, %if.then24
  %33 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %33, i32 0, i32 0
  store i8 2, i8* %type, align 4
  %34 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %34, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end, %if.end32, %if.end
  call void @advance()
  %35 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %35, %struct.Exp_struct** %struct.BigStruct_42
  ret %struct.Exp_struct* %35
}

; Function Attrs: noinline nounwind
define %struct.Dict_node_struct* @abridged_lookup(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  call void @rabridged_lookup(%struct.Dict_node_struct* %1, i8* %0)
  %2 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %2, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 45, i32 1)
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  store %struct.Dict_node_struct* %3, %struct.Dict_node_struct** %struct.BigStruct_41
  ret %struct.Dict_node_struct* %3
}

; Function Attrs: noinline nounwind
define void @free_lookup_list() #0 {
entry:
  %n = alloca %struct.Dict_node_struct*, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry, %while.body, %entry
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %2, %struct.Dict_node_struct** %n, align 4
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %4 = bitcast %struct.Dict_node_struct* %3 to i8*
  call void @xfree(i8* %4, i32 20)
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n, align 4
  store %struct.Dict_node_struct* %5, %struct.Dict_node_struct** @lookup_list, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @rabridged_lookup(%struct.Dict_node_struct* %dn, i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %m = alloca i32, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  store i8* %s, i8** %s.addr, align 4
  store %struct.Dict_node_struct* %dn, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end13

if.end:                                           ; preds = %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 0
  %2 = load i8*, i8** %string, align 4
  %3 = load i8*, i8** %s.addr, align 4
  %call = call i32 @dict_match(i8* %3, i8* %2)
  store i32 %call, i32* %m, align 4
  %4 = load i32, i32* %m, align 4
  %cmp1 = icmp sge i32 %4, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 4
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  call void @rabridged_lookup(%struct.Dict_node_struct* %7, i8* %5)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load i32, i32* %m, align 4
  %cmp4 = icmp eq i32 %8, 0
  br i1 %cmp4, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %if.end3
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string5 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %9, i32 0, i32 0
  %10 = load i8*, i8** %string5, align 4
  %call6 = call i32 @is_idiom_word(i8* %10)
  %tobool = icmp ne i32 %call6, 0
  br i1 %tobool, label %if.end10, label %if.then7

if.then7:                                         ; preds = %land.lhs.true
  %call8 = call i8* @xalloc(i32 20)
  %11 = bitcast i8* %call8 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %11, %struct.Dict_node_struct** %dn_new, align 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %14 = bitcast %struct.Dict_node_struct* %12 to i8*
  %15 = bitcast %struct.Dict_node_struct* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %14, i8* %15, i32 20, i32 4, i1 false)
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %right9 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 4
  store %struct.Dict_node_struct* %16, %struct.Dict_node_struct** %right9, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %18, %struct.Dict_node_struct** @lookup_list, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %if.end3
  %19 = load i32, i32* %m, align 4
  %cmp11 = icmp sle i32 %19, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end10
  %20 = load i8*, i8** %s.addr, align 4
  %21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %21, i32 0, i32 3
  %22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  call void @rabridged_lookup(%struct.Dict_node_struct* %22, i8* %20)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end10, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define i32 @dict_match(i8* %s, i8* %t) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  store i8* %t, i8** %t.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %4 = load i8*, i8** %t.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv3 = sext i8 %5 to i32
  %cmp4 = icmp eq i32 %conv2, %conv3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %8 = load i8*, i8** %t.addr, align 4
  %incdec.ptr6 = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr6, i8** %t.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %9 = load i8*, i8** %s.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv7 = sext i8 %10 to i32
  %cmp8 = icmp eq i32 %conv7, 42
  br i1 %cmp8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %11 = load i8*, i8** %t.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv10 = sext i8 %12 to i32
  %cmp11 = icmp eq i32 %conv10, 42
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %while.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %13 = load i8*, i8** %s.addr, align 4
  %14 = load i8, i8* %13, align 1
  %conv13 = sext i8 %14 to i32
  %cmp14 = icmp eq i32 %conv13, 46
  br i1 %cmp14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %15 = load i8*, i8** %s.addr, align 4
  %16 = load i8, i8* %15, align 1
  %conv16 = sext i8 %16 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv16, %cond.false ]
  %17 = load i8*, i8** %t.addr, align 4
  %18 = load i8, i8* %17, align 1
  %conv17 = sext i8 %18 to i32
  %cmp18 = icmp eq i32 %conv17, 46
  br i1 %cmp18, label %cond.true20, label %cond.false21

cond.true20:                                      ; preds = %cond.end
  br label %cond.end23

cond.false21:                                     ; preds = %cond.end
  %19 = load i8*, i8** %t.addr, align 4
  %20 = load i8, i8* %19, align 1
  %conv22 = sext i8 %20 to i32
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false21, %cond.true20
  %cond24 = phi i32 [ 0, %cond.true20 ], [ %conv22, %cond.false21 ]
  %sub = sub nsw i32 %cond, %cond24
  store i32 %sub, i32* %retval, align 4
  br label %return

return:                                           ; preds = %cond.end23, %if.then
  %21 = load i32, i32* %retval, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind
define void @prune_lookup_list(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %dnx = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %dn_new, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  store %struct.Dict_node_struct* %0, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 4
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %3, %struct.Dict_node_struct** %dnx, align 4
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %5, i32 0, i32 0
  %6 = load i8*, i8** %string, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %6, i8** %struct.BigStruct_21
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %4, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 27, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body, %for.body
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right1 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 4
  store %struct.Dict_node_struct* %7, %struct.Dict_node_struct** %right1, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %dn_new, align 4
  br label %if.end

if.else:                                          ; preds = %for.body, %for.body
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %11 = bitcast %struct.Dict_node_struct* %10 to i8*
  call void @xfree(i8* %11, i32 20)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then, %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** @lookup_list, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc7, %for.end, %for.inc7, %for.end
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp3 = icmp ne %struct.Dict_node_struct* %14, null
  br i1 %cmp3, label %for.body4, label %for.end8

for.body4:                                        ; preds = %for.cond2, %for.cond2
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right5 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %15, i32 0, i32 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right5, align 4
  store %struct.Dict_node_struct* %16, %struct.Dict_node_struct** %dnx, align 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right6 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 4
  store %struct.Dict_node_struct* %17, %struct.Dict_node_struct** %right6, align 4
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  store %struct.Dict_node_struct* %19, %struct.Dict_node_struct** @lookup_list, align 4
  br label %for.inc7

for.inc7:                                         ; preds = %for.body4, %for.body4
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  store %struct.Dict_node_struct* %20, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond2

for.end8:                                         ; preds = %for.cond2, %for.cond2
  ret void
}

; Function Attrs: noinline nounwind
define i32 @true_dict_match(i8* %s, i8* %t) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %ds = alloca i8*, align 4
  %dt = alloca i8*, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i8* @strrchr_Package(i8* %0, i32 46)
  store i8* %call, i8** %ds, align 4
  %1 = load i8*, i8** %t.addr, align 4
  %call1 = call i8* @strrchr_Package(i8* %1, i32 46)
  store i8* %call1, i8** %dt, align 4
  %2 = load i8*, i8** %dt, align 4
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry, %entry
  %3 = load i8*, i8** %dt, align 4
  %add.ptr = getelementptr inbounds i8, i8* %3, i32 1
  %4 = load i8, i8* %add.ptr, align 1
  %conv = sext i8 %4 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %land.lhs.true
  %5 = load i8*, i8** %dt, align 4
  %add.ptr4 = getelementptr inbounds i8, i8* %5, i32 1
  %6 = load i8, i8* %add.ptr4, align 1
  %conv5 = sext i8 %6 to i32
  %call6 = call i32 @isdigit_Package(i32 %conv5)
  %tobool = icmp ne i32 %call6, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true, %lor.lhs.false, %land.lhs.true
  store i8* null, i8** %dt, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry, %if.then, %lor.lhs.false, %entry
  %7 = load i8*, i8** %ds, align 4
  %cmp7 = icmp ne i8* %7, null
  br i1 %cmp7, label %land.lhs.true9, label %if.end20

land.lhs.true9:                                   ; preds = %if.end, %if.end
  %8 = load i8*, i8** %ds, align 4
  %add.ptr10 = getelementptr inbounds i8, i8* %8, i32 1
  %9 = load i8, i8* %add.ptr10, align 1
  %conv11 = sext i8 %9 to i32
  %cmp12 = icmp eq i32 %conv11, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %land.lhs.true9, %land.lhs.true9
  %10 = load i8*, i8** %ds, align 4
  %add.ptr15 = getelementptr inbounds i8, i8* %10, i32 1
  %11 = load i8, i8* %add.ptr15, align 1
  %conv16 = sext i8 %11 to i32
  %call17 = call i32 @isdigit_Package(i32 %conv16)
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %lor.lhs.false14, %land.lhs.true9, %lor.lhs.false14, %land.lhs.true9
  store i8* null, i8** %ds, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %lor.lhs.false14, %if.end, %if.then19, %lor.lhs.false14, %if.end
  %12 = load i8*, i8** %dt, align 4
  %cmp21 = icmp eq i8* %12, null
  br i1 %cmp21, label %land.lhs.true23, label %if.else

land.lhs.true23:                                  ; preds = %if.end20, %if.end20
  %13 = load i8*, i8** %ds, align 4
  %cmp24 = icmp ne i8* %13, null
  br i1 %cmp24, label %if.then26, label %if.else

if.then26:                                        ; preds = %land.lhs.true23, %land.lhs.true23
  %14 = load i8*, i8** %t.addr, align 4
  %call27 = call i32 @strlen_Package(i8* %14)
  %15 = load i8*, i8** %ds, align 4
  %16 = load i8*, i8** %s.addr, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %16 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp28 = icmp sgt i32 %call27, %sub.ptr.sub
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.then26, %if.then26
  store i32 0, i32* %retval, align 4
  br label %return

if.end31:                                         ; preds = %if.then26, %if.then26
  %17 = load i8*, i8** %ds, align 4
  %18 = load i8*, i8** %s.addr, align 4
  %sub.ptr.lhs.cast32 = ptrtoint i8* %17 to i32
  %sub.ptr.rhs.cast33 = ptrtoint i8* %18 to i32
  %sub.ptr.sub34 = sub i32 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33
  %19 = load i8*, i8** %t.addr, align 4
  %20 = load i8*, i8** %s.addr, align 4
  %call35 = call i32 @strncmp_Package(i8* %20, i8* %19, i32 %sub.ptr.sub34)
  %cmp36 = icmp eq i32 %call35, 0
  %conv37 = zext i1 %cmp36 to i32
  store i32 %conv37, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %land.lhs.true23, %if.end20, %land.lhs.true23, %if.end20
  %21 = load i8*, i8** %dt, align 4
  %cmp38 = icmp ne i8* %21, null
  br i1 %cmp38, label %land.lhs.true40, label %if.else58

land.lhs.true40:                                  ; preds = %if.else, %if.else
  %22 = load i8*, i8** %ds, align 4
  %cmp41 = icmp eq i8* %22, null
  br i1 %cmp41, label %if.then43, label %if.else58

if.then43:                                        ; preds = %land.lhs.true40, %land.lhs.true40
  %23 = load i8*, i8** %s.addr, align 4
  %call44 = call i32 @strlen_Package(i8* %23)
  %24 = load i8*, i8** %dt, align 4
  %25 = load i8*, i8** %t.addr, align 4
  %sub.ptr.lhs.cast45 = ptrtoint i8* %24 to i32
  %sub.ptr.rhs.cast46 = ptrtoint i8* %25 to i32
  %sub.ptr.sub47 = sub i32 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46
  %cmp48 = icmp sgt i32 %call44, %sub.ptr.sub47
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.then43, %if.then43
  store i32 0, i32* %retval, align 4
  br label %return

if.end51:                                         ; preds = %if.then43, %if.then43
  %26 = load i8*, i8** %dt, align 4
  %27 = load i8*, i8** %t.addr, align 4
  %sub.ptr.lhs.cast52 = ptrtoint i8* %26 to i32
  %sub.ptr.rhs.cast53 = ptrtoint i8* %27 to i32
  %sub.ptr.sub54 = sub i32 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53
  %28 = load i8*, i8** %t.addr, align 4
  %29 = load i8*, i8** %s.addr, align 4
  %call55 = call i32 @strncmp_Package(i8* %29, i8* %28, i32 %sub.ptr.sub54)
  %cmp56 = icmp eq i32 %call55, 0
  %conv57 = zext i1 %cmp56 to i32
  store i32 %conv57, i32* %retval, align 4
  br label %return

if.else58:                                        ; preds = %land.lhs.true40, %if.else, %land.lhs.true40, %if.else
  %30 = load i8*, i8** %t.addr, align 4
  %31 = load i8*, i8** %s.addr, align 4
  %call59 = call i32 @strcmp_Package(i8* %31, i8* %30)
  %cmp60 = icmp eq i32 %call59, 0
  %conv61 = zext i1 %cmp60 to i32
  store i32 %conv61, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else58, %if.end51, %if.then50, %if.end31, %if.then30, %if.else58, %if.end51, %if.then50, %if.end31, %if.then30
  %32 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %32, i32* %struct.BigStruct_32
  ret i32 %32
}

declare dllimport i8* @strrchr(i8*, i32) #1

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @make_unary_node(%struct.Exp_struct* %e) #0 {
entry:
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 28
  %load_struct.BigStruct_28 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_28
  %e.addr = alloca %struct.Exp_struct*, align 4
  %n = alloca %struct.Exp_struct*, align 4
  store %struct.Exp_struct* %load_struct.BigStruct_28, %struct.Exp_struct** %e.addr, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Exp_struct*
  store %struct.Exp_struct* %0, %struct.Exp_struct** %n, align 4
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %1, i32 0, i32 0
  store i8 1, i8* %type, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %call1 = call i8* @xalloc(i32 8)
  %3 = bitcast i8* %call1 to %struct.E_list_struct*
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %4, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  store %struct.E_list_struct* %3, %struct.E_list_struct** %l, align 4
  %5 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u2 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %5, i32 0, i32 4
  %l3 = bitcast %union.anon* %u2 to %struct.E_list_struct**
  %6 = load %struct.E_list_struct*, %struct.E_list_struct** %l3, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %6, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next, align 4
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u4 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %8, i32 0, i32 4
  %l5 = bitcast %union.anon* %u4 to %struct.E_list_struct**
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %l5, align 4
  %e6 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %9, i32 0, i32 1
  store %struct.Exp_struct* %7, %struct.Exp_struct** %e6, align 4
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %10, %struct.Exp_struct** %struct.BigStruct_42
  ret %struct.Exp_struct* %10
}

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @make_zeroary_node() #0 {
entry:
  %n = alloca %struct.Exp_struct*, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Exp_struct*
  store %struct.Exp_struct* %0, %struct.Exp_struct** %n, align 4
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %1, i32 0, i32 0
  store i8 1, i8* %type, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %3 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %3, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  store %struct.E_list_struct* null, %struct.E_list_struct** %l, align 4
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %4, %struct.Exp_struct** %struct.BigStruct_42
  ret %struct.Exp_struct* %4
}

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @make_optional_node(%struct.Exp_struct* %e) #0 {
entry:
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 28
  %load_struct.BigStruct_28 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_28
  %e.addr = alloca %struct.Exp_struct*, align 4
  %n = alloca %struct.Exp_struct*, align 4
  %el = alloca %struct.E_list_struct*, align 4
  %elx = alloca %struct.E_list_struct*, align 4
  store %struct.Exp_struct* %load_struct.BigStruct_28, %struct.Exp_struct** %e.addr, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Exp_struct*
  store %struct.Exp_struct* %0, %struct.Exp_struct** %n, align 4
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %1, i32 0, i32 0
  store i8 0, i8* %type, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %call1 = call i8* @xalloc(i32 8)
  %3 = bitcast i8* %call1 to %struct.E_list_struct*
  store %struct.E_list_struct* %3, %struct.E_list_struct** %el, align 4
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %4, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  store %struct.E_list_struct* %3, %struct.E_list_struct** %l, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 154, i32 10)
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  %load_struct.BigStruct_42 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_42
  %5 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  %e3 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %5, i32 0, i32 1
  store %struct.Exp_struct* %load_struct.BigStruct_42, %struct.Exp_struct** %e3, align 4
  %call4 = call i8* @xalloc(i32 8)
  %6 = bitcast i8* %call4 to %struct.E_list_struct*
  store %struct.E_list_struct* %6, %struct.E_list_struct** %elx, align 4
  %7 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %7, i32 0, i32 0
  store %struct.E_list_struct* %6, %struct.E_list_struct** %next, align 4
  %8 = load %struct.E_list_struct*, %struct.E_list_struct** %elx, align 4
  %next5 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %8, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next5, align 4
  %9 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %10 = load %struct.E_list_struct*, %struct.E_list_struct** %elx, align 4
  %e6 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %10, i32 0, i32 1
  store %struct.Exp_struct* %9, %struct.Exp_struct** %e6, align 4
  %11 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_421 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %11, %struct.Exp_struct** %struct.BigStruct_421
  ret %struct.Exp_struct* %11
}

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @expression() #0 {
entry:
  %call = call %struct.Exp_struct* @restricted_expression(i32 1, i32 1)
  ret %struct.Exp_struct* %call
}

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @restricted_expression(i32 %and_ok, i32 %or_ok) #0 {
entry:
  %retval = alloca %struct.Exp_struct*, align 4
  %or_ok.addr = alloca i32, align 4
  %and_ok.addr = alloca i32, align 4
  %nl = alloca %struct.Exp_struct*, align 4
  %nr = alloca %struct.Exp_struct*, align 4
  %n = alloca %struct.Exp_struct*, align 4
  %ell = alloca %struct.E_list_struct*, align 4
  %elr = alloca %struct.E_list_struct*, align 4
  store i32 %or_ok, i32* %or_ok.addr, align 4
  store i32 %and_ok, i32* %and_ok.addr, align 4
  store %struct.Exp_struct* null, %struct.Exp_struct** %nl, align 4
  %struct.BigStruct_018 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 40, i32* %struct.BigStruct_018
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_3219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3219 = load i32, i32* %struct.BigStruct_3219
  %tobool = icmp ne i32 %load_struct.BigStruct_3219, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @advance()
  %call1 = call %struct.Exp_struct* @expression()
  store %struct.Exp_struct* %call1, %struct.Exp_struct** %nl, align 4
  %struct.BigStruct_016 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 41, i32* %struct.BigStruct_016
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_3217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3217 = load i32, i32* %struct.BigStruct_3217
  %tobool3 = icmp ne i32 %load_struct.BigStruct_3217, 0
  br i1 %tobool3, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %0 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.18.727, i32 0, i32 0
  call void @error(i8* %0)
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  call void @advance()
  br label %if.end40

if.else:                                          ; preds = %entry
  %struct.BigStruct_014 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 123, i32* %struct.BigStruct_014
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_3215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3215 = load i32, i32* %struct.BigStruct_3215
  %tobool6 = icmp ne i32 %load_struct.BigStruct_3215, 0
  br i1 %tobool6, label %if.then7, label %if.else14

if.then7:                                         ; preds = %if.else
  call void @advance()
  %call8 = call %struct.Exp_struct* @expression()
  store %struct.Exp_struct* %call8, %struct.Exp_struct** %nl, align 4
  %struct.BigStruct_012 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 125, i32* %struct.BigStruct_012
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_3213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3213 = load i32, i32* %struct.BigStruct_3213
  %tobool10 = icmp ne i32 %load_struct.BigStruct_3213, 0
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.then7
  %1 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.19.728, i32 0, i32 0
  call void @error(i8* %1)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.then7
  call void @advance()
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %nl, align 4
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 28
  store %struct.Exp_struct* %2, %struct.Exp_struct** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 155, i32 9)
  %struct.BigStruct_4221 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  %load_struct.BigStruct_4221 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_4221
  store %struct.Exp_struct* %load_struct.BigStruct_4221, %struct.Exp_struct** %nl, align 4
  br label %if.end39

if.else14:                                        ; preds = %if.else
  %struct.BigStruct_010 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 91, i32* %struct.BigStruct_010
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_3211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3211 = load i32, i32* %struct.BigStruct_3211
  %tobool16 = icmp ne i32 %load_struct.BigStruct_3211, 0
  br i1 %tobool16, label %if.then17, label %if.else24

if.then17:                                        ; preds = %if.else14
  call void @advance()
  %call18 = call %struct.Exp_struct* @expression()
  store %struct.Exp_struct* %call18, %struct.Exp_struct** %nl, align 4
  %struct.BigStruct_08 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 93, i32* %struct.BigStruct_08
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_329 = load i32, i32* %struct.BigStruct_329
  %tobool20 = icmp ne i32 %load_struct.BigStruct_329, 0
  br i1 %tobool20, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.then17
  %3 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.20.729, i32 0, i32 0
  call void @error(i8* %3)
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.then17
  call void @advance()
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %nl, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %4, i32 0, i32 1
  %5 = load i8, i8* %cost, align 1
  %conv = zext i8 %5 to i32
  %add = add nsw i32 %conv, 1
  %conv23 = trunc i32 %add to i8
  store i8 %conv23, i8* %cost, align 1
  br label %if.end38

if.else24:                                        ; preds = %if.else14
  %6 = load i32, i32* @is_special, align 4
  %tobool25 = icmp ne i32 %6, 0
  br i1 %tobool25, label %if.else28, label %if.then26

if.then26:                                        ; preds = %if.else24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 151, i32 9)
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  %load_struct.BigStruct_42 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_42
  store %struct.Exp_struct* %load_struct.BigStruct_42, %struct.Exp_struct** %nl, align 4
  br label %if.end37

if.else28:                                        ; preds = %if.else24
  %struct.BigStruct_06 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 41, i32* %struct.BigStruct_06
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  %tobool30 = icmp ne i32 %load_struct.BigStruct_327, 0
  br i1 %tobool30, label %if.then33, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else28
  %struct.BigStruct_04 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 93, i32* %struct.BigStruct_04
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %tobool32 = icmp ne i32 %load_struct.BigStruct_325, 0
  br i1 %tobool32, label %if.then33, label %if.else35

if.then33:                                        ; preds = %lor.lhs.false, %if.else28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 154, i32 10)
  %struct.BigStruct_4220 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  %load_struct.BigStruct_4220 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_4220
  store %struct.Exp_struct* %load_struct.BigStruct_4220, %struct.Exp_struct** %nl, align 4
  br label %if.end36

if.else35:                                        ; preds = %lor.lhs.false
  %7 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.21.730, i32 0, i32 0
  call void @error(i8* %7)
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.then33
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end22
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end12
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end
  %struct.BigStruct_02 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 38, i32* %struct.BigStruct_02
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool42 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool42, label %if.then46, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %if.end40
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.22.731, i32 0, i32 0
  %call44 = call i32 @strcmp_Package(i8* %8, i8* %9)
  %cmp = icmp eq i32 %call44, 0
  br i1 %cmp, label %if.then46, label %if.else57

if.then46:                                        ; preds = %lor.lhs.false43, %if.end40
  %10 = load i32, i32* %and_ok.addr, align 4
  %tobool47 = icmp ne i32 %10, 0
  br i1 %tobool47, label %if.end49, label %if.then48

if.then48:                                        ; preds = %if.then46
  %11 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.23.732, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %11, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 147, i32 10)
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.then46
  call void @advance()
  %call50 = call %struct.Exp_struct* @restricted_expression(i32 1, i32 0)
  store %struct.Exp_struct* %call50, %struct.Exp_struct** %nr, align 4
  %call51 = call i8* @xalloc(i32 8)
  %12 = bitcast i8* %call51 to %struct.Exp_struct*
  store %struct.Exp_struct* %12, %struct.Exp_struct** %n, align 4
  %call52 = call i8* @xalloc(i32 8)
  %13 = bitcast i8* %call52 to %struct.E_list_struct*
  store %struct.E_list_struct* %13, %struct.E_list_struct** %ell, align 4
  %14 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %14, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  store %struct.E_list_struct* %13, %struct.E_list_struct** %l, align 4
  %call53 = call i8* @xalloc(i32 8)
  %15 = bitcast i8* %call53 to %struct.E_list_struct*
  store %struct.E_list_struct* %15, %struct.E_list_struct** %elr, align 4
  %16 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %16, i32 0, i32 0
  store %struct.E_list_struct* %15, %struct.E_list_struct** %next, align 4
  %17 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next54 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %17, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next54, align 4
  %18 = load %struct.Exp_struct*, %struct.Exp_struct** %nl, align 4
  %19 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %19, i32 0, i32 1
  store %struct.Exp_struct* %18, %struct.Exp_struct** %e, align 4
  %20 = load %struct.Exp_struct*, %struct.Exp_struct** %nr, align 4
  %21 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e55 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %21, i32 0, i32 1
  store %struct.Exp_struct* %20, %struct.Exp_struct** %e55, align 4
  %22 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %22, i32 0, i32 0
  store i8 1, i8* %type, align 4
  %23 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost56 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %23, i32 0, i32 1
  store i8 0, i8* %cost56, align 1
  br label %if.end82

if.else57:                                        ; preds = %lor.lhs.false43
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 124, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool59 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool59, label %if.then64, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %if.else57
  %24 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %25 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.24.733, i32 0, i32 0
  %call61 = call i32 @strcmp_Package(i8* %24, i8* %25)
  %cmp62 = icmp eq i32 %call61, 0
  br i1 %cmp62, label %if.then64, label %if.else80

if.then64:                                        ; preds = %lor.lhs.false60, %if.else57
  %26 = load i32, i32* %or_ok.addr, align 4
  %tobool65 = icmp ne i32 %26, 0
  br i1 %tobool65, label %if.end67, label %if.then66

if.then66:                                        ; preds = %if.then64
  %27 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.25.734, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %27, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 147, i32 10)
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %if.then64
  call void @advance()
  %call68 = call %struct.Exp_struct* @restricted_expression(i32 0, i32 1)
  store %struct.Exp_struct* %call68, %struct.Exp_struct** %nr, align 4
  %call69 = call i8* @xalloc(i32 8)
  %28 = bitcast i8* %call69 to %struct.Exp_struct*
  store %struct.Exp_struct* %28, %struct.Exp_struct** %n, align 4
  %call70 = call i8* @xalloc(i32 8)
  %29 = bitcast i8* %call70 to %struct.E_list_struct*
  store %struct.E_list_struct* %29, %struct.E_list_struct** %ell, align 4
  %30 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u71 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %30, i32 0, i32 4
  %l72 = bitcast %union.anon* %u71 to %struct.E_list_struct**
  store %struct.E_list_struct* %29, %struct.E_list_struct** %l72, align 4
  %call73 = call i8* @xalloc(i32 8)
  %31 = bitcast i8* %call73 to %struct.E_list_struct*
  store %struct.E_list_struct* %31, %struct.E_list_struct** %elr, align 4
  %32 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next74 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %32, i32 0, i32 0
  store %struct.E_list_struct* %31, %struct.E_list_struct** %next74, align 4
  %33 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next75 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %33, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next75, align 4
  %34 = load %struct.Exp_struct*, %struct.Exp_struct** %nl, align 4
  %35 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e76 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %35, i32 0, i32 1
  store %struct.Exp_struct* %34, %struct.Exp_struct** %e76, align 4
  %36 = load %struct.Exp_struct*, %struct.Exp_struct** %nr, align 4
  %37 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e77 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %37, i32 0, i32 1
  store %struct.Exp_struct* %36, %struct.Exp_struct** %e77, align 4
  %38 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type78 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %38, i32 0, i32 0
  store i8 0, i8* %type78, align 4
  %39 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost79 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %39, i32 0, i32 1
  store i8 0, i8* %cost79, align 1
  br label %if.end81

if.else80:                                        ; preds = %lor.lhs.false60
  %40 = load %struct.Exp_struct*, %struct.Exp_struct** %nl, align 4
  store %struct.Exp_struct* %40, %struct.Exp_struct** %retval, align 4
  br label %return

if.end81:                                         ; preds = %if.end67
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end49
  %41 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  store %struct.Exp_struct* %41, %struct.Exp_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end82, %if.else80
  %42 = load %struct.Exp_struct*, %struct.Exp_struct** %retval, align 4
  ret %struct.Exp_struct* %42
}

; Function Attrs: noinline nounwind
define i32 @dict_compare(i8* %s, i8* %t) #0 {
entry:
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  store i8* %t, i8** %t.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %4 = load i8*, i8** %t.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv3 = sext i8 %5 to i32
  %cmp4 = icmp eq i32 %conv2, %conv3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %8 = load i8*, i8** %t.addr, align 4
  %incdec.ptr6 = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr6, i8** %t.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %9 = load i8*, i8** %s.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv7 = sext i8 %10 to i32
  %cmp8 = icmp eq i32 %conv7, 46
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  br label %cond.end

cond.false:                                       ; preds = %while.end
  %11 = load i8*, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv10 = sext i8 %12 to i32
  %shl = shl i32 %conv10, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %shl, %cond.false ]
  %13 = load i8*, i8** %t.addr, align 4
  %14 = load i8, i8* %13, align 1
  %conv11 = sext i8 %14 to i32
  %cmp12 = icmp eq i32 %conv11, 46
  br i1 %cmp12, label %cond.true14, label %cond.false15

cond.true14:                                      ; preds = %cond.end
  br label %cond.end18

cond.false15:                                     ; preds = %cond.end
  %15 = load i8*, i8** %t.addr, align 4
  %16 = load i8, i8* %15, align 1
  %conv16 = sext i8 %16 to i32
  %shl17 = shl i32 %conv16, 1
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false15, %cond.true14
  %cond19 = phi i32 [ 1, %cond.true14 ], [ %shl17, %cond.false15 ]
  %sub = sub nsw i32 %cond, %cond19
  ret i32 %sub
}

; Function Attrs: noinline nounwind
define %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %n, %struct.Dict_node_struct* %new) #0 {
entry:
  %retval = alloca %struct.Dict_node_struct*, align 4
  %new.addr = alloca %struct.Dict_node_struct*, align 4
  %n.addr = alloca %struct.Dict_node_struct*, align 4
  %comp = alloca i32, align 4
  store %struct.Dict_node_struct* %new, %struct.Dict_node_struct** %new.addr, align 4
  store %struct.Dict_node_struct* %n, %struct.Dict_node_struct** %n.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  store %struct.Dict_node_struct* %1, %struct.Dict_node_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 0
  %3 = load i8*, i8** %string, align 4
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %string1 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %4, i32 0, i32 0
  %5 = load i8*, i8** %string1, align 4
  %call = call i32 @dict_compare(i8* %5, i8* %3)
  store i32 %call, i32* %comp, align 4
  %6 = load i32, i32* %comp, align 4
  %cmp2 = icmp slt i32 %6, 0
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 3
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  %call4 = call %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %9, %struct.Dict_node_struct* %7)
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %left5 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %10, i32 0, i32 3
  store %struct.Dict_node_struct* %call4, %struct.Dict_node_struct** %left5, align 4
  br label %if.end14

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %comp, align 4
  %cmp6 = icmp sgt i32 %11, 0
  br i1 %cmp6, label %if.then7, label %if.else10

if.then7:                                         ; preds = %if.else
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %13, i32 0, i32 4
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %call8 = call %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %14, %struct.Dict_node_struct* %12)
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %right9 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %15, i32 0, i32 4
  store %struct.Dict_node_struct* %call8, %struct.Dict_node_struct** %right9, align 4
  br label %if.end13

if.else10:                                        ; preds = %if.else
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %string11 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %16, i32 0, i32 0
  %17 = load i8*, i8** %string11, align 4
  %18 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.26.737, i32 0, i32 0
  %call12 = call i32 (i8*, ...) @printf(i8* %18, i8* %17)
  %19 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.27.738, i32 0, i32 0
  call void @error(i8* %19)
  br label %if.end13

if.end13:                                         ; preds = %if.else10, %if.then7
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then3
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  store %struct.Dict_node_struct* %20, %struct.Dict_node_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end14, %if.then
  %21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %retval, align 4
  ret %struct.Dict_node_struct* %21
}

; Function Attrs: noinline nounwind
define void @insert_list(%struct.Dict_node_struct* %p, i32 %l) #0 {
entry:
  %l.addr = alloca i32, align 4
  %p.addr = alloca %struct.Dict_node_struct*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %dnx = alloca %struct.Dict_node_struct*, align 4
  %dn_second_half = alloca %struct.Dict_node_struct*, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %l, i32* %l.addr, align 4
  store %struct.Dict_node_struct* %p, %struct.Dict_node_struct** %p.addr, align 4
  %0 = load i32, i32* %l.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %l.addr, align 4
  %sub = sub nsw i32 %1, 1
  %div = sdiv i32 %sub, 2
  store i32 %div, i32* %k, align 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  store %struct.Dict_node_struct* %2, %struct.Dict_node_struct** %dn, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %k, align 4
  %cmp1 = icmp slt i32 %3, %4
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %5, i32 0, i32 3
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  store %struct.Dict_node_struct* %6, %struct.Dict_node_struct** %dn, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %left2 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 3
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left2, align 4
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %dn_second_half, align 4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %10, i32 0, i32 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %right, align 4
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %left3 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %11, i32 0, i32 3
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %left3, align 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %12, i32 0, i32 0
  %13 = load i8*, i8** %string, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %13, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 73, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then4, label %if.else

if.then4:                                         ; preds = %for.end
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 114, i32 9)
  br label %if.end35

if.else:                                          ; preds = %for.end
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string5 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %15, i32 0, i32 0
  %16 = load i8*, i8** %string5, align 4
  %call6 = call i32 @is_idiom_word(i8* %16)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.then8, label %if.else13

if.then8:                                         ; preds = %if.else
  %17 = load i32, i32* @line_number, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string9 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 0
  %19 = load i8*, i8** %string9, align 4
  %20 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.28.739, i32 0, i32 0
  %call10 = call i32 (i8*, ...) @printf(i8* %20, i8* %19, i32 %17)
  %21 = getelementptr inbounds [62 x i8], [62 x i8]* @.str.29.740, i32 0, i32 0
  %call11 = call i32 (i8*, ...) @printf(i8* %21)
  %22 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.30.741, i32 0, i32 0
  %call12 = call i32 (i8*, ...) @printf(i8* %22)
  br label %if.end34

if.else13:                                        ; preds = %if.else
  %23 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string14 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %23, i32 0, i32 0
  %24 = load i8*, i8** %string14, align 4
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %24, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dnx, align 4
  %cmp16 = icmp ne %struct.Dict_node_struct* %load_struct.BigStruct_41, null
  br i1 %cmp16, label %if.then17, label %if.else30

if.then17:                                        ; preds = %if.else13
  %25 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string18 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %25, i32 0, i32 0
  %26 = load i8*, i8** %string18, align 4
  %27 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.31.742, i32 0, i32 0
  %call19 = call i32 (i8*, ...) @printf(i8* %27, i8* %26)
  %28 = load i32, i32* @line_number, align 4
  %29 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.32.743, i32 0, i32 0
  %call20 = call i32 (i8*, ...) @printf(i8* %29, i32 %28)
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc26, %if.then17
  %30 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %cmp22 = icmp ne %struct.Dict_node_struct* %30, null
  br i1 %cmp22, label %for.body23, label %for.end28

for.body23:                                       ; preds = %for.cond21
  %31 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %string24 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %31, i32 0, i32 0
  %32 = load i8*, i8** %string24, align 4
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.33.744, i32 0, i32 0
  %call25 = call i32 (i8*, ...) @printf(i8* %33, i8* %32)
  br label %for.inc26

for.inc26:                                        ; preds = %for.body23
  %34 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %right27 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %34, i32 0, i32 4
  %35 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right27, align 4
  store %struct.Dict_node_struct* %35, %struct.Dict_node_struct** %dnx, align 4
  br label %for.cond21

for.end28:                                        ; preds = %for.cond21
  %36 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.34.745, i32 0, i32 0
  %call29 = call i32 (i8*, ...) @printf(i8* %36)
  br label %if.end33

if.else30:                                        ; preds = %if.else13
  %37 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %38 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call31 = call %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %38, %struct.Dict_node_struct* %37)
  store %struct.Dict_node_struct* %call31, %struct.Dict_node_struct** @dict_root, align 4
  %39 = load i32, i32* @N_dict, align 4
  %inc32 = add nsw i32 %39, 1
  store i32 %inc32, i32* @N_dict, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %for.end28
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then8
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then4
  %40 = load i32, i32* %k, align 4
  %41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  call void @insert_list(%struct.Dict_node_struct* %41, i32 %40)
  %42 = load i32, i32* %l.addr, align 4
  %43 = load i32, i32* %k, align 4
  %sub36 = sub nsw i32 %42, %43
  %sub37 = sub nsw i32 %sub36, 1
  %44 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_second_half, align 4
  call void @insert_list(%struct.Dict_node_struct* %44, i32 %sub37)
  br label %return

return:                                           ; preds = %if.end35, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @read_entry() #0 {
entry:
  %n = alloca %struct.Exp_struct*, align 4
  %i = alloca i32, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  %dnx = alloca %struct.Dict_node_struct*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 58, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %tobool = icmp ne i32 %load_struct.BigStruct_322, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %0 = load i32, i32* @is_special, align 4
  %tobool1 = icmp ne i32 %0, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  %1 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.35.746, i32 0, i32 0
  call void @error(i8* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.then, %for.body
  %2 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 47
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end, %if.end
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %5 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %4, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %5, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 160, i32 9)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn, align 4
  br label %if.end7

if.else:                                          ; preds = %if.end, %if.end
  %call5 = call i8* @xalloc(i32 20)
  %6 = bitcast i8* %call5 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %6, %struct.Dict_node_struct** %dn_new, align 4
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 3
  store %struct.Dict_node_struct* %7, %struct.Dict_node_struct** %left, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %dn, align 4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %10, i32 0, i32 1
  store %struct.Word_file_struct* null, %struct.Word_file_struct** %file, align 4
  %11 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %11, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 149, i32 10)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %12, i32 0, i32 0
  store i8* %load_struct.BigStruct_34, i8** %string, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then3, %if.else, %if.then3
  br label %for.inc

for.inc:                                          ; preds = %if.end7, %if.end7
  call void @advance()
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  call void @advance()
  %call8 = call %struct.Exp_struct* @expression()
  store %struct.Exp_struct* %call8, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 59, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool10 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %for.end, %for.end
  %13 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.36.747, i32 0, i32 0
  call void @error(i8* %13)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %for.end, %if.then11, %for.end
  call void @advance()
  store i32 0, i32* %i, align 4
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %dnx, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc17, %if.end12, %for.inc17, %if.end12
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %cmp14 = icmp ne %struct.Dict_node_struct* %15, null
  br i1 %cmp14, label %for.body16, label %for.end19

for.body16:                                       ; preds = %for.cond13, %for.cond13
  %16 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 2
  store %struct.Exp_struct* %16, %struct.Exp_struct** %exp, align 4
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.inc17

for.inc17:                                        ; preds = %for.body16, %for.body16
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %left18 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %19, i32 0, i32 3
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left18, align 4
  store %struct.Dict_node_struct* %20, %struct.Dict_node_struct** %dnx, align 4
  br label %for.cond13

for.end19:                                        ; preds = %for.cond13, %for.cond13
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  call void @insert_list(%struct.Dict_node_struct* %22, i32 %21)
  ret void
}

; Function Attrs: noinline nounwind
define void @print_expression(%struct.Exp_struct* %n) #0 {
entry:
  %n.addr = alloca %struct.Exp_struct*, align 4
  %el = alloca %struct.E_list_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Exp_struct* %n, %struct.Exp_struct** %n.addr, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %cmp = icmp eq %struct.Exp_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.37.748, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1)
  br label %if.end75

if.end:                                           ; preds = %entry
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 0
  %3 = load i8, i8* %type, align 4
  %conv = sext i8 %3 to i32
  %cmp1 = icmp eq i32 %conv, 2
  br i1 %cmp1, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then3
  %4 = load i32, i32* %i, align 4
  %5 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %5, i32 0, i32 1
  %6 = load i8, i8* %cost, align 1
  %conv4 = zext i8 %6 to i32
  %cmp5 = icmp slt i32 %4, %conv4
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.38.749, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printf(i8* %7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %dir = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %9, i32 0, i32 2
  %10 = load i8, i8* %dir, align 2
  %conv8 = sext i8 %10 to i32
  %11 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %11, i32 0, i32 4
  %string = bitcast %union.anon* %u to i8**
  %12 = load i8*, i8** %string, align 4
  %13 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.39.750, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %13, i8* %12, i32 %conv8)
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc17, %for.end
  %14 = load i32, i32* %i, align 4
  %15 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %cost11 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %15, i32 0, i32 1
  %16 = load i8, i8* %cost11, align 1
  %conv12 = zext i8 %16 to i32
  %cmp13 = icmp slt i32 %14, %conv12
  br i1 %cmp13, label %for.body15, label %for.end19

for.body15:                                       ; preds = %for.cond10
  %17 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.40.751, i32 0, i32 0
  %call16 = call i32 (i8*, ...) @printf(i8* %17)
  br label %for.inc17

for.inc17:                                        ; preds = %for.body15
  %18 = load i32, i32* %i, align 4
  %inc18 = add nsw i32 %18, 1
  store i32 %inc18, i32* %i, align 4
  br label %for.cond10

for.end19:                                        ; preds = %for.cond10
  br label %if.end75

if.else:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc27, %if.else
  %19 = load i32, i32* %i, align 4
  %20 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %cost21 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %20, i32 0, i32 1
  %21 = load i8, i8* %cost21, align 1
  %conv22 = zext i8 %21 to i32
  %cmp23 = icmp slt i32 %19, %conv22
  br i1 %cmp23, label %for.body25, label %for.end29

for.body25:                                       ; preds = %for.cond20
  %22 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.41.752, i32 0, i32 0
  %call26 = call i32 (i8*, ...) @printf(i8* %22)
  br label %for.inc27

for.inc27:                                        ; preds = %for.body25
  %23 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %23, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond20

for.end29:                                        ; preds = %for.cond20
  %24 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %cost30 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %24, i32 0, i32 1
  %25 = load i8, i8* %cost30, align 1
  %conv31 = zext i8 %25 to i32
  %cmp32 = icmp eq i32 %conv31, 0
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %for.end29
  %26 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.42.753, i32 0, i32 0
  %call35 = call i32 (i8*, ...) @printf(i8* %26)
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %for.end29
  %27 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %type37 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %27, i32 0, i32 0
  %28 = load i8, i8* %type37, align 4
  %conv38 = sext i8 %28 to i32
  %cmp39 = icmp eq i32 %conv38, 1
  br i1 %cmp39, label %if.then41, label %if.end43

if.then41:                                        ; preds = %if.end36
  %29 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.43.754, i32 0, i32 0
  %call42 = call i32 (i8*, ...) @printf(i8* %29)
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end36
  %30 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %type44 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %30, i32 0, i32 0
  %31 = load i8, i8* %type44, align 4
  %conv45 = sext i8 %31 to i32
  %cmp46 = icmp eq i32 %conv45, 0
  br i1 %cmp46, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.end43
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.44.755, i32 0, i32 0
  %call49 = call i32 (i8*, ...) @printf(i8* %32)
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.end43
  %33 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %u51 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %33, i32 0, i32 4
  %l = bitcast %union.anon* %u51 to %struct.E_list_struct**
  %34 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  store %struct.E_list_struct* %34, %struct.E_list_struct** %el, align 4
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc56, %if.end50
  %35 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  %cmp53 = icmp ne %struct.E_list_struct* %35, null
  br i1 %cmp53, label %for.body55, label %for.end57

for.body55:                                       ; preds = %for.cond52
  %36 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %36, i32 0, i32 1
  %37 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  call void @print_expression(%struct.Exp_struct* %37)
  br label %for.inc56

for.inc56:                                        ; preds = %for.body55
  %38 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %38, i32 0, i32 0
  %39 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  store %struct.E_list_struct* %39, %struct.E_list_struct** %el, align 4
  br label %for.cond52

for.end57:                                        ; preds = %for.cond52
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc65, %for.end57
  %40 = load i32, i32* %i, align 4
  %41 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %cost59 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %41, i32 0, i32 1
  %42 = load i8, i8* %cost59, align 1
  %conv60 = zext i8 %42 to i32
  %cmp61 = icmp slt i32 %40, %conv60
  br i1 %cmp61, label %for.body63, label %for.end67

for.body63:                                       ; preds = %for.cond58
  %43 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.45.756, i32 0, i32 0
  %call64 = call i32 (i8*, ...) @printf(i8* %43)
  br label %for.inc65

for.inc65:                                        ; preds = %for.body63
  %44 = load i32, i32* %i, align 4
  %inc66 = add nsw i32 %44, 1
  store i32 %inc66, i32* %i, align 4
  br label %for.cond58

for.end67:                                        ; preds = %for.cond58
  %45 = load %struct.Exp_struct*, %struct.Exp_struct** %n.addr, align 4
  %cost68 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %45, i32 0, i32 1
  %46 = load i8, i8* %cost68, align 1
  %conv69 = zext i8 %46 to i32
  %cmp70 = icmp eq i32 %conv69, 0
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %for.end67
  %47 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.46.757, i32 0, i32 0
  %call73 = call i32 (i8*, ...) @printf(i8* %47)
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %for.end67
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %for.end19, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @rprint_dictionary_data(%struct.Dict_node_struct* %n) #0 {
entry:
  %n.addr = alloca %struct.Dict_node_struct*, align 4
  store %struct.Dict_node_struct* %n, %struct.Dict_node_struct** %n.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 3
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  call void @rprint_dictionary_data(%struct.Dict_node_struct* %2)
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %3, i32 0, i32 0
  %4 = load i8*, i8** %string, align 4
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.47.758, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %5, i8* %4)
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 2
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  call void @print_expression(%struct.Exp_struct* %7)
  %8 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.48.759, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %8)
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %9, i32 0, i32 4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  call void @rprint_dictionary_data(%struct.Dict_node_struct* %10)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @print_dictionary_data() #0 {
entry:
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  call void @rprint_dictionary_data(%struct.Dict_node_struct* %0)
  ret void
}

; Function Attrs: noinline nounwind
define void @read_dictionary() #0 {
entry:
  call void @advance()
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry, %while.body, %entry
  %0 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 175, i32 8)
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @rdictionary_lookup(%struct.Dict_node_struct* %dn, i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %m = alloca i32, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  store i8* %s, i8** %s.addr, align 4
  store %struct.Dict_node_struct* %dn, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end11

if.end:                                           ; preds = %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 0
  %2 = load i8*, i8** %string, align 4
  %3 = load i8*, i8** %s.addr, align 4
  %call = call i32 @dict_match(i8* %3, i8* %2)
  store i32 %call, i32* %m, align 4
  %4 = load i32, i32* %m, align 4
  %cmp1 = icmp sge i32 %4, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 4
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  call void @rdictionary_lookup(%struct.Dict_node_struct* %7, i8* %5)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load i32, i32* %m, align 4
  %cmp4 = icmp eq i32 %8, 0
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end3
  %call6 = call i8* @xalloc(i32 20)
  %9 = bitcast i8* %call6 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %dn_new, align 4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %12 = bitcast %struct.Dict_node_struct* %10 to i8*
  %13 = bitcast %struct.Dict_node_struct* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %12, i8* %13, i32 20, i32 4, i1 false)
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %right7 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %15, i32 0, i32 4
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %right7, align 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %16, %struct.Dict_node_struct** @lookup_list, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end3
  %17 = load i32, i32* %m, align 4
  %cmp9 = icmp sle i32 %17, 0
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  %18 = load i8*, i8** %s.addr, align 4
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %19, i32 0, i32 3
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  call void @rdictionary_lookup(%struct.Dict_node_struct* %20, i8* %18)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define %struct.Dict_node_struct* @dictionary_lookup(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  call void @rdictionary_lookup(%struct.Dict_node_struct* %1, i8* %0)
  %2 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %2, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 45, i32 1)
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  ret %struct.Dict_node_struct* %3
}

; Function Attrs: noinline nounwind
define i32 @boolean_dictionary_lookup(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  %cmp = icmp ne %struct.Dict_node_struct* %call, null
  %conv = zext i1 %cmp to i32
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %conv, i32* %struct.BigStruct_32
  ret i32 %conv
}

; Function Attrs: noinline nounwind
define i32 @boolean_abridged_lookup(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  %cmp = icmp ne %struct.Dict_node_struct* %load_struct.BigStruct_41, null
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: noinline nounwind
define i32 @find_one_non_idiom_node(%struct.Dict_node_struct* %p, %struct.Dict_node_struct* %dn, i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %p.addr = alloca %struct.Dict_node_struct*, align 4
  %m = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 4
  store %struct.Dict_node_struct* %dn, %struct.Dict_node_struct** %dn.addr, align 4
  store %struct.Dict_node_struct* %p, %struct.Dict_node_struct** %p.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 0
  %2 = load i8*, i8** %string, align 4
  %3 = load i8*, i8** %s.addr, align 4
  %call = call i32 @dict_match(i8* %3, i8* %2)
  store i32 %call, i32* %m, align 4
  %4 = load i32, i32* %m, align 4
  %cmp1 = icmp sle i32 %4, 0
  br i1 %cmp1, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 3
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %call3 = call i32 @find_one_non_idiom_node(%struct.Dict_node_struct* %8, %struct.Dict_node_struct* %7, i8* %5)
  %tobool = icmp ne i32 %call3, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.then2
  store i32 1, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %if.then2
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  %9 = load i32, i32* %m, align 4
  %cmp7 = icmp eq i32 %9, 0
  br i1 %cmp7, label %land.lhs.true, label %if.end12

land.lhs.true:                                    ; preds = %if.end6
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string8 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %10, i32 0, i32 0
  %11 = load i8*, i8** %string8, align 4
  %call9 = call i32 @is_idiom_word(i8* %11)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %land.lhs.true
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** @to_be_deleted, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** @parent, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end12:                                         ; preds = %land.lhs.true, %if.end6
  %14 = load i32, i32* %m, align 4
  %cmp13 = icmp sge i32 %14, 0
  br i1 %cmp13, label %if.then14, label %if.end19

if.then14:                                        ; preds = %if.end12
  %15 = load i8*, i8** %s.addr, align 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %16, i32 0, i32 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %call15 = call i32 @find_one_non_idiom_node(%struct.Dict_node_struct* %18, %struct.Dict_node_struct* %17, i8* %15)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.then14
  store i32 1, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %if.then14
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end12
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end19, %if.then17, %if.then11, %if.then4, %if.then
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define void @set_parent_of_node(%struct.Dict_node_struct* %p, %struct.Dict_node_struct* %del, %struct.Dict_node_struct* %new) #0 {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 22
  %load_struct.BigStruct_22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_22
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 23
  %load_struct.BigStruct_23 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_23
  %new.addr = alloca %struct.Dict_node_struct*, align 4
  %del.addr = alloca %struct.Dict_node_struct*, align 4
  %p.addr = alloca %struct.Dict_node_struct*, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_23, %struct.Dict_node_struct** %new.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_22, %struct.Dict_node_struct** %del.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %p.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry, %entry
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  store %struct.Dict_node_struct* %1, %struct.Dict_node_struct** @dict_root, align 4
  br label %if.end10

if.else:                                          ; preds = %entry, %entry
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 3
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %del.addr, align 4
  %cmp1 = icmp eq %struct.Dict_node_struct* %3, %4
  br i1 %cmp1, label %if.then2, label %if.else4

if.then2:                                         ; preds = %if.else, %if.else
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %left3 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 3
  store %struct.Dict_node_struct* %5, %struct.Dict_node_struct** %left3, align 4
  br label %if.end9

if.else4:                                         ; preds = %if.else, %if.else
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %7, i32 0, i32 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %del.addr, align 4
  %cmp5 = icmp eq %struct.Dict_node_struct* %8, %9
  br i1 %cmp5, label %if.then6, label %if.else8

if.then6:                                         ; preds = %if.else4, %if.else4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %right7 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %11, i32 0, i32 4
  store %struct.Dict_node_struct* %10, %struct.Dict_node_struct** %right7, align 4
  br label %if.end

if.else8:                                         ; preds = %if.else4, %if.else4
  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.50.766, i32 0, i32 0
  %13 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.49.767, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %12, i8* %13)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %if.then6, %if.then6
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then2, %if.end, %if.then2
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then, %if.end9, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define i32 @delete_dictionary_words(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %pred = alloca %struct.Dict_node_struct*, align 4
  %pred_parent = alloca %struct.Dict_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call = call i32 @find_one_non_idiom_node(%struct.Dict_node_struct* null, %struct.Dict_node_struct* %1, i8* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry, %entry
  br label %for.cond

for.cond:                                         ; preds = %if.end19, %if.end, %if.end19, %if.end
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 1
  %3 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file, align 4
  %cmp = icmp ne %struct.Word_file_struct* %3, null
  br i1 %cmp, label %if.then1, label %if.end3

if.then1:                                         ; preds = %for.cond, %for.cond
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %file2 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %4, i32 0, i32 1
  %5 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file2, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %5, i32 0, i32 1
  store i32 1, i32* %changed, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %for.cond, %if.then1, %for.cond
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 3
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  %cmp4 = icmp eq %struct.Dict_node_struct* %7, null
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end3, %if.end3
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @parent, align 4
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %11, %struct.Dict_node_struct** %struct.BigStruct_211
  %struct.BigStruct_222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 22
  store %struct.Dict_node_struct* %10, %struct.Dict_node_struct** %struct.BigStruct_222
  %struct.BigStruct_233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 23
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %struct.BigStruct_233
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 47, i32 0)
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %13 = bitcast %struct.Dict_node_struct* %12 to i8*
  call void @xfree(i8* %13, i32 20)
  br label %if.end15

if.else:                                          ; preds = %if.end3, %if.end3
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %pred_parent, align 4
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %left6 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %15, i32 0, i32 3
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left6, align 4
  store %struct.Dict_node_struct* %16, %struct.Dict_node_struct** %pred, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else, %while.body, %if.else
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %right7 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right7, align 4
  %cmp8 = icmp ne %struct.Dict_node_struct* %18, null
  br i1 %cmp8, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  store %struct.Dict_node_struct* %19, %struct.Dict_node_struct** %pred_parent, align 4
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %right9 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %20, i32 0, i32 4
  %21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right9, align 4
  store %struct.Dict_node_struct* %21, %struct.Dict_node_struct** %pred, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %22, i32 0, i32 0
  %23 = load i8*, i8** %string, align 4
  %24 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %string10 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %24, i32 0, i32 0
  store i8* %23, i8** %string10, align 4
  %25 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %file11 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %25, i32 0, i32 1
  %26 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file11, align 4
  %27 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %file12 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %27, i32 0, i32 1
  store %struct.Word_file_struct* %26, %struct.Word_file_struct** %file12, align 4
  %28 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %28, i32 0, i32 2
  %29 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %30 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %exp13 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %30, i32 0, i32 2
  store %struct.Exp_struct* %29, %struct.Exp_struct** %exp13, align 4
  %31 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %left14 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %31, i32 0, i32 3
  %32 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left14, align 4
  %33 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %34 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred_parent, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %34, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 22
  store %struct.Dict_node_struct* %33, %struct.Dict_node_struct** %struct.BigStruct_22
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 23
  store %struct.Dict_node_struct* %32, %struct.Dict_node_struct** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 47, i32 0)
  %35 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %36 = bitcast %struct.Dict_node_struct* %35 to i8*
  call void @xfree(i8* %36, i32 20)
  br label %if.end15

if.end15:                                         ; preds = %while.end, %if.then5, %while.end, %if.then5
  %37 = load i8*, i8** %s.addr, align 4
  %38 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call16 = call i32 @find_one_non_idiom_node(%struct.Dict_node_struct* null, %struct.Dict_node_struct* %38, i8* %37)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end19, label %if.then18

if.then18:                                        ; preds = %if.end15, %if.end15
  store i32 1, i32* %retval, align 4
  br label %return

if.end19:                                         ; preds = %if.end15, %if.end15
  br label %for.cond

return:                                           ; preds = %if.then18, %if.then, %if.then18, %if.then
  %39 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %39, i32* %struct.BigStruct_32
  ret i32 %39
}

; Function Attrs: noinline nounwind
define void @open_dictionary(i8* %s) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.51.772, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_21
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %1, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 157, i32 10)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  store %struct._iobuf* %load_struct.BigStruct_38, %struct._iobuf** @dict_file, align 4
  %cmp = icmp eq %struct._iobuf* %load_struct.BigStruct_38, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %2 = load i8*, i8** %s.addr, align 4
  %3 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.52.773, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %3, i8* %2)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %entry, %entry
  ret void
}

declare dllimport %struct._iobuf* @fopen(i8*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @strncasecmp(i8* %s1, i8* %s2, i32 %n) #0 {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %retval = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %s2.addr = alloca i8*, align 4
  %s1.addr = alloca i8*, align 4
  %i = alloca i8*, align 4
  %j = alloca i8*, align 4
  %ui = alloca i8, align 1
  %uj = alloca i8, align 1
  store i32 %load_struct.BigStruct_5, i32* %n.addr, align 4
  store i8* %load_struct.BigStruct_3, i8** %s2.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s1.addr, align 4
  %0 = load i8*, i8** %s1.addr, align 4
  store i8* %0, i8** %i, align 4
  %1 = load i8*, i8** %s2.addr, align 4
  store i8* %1, i8** %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %2 = load i8*, i8** %i, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond, %for.cond
  %4 = load i8*, i8** %j, align 4
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond, %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %6, label %for.body, label %for.end

for.body:                                         ; preds = %land.end, %land.end
  %7 = load i32, i32* %n.addr, align 4
  %dec = add i32 %7, -1
  store i32 %dec, i32* %n.addr, align 4
  %cmp5 = icmp eq i32 %7, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body, %for.body
  %8 = load i8*, i8** %i, align 4
  %9 = load i8, i8* %8, align 1
  %conv7 = sext i8 %9 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv7, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv8 = trunc i32 %load_struct.BigStruct_32 to i8
  store i8 %conv8, i8* %ui, align 1
  %10 = load i8*, i8** %j, align 4
  %11 = load i8, i8* %10, align 1
  %conv9 = sext i8 %11 to i32
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv9, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %conv11 = trunc i32 %load_struct.BigStruct_322 to i8
  store i8 %conv11, i8* %uj, align 1
  %12 = load i8, i8* %ui, align 1
  %conv12 = sext i8 %12 to i32
  %13 = load i8, i8* %uj, align 1
  %conv13 = sext i8 %13 to i32
  %cmp14 = icmp slt i32 %conv12, %conv13
  br i1 %cmp14, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end, %if.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end, %if.end
  %14 = load i8, i8* %ui, align 1
  %conv17 = sext i8 %14 to i32
  %15 = load i8, i8* %uj, align 1
  %conv18 = sext i8 %15 to i32
  %cmp19 = icmp sgt i32 %conv17, %conv18
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.else, %if.else
  store i32 1, i32* %retval, align 4
  br label %return

if.end22:                                         ; preds = %if.else, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end22
  br label %for.inc

for.inc:                                          ; preds = %if.end23, %if.end23
  %16 = load i8*, i8** %i, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr, i8** %i, align 4
  %17 = load i8*, i8** %j, align 4
  %incdec.ptr24 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr24, i8** %j, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end, %land.end
  %18 = load i8*, i8** %i, align 4
  %19 = load i8, i8* %18, align 1
  %tobool = icmp ne i8 %19, 0
  br i1 %tobool, label %if.then25, label %if.end26

if.then25:                                        ; preds = %for.end, %for.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.end26:                                         ; preds = %for.end, %for.end
  %20 = load i8*, i8** %j, align 4
  %21 = load i8, i8* %20, align 1
  %tobool27 = icmp ne i8 %21, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end26, %if.end26
  store i32 1, i32* %retval, align 4
  br label %return

if.end29:                                         ; preds = %if.end26, %if.end26
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end29, %if.then28, %if.then25, %if.then21, %if.then16, %if.then, %if.end29, %if.then28, %if.then25, %if.then21, %if.then16, %if.then
  %22 = load i32, i32* %retval, align 4
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %22, i32* %struct.BigStruct_323
  ret i32 %22
}

; Function Attrs: noinline nounwind
define void @free_connectors(%struct.Connector_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Connector_struct*, align 4
  %n = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %e, %struct.Connector_struct** %e.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Connector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %2, %struct.Connector_struct** %n, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %4 = bitcast %struct.Connector_struct* %3 to i8*
  call void @xfree(i8* %4, i32 16)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %n, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %e.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_disjuncts(%struct.Disjunct_struct* %c) #0 {
entry:
  %c.addr = alloca %struct.Disjunct_struct*, align 4
  %c1 = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %c, %struct.Disjunct_struct** %c.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 0
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %c1, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  call void @free_connectors(%struct.Connector_struct* %4)
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %5, i32 0, i32 5
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  call void @free_connectors(%struct.Connector_struct* %6)
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c.addr, align 4
  %8 = bitcast %struct.Disjunct_struct* %7 to i8*
  call void @xfree(i8* %8, i32 20)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %c1, align 4
  store %struct.Disjunct_struct* %9, %struct.Disjunct_struct** %c.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_X_nodes(%struct.X_node_struct* %x) #0 {
entry:
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  %load_struct.BigStruct_14 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_14
  %x.addr = alloca %struct.X_node_struct*, align 4
  %y = alloca %struct.X_node_struct*, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_14, %struct.X_node_struct** %x.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %cmp = icmp ne %struct.X_node_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %1, i32 0, i32 2
  %2 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %2, %struct.X_node_struct** %y, align 4
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %3, i32 0, i32 1
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  call void @free_Exp(%struct.Exp_struct* %4)
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %6 = bitcast %struct.X_node_struct* %5 to i8*
  call void @xfree(i8* %6, i32 12)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %y, align 4
  store %struct.X_node_struct* %7, %struct.X_node_struct** %x.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @free_Exp(%struct.Exp_struct* %e) #0 {
entry:
  %e.addr = alloca %struct.Exp_struct*, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %0, i32 0, i32 0
  %1 = load i8, i8* %type, align 4
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  %3 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  call void @free_E_list(%struct.E_list_struct* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %5 = bitcast %struct.Exp_struct* %4 to i8*
  call void @xfree(i8* %5, i32 8)
  ret void
}

; Function Attrs: noinline nounwind
define void @free_E_list(%struct.E_list_struct* %l) #0 {
entry:
  %l.addr = alloca %struct.E_list_struct*, align 4
  store %struct.E_list_struct* %l, %struct.E_list_struct** %l.addr, align 4
  %0 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %cmp = icmp eq %struct.E_list_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %1, i32 0, i32 0
  %2 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  call void @free_E_list(%struct.E_list_struct* %2)
  %3 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %3, i32 0, i32 1
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  call void @free_Exp(%struct.Exp_struct* %4)
  %5 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %6 = bitcast %struct.E_list_struct* %5 to i8*
  call void @xfree(i8* %6, i32 8)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define i32 @size_of_expression(%struct.Exp_struct* %e) #0 {
entry:
  %retval = alloca i32, align 4
  %e.addr = alloca %struct.Exp_struct*, align 4
  %size = alloca i32, align 4
  %l = alloca %struct.E_list_struct*, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %0, i32 0, i32 0
  %1 = load i8, i8* %type, align 4
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %size, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 4
  %l2 = bitcast %union.anon* %u to %struct.E_list_struct**
  %3 = load %struct.E_list_struct*, %struct.E_list_struct** %l2, align 4
  store %struct.E_list_struct* %3, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %cmp3 = icmp ne %struct.E_list_struct* %4, null
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %e5 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %5, i32 0, i32 1
  %6 = load %struct.Exp_struct*, %struct.Exp_struct** %e5, align 4
  %call = call i32 @size_of_expression(%struct.Exp_struct* %6)
  %7 = load i32, i32* %size, align 4
  %add = add nsw i32 %7, %call
  store i32 %add, i32* %size, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %8, i32 0, i32 0
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  store %struct.E_list_struct* %9, %struct.E_list_struct** %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %size, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval, align 4
  ret i32 %11
}

; Function Attrs: noinline nounwind
define void @init_randtable() #0 {
entry:
  %i = alloca i32, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 188, i32 10)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 176, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %1
  store i32 %load_struct.BigStruct_32, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %2 = load i32, i32* %i, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

declare dllimport void @srand(i32) #1

declare dllimport i32 @rand() #1

; Function Attrs: noinline nounwind
define %struct.Exp_struct* @copy_Exp(%struct.Exp_struct* %e) #0 {
entry:
  %retval = alloca %struct.Exp_struct*, align 4
  %e.addr = alloca %struct.Exp_struct*, align 4
  %n = alloca %struct.Exp_struct*, align 4
  store %struct.Exp_struct* %e, %struct.Exp_struct** %e.addr, align 4
  %0 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %cmp = icmp eq %struct.Exp_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.Exp_struct* null, %struct.Exp_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @xalloc(i32 8)
  %1 = bitcast i8* %call to %struct.Exp_struct*
  store %struct.Exp_struct* %1, %struct.Exp_struct** %n, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %3 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %4 = bitcast %struct.Exp_struct* %2 to i8*
  %5 = bitcast %struct.Exp_struct* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %4, i8* %5, i32 8, i32 4, i1 false)
  %6 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %6, i32 0, i32 0
  %7 = load i8, i8* %type, align 4
  %conv = sext i8 %7 to i32
  %cmp1 = icmp ne i32 %conv, 2
  br i1 %cmp1, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.end
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %8, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %l, align 4
  %call4 = call %struct.E_list_struct* @copy_E_list(%struct.E_list_struct* %9)
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u5 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %10, i32 0, i32 4
  %l6 = bitcast %union.anon* %u5 to %struct.E_list_struct**
  store %struct.E_list_struct* %call4, %struct.E_list_struct** %l6, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  store %struct.Exp_struct* %11, %struct.Exp_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end7, %if.then
  %12 = load %struct.Exp_struct*, %struct.Exp_struct** %retval, align 4
  ret %struct.Exp_struct* %12
}

; Function Attrs: noinline nounwind
define %struct.E_list_struct* @copy_E_list(%struct.E_list_struct* %l) #0 {
entry:
  %retval = alloca %struct.E_list_struct*, align 4
  %l.addr = alloca %struct.E_list_struct*, align 4
  %nl = alloca %struct.E_list_struct*, align 4
  store %struct.E_list_struct* %l, %struct.E_list_struct** %l.addr, align 4
  %0 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %cmp = icmp eq %struct.E_list_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.E_list_struct* null, %struct.E_list_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @xalloc(i32 8)
  %1 = bitcast i8* %call to %struct.E_list_struct*
  store %struct.E_list_struct* %1, %struct.E_list_struct** %nl, align 4
  %2 = load %struct.E_list_struct*, %struct.E_list_struct** %nl, align 4
  %3 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %4 = bitcast %struct.E_list_struct* %2 to i8*
  %5 = bitcast %struct.E_list_struct* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %4, i8* %5, i32 8, i32 4, i1 false)
  %6 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %6, i32 0, i32 0
  %7 = load %struct.E_list_struct*, %struct.E_list_struct** %next, align 4
  %call1 = call %struct.E_list_struct* @copy_E_list(%struct.E_list_struct* %7)
  %8 = load %struct.E_list_struct*, %struct.E_list_struct** %nl, align 4
  %next2 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %8, i32 0, i32 0
  store %struct.E_list_struct* %call1, %struct.E_list_struct** %next2, align 4
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %l.addr, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %9, i32 0, i32 1
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  %call3 = call %struct.Exp_struct* @copy_Exp(%struct.Exp_struct* %10)
  %11 = load %struct.E_list_struct*, %struct.E_list_struct** %nl, align 4
  %e4 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %11, i32 0, i32 1
  store %struct.Exp_struct* %call3, %struct.Exp_struct** %e4, align 4
  %12 = load %struct.E_list_struct*, %struct.E_list_struct** %nl, align 4
  store %struct.E_list_struct* %12, %struct.E_list_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct.E_list_struct*, %struct.E_list_struct** %retval, align 4
  ret %struct.E_list_struct* %13
}

; Function Attrs: noinline nounwind
define %struct.Connector_struct* @copy_connectors(%struct.Connector_struct* %c) #0 {
entry:
  %retval = alloca %struct.Connector_struct*, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %c, %struct.Connector_struct** %c.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %cmp = icmp eq %struct.Connector_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.Connector_struct* null, %struct.Connector_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @xalloc(i32 16)
  %1 = bitcast i8* %call to %struct.Connector_struct*
  store %struct.Connector_struct* %1, %struct.Connector_struct** %c1, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %4 = bitcast %struct.Connector_struct* %2 to i8*
  %5 = bitcast %struct.Connector_struct* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %4, i8* %5, i32 16, i32 4, i1 false)
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %call1 = call %struct.Connector_struct* @copy_connectors(%struct.Connector_struct* %7)
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  store %struct.Connector_struct* %call1, %struct.Connector_struct** %next2, align 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %retval, align 4
  ret %struct.Connector_struct* %10
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %d) #0 {
entry:
  %retval = alloca %struct.Disjunct_struct*, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %d, %struct.Disjunct_struct** %d.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp eq %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @xalloc(i32 20)
  %1 = bitcast i8* %call to %struct.Disjunct_struct*
  store %struct.Disjunct_struct* %1, %struct.Disjunct_struct** %d1, align 4
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %4 = bitcast %struct.Disjunct_struct* %2 to i8*
  %5 = bitcast %struct.Disjunct_struct* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %4, i8* %5, i32 20, i32 4, i1 false)
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next, align 4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %call1 = call %struct.Connector_struct* @copy_connectors(%struct.Connector_struct* %8)
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 4
  store %struct.Connector_struct* %call1, %struct.Connector_struct** %left2, align 4
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 5
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %call3 = call %struct.Connector_struct* @copy_connectors(%struct.Connector_struct* %11)
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right4 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 5
  store %struct.Connector_struct* %call3, %struct.Connector_struct** %right4, align 4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %retval, align 4
  ret %struct.Disjunct_struct* %14
}

; Function Attrs: noinline nounwind
define void @free_this_string_later(i8* %s, i32 %size) #0 {
entry:
  %size.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %sn = alloca %struct.string_node_struct*, align 4
  store i32 %size, i32* %size.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  %call = call i8* @xalloc(i32 12)
  %0 = bitcast i8* %call to %struct.string_node_struct*
  store %struct.string_node_struct* %0, %struct.string_node_struct** %sn, align 4
  %1 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %2 = load %struct.string_node_struct*, %struct.string_node_struct** %sn, align 4
  %next = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %2, i32 0, i32 2
  store %struct.string_node_struct* %1, %struct.string_node_struct** %next, align 4
  %3 = load %struct.string_node_struct*, %struct.string_node_struct** %sn, align 4
  store %struct.string_node_struct* %3, %struct.string_node_struct** @string_list, align 4
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load %struct.string_node_struct*, %struct.string_node_struct** %sn, align 4
  %string = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %5, i32 0, i32 0
  store i8* %4, i8** %string, align 4
  %6 = load i32, i32* %size.addr, align 4
  %7 = load %struct.string_node_struct*, %struct.string_node_struct** %sn, align 4
  %size1 = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %7, i32 0, i32 1
  store i32 %6, i32* %size1, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @free_strings() #0 {
entry:
  %sn = alloca %struct.string_node_struct*, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %cmp = icmp ne %struct.string_node_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %1 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %next = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %1, i32 0, i32 2
  %2 = load %struct.string_node_struct*, %struct.string_node_struct** %next, align 4
  store %struct.string_node_struct* %2, %struct.string_node_struct** %sn, align 4
  %3 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %size = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %3, i32 0, i32 1
  %4 = load i32, i32* %size, align 4
  %5 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %string = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %5, i32 0, i32 0
  %6 = load i8*, i8** %string, align 4
  call void @xfree(i8* %6, i32 %4)
  %7 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %8 = bitcast %struct.string_node_struct* %7 to i8*
  call void @xfree(i8* %8, i32 12)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %9 = load %struct.string_node_struct*, %struct.string_node_struct** %sn, align 4
  store %struct.string_node_struct* %9, %struct.string_node_struct** @string_list, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %d1, %struct.Disjunct_struct* %d2) #0 {
entry:
  %retval = alloca %struct.Disjunct_struct*, align 4
  %d2.addr = alloca %struct.Disjunct_struct*, align 4
  %d1.addr = alloca %struct.Disjunct_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %d2, %struct.Disjunct_struct** %d2.addr, align 4
  store %struct.Disjunct_struct* %d1, %struct.Disjunct_struct** %d1.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %dis, align 4
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %cmp = icmp eq %struct.Disjunct_struct* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %cmp1 = icmp eq %struct.Disjunct_struct* %3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end3
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %5, i32 0, i32 0
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  %cmp4 = icmp ne %struct.Disjunct_struct* %6, null
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next5 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next5, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %dis, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 0
  store %struct.Disjunct_struct* %9, %struct.Disjunct_struct** %next6, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then2, %if.then
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %retval, align 4
  ret %struct.Disjunct_struct* %12
}

; Function Attrs: noinline nounwind
define %struct.X_node_struct* @catenate_X_nodes(%struct.X_node_struct* %d1, %struct.X_node_struct* %d2) #0 {
entry:
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  %load_struct.BigStruct_14 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_14
  %struct.BigStruct_30 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 30
  %load_struct.BigStruct_30 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_30
  %retval = alloca %struct.X_node_struct*, align 4
  %d2.addr = alloca %struct.X_node_struct*, align 4
  %d1.addr = alloca %struct.X_node_struct*, align 4
  %dis = alloca %struct.X_node_struct*, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_30, %struct.X_node_struct** %d2.addr, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_14, %struct.X_node_struct** %d1.addr, align 4
  %0 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  store %struct.X_node_struct* %0, %struct.X_node_struct** %dis, align 4
  %1 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  %cmp = icmp eq %struct.X_node_struct* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %2 = load %struct.X_node_struct*, %struct.X_node_struct** %d2.addr, align 4
  store %struct.X_node_struct* %2, %struct.X_node_struct** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry, %entry
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %d2.addr, align 4
  %cmp1 = icmp eq %struct.X_node_struct* %3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end, %if.end
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end, %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end3, %while.body, %if.end3
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %dis, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %5, i32 0, i32 2
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  %cmp4 = icmp ne %struct.X_node_struct* %6, null
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %dis, align 4
  %next5 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %7, i32 0, i32 2
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %next5, align 4
  store %struct.X_node_struct* %8, %struct.X_node_struct** %dis, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %d2.addr, align 4
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %dis, align 4
  %next6 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %10, i32 0, i32 2
  store %struct.X_node_struct* %9, %struct.X_node_struct** %next6, align 4
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  store %struct.X_node_struct* %11, %struct.X_node_struct** %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then2, %if.then, %while.end, %if.then2, %if.then
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %retval, align 4
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  store %struct.X_node_struct* %12, %struct.X_node_struct** %struct.BigStruct_40
  ret %struct.X_node_struct* %12
}

; Function Attrs: noinline nounwind
define i32 @next_power_of_two_up(i32 %i) #0 {
entry:
  %i.addr = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32 1, i32* %j, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %j, align 4
  %1 = load i32, i32* %i.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %j, align 4
  %shl = shl i32 %2, 1
  store i32 %shl, i32* %j, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %3 = load i32, i32* %j, align 4
  ret i32 %3
}

; Function Attrs: noinline nounwind
define i32 @upper_case_match(i8* %s, i8* %t) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  store i8* %t, i8** %t.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %call = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv1 = sext i8 %3 to i32
  %call2 = call i32 @isupper_Package(i32 %conv1)
  %tobool3 = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %tobool3, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv4 = sext i8 %6 to i32
  %7 = load i8*, i8** %t.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv5 = sext i8 %8 to i32
  %cmp = icmp ne i32 %conv4, %conv5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.body
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %10 = load i8*, i8** %t.addr, align 4
  %incdec.ptr7 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr7, i8** %t.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %11 = load i8*, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv8 = sext i8 %12 to i32
  %call9 = call i32 @isupper_Package(i32 %conv8)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %while.end
  %13 = load i8*, i8** %t.addr, align 4
  %14 = load i8, i8* %13, align 1
  %conv11 = sext i8 %14 to i32
  %call12 = call i32 @isupper_Package(i32 %conv11)
  %tobool13 = icmp ne i32 %call12, 0
  %lnot = xor i1 %tobool13, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.end
  %15 = phi i1 [ false, %while.end ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %15 to i32
  store i32 %land.ext, i32* %retval, align 4
  br label %return

return:                                           ; preds = %land.end, %if.then
  %16 = load i32, i32* %retval, align 4
  ret i32 %16
}

; Function Attrs: noinline nounwind
define void @left_print_string(%struct._iobuf* %fp, i8* %s, i8* %t) #0 {
entry:
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i8* %t, i8** %t.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  store %struct._iobuf* %fp, %struct._iobuf** %fp.addr, align 4
  %0 = load i8*, i8** %t.addr, align 4
  %call = call i32 @strlen_Package(i8* %0)
  store i32 %call, i32* %j, align 4
  %1 = load i8*, i8** %s.addr, align 4
  %call1 = call i32 @strlen_Package(i8* %1)
  store i32 %call1, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* %k, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %7 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %7, i32 %6
  %8 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %8 to i32
  %9 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.808, i32 0, i32 0
  %call3 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %9, i8* %10, i32 %conv)
  br label %if.end

if.else:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4
  %12 = load i8*, i8** %t.addr, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %12, i32 %11
  %13 = load i8, i8* %arrayidx4, align 1
  %conv5 = sext i8 %13 to i32
  %14 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %15 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.1.809, i32 0, i32 0
  %call6 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %14, i8* %15, i32 %conv5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i8* @get_a_word(%struct._iobuf* %fp) #0 {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %retval = alloca i8*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %word = alloca [60 x i8], align 1
  %s = alloca i8*, align 4
  %c = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  br label %do.body

do.body:                                          ; preds = %land.end, %entry, %land.end, %entry
  %0 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %call = call i32 @getc_Package(%struct._iobuf* %0)
  store i32 %call, i32* %c, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body, %do.body
  %1 = load i32, i32* %c, align 4
  %cmp = icmp ne i32 %1, -1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.cond, %do.cond
  %2 = load i32, i32* %c, align 4
  %call1 = call i32 @isspace_Package(i32 %2)
  %tobool = icmp ne i32 %call1, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond, %land.rhs, %do.cond
  %3 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %3, label %do.body, label %do.end

do.end:                                           ; preds = %land.end, %land.end
  %4 = load i32, i32* %c, align 4
  %cmp2 = icmp eq i32 %4, -1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %do.end, %do.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %do.end, %do.end
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end, %for.inc, %if.end
  %5 = load i32, i32* %j, align 4
  %cmp3 = icmp slt i32 %5, 60
  br i1 %cmp3, label %land.lhs.true, label %land.end8

land.lhs.true:                                    ; preds = %for.cond, %for.cond
  %6 = load i32, i32* %c, align 4
  %call4 = call i32 @isspace_Package(i32 %6)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %land.end8, label %land.rhs6

land.rhs6:                                        ; preds = %land.lhs.true, %land.lhs.true
  %7 = load i32, i32* %c, align 4
  %cmp7 = icmp ne i32 %7, -1
  br label %land.end8

land.end8:                                        ; preds = %land.rhs6, %land.lhs.true, %for.cond, %land.rhs6, %land.lhs.true, %for.cond
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %cmp7, %land.rhs6 ]
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; preds = %land.end8, %land.end8
  %9 = load i32, i32* %c, align 4
  %conv = trunc i32 %9 to i8
  %10 = load i32, i32* %j, align 4
  %arrayidx = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 %10
  store i8 %conv, i8* %arrayidx, align 1
  %11 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %call9 = call i32 @getc_Package(%struct._iobuf* %11)
  store i32 %call9, i32* %c, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %12 = load i32, i32* %j, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end8, %land.end8
  %13 = load i32, i32* %j, align 4
  %cmp10 = icmp eq i32 %13, 60
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.end, %for.end
  %14 = getelementptr inbounds [49 x i8], [49 x i8]* @.str.810, i32 0, i32 0
  call void @error(i8* %14)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %for.end, %if.then12, %for.end
  %15 = load i32, i32* %j, align 4
  %arrayidx14 = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 %15
  store i8 0, i8* %arrayidx14, align 1
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 0
  %call15 = call i32 @strlen_Package(i8* %arraydecay)
  %add = add i32 %call15, 1
  %call16 = call i8* @xalloc(i32 %add)
  store i8* %call16, i8** %s, align 4
  %arraydecay17 = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 0
  %16 = load i8*, i8** %s, align 4
  %call18 = call i8* @strcpy_Package(i8* %16, i8* %arraydecay17)
  %17 = load i8*, i8** %s, align 4
  store i8* %17, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end13, %if.then, %if.end13, %if.then
  %18 = load i8*, i8** %retval, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %18, i8** %struct.BigStruct_34
  ret i8* %18
}

declare dllimport i32 @getc(%struct._iobuf*) #1

; Function Attrs: noinline nounwind
define %struct.Dict_node_struct* @read_word_file(%struct.Dict_node_struct* %dn, i8* %filename) #0 {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  %load_struct.BigStruct_27 = load i8*, i8** %struct.BigStruct_27
  %filename.addr = alloca i8*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  %wf = alloca %struct.Word_file_struct*, align 4
  %fp = alloca %struct._iobuf*, align 4
  %s = alloca i8*, align 4
  %file_name_copy = alloca [60 x i8], align 1
  store i8* %load_struct.BigStruct_27, i8** %filename.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load i8*, i8** %filename.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %0, i32 1
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %call = call i8* @strcpy_Package(i8* %arraydecay, i8* %add.ptr)
  %arraydecay1 = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %1 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.1.813, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay1, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %1, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 157, i32 10)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  store %struct._iobuf* %load_struct.BigStruct_384, %struct._iobuf** %fp, align 4
  %cmp = icmp eq %struct._iobuf* %load_struct.BigStruct_384, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry, %entry
  %arraydecay3 = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %2 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.2.814, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %2, i8* %arraydecay3)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %entry, %entry
  %3 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.3.815, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %3)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %call8 = call i8* @xalloc(i32 68)
  %4 = bitcast i8* %call8 to %struct.Word_file_struct*
  store %struct.Word_file_struct* %4, %struct.Word_file_struct** %wf, align 4
  %arraydecay9 = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %5 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %5, i32 0, i32 0
  %arraydecay10 = getelementptr inbounds [60 x i8], [60 x i8]* %file, i32 0, i32 0
  %call11 = call i8* @strcpy_Package(i8* %arraydecay10, i8* %arraydecay9)
  %6 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %6, i32 0, i32 1
  store i32 0, i32* %changed, align 4
  %7 = load %struct.Word_file_struct*, %struct.Word_file_struct** @word_file_header, align 4
  %8 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %next = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %8, i32 0, i32 2
  store %struct.Word_file_struct* %7, %struct.Word_file_struct** %next, align 4
  %9 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  store %struct.Word_file_struct* %9, %struct.Word_file_struct** @word_file_header, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end, %while.body, %if.end
  %10 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %10, %struct._iobuf** %struct.BigStruct_11
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 100, i32 1)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  store i8* %load_struct.BigStruct_34, i8** %s, align 4
  %cmp13 = icmp ne i8* %load_struct.BigStruct_34, null
  br i1 %cmp13, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.cond
  %call14 = call i8* @xalloc(i32 20)
  %11 = bitcast i8* %call14 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %11, %struct.Dict_node_struct** %dn_new, align 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %13, i32 0, i32 3
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %left, align 4
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %dn.addr, align 4
  %15 = load i8*, i8** %s, align 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %16, i32 0, i32 0
  store i8* %15, i8** %string, align 4
  %17 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %file15 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 1
  store %struct.Word_file_struct* %17, %struct.Word_file_struct** %file15, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %19 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %19, %struct._iobuf** %struct.BigStruct_12
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 101, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  store %struct.Dict_node_struct* %20, %struct.Dict_node_struct** %struct.BigStruct_41
  ret %struct.Dict_node_struct* %20
}

declare dllimport i32 @fclose(%struct._iobuf*) #1

; Function Attrs: noinline nounwind
define void @routput_dictionary(%struct.Dict_node_struct* %dn, %struct._iobuf* %fp, %struct.Word_file_struct* %wf) #0 {
entry:
  %wf.addr = alloca %struct.Word_file_struct*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  store %struct.Word_file_struct* %wf, %struct.Word_file_struct** %wf.addr, align 4
  store %struct._iobuf* %fp, %struct._iobuf** %fp.addr, align 4
  store %struct.Dict_node_struct* %dn, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf.addr, align 4
  %2 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %3, i32 0, i32 3
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  call void @routput_dictionary(%struct.Dict_node_struct* %4, %struct._iobuf* %2, %struct.Word_file_struct* %1)
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %5, i32 0, i32 1
  %6 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file, align 4
  %7 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf.addr, align 4
  %cmp1 = icmp eq %struct.Word_file_struct* %6, %7
  br i1 %cmp1, label %if.then2, label %if.end13

if.then2:                                         ; preds = %if.end
  %8 = load i32, i32* @xwhere_in_line, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %9, i32 0, i32 0
  %10 = load i8*, i8** %string, align 4
  %call = call i32 @strlen_Package(i8* %10)
  %add = add i32 %8, %call
  %cmp3 = icmp ugt i32 %add, 70
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.then2
  store i32 0, i32* @xwhere_in_line, align 4
  %11 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.4.816, i32 0, i32 0
  %call5 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %11, i8* %12)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.then2
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string7 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %13, i32 0, i32 0
  %14 = load i8*, i8** %string7, align 4
  %call8 = call i32 @strlen_Package(i8* %14)
  %add9 = add i32 %call8, 1
  %15 = load i32, i32* @xwhere_in_line, align 4
  %add10 = add i32 %15, %add9
  store i32 %add10, i32* @xwhere_in_line, align 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string11 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %16, i32 0, i32 0
  %17 = load i8*, i8** %string11, align 4
  %18 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.5.817, i32 0, i32 0
  %call12 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %18, i8* %19, i8* %17)
  br label %if.end13

if.end13:                                         ; preds = %if.end6, %if.end
  %20 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf.addr, align 4
  %21 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %22, i32 0, i32 4
  %23 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  call void @routput_dictionary(%struct.Dict_node_struct* %23, %struct._iobuf* %21, %struct.Word_file_struct* %20)
  br label %return

return:                                           ; preds = %if.end13, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @output_dictionary(%struct.Dict_node_struct* %dn, %struct._iobuf* %fp, %struct.Word_file_struct* %wf) #0 {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  %load_struct.BigStruct_26 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_26
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 29
  %load_struct.BigStruct_29 = load %struct.Word_file_struct*, %struct.Word_file_struct** %struct.BigStruct_29
  %wf.addr = alloca %struct.Word_file_struct*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  store %struct.Word_file_struct* %load_struct.BigStruct_29, %struct.Word_file_struct** %wf.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_26, %struct._iobuf** %fp.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  store i32 0, i32* @xwhere_in_line, align 4
  %0 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf.addr, align 4
  %1 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  call void @routput_dictionary(%struct.Dict_node_struct* %2, %struct._iobuf* %1, %struct.Word_file_struct* %0)
  %3 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.6.818, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %3, i8* %4)
  ret void
}

; Function Attrs: noinline nounwind
define void @save_files() #0 {
entry:
  %wf = alloca %struct.Word_file_struct*, align 4
  %fp = alloca %struct._iobuf*, align 4
  %0 = load %struct.Word_file_struct*, %struct.Word_file_struct** @word_file_header, align 4
  store %struct.Word_file_struct* %0, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %1 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %cmp = icmp ne %struct.Word_file_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %2, i32 0, i32 1
  %3 = load i32, i32* %changed, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end12

if.then:                                          ; preds = %for.body, %for.body
  %4 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %4, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %file, i32 0, i32 0
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.7.821, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %5, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 157, i32 10)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  store %struct._iobuf* %load_struct.BigStruct_38, %struct._iobuf** %fp, align 4
  %cmp1 = icmp eq %struct._iobuf* %load_struct.BigStruct_38, null
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then, %if.then
  %6 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file3 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %6, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [60 x i8], [60 x i8]* %file3, i32 0, i32 0
  %7 = getelementptr inbounds [46 x i8], [46 x i8]* @.str.8.822, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %7, i8* %arraydecay4)
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.9.823, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %8)
  br label %for.end

if.end:                                           ; preds = %if.then, %if.then
  %9 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file7 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %9, i32 0, i32 0
  %arraydecay8 = getelementptr inbounds [60 x i8], [60 x i8]* %file7, i32 0, i32 0
  %10 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.10.824, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %10, i8* %arraydecay8)
  %11 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %12 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %12, %struct._iobuf** %struct.BigStruct_26
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 29
  store %struct.Word_file_struct* %11, %struct.Word_file_struct** %struct.BigStruct_29
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 161, i32 10)
  %14 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %14, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 101, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %15 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed11 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %15, i32 0, i32 1
  store i32 0, i32* %changed11, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.end, %for.body, %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end12, %if.end12
  %16 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %next = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %16, i32 0, i32 2
  %17 = load %struct.Word_file_struct*, %struct.Word_file_struct** %next, align 4
  store %struct.Word_file_struct* %17, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then2, %for.cond, %if.then2, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @files_need_saving() #0 {
entry:
  %retval = alloca i32, align 4
  %wf = alloca %struct.Word_file_struct*, align 4
  %0 = load %struct.Word_file_struct*, %struct.Word_file_struct** @word_file_header, align 4
  store %struct.Word_file_struct* %0, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %1 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %cmp = icmp ne %struct.Word_file_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %2, i32 0, i32 1
  %3 = load i32, i32* %changed, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body, %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end
  %4 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %next = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %4, i32 0, i32 2
  %5 = load %struct.Word_file_struct*, %struct.Word_file_struct** %next, align 4
  store %struct.Word_file_struct* %5, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then, %for.end, %if.then
  %6 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret i32 %6
}

; Function Attrs: noinline nounwind
define void @initialize_memory() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry, %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %j, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond, %for.cond
  %2 = load i32, i32* %i, align 4
  store i32 %2, i32* @largest_block, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %for.body
  %3 = load i32, i32* %j, align 4
  store i32 %3, i32* %i, align 4
  %4 = load i32, i32* %j, align 4
  %mul = mul i32 2, %4
  %add = add i32 %mul, 1
  store i32 %add, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %for.cond
  %5 = load i32, i32* @largest_block, align 4
  %and = and i32 %5, -8
  store i32 %and, i32* @largest_block, align 4
  %6 = load i32, i32* @largest_block, align 4
  %add1 = add i32 %6, -4
  store i32 %add1, i32* @largest_block, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 31457280, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 180, i32 10)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  store i8* %load_struct.BigStruct_34, i8** @start_of_array, align 4
  %7 = load i8*, i8** @start_of_array, align 4
  %cmp2 = icmp eq i8* %7, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.end, %for.end
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 2
  %8 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.833, i32 0, i32 0
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* %8)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; preds = %for.end, %for.end
  %9 = load i8*, i8** @start_of_array, align 4
  %add.ptr = getelementptr inbounds i8, i8* %9, i32 8
  store i8* %add.ptr, i8** @end_of_array, align 4
  %10 = load i8*, i8** @end_of_array, align 4
  %add.ptr5 = getelementptr inbounds i8, i8* %10, i32 -4
  %11 = bitcast i8* %add.ptr5 to %struct.Nuggie*
  %size = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %11, i32 0, i32 0
  store i32 0, i32* %size, align 4
  store i32 0, i32* @max_space_in_use, align 4
  store i32 0, i32* @space_in_use, align 4
  store i8* null, i8** @last_block, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare dllimport noalias i8* @malloc(i32) #4

; Function Attrs: noinline nounwind
define i8* @xalloc(i32 %size) #0 {
entry:
  %size.addr = alloca i32, align 4
  %old_end_of_array = alloca i8*, align 4
  store i32 %size, i32* %size.addr, align 4
  %0 = load i32, i32* %size.addr, align 4
  %1 = load i32, i32* @largest_block, align 4
  %cmp = icmp ugt i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @largest_block, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 2
  %3 = getelementptr inbounds [58 x i8], [58 x i8]* @.str.1.836, i32 0, i32 0
  %call1 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* %3, i32 %2)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 181, i32 7)
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** @end_of_array, align 4
  store i8* %4, i8** %old_end_of_array, align 4
  %5 = load i32, i32* %size.addr, align 4
  %add = add i32 %5, 4
  %add2 = add i32 %add, 8
  %sub = sub i32 %add2, 1
  %and = and i32 %sub, -8
  %6 = load i8*, i8** @end_of_array, align 4
  %add.ptr = getelementptr inbounds i8, i8* %6, i32 %and
  store i8* %add.ptr, i8** @end_of_array, align 4
  %7 = load i8*, i8** @end_of_array, align 4
  %8 = load i8*, i8** %old_end_of_array, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %9 = load i8*, i8** @end_of_array, align 4
  %add.ptr3 = getelementptr inbounds i8, i8* %9, i32 -4
  %10 = bitcast i8* %add.ptr3 to %struct.Nuggie*
  %size4 = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %10, i32 0, i32 0
  store i32 %sub.ptr.sub, i32* %size4, align 4
  %11 = load i8*, i8** @end_of_array, align 4
  %add.ptr5 = getelementptr inbounds i8, i8* %11, i32 -4
  %12 = bitcast i8* %add.ptr5 to %struct.Nuggie*
  %size6 = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %12, i32 0, i32 0
  %13 = load i32, i32* %size6, align 4
  %and7 = and i32 %13, -2
  store i32 %and7, i32* %size6, align 4
  %14 = load i8*, i8** %old_end_of_array, align 4
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i32 -4
  %15 = bitcast i8* %add.ptr8 to %struct.Nuggie*
  %size9 = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %15, i32 0, i32 0
  %16 = load i32, i32* %size9, align 4
  %or = or i32 %16, 1
  store i32 %or, i32* %size9, align 4
  %17 = load i8*, i8** %old_end_of_array, align 4
  store i8* %17, i8** @last_block, align 4
  %18 = load i8*, i8** @end_of_array, align 4
  %19 = load i8*, i8** @start_of_array, align 4
  %sub.ptr.lhs.cast10 = ptrtoint i8* %18 to i32
  %sub.ptr.rhs.cast11 = ptrtoint i8* %19 to i32
  %sub.ptr.sub12 = sub i32 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  %cmp13 = icmp ugt i32 %sub.ptr.sub12, 31457280
  br i1 %cmp13, label %if.then14, label %if.end21

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** @end_of_array, align 4
  %21 = load i8*, i8** @start_of_array, align 4
  %sub.ptr.lhs.cast15 = ptrtoint i8* %20 to i32
  %sub.ptr.rhs.cast16 = ptrtoint i8* %21 to i32
  %sub.ptr.sub17 = sub i32 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx19 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 2
  %22 = getelementptr inbounds [54 x i8], [54 x i8]* @.str.2.837, i32 0, i32 0
  %call20 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx19, i8* %22, i32 %sub.ptr.sub17)
  call void @exit_Package(i32 1) #5
  unreachable

if.end21:                                         ; preds = %if.end
  %23 = load i32, i32* %size.addr, align 4
  %24 = load i32, i32* @space_in_use, align 4
  %add22 = add nsw i32 %24, %23
  store i32 %add22, i32* @space_in_use, align 4
  %25 = load i32, i32* @space_in_use, align 4
  %26 = load i32, i32* @max_space_in_use, align 4
  %cmp23 = icmp sgt i32 %25, %26
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end21
  %27 = load i32, i32* @space_in_use, align 4
  store i32 %27, i32* @max_space_in_use, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end21
  %28 = load i8*, i8** %old_end_of_array, align 4
  ret i8* %28
}

; Function Attrs: noreturn
declare dllimport void @abort() #3

; Function Attrs: noinline nounwind
define void @xfree(i8* %p, i32 %size) #0 {
entry:
  %size.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 4
  %q = alloca i8*, align 4
  store i32 %size, i32* %size.addr, align 4
  store i8* %p, i8** %p.addr, align 4
  %0 = load i8*, i8** %p.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %0, i32 -4
  %1 = bitcast i8* %add.ptr to %struct.Nuggie*
  %size1 = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %1, i32 0, i32 0
  %2 = load i32, i32* %size1, align 4
  %and = and i32 %2, -2
  store i32 %and, i32* %size1, align 4
  %3 = load i8*, i8** %p.addr, align 4
  %4 = load i8*, i8** @last_block, align 4
  %cmp = icmp eq i8* %3, %4
  br i1 %cmp, label %if.then, label %if.end13

if.then:                                          ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end12, %if.then
  %5 = load i8*, i8** %p.addr, align 4
  %6 = load i8*, i8** %p.addr, align 4
  %add.ptr2 = getelementptr inbounds i8, i8* %6, i32 -4
  %7 = bitcast i8* %add.ptr2 to %struct.Nuggie*
  %size3 = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %7, i32 0, i32 0
  %8 = load i32, i32* %size3, align 4
  %and4 = and i32 %8, -2
  %idx.neg = sub i32 0, %and4
  %add.ptr5 = getelementptr inbounds i8, i8* %5, i32 %idx.neg
  store i8* %add.ptr5, i8** %q, align 4
  %9 = load i8*, i8** %q, align 4
  %10 = load i8*, i8** %p.addr, align 4
  %cmp6 = icmp eq i8* %9, %10
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %while.body
  store i8* null, i8** @last_block, align 4
  %11 = load i8*, i8** %p.addr, align 4
  store i8* %11, i8** @end_of_array, align 4
  br label %while.end

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %q, align 4
  %add.ptr8 = getelementptr inbounds i8, i8* %12, i32 -4
  %13 = bitcast i8* %add.ptr8 to %struct.Nuggie*
  %size9 = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %13, i32 0, i32 0
  %14 = load i32, i32* %size9, align 4
  %and10 = and i32 %14, 1
  %tobool = icmp ne i32 %and10, 0
  br i1 %tobool, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end
  %15 = load i8*, i8** %q, align 4
  store i8* %15, i8** @last_block, align 4
  %16 = load i8*, i8** %p.addr, align 4
  store i8* %16, i8** @end_of_array, align 4
  br label %while.end

if.end12:                                         ; preds = %if.end
  %17 = load i8*, i8** %q, align 4
  store i8* %17, i8** %p.addr, align 4
  br label %while.body

while.end:                                        ; preds = %if.then11, %if.then7
  br label %if.end13

if.end13:                                         ; preds = %while.end, %entry
  %18 = load i32, i32* %size.addr, align 4
  %19 = load i32, i32* @space_in_use, align 4
  %sub = sub nsw i32 %19, %18
  store i32 %sub, i32* @space_in_use, align 4
  ret void
}

define i32 @strcmp_Package(i8* %PackArg0, i8* %PackArg1) {
entry:
  %call = call i32 @strcmp(i8* %PackArg0, i8* %PackArg1)
  ret i32 %call
}

define %struct._iobuf* @__iob_func_Package() {
entry:
  %call = call %struct._iobuf* @__iob_func()
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  store %struct._iobuf* %call, %struct._iobuf** %struct.BigStruct_38
  ret %struct._iobuf* %call
}

define i32 @fflush_Package(%struct._iobuf* %PackArg0) {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %call = call i32 @fflush(%struct._iobuf* %load_struct.BigStruct_1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i32 @isupper_Package(i32 %PackArg0) {
entry:
  %call = call i32 @isupper(i32 %PackArg0)
  ret i32 %call
}

define i32 @strlen_Package(i8* %PackArg0) {
entry:
  %call = call i32 @strlen(i8* %PackArg0)
  ret i32 %call
}

define i8* @strcpy_Package(i8* %PackArg0, i8* %PackArg1) {
entry:
  %call = call i8* @strcpy(i8* %PackArg0, i8* %PackArg1)
  ret i8* %call
}

define void @exit_Package(i32 %PackArg0) {
entry:
  call void @exit(i32 %PackArg0)
  ret void
}

define i32 @isdigit_Package(i32 %PackArg0) {
entry:
  %call = call i32 @isdigit(i32 %PackArg0)
  ret i32 %call
}

define i32 @atoi_Package(i8* %PackArg0) {
entry:
  %call = call i32 @atoi(i8* %PackArg0)
  ret i32 %call
}

define i32 @strncmp_Package(i8* %PackArg0, i8* %PackArg1, i32 %PackArg2) {
entry:
  %call = call i32 @strncmp(i8* %PackArg0, i8* %PackArg1, i32 %PackArg2)
  ret i32 %call
}

define i8* @strncpy_Package(i8* %PackArg0, i8* %PackArg1, i32 %PackArg2) {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %call = call i8* @strncpy(i8* %load_struct.BigStruct_2, i8* %load_struct.BigStruct_3, i32 %load_struct.BigStruct_5)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret i8* %call
}

define i32 @tolower_Package(i32 %PackArg0) {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @tolower(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i32 @toupper_Package(i32 %PackArg0) {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @toupper(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i32 @isspace_Package(i32 %PackArg0) {
entry:
  %call = call i32 @isspace(i32 %PackArg0)
  ret i32 %call
}

define i32 @isalpha_Package(i32 %PackArg0) {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @isalpha(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i8* @strchr_Package(i8* %PackArg0, i32 %PackArg1) {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %call = call i8* @strchr(i8* %load_struct.BigStruct_2, i32 %load_struct.BigStruct_5)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret i8* %call
}

define i8* @fgets_Package(i8* %PackArg0, i32 %PackArg1, %struct._iobuf* %PackArg2) {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  %load_struct.BigStruct_26 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_26
  %call = call i8* @fgets(i8* %load_struct.BigStruct_2, i32 %load_struct.BigStruct_5, %struct._iobuf* %load_struct.BigStruct_26)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret i8* %call
}

define void @qsort_Package(i8* %PackArg0, i32 %PackArg1, i32 %PackArg2, i32 (i8*, i8*)* %PackArg3) {
entry:
  call void @qsort(i8* %PackArg0, i32 %PackArg1, i32 %PackArg2, i32 (i8*, i8*)* %PackArg3)
  ret void
}

define i32 @putc_Package(i32 %PackArg0, %struct._iobuf* %PackArg1) {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %call = call i32 @putc(i32 %load_struct.BigStruct_0, %struct._iobuf* %load_struct.BigStruct_1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i32 @fgetc_Package(%struct._iobuf* %PackArg0) {
entry:
  %call = call i32 @fgetc(%struct._iobuf* %PackArg0)
  ret i32 %call
}

define i32 @isalnum_Package(i32 %PackArg0) {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @isalnum(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i8* @strrchr_Package(i8* %PackArg0, i32 %PackArg1) {
entry:
  %call = call i8* @strrchr(i8* %PackArg0, i32 %PackArg1)
  ret i8* %call
}

define %struct._iobuf* @fopen_Package(i8* %PackArg0, i8* %PackArg1) {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %call = call %struct._iobuf* @fopen(i8* %load_struct.BigStruct_2, i8* %load_struct.BigStruct_3)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  store %struct._iobuf* %call, %struct._iobuf** %struct.BigStruct_38
  ret %struct._iobuf* %call
}

define void @srand_Package(i32 %PackArg0) {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  call void @srand(i32 %load_struct.BigStruct_0)
  ret void
}

define i32 @rand_Package() {
entry:
  %call = call i32 @rand()
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i32 @getc_Package(%struct._iobuf* %PackArg0) {
entry:
  %call = call i32 @getc(%struct._iobuf* %PackArg0)
  ret i32 %call
}

define i32 @fclose_Package(%struct._iobuf* %PackArg0) {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %call = call i32 @fclose(%struct._iobuf* %load_struct.BigStruct_1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret i32 %call
}

define i8* @malloc_Package(i32 %PackArg0) {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i8* @malloc(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret i8* %call
}

define void @abort_Package() {
entry:
  call void @abort()
  ret void
}

define void @putc_Package_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %call = call i32 @putc(i32 %load_struct.BigStruct_0, %struct._iobuf* %load_struct.BigStruct_1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @strictly_smaller_name_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %strictness = alloca i32, align 4
  %ss = alloca i32, align 4
  %tt = alloca i32, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %strictness, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; No predecessors!
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br label %lor.end

lor.end:                                          ; No predecessors!
  %4 = phi i1 [ true, %while.cond ], [ %cmp3, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv5 = sext i8 %6 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 42, i32* %ss, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %7 = load i8*, i8** %s.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv8 = sext i8 %8 to i32
  store i32 %conv8, i32* %ss, align 4
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %10 = load i8*, i8** %t.addr, align 4
  %11 = load i8, i8* %10, align 1
  %conv9 = sext i8 %11 to i32
  %cmp10 = icmp eq i32 %conv9, 0
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; No predecessors!
  store i32 42, i32* %tt, align 4
  br label %if.end16

if.else13:                                        ; No predecessors!
  %12 = load i8*, i8** %t.addr, align 4
  %13 = load i8, i8* %12, align 1
  %conv14 = sext i8 %13 to i32
  store i32 %conv14, i32* %tt, align 4
  %14 = load i8*, i8** %t.addr, align 4
  %incdec.ptr15 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr15, i8** %t.addr, align 4
  br label %if.end16

if.end16:                                         ; No predecessors!
  %15 = load i32, i32* %ss, align 4
  %16 = load i32, i32* %tt, align 4
  %cmp17 = icmp eq i32 %15, %16
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; No predecessors!
  br label %while.cond

if.end20:                                         ; No predecessors!
  %17 = load i32, i32* %tt, align 4
  %cmp21 = icmp eq i32 %17, 42
  br i1 %cmp21, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %18 = load i32, i32* %ss, align 4
  %cmp23 = icmp eq i32 %18, 94
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; No predecessors!
  %19 = load i32, i32* %strictness, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %strictness, align 4
  br label %if.end27

if.else26:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end27:                                         ; No predecessors!
  br label %while.cond

while.end:                                        ; No predecessors!
  %20 = load i32, i32* %strictness, align 4
  %cmp28 = icmp sgt i32 %20, 0
  %conv29 = zext i1 %cmp28 to i32
  store i32 %conv29, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %21 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %21, i32* %struct.BigStruct_32
  ret void
}

define void @find_subdisjunct_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %label.addr = alloca i32, align 4
  %dis.addr = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %cx = alloca %struct.Connector_struct*, align 4
  %cy = alloca %struct.Connector_struct*, align 4
  store i32 %load_struct.BigStruct_5, i32* %label.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %dis.addr, align 4
  %0 = load i32, i32* %label.addr, align 4
  %1 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %1, i32 %0
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %3, null
  br i1 %cmp, label %for.body, label %for.end45

for.body:                                         ; No predecessors!
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %cx, align 4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %left1, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %cy, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp3 = icmp ne %struct.Connector_struct* %8, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 5
  %10 = load i8*, i8** %string, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %string5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 5
  %12 = load i8*, i8** %string5, align 4
  %call = call i32 @strcmp_Package(i8* %12, i8* %10)
  %cmp6 = icmp ne i32 %call, 0
  br i1 %cmp6, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 3
  %14 = load i8, i8* %multi, align 1
  %conv = sext i8 %14 to i32
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %multi7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %15, i32 0, i32 3
  %16 = load i8, i8* %multi7, align 1
  %conv8 = sext i8 %16 to i32
  %cmp9 = icmp ne i32 %conv, %conv8
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %cx, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %next11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %next11, align 4
  store %struct.Connector_struct* %20, %struct.Connector_struct** %cy, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %21, null
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; No predecessors!
  br label %for.inc43

if.end15:                                         ; No predecessors!
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 5
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %23, %struct.Connector_struct** %cx, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis.addr, align 4
  %right16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 5
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %right16, align 4
  store %struct.Connector_struct* %25, %struct.Connector_struct** %cy, align 4
  br label %for.cond17

for.cond17:                                       ; No predecessors!
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp18 = icmp ne %struct.Connector_struct* %26, null
  br i1 %cmp18, label %for.body20, label %for.end38

for.body20:                                       ; No predecessors!
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %string21 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 5
  %28 = load i8*, i8** %string21, align 4
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %string22 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %29, i32 0, i32 5
  %30 = load i8*, i8** %string22, align 4
  %call23 = call i32 @strcmp_Package(i8* %30, i8* %28)
  %cmp24 = icmp ne i32 %call23, 0
  br i1 %cmp24, label %if.then33, label %lor.lhs.false26

lor.lhs.false26:                                  ; No predecessors!
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %multi27 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %31, i32 0, i32 3
  %32 = load i8, i8* %multi27, align 1
  %conv28 = sext i8 %32 to i32
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %multi29 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %33, i32 0, i32 3
  %34 = load i8, i8* %multi29, align 1
  %conv30 = sext i8 %34 to i32
  %cmp31 = icmp ne i32 %conv28, %conv30
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; No predecessors!
  br label %for.end38

if.end34:                                         ; No predecessors!
  br label %for.inc35

for.inc35:                                        ; No predecessors!
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %next36 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %35, i32 0, i32 4
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %next36, align 4
  store %struct.Connector_struct* %36, %struct.Connector_struct** %cx, align 4
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %cy, align 4
  %next37 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 4
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %next37, align 4
  store %struct.Connector_struct* %38, %struct.Connector_struct** %cy, align 4
  br label %for.cond17

for.end38:                                        ; No predecessors!
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %cx, align 4
  %cmp39 = icmp eq %struct.Connector_struct* %39, null
  br i1 %cmp39, label %if.then41, label %if.end42

if.then41:                                        ; No predecessors!
  br label %for.end45

if.end42:                                         ; No predecessors!
  br label %for.inc43

for.inc43:                                        ; No predecessors!
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next44 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %40, i32 0, i32 0
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next44, align 4
  store %struct.Disjunct_struct* %41, %struct.Disjunct_struct** %d, align 4
  br label %for.cond

for.end45:                                        ; No predecessors!
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp46 = icmp ne %struct.Disjunct_struct* %42, null
  br i1 %cmp46, label %if.end50, label %if.then48

if.then48:                                        ; No predecessors!
  %43 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.20.49, i32 0, i32 0
  %44 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.19.50, i32 0, i32 0
  %call49 = call i32 (i8*, ...) @printf(i8* %43, i8* %44)
  call void @exit_Package(i32 1) #5
  unreachable

if.end50:                                         ; No predecessors!
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %45, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @strncpy_Package_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %call = call i8* @strncpy(i8* %load_struct.BigStruct_2, i8* %load_struct.BigStruct_3, i32 %load_struct.BigStruct_5)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret void
}

define void @isalpha_Package_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @isalpha(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @pseudocount_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  %load_struct.BigStruct_6 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_6
  %struct.BigStruct_7 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  %load_struct.BigStruct_7 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_7
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %retval = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %count = alloca i32, align 4
  store i32 %load_struct.BigStruct_8, i32* %cost.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_7, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_6, %struct.Connector_struct** %le.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %rw.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %lw.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %3 = load i32, i32* %rw.addr, align 4
  %4 = load i32, i32* %lw.addr, align 4
  %call = call i32 @table_lookup(i32 %4, i32 %3, %struct.Connector_struct* %2, %struct.Connector_struct* %1, i32 %0)
  store i32 %call, i32* %count, align 4
  %5 = load i32, i32* %count, align 4
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %6 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret void
}

define void @print_a_link_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %link.addr = alloca i32, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %j = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %link.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  %0 = load i32, i32* %link.addr, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %0
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %1 = load i32, i32* %l, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; No predecessors!
  %2 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %3 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %4 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.1, i32 0, i32 0
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %3, i8* %4, i8* %5)
  br label %if.end11

if.else:                                          ; No predecessors!
  %6 = load i32, i32* %link.addr, align 4
  %arrayidx1 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %6
  %l2 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx1, i32 0, i32 0
  %7 = load i32, i32* %l2, align 4
  %8 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %8, 1
  %cmp3 = icmp eq i32 %7, %sub
  br i1 %cmp3, label %land.lhs.true4, label %if.else7

land.lhs.true4:                                   ; No predecessors!
  %9 = load i32, i32* @right_wall_defined, align 4
  %tobool5 = icmp ne i32 %9, 0
  br i1 %tobool5, label %if.then6, label %if.else7

if.then6:                                         ; No predecessors!
  %10 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %11 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.3, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.2, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %10, i8* %11, i8* %12)
  br label %if.end

if.else7:                                         ; No predecessors!
  %13 = load i32, i32* %link.addr, align 4
  %arrayidx8 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %13
  %l9 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 0
  %14 = load i32, i32* %l9, align 4
  %15 = bitcast [250 x i8*]* @chosen_words to [0 x i8*]*
  %arrayidx10 = getelementptr inbounds [0 x i8*], [0 x i8*]* %15, i32 0, i32 %14
  %16 = load i8*, i8** %arrayidx10, align 4
  %17 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.4, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %17, i8* %16, i8* %18)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end11

if.end11:                                         ; No predecessors!
  %19 = load i32, i32* %link.addr, align 4
  %arrayidx12 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %19
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx12, i32 0, i32 2
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %20, i32 0, i32 5
  %21 = load i8*, i8** %string, align 4
  %22 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %23 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.5, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %22, i8* %21, i8* %23)
  %24 = load i32, i32* %link.addr, align 4
  %arrayidx13 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %24
  %lc14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 2
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %lc14, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 0
  %26 = load i16, i16* %label, align 4
  %conv = sext i16 %26 to i32
  store i32 %conv, i32* %j, align 4
  %27 = load i32, i32* %j, align 4
  %cmp15 = icmp slt i32 %27, 0
  br i1 %cmp15, label %if.then17, label %if.else18

if.then17:                                        ; No predecessors!
  %28 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.6, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %28, i8* %29)
  br label %if.end20

if.else18:                                        ; No predecessors!
  %30 = load i32, i32* %j, align 4
  %31 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.7, i32 0, i32 0
  %call19 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %31, i8* %32, i32 %30)
  br label %if.end20

if.end20:                                         ; No predecessors!
  %33 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %34 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  %call21 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %33, i8* %34)
  %35 = load i32, i32* %link.addr, align 4
  %arrayidx22 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %35
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 4
  %36 = load i8*, i8** %name, align 4
  %37 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %38 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.9, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %37, i8* %36, i8* %38)
  %39 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %40 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.10, i32 0, i32 0
  %call23 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %39, i8* %40)
  %41 = load i32, i32* %link.addr, align 4
  %arrayidx24 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %41
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 3
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %string25 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 5
  %43 = load i8*, i8** %string25, align 4
  %44 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %45 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %44, i8* %43, i8* %45)
  %46 = load i32, i32* %link.addr, align 4
  %arrayidx26 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %46
  %rc27 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx26, i32 0, i32 3
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %rc27, align 4
  %label28 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %47, i32 0, i32 0
  %48 = load i16, i16* %label28, align 4
  %conv29 = sext i16 %48 to i32
  store i32 %conv29, i32* %j, align 4
  %49 = load i32, i32* %j, align 4
  %cmp30 = icmp slt i32 %49, 0
  br i1 %cmp30, label %if.then32, label %if.else34

if.then32:                                        ; No predecessors!
  %50 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %51 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.12, i32 0, i32 0
  %call33 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %50, i8* %51)
  br label %if.end36

if.else34:                                        ; No predecessors!
  %52 = load i32, i32* %j, align 4
  %53 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.13, i32 0, i32 0
  %call35 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %53, i8* %54, i32 %52)
  br label %if.end36

if.end36:                                         ; No predecessors!
  %55 = load i32, i32* %link.addr, align 4
  %arrayidx37 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %55
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx37, i32 0, i32 1
  %56 = load i32, i32* %r, align 4
  %57 = bitcast [250 x i8*]* @chosen_words to [0 x i8*]*
  %arrayidx38 = getelementptr inbounds [0 x i8*], [0 x i8*]* %57, i32 0, i32 %56
  %58 = load i8*, i8** %arrayidx38, align 4
  %59 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %60 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %call39 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %59, i8* %60, i8* %58)
  %61 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %62 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.15, i32 0, i32 0
  %call40 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %61, i8* %62)
  ret void
}

define void @compute_pp_link_names_Clear() {
entry:
  %i = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %3, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc

if.end:                                           ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %4
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx2, i32 0, i32 3
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %6
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 2
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %call = call i32 @match(%struct.Connector_struct* %7, %struct.Connector_struct* %5)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then4

if.then4:                                         ; No predecessors!
  %8 = load i32, i32* %i, align 4
  %9 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %9, i32 0, i32 %8
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx5, i32 0, i32 4
  %10 = load i8*, i8** %name, align 4
  %11 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %11
  %name7 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx6, i32 0, i32 4
  store i8* %10, i8** %name7, align 4
  br label %if.end27

if.else:                                          ; No predecessors!
  %12 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %12
  %rc9 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 3
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %rc9, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 5
  %14 = load i8*, i8** %string, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx10 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %15
  %lc11 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx10, i32 0, i32 2
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %lc11, align 4
  %string12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 5
  %17 = load i8*, i8** %string12, align 4
  %call13 = call i8* @intersect_strings(i8* %17, i8* %14)
  store i8* %call13, i8** %s, align 4
  %18 = load i32, i32* %i, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx14 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %name15 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx14, i32 0, i32 4
  %20 = load i8*, i8** %name15, align 4
  %21 = load i8*, i8** %s, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %21, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %20, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 1, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool17 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool17, label %if.then18, label %if.else23

if.then18:                                        ; No predecessors!
  %22 = load i32, i32* %i, align 4
  %23 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %23, i32 0, i32 %22
  %name20 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx19, i32 0, i32 4
  %24 = load i8*, i8** %name20, align 4
  %25 = load i32, i32* %i, align 4
  %arrayidx21 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %25
  %name22 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx21, i32 0, i32 4
  store i8* %24, i8** %name22, align 4
  br label %if.end26

if.else23:                                        ; No predecessors!
  %26 = load i8*, i8** %s, align 4
  %27 = load i32, i32* %i, align 4
  %arrayidx24 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %27
  %name25 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 4
  store i8* %26, i8** %name25, align 4
  br label %if.end26

if.end26:                                         ; No predecessors!
  br label %if.end27

if.end27:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %28 = load i32, i32* %i, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @strictly_smaller_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %strictness = alloca i32, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %strictness, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %4 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv5 = sext i8 %6 to i32
  %7 = load i8*, i8** %t.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv6 = sext i8 %8 to i32
  %cmp7 = icmp eq i32 %conv5, %conv6
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc

if.end:                                           ; No predecessors!
  %9 = load i8*, i8** %t.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv9, 42
  br i1 %cmp10, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %11 = load i8*, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv12 = sext i8 %12 to i32
  %cmp13 = icmp eq i32 %conv12, 94
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; No predecessors!
  %13 = load i32, i32* %strictness, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %strictness, align 4
  br label %if.end16

if.else:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end16:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %14 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %15 = load i8*, i8** %t.addr, align 4
  %incdec.ptr17 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr17, i8** %t.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %16 = load i8*, i8** %s.addr, align 4
  %17 = load i8, i8* %16, align 1
  %conv18 = sext i8 %17 to i32
  %cmp19 = icmp ne i32 %conv18, 0
  br i1 %cmp19, label %if.then25, label %lor.lhs.false21

lor.lhs.false21:                                  ; No predecessors!
  %18 = load i8*, i8** %t.addr, align 4
  %19 = load i8, i8* %18, align 1
  %conv22 = sext i8 %19 to i32
  %cmp23 = icmp ne i32 %conv22, 0
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; No predecessors!
  %20 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.18.47, i32 0, i32 0
  %21 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.17.48, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %20, i8* %21)
  call void @exit_Package(i32 1) #5
  unreachable

if.end26:                                         ; No predecessors!
  %22 = load i32, i32* %strictness, align 4
  %cmp27 = icmp sgt i32 %22, 0
  %conv28 = zext i1 %cmp27 to i32
  store i32 %conv28, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %23 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %23, i32* %struct.BigStruct_32
  ret void
}

define void @compute_pp_link_array_connectors_Clear() {
entry:
  %link = alloca i32, align 4
  %end = alloca i32, align 4
  %word = alloca i32, align 4
  %place = alloca i32, align 4
  %this_end_con = alloca %struct.Connector_struct*, align 4
  %upcon = alloca %struct.Connector_struct*, align 4
  %updiscon = alloca %struct.Connector_struct*, align 4
  %clist = alloca %struct.Connector_struct*, align 4
  %con = alloca %struct.Connector_struct*, align 4
  %mycon = alloca %struct.Connector_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %updis = alloca %struct.Disjunct_struct*, align 4
  %mydis = alloca %struct.Disjunct_struct*, align 4
  store i32 -1, i32* %end, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %end, align 4
  %cmp = icmp sle i32 %0, 1
  br i1 %cmp, label %for.body, label %for.end174

for.body:                                         ; No predecessors!
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %1 = load i32, i32* %link, align 4
  %2 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %1, %2
  br i1 %cmp2, label %for.body3, label %for.end172

for.body3:                                        ; No predecessors!
  %3 = load i32, i32* %link, align 4
  %4 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %4, i32 0, i32 %3
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %5 = load i32, i32* %l, align 4
  %cmp4 = icmp eq i32 %5, -1
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc170

if.end:                                           ; No predecessors!
  %6 = load i32, i32* %end, align 4
  %cmp5 = icmp slt i32 %6, 0
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; No predecessors!
  %7 = load i32, i32* %link, align 4
  %8 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx7 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %8, i32 0, i32 %7
  %l8 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx7, i32 0, i32 0
  %9 = load i32, i32* %l8, align 4
  store i32 %9, i32* %word, align 4
  %10 = load i32, i32* %word, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %10
  %11 = load i8, i8* %arrayidx9, align 1
  %tobool = icmp ne i8 %11, 0
  br i1 %tobool, label %if.end11, label %if.then10

if.then10:                                        ; No predecessors!
  br label %for.inc170

if.end11:                                         ; No predecessors!
  %12 = load i32, i32* %link, align 4
  %13 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx12 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %13, i32 0, i32 %12
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx12, i32 0, i32 2
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %this_end_con, align 4
  %15 = load i32, i32* %word, align 4
  %16 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %16, i32 0, i32 %15
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx13, align 4
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %dis, align 4
  %18 = load i32, i32* %link, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx14 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %l15 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx14, i32 0, i32 0
  %20 = load i32, i32* %l15, align 4
  %21 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx16 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %21, i32 0, i32 %20
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx16, align 4
  store %struct.Disjunct_struct* %22, %struct.Disjunct_struct** %mydis, align 4
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %23, i32 0, i32 5
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %clist, align 4
  br label %if.end27

if.else:                                          ; No predecessors!
  %25 = load i32, i32* %link, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %27 = load i32, i32* %r, align 4
  store i32 %27, i32* %word, align 4
  %28 = load i32, i32* %word, align 4
  %arrayidx18 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %28
  %29 = load i8, i8* %arrayidx18, align 1
  %tobool19 = icmp ne i8 %29, 0
  br i1 %tobool19, label %if.end21, label %if.then20

if.then20:                                        ; No predecessors!
  br label %for.inc170

if.end21:                                         ; No predecessors!
  %30 = load i32, i32* %link, align 4
  %31 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %31, i32 0, i32 %30
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 3
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  store %struct.Connector_struct* %32, %struct.Connector_struct** %this_end_con, align 4
  %33 = load i32, i32* %word, align 4
  %34 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %34, i32 0, i32 %33
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx23, align 4
  store %struct.Disjunct_struct* %35, %struct.Disjunct_struct** %dis, align 4
  %36 = load i32, i32* %link, align 4
  %37 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx24 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %37, i32 0, i32 %36
  %r25 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 1
  %38 = load i32, i32* %r25, align 4
  %39 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx26 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %39, i32 0, i32 %38
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx26, align 4
  store %struct.Disjunct_struct* %40, %struct.Disjunct_struct** %mydis, align 4
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %41, i32 0, i32 4
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %42, %struct.Connector_struct** %clist, align 4
  br label %if.end27

if.end27:                                         ; No predecessors!
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %43, i32 0, i32 0
  %44 = load i16, i16* %label, align 4
  %conv = sext i16 %44 to i32
  %cmp28 = icmp ne i32 %conv, -1
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; No predecessors!
  br label %for.inc170

if.end31:                                         ; No predecessors!
  store i32 0, i32* %place, align 4
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left32 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 4
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %left32, align 4
  %cmp33 = icmp ne %struct.Connector_struct* %46, null
  br i1 %cmp33, label %land.lhs.true, label %if.else41

land.lhs.true:                                    ; No predecessors!
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left35 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 4
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %left35, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %48, i32 0, i32 2
  %49 = load i8, i8* %priority, align 4
  %conv36 = sext i8 %49 to i32
  %cmp37 = icmp eq i32 %conv36, 1
  br i1 %cmp37, label %if.then39, label %if.else41

if.then39:                                        ; No predecessors!
  %50 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left40 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %50, i32 0, i32 4
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %left40, align 4
  store %struct.Connector_struct* %51, %struct.Connector_struct** %upcon, align 4
  br label %if.end55

if.else41:                                        ; No predecessors!
  %52 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right42 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %52, i32 0, i32 5
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %right42, align 4
  %cmp43 = icmp ne %struct.Connector_struct* %53, null
  br i1 %cmp43, label %land.lhs.true45, label %if.else53

land.lhs.true45:                                  ; No predecessors!
  %54 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right46 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %54, i32 0, i32 5
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %right46, align 4
  %priority47 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %55, i32 0, i32 2
  %56 = load i8, i8* %priority47, align 4
  %conv48 = sext i8 %56 to i32
  %cmp49 = icmp eq i32 %conv48, 1
  br i1 %cmp49, label %if.then51, label %if.else53

if.then51:                                        ; No predecessors!
  %57 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right52 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %57, i32 0, i32 5
  %58 = load %struct.Connector_struct*, %struct.Connector_struct** %right52, align 4
  store %struct.Connector_struct* %58, %struct.Connector_struct** %upcon, align 4
  br label %if.end54

if.else53:                                        ; No predecessors!
  store %struct.Connector_struct* null, %struct.Connector_struct** %upcon, align 4
  br label %if.end54

if.end54:                                         ; No predecessors!
  br label %if.end55

if.end55:                                         ; No predecessors!
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %cmp56 = icmp ne %struct.Connector_struct* %59, null
  br i1 %cmp56, label %if.then58, label %if.end72

if.then58:                                        ; No predecessors!
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label59 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %60, i32 0, i32 0
  %61 = load i16, i16* %label59, align 4
  %idxprom = sext i16 %61 to i32
  %62 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx60 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %62, i32 %idxprom
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx60, align 4
  store %struct.Disjunct_struct* %63, %struct.Disjunct_struct** %updis, align 4
  %64 = load i32, i32* %end, align 4
  %cmp61 = icmp sgt i32 %64, 0
  br i1 %cmp61, label %if.then63, label %if.else65

if.then63:                                        ; No predecessors!
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %left64 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %65, i32 0, i32 4
  %66 = load %struct.Connector_struct*, %struct.Connector_struct** %left64, align 4
  store %struct.Connector_struct* %66, %struct.Connector_struct** %updiscon, align 4
  br label %if.end67

if.else65:                                        ; No predecessors!
  %67 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %right66 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %67, i32 0, i32 5
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %right66, align 4
  store %struct.Connector_struct* %68, %struct.Connector_struct** %updiscon, align 4
  br label %if.end67

if.end67:                                         ; No predecessors!
  br label %for.cond68

for.cond68:                                       ; No predecessors!
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %cmp69 = icmp ne %struct.Connector_struct* %69, null
  br i1 %cmp69, label %for.body71, label %for.end

for.body71:                                       ; No predecessors!
  %70 = load i32, i32* %place, align 4
  %inc = add nsw i32 %70, 1
  store i32 %inc, i32* %place, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %71, i32 0, i32 4
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %72, %struct.Connector_struct** %updiscon, align 4
  br label %for.cond68

for.end:                                          ; No predecessors!
  br label %if.end72

if.end72:                                         ; No predecessors!
  br label %for.cond73

for.cond73:                                       ; No predecessors!
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %cmp74 = icmp ne %struct.Connector_struct* %73, %74
  br i1 %cmp74, label %for.body76, label %for.end86

for.body76:                                       ; No predecessors!
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %label77 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %75, i32 0, i32 0
  %76 = load i16, i16* %label77, align 4
  %conv78 = sext i16 %76 to i32
  %cmp79 = icmp slt i32 %conv78, 0
  br i1 %cmp79, label %if.then81, label %if.end83

if.then81:                                        ; No predecessors!
  %77 = load i32, i32* %place, align 4
  %inc82 = add nsw i32 %77, 1
  store i32 %inc82, i32* %place, align 4
  br label %if.end83

if.end83:                                         ; No predecessors!
  br label %for.inc84

for.inc84:                                        ; No predecessors!
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %next85 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %78, i32 0, i32 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %next85, align 4
  store %struct.Connector_struct* %79, %struct.Connector_struct** %clist, align 4
  br label %for.cond73

for.end86:                                        ; No predecessors!
  %80 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %left87 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %80, i32 0, i32 4
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %left87, align 4
  %cmp88 = icmp ne %struct.Connector_struct* %81, null
  br i1 %cmp88, label %land.lhs.true90, label %if.else98

land.lhs.true90:                                  ; No predecessors!
  %82 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %left91 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %82, i32 0, i32 4
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %left91, align 4
  %priority92 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %83, i32 0, i32 2
  %84 = load i8, i8* %priority92, align 4
  %conv93 = sext i8 %84 to i32
  %cmp94 = icmp eq i32 %conv93, 1
  br i1 %cmp94, label %if.then96, label %if.else98

if.then96:                                        ; No predecessors!
  %85 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %left97 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %85, i32 0, i32 4
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %left97, align 4
  store %struct.Connector_struct* %86, %struct.Connector_struct** %mycon, align 4
  br label %if.end123

if.else98:                                        ; No predecessors!
  %87 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %right99 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %87, i32 0, i32 5
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %right99, align 4
  %cmp100 = icmp ne %struct.Connector_struct* %88, null
  br i1 %cmp100, label %land.lhs.true102, label %if.else110

land.lhs.true102:                                 ; No predecessors!
  %89 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %right103 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %89, i32 0, i32 5
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %right103, align 4
  %priority104 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %90, i32 0, i32 2
  %91 = load i8, i8* %priority104, align 4
  %conv105 = sext i8 %91 to i32
  %cmp106 = icmp eq i32 %conv105, 1
  br i1 %cmp106, label %if.then108, label %if.else110

if.then108:                                       ; No predecessors!
  %92 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %mydis, align 4
  %right109 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %92, i32 0, i32 5
  %93 = load %struct.Connector_struct*, %struct.Connector_struct** %right109, align 4
  store %struct.Connector_struct* %93, %struct.Connector_struct** %mycon, align 4
  br label %if.end122

if.else110:                                       ; No predecessors!
  %94 = load i32, i32* %word, align 4
  %95 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.25.57, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %95, i32 %94)
  %96 = load i32, i32* %link, align 4
  %97 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx111 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %97, i32 0, i32 %96
  %r112 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx111, i32 0, i32 1
  %98 = load i32, i32* %r112, align 4
  %99 = load i32, i32* %link, align 4
  %100 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx113 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %100, i32 0, i32 %99
  %l114 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx113, i32 0, i32 0
  %101 = load i32, i32* %l114, align 4
  %102 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.26.58, i32 0, i32 0
  %call115 = call i32 (i8*, ...) @printf(i8* %102, i32 %101, i32 %98)
  %103 = load i32, i32* %link, align 4
  %104 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx116 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %104, i32 0, i32 %103
  %r117 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx116, i32 0, i32 1
  %105 = load i32, i32* %r117, align 4
  %106 = load i32, i32* %link, align 4
  %107 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx118 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %107, i32 0, i32 %106
  %l119 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx118, i32 0, i32 0
  %108 = load i32, i32* %l119, align 4
  %109 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.27.59, i32 0, i32 0
  %call120 = call i32 (i8*, ...) @printf(i8* %109, i32 %108, i32 %105)
  %110 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.29, i32 0, i32 0
  %111 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.28.60, i32 0, i32 0
  %call121 = call i32 (i8*, ...) @printf(i8* %110, i8* %111)
  call void @exit_Package(i32 1) #5
  unreachable

if.end122:                                        ; No predecessors!
  br label %if.end123

if.end123:                                        ; No predecessors!
  %112 = load %struct.Connector_struct*, %struct.Connector_struct** %mycon, align 4
  %label124 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %112, i32 0, i32 0
  %113 = load i16, i16* %label124, align 4
  %idxprom125 = sext i16 %113 to i32
  %114 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx126 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %114, i32 %idxprom125
  %115 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx126, align 4
  store %struct.Disjunct_struct* %115, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond127

for.cond127:                                      ; No predecessors!
  %116 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp128 = icmp ne %struct.Disjunct_struct* %116, null
  br i1 %cmp128, label %for.body130, label %for.end138

for.body130:                                      ; No predecessors!
  %117 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %117, i32 0, i32 3
  %118 = load i8*, i8** %string, align 4
  %119 = load %struct.Connector_struct*, %struct.Connector_struct** %mycon, align 4
  %string131 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %119, i32 0, i32 5
  %120 = load i8*, i8** %string131, align 4
  %cmp132 = icmp eq i8* %118, %120
  br i1 %cmp132, label %if.then134, label %if.end135

if.then134:                                       ; No predecessors!
  br label %for.end138

if.end135:                                        ; No predecessors!
  br label %for.inc136

for.inc136:                                       ; No predecessors!
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next137 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %121, i32 0, i32 0
  %122 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next137, align 4
  store %struct.Disjunct_struct* %122, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond127

for.end138:                                       ; No predecessors!
  %123 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp139 = icmp ne %struct.Disjunct_struct* %123, null
  br i1 %cmp139, label %if.end143, label %if.then141

if.then141:                                       ; No predecessors!
  %124 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.31, i32 0, i32 0
  %125 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.30, i32 0, i32 0
  %call142 = call i32 (i8*, ...) @printf(i8* %124, i8* %125)
  call void @exit_Package(i32 1) #5
  unreachable

if.end143:                                        ; No predecessors!
  %126 = load i32, i32* %end, align 4
  %cmp144 = icmp slt i32 %126, 0
  br i1 %cmp144, label %if.then146, label %if.else157

if.then146:                                       ; No predecessors!
  %127 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right147 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %127, i32 0, i32 5
  %128 = load %struct.Connector_struct*, %struct.Connector_struct** %right147, align 4
  store %struct.Connector_struct* %128, %struct.Connector_struct** %con, align 4
  br label %for.cond148

for.cond148:                                      ; No predecessors!
  %129 = load i32, i32* %place, align 4
  %cmp149 = icmp sgt i32 %129, 0
  br i1 %cmp149, label %for.body151, label %for.end154

for.body151:                                      ; No predecessors!
  br label %for.inc152

for.inc152:                                       ; No predecessors!
  %130 = load i32, i32* %place, align 4
  %dec = add nsw i32 %130, -1
  store i32 %dec, i32* %place, align 4
  %131 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %next153 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %131, i32 0, i32 4
  %132 = load %struct.Connector_struct*, %struct.Connector_struct** %next153, align 4
  store %struct.Connector_struct* %132, %struct.Connector_struct** %con, align 4
  br label %for.cond148

for.end154:                                       ; No predecessors!
  %133 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %134 = load i32, i32* %link, align 4
  %135 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx155 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %135, i32 0, i32 %134
  %lc156 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx155, i32 0, i32 2
  store %struct.Connector_struct* %133, %struct.Connector_struct** %lc156, align 4
  br label %if.end169

if.else157:                                       ; No predecessors!
  %136 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left158 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %136, i32 0, i32 4
  %137 = load %struct.Connector_struct*, %struct.Connector_struct** %left158, align 4
  store %struct.Connector_struct* %137, %struct.Connector_struct** %con, align 4
  br label %for.cond159

for.cond159:                                      ; No predecessors!
  %138 = load i32, i32* %place, align 4
  %cmp160 = icmp sgt i32 %138, 0
  br i1 %cmp160, label %for.body162, label %for.end166

for.body162:                                      ; No predecessors!
  br label %for.inc163

for.inc163:                                       ; No predecessors!
  %139 = load i32, i32* %place, align 4
  %dec164 = add nsw i32 %139, -1
  store i32 %dec164, i32* %place, align 4
  %140 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %next165 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %140, i32 0, i32 4
  %141 = load %struct.Connector_struct*, %struct.Connector_struct** %next165, align 4
  store %struct.Connector_struct* %141, %struct.Connector_struct** %con, align 4
  br label %for.cond159

for.end166:                                       ; No predecessors!
  %142 = load %struct.Connector_struct*, %struct.Connector_struct** %con, align 4
  %143 = load i32, i32* %link, align 4
  %144 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx167 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %144, i32 0, i32 %143
  %rc168 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx167, i32 0, i32 3
  store %struct.Connector_struct* %142, %struct.Connector_struct** %rc168, align 4
  br label %if.end169

if.end169:                                        ; No predecessors!
  br label %for.inc170

for.inc170:                                       ; No predecessors!
  %145 = load i32, i32* %link, align 4
  %inc171 = add nsw i32 %145, 1
  store i32 %inc171, i32* %link, align 4
  br label %for.cond1

for.end172:                                       ; No predecessors!
  br label %for.inc173

for.inc173:                                       ; No predecessors!
  %146 = load i32, i32* %end, align 4
  %add = add nsw i32 %146, 2
  store i32 %add, i32* %end, align 4
  br label %for.cond

for.end174:                                       ; No predecessors!
  ret void
}

define void @issue_sentence_word_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strlen_Package(i8* %2)
  %cmp2 = icmp uge i32 %call, 60
  br i1 %cmp2, label %if.then4, label %if.end7

if.then4:                                         ; No predecessors!
  %3 = load i8*, i8** %s.addr, align 4
  %4 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.137, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %4, i8* %3)
  %5 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.1.138, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %5, i32 59)
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; No predecessors!
  %6 = load i32, i32* @N_words, align 4
  %cmp8 = icmp eq i32 %6, 250
  br i1 %cmp8, label %if.then10, label %if.end12

if.then10:                                        ; No predecessors!
  %7 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.2.139, i32 0, i32 0
  %call11 = call i32 (i8*, ...) @printf(i8* %7)
  store i32 0, i32* %retval, align 4
  br label %return

if.end12:                                         ; No predecessors!
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i32, i32* @N_words, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %9
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %call13 = call i8* @strcpy_Package(i8* %arraydecay, i8* %8)
  %10 = load i32, i32* @N_words, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* @N_words, align 4
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %11 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret void
}

define void @build_graph_Clear() {
entry:
  %i = alloca i32, align 4
  %link = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end32

for.body3:                                        ; No predecessors!
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 0
  %8 = load i32, i32* %l, align 4
  %cmp5 = icmp eq i32 %8, -1
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc30

if.end:                                           ; No predecessors!
  %9 = load i32, i32* %link, align 4
  %10 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %10, i32 0, i32 %9
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx6, i32 0, i32 4
  %11 = load i8*, i8** %name, align 4
  %12 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ignore_these_links, i32 0, i32 0
  %call = call i32 @string_in_list(i8* %11, i8** %12)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then7, label %if.end8

if.then7:                                         ; No predecessors!
  br label %for.inc30

if.end8:                                          ; No predecessors!
  %call9 = call i8* @xalloc(i32 16)
  %13 = bitcast i8* %call9 to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %13, %struct.List_o_links_struct** %lol, align 4
  %14 = load i32, i32* %link, align 4
  %15 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %15, i32 0, i32 %14
  %l11 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx10, i32 0, i32 0
  %16 = load i32, i32* %l11, align 4
  %arrayidx12 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %16
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx12, align 4
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %18, i32 0, i32 3
  store %struct.List_o_links_struct* %17, %struct.List_o_links_struct** %next, align 4
  %19 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %20 = load i32, i32* %link, align 4
  %21 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %21, i32 0, i32 %20
  %l14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 0
  %22 = load i32, i32* %l14, align 4
  %arrayidx15 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %22
  store %struct.List_o_links_struct* %19, %struct.List_o_links_struct** %arrayidx15, align 4
  %23 = load i32, i32* %link, align 4
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link16 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %24, i32 0, i32 0
  store i32 %23, i32* %link16, align 4
  %25 = load i32, i32* %link, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %27 = load i32, i32* %r, align 4
  %28 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %28, i32 0, i32 1
  store i32 %27, i32* %word, align 4
  %call18 = call i8* @xalloc(i32 16)
  %29 = bitcast i8* %call18 to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %29, %struct.List_o_links_struct** %lol, align 4
  %30 = load i32, i32* %link, align 4
  %31 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %31, i32 0, i32 %30
  %r20 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx19, i32 0, i32 1
  %32 = load i32, i32* %r20, align 4
  %arrayidx21 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %32
  %33 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx21, align 4
  %34 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next22 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %34, i32 0, i32 3
  store %struct.List_o_links_struct* %33, %struct.List_o_links_struct** %next22, align 4
  %35 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %36 = load i32, i32* %link, align 4
  %37 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %37, i32 0, i32 %36
  %r24 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx23, i32 0, i32 1
  %38 = load i32, i32* %r24, align 4
  %arrayidx25 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %38
  store %struct.List_o_links_struct* %35, %struct.List_o_links_struct** %arrayidx25, align 4
  %39 = load i32, i32* %link, align 4
  %40 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link26 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %40, i32 0, i32 0
  store i32 %39, i32* %link26, align 4
  %41 = load i32, i32* %link, align 4
  %42 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx27 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %42, i32 0, i32 %41
  %l28 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx27, i32 0, i32 0
  %43 = load i32, i32* %l28, align 4
  %44 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word29 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %44, i32 0, i32 1
  store i32 %43, i32* %word29, align 4
  br label %for.inc30

for.inc30:                                        ; No predecessors!
  %45 = load i32, i32* %link, align 4
  %inc31 = add nsw i32 %45, 1
  store i32 %inc31, i32* %link, align 4
  br label %for.cond1

for.end32:                                        ; No predecessors!
  ret void
}

define void @build_domains_Clear() {
entry:
  %link = alloca i32, align 4
  %i = alloca i32, align 4
  %d = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* @N_domains, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %link, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end80

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %link, align 4
  %3 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %3, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %4 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %4, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc78

if.end:                                           ; No predecessors!
  %5 = load i32, i32* %link, align 4
  %6 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx2 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %6, i32 0, i32 %5
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx2, i32 0, i32 4
  %7 = load i8*, i8** %name, align 4
  %8 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ignore_these_links, i32 0, i32 0
  %call = call i32 @string_in_list(i8* %7, i8** %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then3, label %if.end4

if.then3:                                         ; No predecessors!
  br label %for.inc78

if.end4:                                          ; No predecessors!
  %9 = load i32, i32* %link, align 4
  %10 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %10, i32 0, i32 %9
  %name6 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx5, i32 0, i32 4
  %11 = load i8*, i8** %name6, align 4
  store i8* %11, i8** %s, align 4
  %12 = load i8*, i8** %s, align 4
  %13 = getelementptr inbounds [38 x i8*], [38 x i8*]* @domain_starter_links, i32 0, i32 0
  %call7 = call i32 @string_in_list(i8* %12, i8** %13)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.then9, label %if.else

if.then9:                                         ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; No predecessors!
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* @N_words, align 4
  %cmp11 = icmp slt i32 %14, %15
  br i1 %cmp11, label %for.body12, label %for.end

for.body12:                                       ; No predecessors!
  %16 = load i32, i32* %i, align 4
  %arrayidx13 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %16
  store i32 0, i32* %arrayidx13, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %17 = load i32, i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond10

for.end:                                          ; No predecessors!
  %18 = load i8*, i8** %s, align 4
  %19 = load i32, i32* @N_domains, align 4
  %arrayidx14 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %19
  %string = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx14, i32 0, i32 0
  store i8* %18, i8** %string, align 4
  %20 = load i32, i32* @N_domains, align 4
  %arrayidx15 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %20
  %lol = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx15, i32 0, i32 2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %lol, align 4
  %21 = load i32, i32* @N_domains, align 4
  %arrayidx16 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %21
  %size = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx16, i32 0, i32 1
  store i32 0, i32* %size, align 4
  %22 = load i32, i32* %link, align 4
  %23 = load i32, i32* @N_domains, align 4
  %arrayidx17 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %23
  %start_link = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx17, i32 0, i32 3
  store i32 %22, i32* %start_link, align 4
  %24 = load i8*, i8** %s, align 4
  %25 = getelementptr inbounds [21 x i8*], [21 x i8*]* @domain_contains_links, i32 0, i32 0
  %call18 = call i32 @string_in_list(i8* %24, i8** %25)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; No predecessors!
  %26 = load i32, i32* %link, align 4
  call void @add_link_to_domain(i32 %26)
  br label %if.end21

if.end21:                                         ; No predecessors!
  %27 = load i32, i32* %link, align 4
  %28 = load i32, i32* %link, align 4
  %29 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %29, i32 0, i32 %28
  %l23 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 0
  %30 = load i32, i32* %l23, align 4
  %31 = load i32, i32* %link, align 4
  %32 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx24 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %32, i32 0, i32 %31
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx24, i32 0, i32 1
  %33 = load i32, i32* %r, align 4
  call void @depth_first_search(i32 %33, i32 %30, i32 %27)
  %34 = load i32, i32* @N_domains, align 4
  %inc25 = add nsw i32 %34, 1
  store i32 %inc25, i32* @N_domains, align 4
  br label %if.end77

if.else:                                          ; No predecessors!
  %35 = load i8*, i8** %s, align 4
  %36 = getelementptr inbounds [4 x i8*], [4 x i8*]* @urfl_domain_starter_links, i32 0, i32 0
  %call26 = call i32 @string_in_list(i8* %35, i8** %36)
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.then28, label %if.else49

if.then28:                                        ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond29

for.cond29:                                       ; No predecessors!
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* @N_words, align 4
  %cmp30 = icmp slt i32 %37, %38
  br i1 %cmp30, label %for.body31, label %for.end35

for.body31:                                       ; No predecessors!
  %39 = load i32, i32* %i, align 4
  %arrayidx32 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %39
  store i32 0, i32* %arrayidx32, align 4
  br label %for.inc33

for.inc33:                                        ; No predecessors!
  %40 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %40, 1
  store i32 %inc34, i32* %i, align 4
  br label %for.cond29

for.end35:                                        ; No predecessors!
  %41 = load i8*, i8** %s, align 4
  %42 = load i32, i32* @N_domains, align 4
  %arrayidx36 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %42
  %string37 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx36, i32 0, i32 0
  store i8* %41, i8** %string37, align 4
  %43 = load i32, i32* @N_domains, align 4
  %arrayidx38 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %43
  %lol39 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx38, i32 0, i32 2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %lol39, align 4
  %44 = load i32, i32* @N_domains, align 4
  %arrayidx40 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %44
  %size41 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx40, i32 0, i32 1
  store i32 0, i32* %size41, align 4
  %45 = load i32, i32* %link, align 4
  %46 = load i32, i32* @N_domains, align 4
  %arrayidx42 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %46
  %start_link43 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx42, i32 0, i32 3
  store i32 %45, i32* %start_link43, align 4
  %47 = load i32, i32* %link, align 4
  call void @add_link_to_domain(i32 %47)
  %48 = load i32, i32* %link, align 4
  %49 = load i32, i32* %link, align 4
  %50 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx44 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %50, i32 0, i32 %49
  %l45 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx44, i32 0, i32 0
  %51 = load i32, i32* %l45, align 4
  %52 = load i32, i32* %link, align 4
  %53 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx46 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %53, i32 0, i32 %52
  %r47 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx46, i32 0, i32 1
  %54 = load i32, i32* %r47, align 4
  call void @bad_depth_first_search(i32 %54, i32 %51, i32 %48)
  %55 = load i32, i32* @N_domains, align 4
  %inc48 = add nsw i32 %55, 1
  store i32 %inc48, i32* @N_domains, align 4
  br label %if.end76

if.else49:                                        ; No predecessors!
  %56 = load i8*, i8** %s, align 4
  %57 = getelementptr inbounds [4 x i8*], [4 x i8*]* @urfl_only_domain_starter_links, i32 0, i32 0
  %call50 = call i32 @string_in_list(i8* %56, i8** %57)
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.then52, label %if.end75

if.then52:                                        ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond53

for.cond53:                                       ; No predecessors!
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* @N_words, align 4
  %cmp54 = icmp slt i32 %58, %59
  br i1 %cmp54, label %for.body55, label %for.end59

for.body55:                                       ; No predecessors!
  %60 = load i32, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %60
  store i32 0, i32* %arrayidx56, align 4
  br label %for.inc57

for.inc57:                                        ; No predecessors!
  %61 = load i32, i32* %i, align 4
  %inc58 = add nsw i32 %61, 1
  store i32 %inc58, i32* %i, align 4
  br label %for.cond53

for.end59:                                        ; No predecessors!
  %62 = load i8*, i8** %s, align 4
  %63 = load i32, i32* @N_domains, align 4
  %arrayidx60 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %63
  %string61 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx60, i32 0, i32 0
  store i8* %62, i8** %string61, align 4
  %64 = load i32, i32* @N_domains, align 4
  %arrayidx62 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %64
  %lol63 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx62, i32 0, i32 2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %lol63, align 4
  %65 = load i32, i32* @N_domains, align 4
  %arrayidx64 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %65
  %size65 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx64, i32 0, i32 1
  store i32 0, i32* %size65, align 4
  %66 = load i32, i32* %link, align 4
  %67 = load i32, i32* @N_domains, align 4
  %arrayidx66 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %67
  %start_link67 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx66, i32 0, i32 3
  store i32 %66, i32* %start_link67, align 4
  %68 = load i32, i32* %link, align 4
  %69 = load i32, i32* %link, align 4
  %70 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx68 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %70, i32 0, i32 %69
  %r69 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx68, i32 0, i32 1
  %71 = load i32, i32* %r69, align 4
  %72 = load i32, i32* %link, align 4
  %73 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx70 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %73, i32 0, i32 %72
  %l71 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx70, i32 0, i32 0
  %74 = load i32, i32* %l71, align 4
  %75 = load i32, i32* %link, align 4
  %76 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx72 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %76, i32 0, i32 %75
  %l73 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx72, i32 0, i32 0
  %77 = load i32, i32* %l73, align 4
  call void @d_depth_first_search(i32 %77, i32 %74, i32 %71, i32 %68)
  %78 = load i32, i32* @N_domains, align 4
  %inc74 = add nsw i32 %78, 1
  store i32 %inc74, i32* @N_domains, align 4
  br label %if.end75

if.end75:                                         ; No predecessors!
  br label %if.end76

if.end76:                                         ; No predecessors!
  br label %if.end77

if.end77:                                         ; No predecessors!
  br label %for.inc78

for.inc78:                                        ; No predecessors!
  %79 = load i32, i32* %link, align 4
  %inc79 = add nsw i32 %79, 1
  store i32 %inc79, i32* %link, align 4
  br label %for.cond

for.end80:                                        ; No predecessors!
  %80 = load i32, i32* @N_domains, align 4
  %81 = bitcast [497 x %struct.domain_struct]* @domain_array to i8*
  %82 = bitcast i32 (%struct.domain_struct*, %struct.domain_struct*)* @domain_compare to i32 (i8*, i8*)*
  call void @qsort_Package(i8* %81, i32 %80, i32 28, i32 (i8*, i8*)* %82)
  store i32 0, i32* %d, align 4
  br label %for.cond81

for.cond81:                                       ; No predecessors!
  %83 = load i32, i32* %d, align 4
  %84 = load i32, i32* @N_domains, align 4
  %cmp82 = icmp slt i32 %83, %84
  br i1 %cmp82, label %for.body83, label %for.end96

for.body83:                                       ; No predecessors!
  %85 = load i32, i32* %d, align 4
  %arrayidx84 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %85
  %string85 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx84, i32 0, i32 0
  %86 = load i8*, i8** %string85, align 4
  %call86 = call i32 @find_domain_name(i8* %86)
  store i32 %call86, i32* %i, align 4
  %87 = load i32, i32* %i, align 4
  %cmp87 = icmp eq i32 %87, 0
  br i1 %cmp87, label %if.then88, label %if.end92

if.then88:                                        ; No predecessors!
  %88 = load i32, i32* %d, align 4
  %arrayidx89 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %88
  %string90 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx89, i32 0, i32 0
  %89 = load i8*, i8** %string90, align 4
  %90 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.45.460, i32 0, i32 0
  %call91 = call i32 (i8*, ...) @printf(i8* %90, i8* %89)
  call void @exit_Package(i32 1) #5
  unreachable

if.end92:                                         ; No predecessors!
  %91 = load i32, i32* %i, align 4
  %92 = load i32, i32* %d, align 4
  %arrayidx93 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %92
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx93, i32 0, i32 4
  store i32 %91, i32* %type, align 4
  br label %for.inc94

for.inc94:                                        ; No predecessors!
  %93 = load i32, i32* %d, align 4
  %inc95 = add nsw i32 %93, 1
  store i32 %inc95, i32* %d, align 4
  br label %for.cond81

for.end96:                                        ; No predecessors!
  ret void
}

define void @build_domain_forest_Clear() {
entry:
  %d = alloca i32, align 4
  %d1 = alloca i32, align 4
  %link = alloca i32, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %0 = load i32, i32* @N_domains, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %1 = load i32, i32* @N_domains, align 4
  %sub = sub nsw i32 %1, 1
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %sub
  %parent = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 6
  store %struct.domain_struct* null, %struct.domain_struct** %parent, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  store i32 1, i32* @N_domain_trees, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load i32, i32* %d, align 4
  %3 = load i32, i32* @N_domains, align 4
  %sub1 = sub nsw i32 %3, 1
  %cmp2 = icmp slt i32 %2, %sub1
  br i1 %cmp2, label %for.body, label %for.end21

for.body:                                         ; No predecessors!
  %4 = load i32, i32* %d, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %d1, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %5 = load i32, i32* %d1, align 4
  %6 = load i32, i32* @N_domains, align 4
  %cmp4 = icmp slt i32 %5, %6
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; No predecessors!
  %7 = load i32, i32* %d1, align 4
  %arrayidx6 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %7
  %8 = load i32, i32* %d, align 4
  %arrayidx7 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %8
  %call = call i32 @contained_in(%struct.domain_struct* %arrayidx7, %struct.domain_struct* %arrayidx6)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then8, label %if.end12

if.then8:                                         ; No predecessors!
  %9 = load i32, i32* %d1, align 4
  %arrayidx9 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %9
  %10 = load i32, i32* %d, align 4
  %arrayidx10 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %10
  %parent11 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx10, i32 0, i32 6
  store %struct.domain_struct* %arrayidx9, %struct.domain_struct** %parent11, align 4
  br label %for.end

if.end12:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %11 = load i32, i32* %d1, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %d1, align 4
  br label %for.cond3

for.end:                                          ; No predecessors!
  %12 = load i32, i32* %d1, align 4
  %13 = load i32, i32* @N_domains, align 4
  %cmp13 = icmp eq i32 %12, %13
  br i1 %cmp13, label %if.then14, label %if.end18

if.then14:                                        ; No predecessors!
  %14 = load i32, i32* %d, align 4
  %arrayidx15 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %14
  %parent16 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx15, i32 0, i32 6
  store %struct.domain_struct* null, %struct.domain_struct** %parent16, align 4
  %15 = load i32, i32* @N_domain_trees, align 4
  %inc17 = add nsw i32 %15, 1
  store i32 %inc17, i32* @N_domain_trees, align 4
  br label %if.end18

if.end18:                                         ; No predecessors!
  br label %for.inc19

for.inc19:                                        ; No predecessors!
  %16 = load i32, i32* %d, align 4
  %inc20 = add nsw i32 %16, 1
  store i32 %inc20, i32* %d, align 4
  br label %for.cond

for.end21:                                        ; No predecessors!
  store i32 0, i32* %d, align 4
  br label %for.cond22

for.cond22:                                       ; No predecessors!
  %17 = load i32, i32* %d, align 4
  %18 = load i32, i32* @N_domains, align 4
  %cmp23 = icmp slt i32 %17, %18
  br i1 %cmp23, label %for.body24, label %for.end28

for.body24:                                       ; No predecessors!
  %19 = load i32, i32* %d, align 4
  %arrayidx25 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %19
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx25, i32 0, i32 5
  store %struct.d_tree_leaf_struct* null, %struct.d_tree_leaf_struct** %child, align 4
  br label %for.inc26

for.inc26:                                        ; No predecessors!
  %20 = load i32, i32* %d, align 4
  %inc27 = add nsw i32 %20, 1
  store i32 %inc27, i32* %d, align 4
  br label %for.cond22

for.end28:                                        ; No predecessors!
  store i32 0, i32* %link, align 4
  br label %for.cond29

for.cond29:                                       ; No predecessors!
  %21 = load i32, i32* %link, align 4
  %22 = load i32, i32* @N_links, align 4
  %cmp30 = icmp slt i32 %21, %22
  br i1 %cmp30, label %for.body31, label %for.end57

for.body31:                                       ; No predecessors!
  %23 = load i32, i32* %link, align 4
  %24 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx32 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %24, i32 0, i32 %23
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx32, i32 0, i32 0
  %25 = load i32, i32* %l, align 4
  %cmp33 = icmp eq i32 %25, -1
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; No predecessors!
  br label %for.inc55

if.end35:                                         ; No predecessors!
  store i32 0, i32* %d, align 4
  br label %for.cond36

for.cond36:                                       ; No predecessors!
  %26 = load i32, i32* %d, align 4
  %27 = load i32, i32* @N_domains, align 4
  %cmp37 = icmp slt i32 %26, %27
  br i1 %cmp37, label %for.body38, label %for.end54

for.body38:                                       ; No predecessors!
  %28 = load i32, i32* %d, align 4
  %arrayidx39 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %28
  %29 = load i32, i32* %link, align 4
  %call40 = call i32 @link_in_domain(i32 %29, %struct.domain_struct* %arrayidx39)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.then42, label %if.end51

if.then42:                                        ; No predecessors!
  %call43 = call i8* @xalloc(i32 12)
  %30 = bitcast i8* %call43 to %struct.d_tree_leaf_struct*
  store %struct.d_tree_leaf_struct* %30, %struct.d_tree_leaf_struct** %dtl, align 4
  %31 = load i32, i32* %link, align 4
  %32 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link44 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %32, i32 0, i32 1
  store i32 %31, i32* %link44, align 4
  %33 = load i32, i32* %d, align 4
  %arrayidx45 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %33
  %34 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %parent46 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %34, i32 0, i32 0
  store %struct.domain_struct* %arrayidx45, %struct.domain_struct** %parent46, align 4
  %35 = load i32, i32* %d, align 4
  %arrayidx47 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %35
  %child48 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx47, i32 0, i32 5
  %36 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child48, align 4
  %37 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %37, i32 0, i32 2
  store %struct.d_tree_leaf_struct* %36, %struct.d_tree_leaf_struct** %next, align 4
  %38 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %39 = load i32, i32* %d, align 4
  %arrayidx49 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %39
  %child50 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx49, i32 0, i32 5
  store %struct.d_tree_leaf_struct* %38, %struct.d_tree_leaf_struct** %child50, align 4
  br label %for.end54

if.end51:                                         ; No predecessors!
  br label %for.inc52

for.inc52:                                        ; No predecessors!
  %40 = load i32, i32* %d, align 4
  %inc53 = add nsw i32 %40, 1
  store i32 %inc53, i32* %d, align 4
  br label %for.cond36

for.end54:                                        ; No predecessors!
  br label %for.inc55

for.inc55:                                        ; No predecessors!
  %41 = load i32, i32* %link, align 4
  %inc56 = add nsw i32 %41, 1
  store i32 %inc56, i32* %link, align 4
  br label %for.cond29

for.end57:                                        ; No predecessors!
  ret void
}

define void @free_post_processing_structures_Clear() {
entry:
  %w = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %2
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  call void @free_list_o_links(%struct.List_o_links_struct* %3)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %w, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %d, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %5 = load i32, i32* %d, align 4
  %6 = load i32, i32* @N_domains, align 4
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %for.body3, label %for.end8

for.body3:                                        ; No predecessors!
  %7 = load i32, i32* %d, align 4
  %arrayidx4 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %7
  %lol = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx4, i32 0, i32 2
  %8 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  call void @free_list_o_links(%struct.List_o_links_struct* %8)
  %9 = load i32, i32* %d, align 4
  %arrayidx5 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %9
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx5, i32 0, i32 5
  %10 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  call void @free_D_tree_leaves(%struct.d_tree_leaf_struct* %10)
  br label %for.inc6

for.inc6:                                         ; No predecessors!
  %11 = load i32, i32* %d, align 4
  %inc7 = add nsw i32 %11, 1
  store i32 %inc7, i32* %d, align 4
  br label %for.cond1

for.end8:                                         ; No predecessors!
  ret void
}

define void @domain_bounded_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %retval = alloca i32, align 4
  %d_type.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %lw = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %d_type.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end15

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 4
  %3 = load i32, i32* %type, align 4
  %4 = load i32, i32* %d_type.addr, align 4
  %cmp1 = icmp ne i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc14

if.end:                                           ; No predecessors!
  %5 = load i32, i32* %d, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %5
  %start_link = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx2, i32 0, i32 3
  %6 = load i32, i32* %start_link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 0
  %8 = load i32, i32* %l, align 4
  store i32 %8, i32* %lw, align 4
  %9 = load i32, i32* %d, align 4
  %arrayidx4 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %9
  %lol5 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx4, i32 0, i32 2
  %10 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol5, align 4
  store %struct.List_o_links_struct* %10, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond6

for.cond6:                                        ; No predecessors!
  %11 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp7 = icmp ne %struct.List_o_links_struct* %11, null
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; No predecessors!
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %12, i32 0, i32 0
  %13 = load i32, i32* %link, align 4
  %14 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %14, i32 0, i32 %13
  %l10 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx9, i32 0, i32 0
  %15 = load i32, i32* %l10, align 4
  %16 = load i32, i32* %lw, align 4
  %cmp11 = icmp slt i32 %15, %16
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end13:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %17, i32 0, i32 3
  %18 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %18, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond6

for.end:                                          ; No predecessors!
  br label %for.inc14

for.inc14:                                        ; No predecessors!
  %19 = load i32, i32* %d, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end15:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %20 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %20, i32* %struct.BigStruct_32
  ret void
}

define void @contains_none_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  %load_struct.BigStruct_9 = load i8**, i8*** %struct.BigStruct_9
  %retval = alloca i32, align 4
  %incompat.addr = alloca i8**, align 4
  %selector.addr = alloca i8*, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %d = alloca i32, align 4
  store i8** %load_struct.BigStruct_9, i8*** %incompat.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %selector.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end24

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 5
  %3 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %3, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp2 = icmp ne %struct.d_tree_leaf_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %5 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %5, i32 0, i32 1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 4
  %8 = load i8*, i8** %name, align 4
  %9 = load i8*, i8** %selector.addr, align 4
  %call = call i32 @ppmatch(i8* %9, i8* %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %10, i32 0, i32 2
  %11 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %11, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  %12 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp5 = icmp ne %struct.d_tree_leaf_struct* %12, null
  br i1 %cmp5, label %if.then6, label %if.end22

if.then6:                                         ; No predecessors!
  %13 = load i32, i32* %d, align 4
  %arrayidx7 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %13
  %child8 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx7, i32 0, i32 5
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child8, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.cond9:                                        ; No predecessors!
  %15 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp10 = icmp ne %struct.d_tree_leaf_struct* %15, null
  br i1 %cmp10, label %for.body11, label %for.end21

for.body11:                                       ; No predecessors!
  %16 = load i8**, i8*** %incompat.addr, align 4
  %17 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link12 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %17, i32 0, i32 1
  %18 = load i32, i32* %link12, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %name14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 4
  %20 = load i8*, i8** %name14, align 4
  %call15 = call i32 @string_in_list(i8* %20, i8** %16)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end18:                                         ; No predecessors!
  br label %for.inc19

for.inc19:                                        ; No predecessors!
  %21 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next20 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %21, i32 0, i32 2
  %22 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next20, align 4
  store %struct.d_tree_leaf_struct* %22, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.end21:                                        ; No predecessors!
  br label %if.end22

if.end22:                                         ; No predecessors!
  br label %for.inc23

for.inc23:                                        ; No predecessors!
  %23 = load i32, i32* %d, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end24:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %24 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %24, i32* %struct.BigStruct_32
  ret void
}

define void @contains_one_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  %load_struct.BigStruct_9 = load i8**, i8*** %struct.BigStruct_9
  %retval = alloca i32, align 4
  %required.addr = alloca i8**, align 4
  %selector.addr = alloca i8*, align 4
  %dtl = alloca %struct.d_tree_leaf_struct*, align 4
  %d = alloca i32, align 4
  %count = alloca i32, align 4
  store i8** %load_struct.BigStruct_9, i8*** %required.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %selector.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end28

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 5
  %3 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %3, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp2 = icmp ne %struct.d_tree_leaf_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %5 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %5, i32 0, i32 1
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 4
  %8 = load i8*, i8** %name, align 4
  %9 = load i8*, i8** %selector.addr, align 4
  %call = call i32 @ppmatch(i8* %9, i8* %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %10, i32 0, i32 2
  %11 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %11, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  %12 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp5 = icmp ne %struct.d_tree_leaf_struct* %12, null
  br i1 %cmp5, label %if.then6, label %if.end25

if.then6:                                         ; No predecessors!
  store i32 0, i32* %count, align 4
  %13 = load i32, i32* %d, align 4
  %arrayidx7 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %13
  %child8 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx7, i32 0, i32 5
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child8, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.cond9:                                        ; No predecessors!
  %15 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %cmp10 = icmp ne %struct.d_tree_leaf_struct* %15, null
  br i1 %cmp10, label %for.body11, label %for.end21

for.body11:                                       ; No predecessors!
  %16 = load i8**, i8*** %required.addr, align 4
  %17 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %link12 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %17, i32 0, i32 1
  %18 = load i32, i32* %link12, align 4
  %19 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %19, i32 0, i32 %18
  %name14 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx13, i32 0, i32 4
  %20 = load i8*, i8** %name14, align 4
  %call15 = call i32 @string_in_list(i8* %20, i8** %16)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; No predecessors!
  %21 = load i32, i32* %count, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %count, align 4
  br label %if.end18

if.end18:                                         ; No predecessors!
  br label %for.inc19

for.inc19:                                        ; No predecessors!
  %22 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %dtl, align 4
  %next20 = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %22, i32 0, i32 2
  %23 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next20, align 4
  store %struct.d_tree_leaf_struct* %23, %struct.d_tree_leaf_struct** %dtl, align 4
  br label %for.cond9

for.end21:                                        ; No predecessors!
  %24 = load i32, i32* %count, align 4
  %cmp22 = icmp slt i32 %24, 1
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end24:                                         ; No predecessors!
  br label %if.end25

if.end25:                                         ; No predecessors!
  br label %for.inc26

for.inc26:                                        ; No predecessors!
  %25 = load i32, i32* %d, align 4
  %inc27 = add nsw i32 %25, 1
  store i32 %inc27, i32* %d, align 4
  br label %for.cond

for.end28:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %26 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %26, i32* %struct.BigStruct_32
  ret void
}

define void @is_connected_without_Clear() {
entry:
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  %load_struct.BigStruct_9 = load i8**, i8*** %struct.BigStruct_9
  %retval = alloca i32, align 4
  %s.addr = alloca i8**, align 4
  %i = alloca i32, align 4
  store i8** %load_struct.BigStruct_9, i8*** %s.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %2
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  call void @mark_reachable_words(i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @N_words, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end8

for.body3:                                        ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %6
  %7 = load i32, i32* %arrayidx4, align 4
  %tobool = icmp ne i32 %7, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %8 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %8
  store i32 %lnot.ext, i32* %arrayidx5, align 4
  br label %for.inc6

for.inc6:                                         ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %9, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond1

for.end8:                                         ; No predecessors!
  %10 = load i8**, i8*** %s.addr, align 4
  call void @connectivity_dfs(i32 0, i8** %10)
  store i32 0, i32* %i, align 4
  br label %for.cond9

for.cond9:                                        ; No predecessors!
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* @N_words, align 4
  %cmp10 = icmp slt i32 %11, %12
  br i1 %cmp10, label %for.body11, label %for.end16

for.body11:                                       ; No predecessors!
  %13 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %13
  %14 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp eq i32 %14, 0
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.inc14

for.inc14:                                        ; No predecessors!
  %15 = load i32, i32* %i, align 4
  %inc15 = add nsw i32 %15, 1
  store i32 %inc15, i32* %i, align 4
  br label %for.cond9

for.end16:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %16 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %16, i32* %struct.BigStruct_32
  ret void
}

define void @is_connected_Clear() {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links.386, i32 0, i32 %2
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  %cmp1 = icmp eq %struct.List_o_links_struct* %3, null
  %conv = zext i1 %cmp1 to i32
  %4 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %4
  store i32 %conv, i32* %arrayidx2, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  call void @mark_reachable_words(i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* @N_words, align 4
  %cmp4 = icmp slt i32 %6, %7
  br i1 %cmp4, label %for.body6, label %for.end10

for.body6:                                        ; No predecessors!
  %8 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds [250 x i32], [250 x i32]* @visited.388, i32 0, i32 %8
  %9 = load i32, i32* %arrayidx7, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.inc8

for.inc8:                                         ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc9 = add nsw i32 %10, 1
  store i32 %inc9, i32* %i, align 4
  br label %for.cond3

for.end10:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %11 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret void
}

define void @build_type_array_Clear() {
entry:
  %array = alloca %struct.D_type_list_struct**, align 4
  %dtl = alloca %struct.D_type_list_struct*, align 4
  %d = alloca i32, align 4
  %i = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store %struct.D_type_list_struct** null, %struct.D_type_list_struct*** %array, align 4
  %0 = load i32, i32* @N_links, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %1 = load i32, i32* @N_links, align 4
  %mul = mul i32 %1, 4
  %call = call i8* @xalloc(i32 %mul)
  %2 = bitcast i8* %call to %struct.D_type_list_struct**
  store %struct.D_type_list_struct** %2, %struct.D_type_list_struct*** %array, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* @N_links, align 4
  %cmp1 = icmp slt i32 %3, %4
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %arrayidx = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %6, i32 %5
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %d, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %8 = load i32, i32* %d, align 4
  %9 = load i32, i32* @N_domains, align 4
  %cmp3 = icmp slt i32 %8, %9
  br i1 %cmp3, label %for.body4, label %for.end21

for.body4:                                        ; No predecessors!
  %10 = load i32, i32* %d, align 4
  %arrayidx5 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %10
  %lol6 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx5, i32 0, i32 2
  %11 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol6, align 4
  store %struct.List_o_links_struct* %11, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond7

for.cond7:                                        ; No predecessors!
  %12 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp8 = icmp ne %struct.List_o_links_struct* %12, null
  br i1 %cmp8, label %for.body9, label %for.end18

for.body9:                                        ; No predecessors!
  %call10 = call i8* @xalloc(i32 8)
  %13 = bitcast i8* %call10 to %struct.D_type_list_struct*
  store %struct.D_type_list_struct* %13, %struct.D_type_list_struct** %dtl, align 4
  %14 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %14, i32 0, i32 0
  %15 = load i32, i32* %link, align 4
  %16 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %arrayidx11 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %16, i32 %15
  %17 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx11, align 4
  %18 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %18, i32 0, i32 0
  store %struct.D_type_list_struct* %17, %struct.D_type_list_struct** %next, align 4
  %19 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %20 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link12 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %20, i32 0, i32 0
  %21 = load i32, i32* %link12, align 4
  %22 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %arrayidx13 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %22, i32 %21
  store %struct.D_type_list_struct* %19, %struct.D_type_list_struct** %arrayidx13, align 4
  %23 = load i32, i32* %d, align 4
  %arrayidx14 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %23
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx14, i32 0, i32 4
  %24 = load i32, i32* %type, align 4
  %25 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %type15 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %25, i32 0, i32 1
  store i32 %24, i32* %type15, align 4
  br label %for.inc16

for.inc16:                                        ; No predecessors!
  %26 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next17 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %26, i32 0, i32 3
  %27 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next17, align 4
  store %struct.List_o_links_struct* %27, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond7

for.end18:                                        ; No predecessors!
  br label %for.inc19

for.inc19:                                        ; No predecessors!
  %28 = load i32, i32* %d, align 4
  %inc20 = add nsw i32 %28, 1
  store i32 %inc20, i32* %d, align 4
  br label %for.cond2

for.end21:                                        ; No predecessors!
  %29 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %array, align 4
  %struct.BigStruct_35 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 35
  store %struct.D_type_list_struct** %29, %struct.D_type_list_struct*** %struct.BigStruct_35
  ret void
}

define void @bogus_pp_node_Clear() {
entry:
  %pp_return = alloca %struct.PP_node_struct*, align 4
  %link = alloca i32, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.PP_node_struct*
  store %struct.PP_node_struct* %0, %struct.PP_node_struct** %pp_return, align 4
  %1 = load i32, i32* @N_links, align 4
  %mul = mul i32 %1, 4
  %call1 = call i8* @xalloc(i32 %mul)
  %2 = bitcast i8* %call1 to %struct.D_type_list_struct**
  %3 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %3, i32 0, i32 0
  store %struct.D_type_list_struct** %2, %struct.D_type_list_struct*** %d_type_array, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %6 = load i32, i32* %link, align 4
  %7 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %d_type_array2 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %7, i32 0, i32 0
  %8 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array2, align 4
  %arrayidx = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %8, i32 %6
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load i32, i32* %link, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %link, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %10 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %v = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %10, i32 0, i32 1
  store %struct.Violation_list_struct* null, %struct.Violation_list_struct** %v, align 4
  %11 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  store %struct.PP_node_struct* %11, %struct.PP_node_struct** %struct.BigStruct_36
  ret void
}

define void @issue_violation_Clear() {
entry:
  %struct.BigStruct_10 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  %load_struct.BigStruct_10 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_10
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %string.addr = alloca i8*, align 4
  %v.addr = alloca %struct.Violation_list_struct*, align 4
  %v1 = alloca %struct.Violation_list_struct*, align 4
  store i8* %load_struct.BigStruct_11, i8** %string.addr, align 4
  store %struct.Violation_list_struct* %load_struct.BigStruct_10, %struct.Violation_list_struct** %v.addr, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Violation_list_struct*
  store %struct.Violation_list_struct* %0, %struct.Violation_list_struct** %v1, align 4
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v1, align 4
  %string1 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %2, i32 0, i32 1
  store i8* %1, i8** %string1, align 4
  %3 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v.addr, align 4
  %4 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v1, align 4
  %next = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %4, i32 0, i32 0
  store %struct.Violation_list_struct* %3, %struct.Violation_list_struct** %next, align 4
  %5 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v1, align 4
  %struct.BigStruct_37 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  store %struct.Violation_list_struct* %5, %struct.Violation_list_struct** %struct.BigStruct_37
  ret void
}

define void @post_process_Clear() {
entry:
  %retval = alloca %struct.PP_node_struct*, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %pp_return = alloca %struct.PP_node_struct*, align 4
  %0 = load i32, i32* @postprocess_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 21, i32 0)
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  %load_struct.BigStruct_36 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_36
  store %struct.PP_node_struct* %load_struct.BigStruct_36, %struct.PP_node_struct** %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  %call1 = call i8* @xalloc(i32 8)
  %1 = bitcast i8* %call1 to %struct.PP_node_struct*
  store %struct.PP_node_struct* %1, %struct.PP_node_struct** %pp_return, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 11, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 12, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 13, i32 0)
  store %struct.Violation_list_struct* null, %struct.Violation_list_struct** %v, align 4
  %2 = getelementptr inbounds [8 x i8*], [8 x i8*]* @must_be_connected_without, i32 0, i32 0
  %struct.BigStruct_9238 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %2, i8*** %struct.BigStruct_9238
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 18, i32 0)
  %struct.BigStruct_32239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32239 = load i32, i32* %struct.BigStruct_32239
  %tobool3 = icmp ne i32 %load_struct.BigStruct_32239, 0
  br i1 %tobool3, label %if.end6, label %if.then4

if.then4:                                         ; No predecessors!
  %3 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %4 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.49.468, i32 0, i32 0
  %struct.BigStruct_10484 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %3, %struct.Violation_list_struct** %struct.BigStruct_10484
  %struct.BigStruct_11485 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %4, i8** %struct.BigStruct_11485
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37486 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37486 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37486
  store %struct.Violation_list_struct* %load_struct.BigStruct_37486, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end6:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 19, i32 0)
  %struct.BigStruct_32240 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32240 = load i32, i32* %struct.BigStruct_32240
  %tobool8 = icmp ne i32 %load_struct.BigStruct_32240, 0
  br i1 %tobool8, label %if.end11, label %if.then9

if.then9:                                         ; No predecessors!
  %5 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %6 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.50.469, i32 0, i32 0
  %struct.BigStruct_10481 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %5, %struct.Violation_list_struct** %struct.BigStruct_10481
  %struct.BigStruct_11482 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %6, i8** %struct.BigStruct_11482
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37483 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37483 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37483
  store %struct.Violation_list_struct* %load_struct.BigStruct_37483, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end11:                                         ; No predecessors!
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 115, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 15, i32 0)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %tobool13 = icmp ne i32 %load_struct.BigStruct_322, 0
  br i1 %tobool13, label %if.end16, label %if.then14

if.then14:                                        ; No predecessors!
  %7 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %8 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.51.470, i32 0, i32 0
  %struct.BigStruct_10478 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %7, %struct.Violation_list_struct** %struct.BigStruct_10478
  %struct.BigStruct_11479 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %8, i8** %struct.BigStruct_11479
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37480 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37480 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37480
  store %struct.Violation_list_struct* %load_struct.BigStruct_37480, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end16:                                         ; No predecessors!
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 114, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 15, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool18 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool18, label %if.end21, label %if.then19

if.then19:                                        ; No predecessors!
  %9 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %10 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.52.471, i32 0, i32 0
  %struct.BigStruct_10475 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %9, %struct.Violation_list_struct** %struct.BigStruct_10475
  %struct.BigStruct_11476 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %10, i8** %struct.BigStruct_11476
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37477 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37477 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37477
  store %struct.Violation_list_struct* %load_struct.BigStruct_37477, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end21:                                         ; No predecessors!
  %11 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.53.472, i32 0, i32 0
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2235 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %11, i8** %struct.BigStruct_2235
  %struct.BigStruct_9236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %12, i8*** %struct.BigStruct_9236
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32237 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32237 = load i32, i32* %struct.BigStruct_32237
  %tobool23 = icmp ne i32 %load_struct.BigStruct_32237, 0
  br i1 %tobool23, label %if.end26, label %if.then24

if.then24:                                        ; No predecessors!
  %13 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %14 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.54.473, i32 0, i32 0
  %struct.BigStruct_10472 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %13, %struct.Violation_list_struct** %struct.BigStruct_10472
  %struct.BigStruct_11473 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %14, i8** %struct.BigStruct_11473
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37474 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37474 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37474
  store %struct.Violation_list_struct* %load_struct.BigStruct_37474, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end26:                                         ; No predecessors!
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.55.474, i32 0, i32 0
  %16 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2232 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_2232
  %struct.BigStruct_9233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %16, i8*** %struct.BigStruct_9233
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32234 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32234 = load i32, i32* %struct.BigStruct_32234
  %tobool28 = icmp ne i32 %load_struct.BigStruct_32234, 0
  br i1 %tobool28, label %if.end31, label %if.then29

if.then29:                                        ; No predecessors!
  %17 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %18 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.56.475, i32 0, i32 0
  %struct.BigStruct_10469 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %17, %struct.Violation_list_struct** %struct.BigStruct_10469
  %struct.BigStruct_11470 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %18, i8** %struct.BigStruct_11470
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37471 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37471 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37471
  store %struct.Violation_list_struct* %load_struct.BigStruct_37471, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end31:                                         ; No predecessors!
  %19 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.57.476, i32 0, i32 0
  %20 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2229 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %19, i8** %struct.BigStruct_2229
  %struct.BigStruct_9230 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %20, i8*** %struct.BigStruct_9230
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32231 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32231 = load i32, i32* %struct.BigStruct_32231
  %tobool33 = icmp ne i32 %load_struct.BigStruct_32231, 0
  br i1 %tobool33, label %if.end36, label %if.then34

if.then34:                                        ; No predecessors!
  %21 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %22 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.58.477, i32 0, i32 0
  %struct.BigStruct_10466 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %21, %struct.Violation_list_struct** %struct.BigStruct_10466
  %struct.BigStruct_11467 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %22, i8** %struct.BigStruct_11467
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37468 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37468 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37468
  store %struct.Violation_list_struct* %load_struct.BigStruct_37468, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end36:                                         ; No predecessors!
  %23 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.59.478, i32 0, i32 0
  %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_Inv, i32 0, i32 0
  %struct.BigStruct_2226 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %23, i8** %struct.BigStruct_2226
  %struct.BigStruct_9227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %24, i8*** %struct.BigStruct_9227
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32228 = load i32, i32* %struct.BigStruct_32228
  %tobool38 = icmp ne i32 %load_struct.BigStruct_32228, 0
  br i1 %tobool38, label %if.end41, label %if.then39

if.then39:                                        ; No predecessors!
  %25 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %26 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.60.479, i32 0, i32 0
  %struct.BigStruct_10463 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %25, %struct.Violation_list_struct** %struct.BigStruct_10463
  %struct.BigStruct_11464 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %26, i8** %struct.BigStruct_11464
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37465 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37465 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37465
  store %struct.Violation_list_struct* %load_struct.BigStruct_37465, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end41:                                         ; No predecessors!
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.61.480, i32 0, i32 0
  %28 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Incompat_with_Ws, i32 0, i32 0
  %struct.BigStruct_222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %27, i8** %struct.BigStruct_222
  %struct.BigStruct_923 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %28, i8*** %struct.BigStruct_923
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3224 = load i32, i32* %struct.BigStruct_3224
  %tobool43 = icmp ne i32 %load_struct.BigStruct_3224, 0
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; No predecessors!
  %29 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %30 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.62.481, i32 0, i32 0
  %struct.BigStruct_10460 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %29, %struct.Violation_list_struct** %struct.BigStruct_10460
  %struct.BigStruct_11461 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %30, i8** %struct.BigStruct_11461
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37462 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37462 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37462
  store %struct.Violation_list_struct* %load_struct.BigStruct_37462, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end46:                                         ; No predecessors!
  %31 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.63.482, i32 0, i32 0
  %32 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Nec_for_Ws_2, i32 0, i32 0
  %struct.BigStruct_2223 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %31, i8** %struct.BigStruct_2223
  %struct.BigStruct_9224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %32, i8*** %struct.BigStruct_9224
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32225 = load i32, i32* %struct.BigStruct_32225
  %tobool48 = icmp ne i32 %load_struct.BigStruct_32225, 0
  br i1 %tobool48, label %if.end51, label %if.then49

if.then49:                                        ; No predecessors!
  %33 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %34 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.64.483, i32 0, i32 0
  %struct.BigStruct_10457 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %33, %struct.Violation_list_struct** %struct.BigStruct_10457
  %struct.BigStruct_11458 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %34, i8** %struct.BigStruct_11458
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37459 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37459 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37459
  store %struct.Violation_list_struct* %load_struct.BigStruct_37459, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end51:                                         ; No predecessors!
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.65.484, i32 0, i32 0
  %36 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Ia, i32 0, i32 0
  %struct.BigStruct_2220 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %35, i8** %struct.BigStruct_2220
  %struct.BigStruct_9221 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %36, i8*** %struct.BigStruct_9221
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32222 = load i32, i32* %struct.BigStruct_32222
  %tobool53 = icmp ne i32 %load_struct.BigStruct_32222, 0
  br i1 %tobool53, label %if.end56, label %if.then54

if.then54:                                        ; No predecessors!
  %37 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %38 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.66.485, i32 0, i32 0
  %struct.BigStruct_10454 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %37, %struct.Violation_list_struct** %struct.BigStruct_10454
  %struct.BigStruct_11455 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %38, i8** %struct.BigStruct_11455
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37456 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37456 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37456
  store %struct.Violation_list_struct* %load_struct.BigStruct_37456, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end56:                                         ; No predecessors!
  %39 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.67.486, i32 0, i32 0
  %40 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Wq, i32 0, i32 0
  %struct.BigStruct_2217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %39, i8** %struct.BigStruct_2217
  %struct.BigStruct_9218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %40, i8*** %struct.BigStruct_9218
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32219 = load i32, i32* %struct.BigStruct_32219
  %tobool58 = icmp ne i32 %load_struct.BigStruct_32219, 0
  br i1 %tobool58, label %if.end61, label %if.then59

if.then59:                                        ; No predecessors!
  %41 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %42 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.68.487, i32 0, i32 0
  %struct.BigStruct_10451 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %41, %struct.Violation_list_struct** %struct.BigStruct_10451
  %struct.BigStruct_11452 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %42, i8** %struct.BigStruct_11452
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37453 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37453 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37453
  store %struct.Violation_list_struct* %load_struct.BigStruct_37453, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end61:                                         ; No predecessors!
  %43 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.69.488, i32 0, i32 0
  %44 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Wq, i32 0, i32 0
  %struct.BigStruct_2214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %43, i8** %struct.BigStruct_2214
  %struct.BigStruct_9215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %44, i8*** %struct.BigStruct_9215
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32216 = load i32, i32* %struct.BigStruct_32216
  %tobool63 = icmp ne i32 %load_struct.BigStruct_32216, 0
  br i1 %tobool63, label %if.end66, label %if.then64

if.then64:                                        ; No predecessors!
  %45 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %46 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.70.489, i32 0, i32 0
  %struct.BigStruct_10448 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %45, %struct.Violation_list_struct** %struct.BigStruct_10448
  %struct.BigStruct_11449 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %46, i8** %struct.BigStruct_11449
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37450 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37450 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37450
  store %struct.Violation_list_struct* %load_struct.BigStruct_37450, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end66:                                         ; No predecessors!
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.71.490, i32 0, i32 0
  %48 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_Wq, i32 0, i32 0
  %struct.BigStruct_2211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %47, i8** %struct.BigStruct_2211
  %struct.BigStruct_9212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %48, i8*** %struct.BigStruct_9212
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32213 = load i32, i32* %struct.BigStruct_32213
  %tobool68 = icmp ne i32 %load_struct.BigStruct_32213, 0
  br i1 %tobool68, label %if.end71, label %if.then69

if.then69:                                        ; No predecessors!
  %49 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %50 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.72.491, i32 0, i32 0
  %struct.BigStruct_10445 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %49, %struct.Violation_list_struct** %struct.BigStruct_10445
  %struct.BigStruct_11446 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %50, i8** %struct.BigStruct_11446
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37447 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37447 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37447
  store %struct.Violation_list_struct* %load_struct.BigStruct_37447, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end71:                                         ; No predecessors!
  %51 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.73.492, i32 0, i32 0
  %52 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_j, i32 0, i32 0
  %struct.BigStruct_2208 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %51, i8** %struct.BigStruct_2208
  %struct.BigStruct_9209 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %52, i8*** %struct.BigStruct_9209
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32210 = load i32, i32* %struct.BigStruct_32210
  %tobool73 = icmp ne i32 %load_struct.BigStruct_32210, 0
  br i1 %tobool73, label %if.end76, label %if.then74

if.then74:                                        ; No predecessors!
  %53 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %54 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.74.493, i32 0, i32 0
  %struct.BigStruct_10442 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %53, %struct.Violation_list_struct** %struct.BigStruct_10442
  %struct.BigStruct_11443 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %54, i8** %struct.BigStruct_11443
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37444 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37444 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37444
  store %struct.Violation_list_struct* %load_struct.BigStruct_37444, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end76:                                         ; No predecessors!
  %55 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.75.494, i32 0, i32 0
  %56 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_j, i32 0, i32 0
  %struct.BigStruct_2205 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %55, i8** %struct.BigStruct_2205
  %struct.BigStruct_9206 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %56, i8*** %struct.BigStruct_9206
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32207 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32207 = load i32, i32* %struct.BigStruct_32207
  %tobool78 = icmp ne i32 %load_struct.BigStruct_32207, 0
  br i1 %tobool78, label %if.end81, label %if.then79

if.then79:                                        ; No predecessors!
  %57 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %58 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.76.495, i32 0, i32 0
  %struct.BigStruct_10439 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %57, %struct.Violation_list_struct** %struct.BigStruct_10439
  %struct.BigStruct_11440 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %58, i8** %struct.BigStruct_11440
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37441 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37441 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37441
  store %struct.Violation_list_struct* %load_struct.BigStruct_37441, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end81:                                         ; No predecessors!
  %59 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.77.496, i32 0, i32 0
  %60 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_j, i32 0, i32 0
  %struct.BigStruct_2202 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %59, i8** %struct.BigStruct_2202
  %struct.BigStruct_9203 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %60, i8*** %struct.BigStruct_9203
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32204 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32204 = load i32, i32* %struct.BigStruct_32204
  %tobool83 = icmp ne i32 %load_struct.BigStruct_32204, 0
  br i1 %tobool83, label %if.end86, label %if.then84

if.then84:                                        ; No predecessors!
  %61 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %62 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.78.497, i32 0, i32 0
  %struct.BigStruct_10436 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %61, %struct.Violation_list_struct** %struct.BigStruct_10436
  %struct.BigStruct_11437 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %62, i8** %struct.BigStruct_11437
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37438 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37438 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37438
  store %struct.Violation_list_struct* %load_struct.BigStruct_37438, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end86:                                         ; No predecessors!
  %63 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.79.498, i32 0, i32 0
  %64 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Mj_or_Wj, i32 0, i32 0
  %struct.BigStruct_2199 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %63, i8** %struct.BigStruct_2199
  %struct.BigStruct_9200 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %64, i8*** %struct.BigStruct_9200
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32201 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32201 = load i32, i32* %struct.BigStruct_32201
  %tobool88 = icmp ne i32 %load_struct.BigStruct_32201, 0
  br i1 %tobool88, label %if.end91, label %if.then89

if.then89:                                        ; No predecessors!
  %65 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %66 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.80.499, i32 0, i32 0
  %struct.BigStruct_10433 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %65, %struct.Violation_list_struct** %struct.BigStruct_10433
  %struct.BigStruct_11434 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %66, i8** %struct.BigStruct_11434
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37435 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37435 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37435
  store %struct.Violation_list_struct* %load_struct.BigStruct_37435, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end91:                                         ; No predecessors!
  %67 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.81.500, i32 0, i32 0
  %68 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Mj_or_Wj, i32 0, i32 0
  %struct.BigStruct_2196 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %67, i8** %struct.BigStruct_2196
  %struct.BigStruct_9197 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %68, i8*** %struct.BigStruct_9197
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32198 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32198 = load i32, i32* %struct.BigStruct_32198
  %tobool93 = icmp ne i32 %load_struct.BigStruct_32198, 0
  br i1 %tobool93, label %if.end96, label %if.then94

if.then94:                                        ; No predecessors!
  %69 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %70 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.82.501, i32 0, i32 0
  %struct.BigStruct_10430 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %69, %struct.Violation_list_struct** %struct.BigStruct_10430
  %struct.BigStruct_11431 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %70, i8** %struct.BigStruct_11431
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37432 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37432 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37432
  store %struct.Violation_list_struct* %load_struct.BigStruct_37432, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end96:                                         ; No predecessors!
  %71 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.83.502, i32 0, i32 0
  %72 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Jr, i32 0, i32 0
  %struct.BigStruct_2193 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %71, i8** %struct.BigStruct_2193
  %struct.BigStruct_9194 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %72, i8*** %struct.BigStruct_9194
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32195 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32195 = load i32, i32* %struct.BigStruct_32195
  %tobool98 = icmp ne i32 %load_struct.BigStruct_32195, 0
  br i1 %tobool98, label %if.end101, label %if.then99

if.then99:                                        ; No predecessors!
  %73 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %74 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.84.503, i32 0, i32 0
  %struct.BigStruct_10427 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %73, %struct.Violation_list_struct** %struct.BigStruct_10427
  %struct.BigStruct_11428 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %74, i8** %struct.BigStruct_11428
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37429 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37429 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37429
  store %struct.Violation_list_struct* %load_struct.BigStruct_37429, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end101:                                        ; No predecessors!
  %75 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.85.504, i32 0, i32 0
  %76 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Nec_for_Jr, i32 0, i32 0
  %struct.BigStruct_2190 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %75, i8** %struct.BigStruct_2190
  %struct.BigStruct_9191 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %76, i8*** %struct.BigStruct_9191
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32192 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32192 = load i32, i32* %struct.BigStruct_32192
  %tobool103 = icmp ne i32 %load_struct.BigStruct_32192, 0
  br i1 %tobool103, label %if.end106, label %if.then104

if.then104:                                       ; No predecessors!
  %77 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %78 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.86.505, i32 0, i32 0
  %struct.BigStruct_10424 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %77, %struct.Violation_list_struct** %struct.BigStruct_10424
  %struct.BigStruct_11425 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %78, i8** %struct.BigStruct_11425
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37426 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37426 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37426
  store %struct.Violation_list_struct* %load_struct.BigStruct_37426, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end106:                                        ; No predecessors!
  %79 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.87.506, i32 0, i32 0
  %80 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_EAh, i32 0, i32 0
  %struct.BigStruct_2187 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %79, i8** %struct.BigStruct_2187
  %struct.BigStruct_9188 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %80, i8*** %struct.BigStruct_9188
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32189 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32189 = load i32, i32* %struct.BigStruct_32189
  %tobool108 = icmp ne i32 %load_struct.BigStruct_32189, 0
  br i1 %tobool108, label %if.end111, label %if.then109

if.then109:                                       ; No predecessors!
  %81 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %82 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.88.508, i32 0, i32 0
  %struct.BigStruct_10421 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %81, %struct.Violation_list_struct** %struct.BigStruct_10421
  %struct.BigStruct_11422 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %82, i8** %struct.BigStruct_11422
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37423 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37423 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37423
  store %struct.Violation_list_struct* %load_struct.BigStruct_37423, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end111:                                        ; No predecessors!
  %83 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.89.509, i32 0, i32 0
  %84 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_EAh, i32 0, i32 0
  %struct.BigStruct_2184 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %83, i8** %struct.BigStruct_2184
  %struct.BigStruct_9185 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %84, i8*** %struct.BigStruct_9185
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32186 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32186 = load i32, i32* %struct.BigStruct_32186
  %tobool113 = icmp ne i32 %load_struct.BigStruct_32186, 0
  br i1 %tobool113, label %if.end116, label %if.then114

if.then114:                                       ; No predecessors!
  %85 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %86 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.90.510, i32 0, i32 0
  %struct.BigStruct_10418 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %85, %struct.Violation_list_struct** %struct.BigStruct_10418
  %struct.BigStruct_11419 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %86, i8** %struct.BigStruct_11419
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37420 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37420 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37420
  store %struct.Violation_list_struct* %load_struct.BigStruct_37420, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end116:                                        ; No predecessors!
  %87 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.91.511, i32 0, i32 0
  %88 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Nec_for_Qe, i32 0, i32 0
  %struct.BigStruct_2181 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %87, i8** %struct.BigStruct_2181
  %struct.BigStruct_9182 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %88, i8*** %struct.BigStruct_9182
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32183 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32183 = load i32, i32* %struct.BigStruct_32183
  %tobool118 = icmp ne i32 %load_struct.BigStruct_32183, 0
  br i1 %tobool118, label %if.end121, label %if.then119

if.then119:                                       ; No predecessors!
  %89 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %90 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.92.512, i32 0, i32 0
  %struct.BigStruct_10415 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %89, %struct.Violation_list_struct** %struct.BigStruct_10415
  %struct.BigStruct_11416 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %90, i8** %struct.BigStruct_11416
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37417 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37417 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37417
  store %struct.Violation_list_struct* %load_struct.BigStruct_37417, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end121:                                        ; No predecessors!
  %91 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.93.513, i32 0, i32 0
  %92 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2178 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %91, i8** %struct.BigStruct_2178
  %struct.BigStruct_9179 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %92, i8*** %struct.BigStruct_9179
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32180 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32180 = load i32, i32* %struct.BigStruct_32180
  %tobool123 = icmp ne i32 %load_struct.BigStruct_32180, 0
  br i1 %tobool123, label %if.end126, label %if.then124

if.then124:                                       ; No predecessors!
  %93 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %94 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.94.514, i32 0, i32 0
  %struct.BigStruct_10412 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %93, %struct.Violation_list_struct** %struct.BigStruct_10412
  %struct.BigStruct_11413 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %94, i8** %struct.BigStruct_11413
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37414 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37414 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37414
  store %struct.Violation_list_struct* %load_struct.BigStruct_37414, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end126:                                        ; No predecessors!
  %95 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.95.515, i32 0, i32 0
  %96 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2175 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %95, i8** %struct.BigStruct_2175
  %struct.BigStruct_9176 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %96, i8*** %struct.BigStruct_9176
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32177 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32177 = load i32, i32* %struct.BigStruct_32177
  %tobool128 = icmp ne i32 %load_struct.BigStruct_32177, 0
  br i1 %tobool128, label %if.end131, label %if.then129

if.then129:                                       ; No predecessors!
  %97 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %98 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.96.516, i32 0, i32 0
  %struct.BigStruct_10409 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %97, %struct.Violation_list_struct** %struct.BigStruct_10409
  %struct.BigStruct_11410 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %98, i8** %struct.BigStruct_11410
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37411 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37411 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37411
  store %struct.Violation_list_struct* %load_struct.BigStruct_37411, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end131:                                        ; No predecessors!
  %99 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.97.517, i32 0, i32 0
  %100 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2172 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %99, i8** %struct.BigStruct_2172
  %struct.BigStruct_9173 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %100, i8*** %struct.BigStruct_9173
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32174 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32174 = load i32, i32* %struct.BigStruct_32174
  %tobool133 = icmp ne i32 %load_struct.BigStruct_32174, 0
  br i1 %tobool133, label %if.end136, label %if.then134

if.then134:                                       ; No predecessors!
  %101 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %102 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.98.518, i32 0, i32 0
  %struct.BigStruct_10406 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %101, %struct.Violation_list_struct** %struct.BigStruct_10406
  %struct.BigStruct_11407 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %102, i8** %struct.BigStruct_11407
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37408 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37408 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37408
  store %struct.Violation_list_struct* %load_struct.BigStruct_37408, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end136:                                        ; No predecessors!
  %103 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.99.519, i32 0, i32 0
  %104 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2169 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %103, i8** %struct.BigStruct_2169
  %struct.BigStruct_9170 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %104, i8*** %struct.BigStruct_9170
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32171 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32171 = load i32, i32* %struct.BigStruct_32171
  %tobool138 = icmp ne i32 %load_struct.BigStruct_32171, 0
  br i1 %tobool138, label %if.end141, label %if.then139

if.then139:                                       ; No predecessors!
  %105 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %106 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.100.520, i32 0, i32 0
  %struct.BigStruct_10403 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %105, %struct.Violation_list_struct** %struct.BigStruct_10403
  %struct.BigStruct_11404 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %106, i8** %struct.BigStruct_11404
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37405 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37405 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37405
  store %struct.Violation_list_struct* %load_struct.BigStruct_37405, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end141:                                        ; No predecessors!
  %107 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.101.521, i32 0, i32 0
  %108 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2166 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %107, i8** %struct.BigStruct_2166
  %struct.BigStruct_9167 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %108, i8*** %struct.BigStruct_9167
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32168 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32168 = load i32, i32* %struct.BigStruct_32168
  %tobool143 = icmp ne i32 %load_struct.BigStruct_32168, 0
  br i1 %tobool143, label %if.end146, label %if.then144

if.then144:                                       ; No predecessors!
  %109 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %110 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.102.522, i32 0, i32 0
  %struct.BigStruct_10400 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %109, %struct.Violation_list_struct** %struct.BigStruct_10400
  %struct.BigStruct_11401 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %110, i8** %struct.BigStruct_11401
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37402 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37402 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37402
  store %struct.Violation_list_struct* %load_struct.BigStruct_37402, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end146:                                        ; No predecessors!
  %111 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.103.523, i32 0, i32 0
  %112 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2163 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %111, i8** %struct.BigStruct_2163
  %struct.BigStruct_9164 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %112, i8*** %struct.BigStruct_9164
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32165 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32165 = load i32, i32* %struct.BigStruct_32165
  %tobool148 = icmp ne i32 %load_struct.BigStruct_32165, 0
  br i1 %tobool148, label %if.end151, label %if.then149

if.then149:                                       ; No predecessors!
  %113 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %114 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.104.524, i32 0, i32 0
  %struct.BigStruct_10397 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %113, %struct.Violation_list_struct** %struct.BigStruct_10397
  %struct.BigStruct_11398 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %114, i8** %struct.BigStruct_11398
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37399 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37399 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37399
  store %struct.Violation_list_struct* %load_struct.BigStruct_37399, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end151:                                        ; No predecessors!
  %115 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.105.525, i32 0, i32 0
  %116 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2160 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %115, i8** %struct.BigStruct_2160
  %struct.BigStruct_9161 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %116, i8*** %struct.BigStruct_9161
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32162 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32162 = load i32, i32* %struct.BigStruct_32162
  %tobool153 = icmp ne i32 %load_struct.BigStruct_32162, 0
  br i1 %tobool153, label %if.end156, label %if.then154

if.then154:                                       ; No predecessors!
  %117 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %118 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.106.526, i32 0, i32 0
  %struct.BigStruct_10394 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %117, %struct.Violation_list_struct** %struct.BigStruct_10394
  %struct.BigStruct_11395 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %118, i8** %struct.BigStruct_11395
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37396 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37396 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37396
  store %struct.Violation_list_struct* %load_struct.BigStruct_37396, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end156:                                        ; No predecessors!
  %119 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.107.527, i32 0, i32 0
  %120 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2157 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %119, i8** %struct.BigStruct_2157
  %struct.BigStruct_9158 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %120, i8*** %struct.BigStruct_9158
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32159 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32159 = load i32, i32* %struct.BigStruct_32159
  %tobool158 = icmp ne i32 %load_struct.BigStruct_32159, 0
  br i1 %tobool158, label %if.end161, label %if.then159

if.then159:                                       ; No predecessors!
  %121 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %122 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.108.528, i32 0, i32 0
  %struct.BigStruct_10391 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %121, %struct.Violation_list_struct** %struct.BigStruct_10391
  %struct.BigStruct_11392 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %122, i8** %struct.BigStruct_11392
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37393 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37393 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37393
  store %struct.Violation_list_struct* %load_struct.BigStruct_37393, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end161:                                        ; No predecessors!
  %123 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.109.529, i32 0, i32 0
  %124 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2154 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %123, i8** %struct.BigStruct_2154
  %struct.BigStruct_9155 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %124, i8*** %struct.BigStruct_9155
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32156 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32156 = load i32, i32* %struct.BigStruct_32156
  %tobool163 = icmp ne i32 %load_struct.BigStruct_32156, 0
  br i1 %tobool163, label %if.end166, label %if.then164

if.then164:                                       ; No predecessors!
  %125 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %126 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.110.530, i32 0, i32 0
  %struct.BigStruct_10388 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %125, %struct.Violation_list_struct** %struct.BigStruct_10388
  %struct.BigStruct_11389 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %126, i8** %struct.BigStruct_11389
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37390 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37390 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37390
  store %struct.Violation_list_struct* %load_struct.BigStruct_37390, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end166:                                        ; No predecessors!
  %127 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.111.531, i32 0, i32 0
  %128 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2151 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %127, i8** %struct.BigStruct_2151
  %struct.BigStruct_9152 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %128, i8*** %struct.BigStruct_9152
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32153 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32153 = load i32, i32* %struct.BigStruct_32153
  %tobool168 = icmp ne i32 %load_struct.BigStruct_32153, 0
  br i1 %tobool168, label %if.end171, label %if.then169

if.then169:                                       ; No predecessors!
  %129 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %130 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.112.532, i32 0, i32 0
  %struct.BigStruct_10385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %129, %struct.Violation_list_struct** %struct.BigStruct_10385
  %struct.BigStruct_11386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %130, i8** %struct.BigStruct_11386
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37387 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37387 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37387
  store %struct.Violation_list_struct* %load_struct.BigStruct_37387, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end171:                                        ; No predecessors!
  %131 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.113.533, i32 0, i32 0
  %132 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2148 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %131, i8** %struct.BigStruct_2148
  %struct.BigStruct_9149 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %132, i8*** %struct.BigStruct_9149
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32150 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32150 = load i32, i32* %struct.BigStruct_32150
  %tobool173 = icmp ne i32 %load_struct.BigStruct_32150, 0
  br i1 %tobool173, label %if.end176, label %if.then174

if.then174:                                       ; No predecessors!
  %133 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %134 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.114.534, i32 0, i32 0
  %struct.BigStruct_10382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %133, %struct.Violation_list_struct** %struct.BigStruct_10382
  %struct.BigStruct_11383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %134, i8** %struct.BigStruct_11383
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37384 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37384
  store %struct.Violation_list_struct* %load_struct.BigStruct_37384, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end176:                                        ; No predecessors!
  %135 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.115.535, i32 0, i32 0
  %136 = getelementptr inbounds [4 x i8*], [4 x i8*]* @SFiSFIi, i32 0, i32 0
  %struct.BigStruct_2145 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %135, i8** %struct.BigStruct_2145
  %struct.BigStruct_9146 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %136, i8*** %struct.BigStruct_9146
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32147 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32147 = load i32, i32* %struct.BigStruct_32147
  %tobool178 = icmp ne i32 %load_struct.BigStruct_32147, 0
  br i1 %tobool178, label %if.end181, label %if.then179

if.then179:                                       ; No predecessors!
  %137 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %138 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.116.536, i32 0, i32 0
  %struct.BigStruct_10379 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %137, %struct.Violation_list_struct** %struct.BigStruct_10379
  %struct.BigStruct_11380 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %138, i8** %struct.BigStruct_11380
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37381 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37381
  store %struct.Violation_list_struct* %load_struct.BigStruct_37381, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end181:                                        ; No predecessors!
  %139 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.117.537, i32 0, i32 0
  %140 = getelementptr inbounds [13 x i8*], [13 x i8*]* @incompat_with_THi, i32 0, i32 0
  %struct.BigStruct_219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %139, i8** %struct.BigStruct_219
  %struct.BigStruct_920 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %140, i8*** %struct.BigStruct_920
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3221 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3221 = load i32, i32* %struct.BigStruct_3221
  %tobool183 = icmp ne i32 %load_struct.BigStruct_3221, 0
  br i1 %tobool183, label %if.end186, label %if.then184

if.then184:                                       ; No predecessors!
  %141 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %142 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.118.540, i32 0, i32 0
  %struct.BigStruct_10376 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %141, %struct.Violation_list_struct** %struct.BigStruct_10376
  %struct.BigStruct_11377 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %142, i8** %struct.BigStruct_11377
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37378 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37378 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37378
  store %struct.Violation_list_struct* %load_struct.BigStruct_37378, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end186:                                        ; No predecessors!
  %143 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.119.541, i32 0, i32 0
  %144 = getelementptr inbounds [13 x i8*], [13 x i8*]* @incompat_with_THi, i32 0, i32 0
  %struct.BigStruct_216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %143, i8** %struct.BigStruct_216
  %struct.BigStruct_917 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %144, i8*** %struct.BigStruct_917
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3218 = load i32, i32* %struct.BigStruct_3218
  %tobool188 = icmp ne i32 %load_struct.BigStruct_3218, 0
  br i1 %tobool188, label %if.end191, label %if.then189

if.then189:                                       ; No predecessors!
  %145 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %146 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.120.542, i32 0, i32 0
  %struct.BigStruct_10373 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %145, %struct.Violation_list_struct** %struct.BigStruct_10373
  %struct.BigStruct_11374 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %146, i8** %struct.BigStruct_11374
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37375 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37375 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37375
  store %struct.Violation_list_struct* %load_struct.BigStruct_37375, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end191:                                        ; No predecessors!
  %147 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.121.543, i32 0, i32 0
  %148 = getelementptr inbounds [13 x i8*], [13 x i8*]* @incompat_with_THi, i32 0, i32 0
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %147, i8** %struct.BigStruct_213
  %struct.BigStruct_914 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %148, i8*** %struct.BigStruct_914
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3215 = load i32, i32* %struct.BigStruct_3215
  %tobool193 = icmp ne i32 %load_struct.BigStruct_3215, 0
  br i1 %tobool193, label %if.end196, label %if.then194

if.then194:                                       ; No predecessors!
  %149 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %150 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.122.544, i32 0, i32 0
  %struct.BigStruct_10370 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %149, %struct.Violation_list_struct** %struct.BigStruct_10370
  %struct.BigStruct_11371 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %150, i8** %struct.BigStruct_11371
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37372 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37372 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37372
  store %struct.Violation_list_struct* %load_struct.BigStruct_37372, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end196:                                        ; No predecessors!
  %151 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.123.545, i32 0, i32 0
  %152 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Ost, i32 0, i32 0
  %struct.BigStruct_2142 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %151, i8** %struct.BigStruct_2142
  %struct.BigStruct_9143 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %152, i8*** %struct.BigStruct_9143
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32144 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32144 = load i32, i32* %struct.BigStruct_32144
  %tobool198 = icmp ne i32 %load_struct.BigStruct_32144, 0
  br i1 %tobool198, label %if.end201, label %if.then199

if.then199:                                       ; No predecessors!
  %153 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %154 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.124.546, i32 0, i32 0
  %struct.BigStruct_10367 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %153, %struct.Violation_list_struct** %struct.BigStruct_10367
  %struct.BigStruct_11368 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %154, i8** %struct.BigStruct_11368
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37369 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37369 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37369
  store %struct.Violation_list_struct* %load_struct.BigStruct_37369, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end201:                                        ; No predecessors!
  %155 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.125.547, i32 0, i32 0
  %156 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Ost, i32 0, i32 0
  %struct.BigStruct_2139 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %155, i8** %struct.BigStruct_2139
  %struct.BigStruct_9140 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %156, i8*** %struct.BigStruct_9140
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32141 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32141 = load i32, i32* %struct.BigStruct_32141
  %tobool203 = icmp ne i32 %load_struct.BigStruct_32141, 0
  br i1 %tobool203, label %if.end206, label %if.then204

if.then204:                                       ; No predecessors!
  %157 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %158 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.126.548, i32 0, i32 0
  %struct.BigStruct_10364 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %157, %struct.Violation_list_struct** %struct.BigStruct_10364
  %struct.BigStruct_11365 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %158, i8** %struct.BigStruct_11365
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37366 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37366 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37366
  store %struct.Violation_list_struct* %load_struct.BigStruct_37366, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end206:                                        ; No predecessors!
  %159 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.127.549, i32 0, i32 0
  %160 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Opt, i32 0, i32 0
  %struct.BigStruct_2136 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %159, i8** %struct.BigStruct_2136
  %struct.BigStruct_9137 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %160, i8*** %struct.BigStruct_9137
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32138 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32138 = load i32, i32* %struct.BigStruct_32138
  %tobool208 = icmp ne i32 %load_struct.BigStruct_32138, 0
  br i1 %tobool208, label %if.end211, label %if.then209

if.then209:                                       ; No predecessors!
  %161 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %162 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.128.550, i32 0, i32 0
  %struct.BigStruct_10361 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %161, %struct.Violation_list_struct** %struct.BigStruct_10361
  %struct.BigStruct_11362 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %162, i8** %struct.BigStruct_11362
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37363 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37363 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37363
  store %struct.Violation_list_struct* %load_struct.BigStruct_37363, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end211:                                        ; No predecessors!
  %163 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.129.551, i32 0, i32 0
  %164 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Opt, i32 0, i32 0
  %struct.BigStruct_2133 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %163, i8** %struct.BigStruct_2133
  %struct.BigStruct_9134 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %164, i8*** %struct.BigStruct_9134
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32135 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32135 = load i32, i32* %struct.BigStruct_32135
  %tobool213 = icmp ne i32 %load_struct.BigStruct_32135, 0
  br i1 %tobool213, label %if.end216, label %if.then214

if.then214:                                       ; No predecessors!
  %165 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %166 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.130.552, i32 0, i32 0
  %struct.BigStruct_10358 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %165, %struct.Violation_list_struct** %struct.BigStruct_10358
  %struct.BigStruct_11359 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %166, i8** %struct.BigStruct_11359
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37360 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37360 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37360
  store %struct.Violation_list_struct* %load_struct.BigStruct_37360, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end216:                                        ; No predecessors!
  %167 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.131.553, i32 0, i32 0
  %168 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Oxt, i32 0, i32 0
  %struct.BigStruct_2130 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %167, i8** %struct.BigStruct_2130
  %struct.BigStruct_9131 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %168, i8*** %struct.BigStruct_9131
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32132 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32132 = load i32, i32* %struct.BigStruct_32132
  %tobool218 = icmp ne i32 %load_struct.BigStruct_32132, 0
  br i1 %tobool218, label %if.end221, label %if.then219

if.then219:                                       ; No predecessors!
  %169 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %170 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.132.554, i32 0, i32 0
  %struct.BigStruct_10355 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %169, %struct.Violation_list_struct** %struct.BigStruct_10355
  %struct.BigStruct_11356 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %170, i8** %struct.BigStruct_11356
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37357 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37357 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37357
  store %struct.Violation_list_struct* %load_struct.BigStruct_37357, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end221:                                        ; No predecessors!
  %171 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.133.555, i32 0, i32 0
  %172 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Necessary_for_SF, i32 0, i32 0
  %struct.BigStruct_2127 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %171, i8** %struct.BigStruct_2127
  %struct.BigStruct_9128 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %172, i8*** %struct.BigStruct_9128
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32129 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32129 = load i32, i32* %struct.BigStruct_32129
  %tobool223 = icmp ne i32 %load_struct.BigStruct_32129, 0
  br i1 %tobool223, label %if.end226, label %if.then224

if.then224:                                       ; No predecessors!
  %173 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %174 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.134.556, i32 0, i32 0
  %struct.BigStruct_10352 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %173, %struct.Violation_list_struct** %struct.BigStruct_10352
  %struct.BigStruct_11353 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %174, i8** %struct.BigStruct_11353
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37354 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37354 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37354
  store %struct.Violation_list_struct* %load_struct.BigStruct_37354, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end226:                                        ; No predecessors!
  %175 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.135.557, i32 0, i32 0
  %176 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Necessary_for_SF, i32 0, i32 0
  %struct.BigStruct_2124 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %175, i8** %struct.BigStruct_2124
  %struct.BigStruct_9125 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %176, i8*** %struct.BigStruct_9125
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32126 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32126 = load i32, i32* %struct.BigStruct_32126
  %tobool228 = icmp ne i32 %load_struct.BigStruct_32126, 0
  br i1 %tobool228, label %if.end231, label %if.then229

if.then229:                                       ; No predecessors!
  %177 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %178 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.136.558, i32 0, i32 0
  %struct.BigStruct_10349 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %177, %struct.Violation_list_struct** %struct.BigStruct_10349
  %struct.BigStruct_11350 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %178, i8** %struct.BigStruct_11350
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37351 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37351 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37351
  store %struct.Violation_list_struct* %load_struct.BigStruct_37351, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end231:                                        ; No predecessors!
  %179 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.137.559, i32 0, i32 0
  %180 = getelementptr inbounds [5 x i8*], [5 x i8*]* @Nec_for_THb, i32 0, i32 0
  %struct.BigStruct_2121 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %179, i8** %struct.BigStruct_2121
  %struct.BigStruct_9122 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %180, i8*** %struct.BigStruct_9122
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32123 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32123 = load i32, i32* %struct.BigStruct_32123
  %tobool233 = icmp ne i32 %load_struct.BigStruct_32123, 0
  br i1 %tobool233, label %if.end236, label %if.then234

if.then234:                                       ; No predecessors!
  %181 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %182 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.138.560, i32 0, i32 0
  %struct.BigStruct_10346 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %181, %struct.Violation_list_struct** %struct.BigStruct_10346
  %struct.BigStruct_11347 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %182, i8** %struct.BigStruct_11347
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37348 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37348 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37348
  store %struct.Violation_list_struct* %load_struct.BigStruct_37348, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end236:                                        ; No predecessors!
  %183 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.139.561, i32 0, i32 0
  %184 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Nec_for_BIh, i32 0, i32 0
  %struct.BigStruct_2118 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %183, i8** %struct.BigStruct_2118
  %struct.BigStruct_9119 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %184, i8*** %struct.BigStruct_9119
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32120 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32120 = load i32, i32* %struct.BigStruct_32120
  %tobool238 = icmp ne i32 %load_struct.BigStruct_32120, 0
  br i1 %tobool238, label %if.end241, label %if.then239

if.then239:                                       ; No predecessors!
  %185 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %186 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.140.562, i32 0, i32 0
  %struct.BigStruct_10343 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %185, %struct.Violation_list_struct** %struct.BigStruct_10343
  %struct.BigStruct_11344 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %186, i8** %struct.BigStruct_11344
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37345 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37345 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37345
  store %struct.Violation_list_struct* %load_struct.BigStruct_37345, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end241:                                        ; No predecessors!
  %187 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.141.563, i32 0, i32 0
  %188 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_BIq, i32 0, i32 0
  %struct.BigStruct_2115 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %187, i8** %struct.BigStruct_2115
  %struct.BigStruct_9116 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %188, i8*** %struct.BigStruct_9116
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32117 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32117 = load i32, i32* %struct.BigStruct_32117
  %tobool243 = icmp ne i32 %load_struct.BigStruct_32117, 0
  br i1 %tobool243, label %if.end246, label %if.then244

if.then244:                                       ; No predecessors!
  %189 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %190 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.142.564, i32 0, i32 0
  %struct.BigStruct_10340 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %189, %struct.Violation_list_struct** %struct.BigStruct_10340
  %struct.BigStruct_11341 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %190, i8** %struct.BigStruct_11341
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37342 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37342 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37342
  store %struct.Violation_list_struct* %load_struct.BigStruct_37342, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end246:                                        ; No predecessors!
  %191 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.143.565, i32 0, i32 0
  %192 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Necessary_for_SF, i32 0, i32 0
  %struct.BigStruct_2112 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %191, i8** %struct.BigStruct_2112
  %struct.BigStruct_9113 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %192, i8*** %struct.BigStruct_9113
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32114 = load i32, i32* %struct.BigStruct_32114
  %tobool248 = icmp ne i32 %load_struct.BigStruct_32114, 0
  br i1 %tobool248, label %if.end251, label %if.then249

if.then249:                                       ; No predecessors!
  %193 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %194 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.144.566, i32 0, i32 0
  %struct.BigStruct_10337 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %193, %struct.Violation_list_struct** %struct.BigStruct_10337
  %struct.BigStruct_11338 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %194, i8** %struct.BigStruct_11338
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37339 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37339 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37339
  store %struct.Violation_list_struct* %load_struct.BigStruct_37339, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end251:                                        ; No predecessors!
  %195 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.145.567, i32 0, i32 0
  %196 = getelementptr inbounds [15 x i8*], [15 x i8*]* @Necessary_for_MVt, i32 0, i32 0
  %struct.BigStruct_2109 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %195, i8** %struct.BigStruct_2109
  %struct.BigStruct_9110 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %196, i8*** %struct.BigStruct_9110
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32111 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32111 = load i32, i32* %struct.BigStruct_32111
  %tobool253 = icmp ne i32 %load_struct.BigStruct_32111, 0
  br i1 %tobool253, label %if.end256, label %if.then254

if.then254:                                       ; No predecessors!
  %197 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %198 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.146.568, i32 0, i32 0
  %struct.BigStruct_10334 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %197, %struct.Violation_list_struct** %struct.BigStruct_10334
  %struct.BigStruct_11335 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %198, i8** %struct.BigStruct_11335
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37336 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37336 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37336
  store %struct.Violation_list_struct* %load_struct.BigStruct_37336, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end256:                                        ; No predecessors!
  %199 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.147.569, i32 0, i32 0
  %200 = getelementptr inbounds [6 x i8*], [6 x i8*]* @Nec_for_MVz, i32 0, i32 0
  %struct.BigStruct_2106 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %199, i8** %struct.BigStruct_2106
  %struct.BigStruct_9107 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %200, i8*** %struct.BigStruct_9107
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32108 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32108 = load i32, i32* %struct.BigStruct_32108
  %tobool258 = icmp ne i32 %load_struct.BigStruct_32108, 0
  br i1 %tobool258, label %if.end261, label %if.then259

if.then259:                                       ; No predecessors!
  %201 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %202 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.148.570, i32 0, i32 0
  %struct.BigStruct_10331 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %201, %struct.Violation_list_struct** %struct.BigStruct_10331
  %struct.BigStruct_11332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %202, i8** %struct.BigStruct_11332
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37333 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37333 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37333
  store %struct.Violation_list_struct* %load_struct.BigStruct_37333, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end261:                                        ; No predecessors!
  %203 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.149.571, i32 0, i32 0
  %204 = getelementptr inbounds [9 x i8*], [9 x i8*]* @Nec_for_MVta, i32 0, i32 0
  %struct.BigStruct_2103 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %203, i8** %struct.BigStruct_2103
  %struct.BigStruct_9104 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %204, i8*** %struct.BigStruct_9104
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32105 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32105 = load i32, i32* %struct.BigStruct_32105
  %tobool263 = icmp ne i32 %load_struct.BigStruct_32105, 0
  br i1 %tobool263, label %if.end266, label %if.then264

if.then264:                                       ; No predecessors!
  %205 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %206 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.150.572, i32 0, i32 0
  %struct.BigStruct_10328 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %205, %struct.Violation_list_struct** %struct.BigStruct_10328
  %struct.BigStruct_11329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %206, i8** %struct.BigStruct_11329
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37330 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37330 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37330
  store %struct.Violation_list_struct* %load_struct.BigStruct_37330, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end266:                                        ; No predecessors!
  %207 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.151.573, i32 0, i32 0
  %208 = getelementptr inbounds [9 x i8*], [9 x i8*]* @Nec_for_MVta, i32 0, i32 0
  %struct.BigStruct_2100 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %207, i8** %struct.BigStruct_2100
  %struct.BigStruct_9101 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %208, i8*** %struct.BigStruct_9101
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_32102 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32102 = load i32, i32* %struct.BigStruct_32102
  %tobool268 = icmp ne i32 %load_struct.BigStruct_32102, 0
  br i1 %tobool268, label %if.end271, label %if.then269

if.then269:                                       ; No predecessors!
  %209 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %210 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.152.574, i32 0, i32 0
  %struct.BigStruct_10325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %209, %struct.Violation_list_struct** %struct.BigStruct_10325
  %struct.BigStruct_11326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %210, i8** %struct.BigStruct_11326
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37327 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37327
  store %struct.Violation_list_struct* %load_struct.BigStruct_37327, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end271:                                        ; No predecessors!
  %211 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.153.575, i32 0, i32 0
  %212 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_MVto, i32 0, i32 0
  %struct.BigStruct_297 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %211, i8** %struct.BigStruct_297
  %struct.BigStruct_998 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %212, i8*** %struct.BigStruct_998
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3299 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3299 = load i32, i32* %struct.BigStruct_3299
  %tobool273 = icmp ne i32 %load_struct.BigStruct_3299, 0
  br i1 %tobool273, label %if.end276, label %if.then274

if.then274:                                       ; No predecessors!
  %213 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %214 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.154.576, i32 0, i32 0
  %struct.BigStruct_10322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %213, %struct.Violation_list_struct** %struct.BigStruct_10322
  %struct.BigStruct_11323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %214, i8** %struct.BigStruct_11323
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37324 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37324 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37324
  store %struct.Violation_list_struct* %load_struct.BigStruct_37324, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end276:                                        ; No predecessors!
  %215 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.155.577, i32 0, i32 0
  %216 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Nec_for_MVtp, i32 0, i32 0
  %struct.BigStruct_294 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %215, i8** %struct.BigStruct_294
  %struct.BigStruct_995 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %216, i8*** %struct.BigStruct_995
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3296 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3296 = load i32, i32* %struct.BigStruct_3296
  %tobool278 = icmp ne i32 %load_struct.BigStruct_3296, 0
  br i1 %tobool278, label %if.end281, label %if.then279

if.then279:                                       ; No predecessors!
  %217 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %218 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.156.578, i32 0, i32 0
  %struct.BigStruct_10319 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %217, %struct.Violation_list_struct** %struct.BigStruct_10319
  %struct.BigStruct_11320 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %218, i8** %struct.BigStruct_11320
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37321 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37321
  store %struct.Violation_list_struct* %load_struct.BigStruct_37321, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end281:                                        ; No predecessors!
  %219 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.157.579, i32 0, i32 0
  %220 = getelementptr inbounds [3 x i8*], [3 x i8*]* @EBmm, i32 0, i32 0
  %struct.BigStruct_291 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %219, i8** %struct.BigStruct_291
  %struct.BigStruct_992 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %220, i8*** %struct.BigStruct_992
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3293 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3293 = load i32, i32* %struct.BigStruct_3293
  %tobool283 = icmp ne i32 %load_struct.BigStruct_3293, 0
  br i1 %tobool283, label %if.end286, label %if.then284

if.then284:                                       ; No predecessors!
  %221 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %222 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.158.580, i32 0, i32 0
  %struct.BigStruct_10316 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %221, %struct.Violation_list_struct** %struct.BigStruct_10316
  %struct.BigStruct_11317 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %222, i8** %struct.BigStruct_11317
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37318 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37318 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37318
  store %struct.Violation_list_struct* %load_struct.BigStruct_37318, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end286:                                        ; No predecessors!
  %223 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.159.581, i32 0, i32 0
  %224 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Pa_or_Paf, i32 0, i32 0
  %struct.BigStruct_288 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %223, i8** %struct.BigStruct_288
  %struct.BigStruct_989 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %224, i8*** %struct.BigStruct_989
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3290 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3290 = load i32, i32* %struct.BigStruct_3290
  %tobool288 = icmp ne i32 %load_struct.BigStruct_3290, 0
  br i1 %tobool288, label %if.end291, label %if.then289

if.then289:                                       ; No predecessors!
  %225 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %226 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.160.582, i32 0, i32 0
  %struct.BigStruct_10313 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %225, %struct.Violation_list_struct** %struct.BigStruct_10313
  %struct.BigStruct_11314 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %226, i8** %struct.BigStruct_11314
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37315 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37315 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37315
  store %struct.Violation_list_struct* %load_struct.BigStruct_37315, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end291:                                        ; No predecessors!
  %227 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.161.583, i32 0, i32 0
  %228 = getelementptr inbounds [2 x i8*], [2 x i8*]* @MVm, i32 0, i32 0
  %struct.BigStruct_285 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %227, i8** %struct.BigStruct_285
  %struct.BigStruct_986 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %228, i8*** %struct.BigStruct_986
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3287 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3287 = load i32, i32* %struct.BigStruct_3287
  %tobool293 = icmp ne i32 %load_struct.BigStruct_3287, 0
  br i1 %tobool293, label %if.end296, label %if.then294

if.then294:                                       ; No predecessors!
  %229 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %230 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.162.584, i32 0, i32 0
  %struct.BigStruct_10310 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %229, %struct.Violation_list_struct** %struct.BigStruct_10310
  %struct.BigStruct_11311 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %230, i8** %struct.BigStruct_11311
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37312 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37312 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37312
  store %struct.Violation_list_struct* %load_struct.BigStruct_37312, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end296:                                        ; No predecessors!
  %231 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.163.585, i32 0, i32 0
  %232 = getelementptr inbounds [2 x i8*], [2 x i8*]* @MVm, i32 0, i32 0
  %struct.BigStruct_282 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %231, i8** %struct.BigStruct_282
  %struct.BigStruct_983 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %232, i8*** %struct.BigStruct_983
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3284 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3284 = load i32, i32* %struct.BigStruct_3284
  %tobool298 = icmp ne i32 %load_struct.BigStruct_3284, 0
  br i1 %tobool298, label %if.end301, label %if.then299

if.then299:                                       ; No predecessors!
  %233 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %234 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.164.586, i32 0, i32 0
  %struct.BigStruct_10307 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %233, %struct.Violation_list_struct** %struct.BigStruct_10307
  %struct.BigStruct_11308 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %234, i8** %struct.BigStruct_11308
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37309 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37309 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37309
  store %struct.Violation_list_struct* %load_struct.BigStruct_37309, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end301:                                        ; No predecessors!
  %235 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.165.587, i32 0, i32 0
  %236 = getelementptr inbounds [3 x i8*], [3 x i8*]* @MV, i32 0, i32 0
  %struct.BigStruct_279 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %235, i8** %struct.BigStruct_279
  %struct.BigStruct_980 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %236, i8*** %struct.BigStruct_980
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3281 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3281 = load i32, i32* %struct.BigStruct_3281
  %tobool303 = icmp ne i32 %load_struct.BigStruct_3281, 0
  br i1 %tobool303, label %if.end306, label %if.then304

if.then304:                                       ; No predecessors!
  %237 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %238 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.166.588, i32 0, i32 0
  %struct.BigStruct_10304 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %237, %struct.Violation_list_struct** %struct.BigStruct_10304
  %struct.BigStruct_11305 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %238, i8** %struct.BigStruct_11305
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37306 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37306 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37306
  store %struct.Violation_list_struct* %load_struct.BigStruct_37306, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end306:                                        ; No predecessors!
  %239 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.167.589, i32 0, i32 0
  %240 = getelementptr inbounds [3 x i8*], [3 x i8*]* @MV, i32 0, i32 0
  %struct.BigStruct_276 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %239, i8** %struct.BigStruct_276
  %struct.BigStruct_977 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %240, i8*** %struct.BigStruct_977
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3278 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3278 = load i32, i32* %struct.BigStruct_3278
  %tobool308 = icmp ne i32 %load_struct.BigStruct_3278, 0
  br i1 %tobool308, label %if.end311, label %if.then309

if.then309:                                       ; No predecessors!
  %241 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %242 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.168.590, i32 0, i32 0
  %struct.BigStruct_10301 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %241, %struct.Violation_list_struct** %struct.BigStruct_10301
  %struct.BigStruct_11302 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %242, i8** %struct.BigStruct_11302
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37303 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37303 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37303
  store %struct.Violation_list_struct* %load_struct.BigStruct_37303, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end311:                                        ; No predecessors!
  %243 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.169.591, i32 0, i32 0
  %244 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_MVto, i32 0, i32 0
  %struct.BigStruct_273 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %243, i8** %struct.BigStruct_273
  %struct.BigStruct_974 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %244, i8*** %struct.BigStruct_974
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3275 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3275 = load i32, i32* %struct.BigStruct_3275
  %tobool313 = icmp ne i32 %load_struct.BigStruct_3275, 0
  br i1 %tobool313, label %if.end316, label %if.then314

if.then314:                                       ; No predecessors!
  %245 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %246 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.170.592, i32 0, i32 0
  %struct.BigStruct_10298 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %245, %struct.Violation_list_struct** %struct.BigStruct_10298
  %struct.BigStruct_11299 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %246, i8** %struct.BigStruct_11299
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37300 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37300 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37300
  store %struct.Violation_list_struct* %load_struct.BigStruct_37300, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end316:                                        ; No predecessors!
  %247 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.171.593, i32 0, i32 0
  %248 = getelementptr inbounds [6 x i8*], [6 x i8*]* @Nec_for_Cc, i32 0, i32 0
  %struct.BigStruct_270 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %247, i8** %struct.BigStruct_270
  %struct.BigStruct_971 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %248, i8*** %struct.BigStruct_971
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3272 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3272 = load i32, i32* %struct.BigStruct_3272
  %tobool318 = icmp ne i32 %load_struct.BigStruct_3272, 0
  br i1 %tobool318, label %if.end321, label %if.then319

if.then319:                                       ; No predecessors!
  %249 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %250 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.172.594, i32 0, i32 0
  %struct.BigStruct_10295 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %249, %struct.Violation_list_struct** %struct.BigStruct_10295
  %struct.BigStruct_11296 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %250, i8** %struct.BigStruct_11296
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37297 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37297 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37297
  store %struct.Violation_list_struct* %load_struct.BigStruct_37297, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end321:                                        ; No predecessors!
  %251 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.173.595, i32 0, i32 0
  %252 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Nec_for_Mc, i32 0, i32 0
  %struct.BigStruct_267 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %251, i8** %struct.BigStruct_267
  %struct.BigStruct_968 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %252, i8*** %struct.BigStruct_968
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3269 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3269 = load i32, i32* %struct.BigStruct_3269
  %tobool323 = icmp ne i32 %load_struct.BigStruct_3269, 0
  br i1 %tobool323, label %if.end326, label %if.then324

if.then324:                                       ; No predecessors!
  %253 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %254 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.174.596, i32 0, i32 0
  %struct.BigStruct_10292 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %253, %struct.Violation_list_struct** %struct.BigStruct_10292
  %struct.BigStruct_11293 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %254, i8** %struct.BigStruct_11293
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37294 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37294 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37294
  store %struct.Violation_list_struct* %load_struct.BigStruct_37294, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end326:                                        ; No predecessors!
  %255 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.175.597, i32 0, i32 0
  %256 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_Sp_com, i32 0, i32 0
  %struct.BigStruct_264 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %255, i8** %struct.BigStruct_264
  %struct.BigStruct_965 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %256, i8*** %struct.BigStruct_965
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3266 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3266 = load i32, i32* %struct.BigStruct_3266
  %tobool328 = icmp ne i32 %load_struct.BigStruct_3266, 0
  br i1 %tobool328, label %if.end331, label %if.then329

if.then329:                                       ; No predecessors!
  %257 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.176.598, i32 0, i32 0
  %struct.BigStruct_10289 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %257, %struct.Violation_list_struct** %struct.BigStruct_10289
  %struct.BigStruct_11290 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %258, i8** %struct.BigStruct_11290
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37291 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37291 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37291
  store %struct.Violation_list_struct* %load_struct.BigStruct_37291, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end331:                                        ; No predecessors!
  %259 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.177.599, i32 0, i32 0
  %260 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_Ss_com, i32 0, i32 0
  %struct.BigStruct_261 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %259, i8** %struct.BigStruct_261
  %struct.BigStruct_962 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %260, i8*** %struct.BigStruct_962
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3263 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3263 = load i32, i32* %struct.BigStruct_3263
  %tobool333 = icmp ne i32 %load_struct.BigStruct_3263, 0
  br i1 %tobool333, label %if.end336, label %if.then334

if.then334:                                       ; No predecessors!
  %261 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %262 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.178.600, i32 0, i32 0
  %struct.BigStruct_10286 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %261, %struct.Violation_list_struct** %struct.BigStruct_10286
  %struct.BigStruct_11287 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %262, i8** %struct.BigStruct_11287
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37288 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37288 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37288
  store %struct.Violation_list_struct* %load_struct.BigStruct_37288, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end336:                                        ; No predecessors!
  %263 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.179.601, i32 0, i32 0
  %264 = getelementptr inbounds [8 x i8*], [8 x i8*]* @Nec_for_Ss_com, i32 0, i32 0
  %struct.BigStruct_258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %263, i8** %struct.BigStruct_258
  %struct.BigStruct_959 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %264, i8*** %struct.BigStruct_959
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3260 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3260 = load i32, i32* %struct.BigStruct_3260
  %tobool338 = icmp ne i32 %load_struct.BigStruct_3260, 0
  br i1 %tobool338, label %if.end341, label %if.then339

if.then339:                                       ; No predecessors!
  %265 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %266 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.180.602, i32 0, i32 0
  %struct.BigStruct_10283 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %265, %struct.Violation_list_struct** %struct.BigStruct_10283
  %struct.BigStruct_11284 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %266, i8** %struct.BigStruct_11284
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37285 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37285 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37285
  store %struct.Violation_list_struct* %load_struct.BigStruct_37285, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end341:                                        ; No predecessors!
  %267 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.181.603, i32 0, i32 0
  %268 = getelementptr inbounds [7 x i8*], [7 x i8*]* @Nec_for_S_com, i32 0, i32 0
  %struct.BigStruct_255 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %267, i8** %struct.BigStruct_255
  %struct.BigStruct_956 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %268, i8*** %struct.BigStruct_956
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3257 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3257 = load i32, i32* %struct.BigStruct_3257
  %tobool343 = icmp ne i32 %load_struct.BigStruct_3257, 0
  br i1 %tobool343, label %if.end346, label %if.then344

if.then344:                                       ; No predecessors!
  %269 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %270 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.182.604, i32 0, i32 0
  %struct.BigStruct_10280 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %269, %struct.Violation_list_struct** %struct.BigStruct_10280
  %struct.BigStruct_11281 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %270, i8** %struct.BigStruct_11281
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37282 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37282 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37282
  store %struct.Violation_list_struct* %load_struct.BigStruct_37282, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end346:                                        ; No predecessors!
  %271 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.183.605, i32 0, i32 0
  %272 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Necessary_for_Thcom, i32 0, i32 0
  %struct.BigStruct_252 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %271, i8** %struct.BigStruct_252
  %struct.BigStruct_953 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %272, i8*** %struct.BigStruct_953
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3254 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3254 = load i32, i32* %struct.BigStruct_3254
  %tobool348 = icmp ne i32 %load_struct.BigStruct_3254, 0
  br i1 %tobool348, label %if.end351, label %if.then349

if.then349:                                       ; No predecessors!
  %273 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %274 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.184.606, i32 0, i32 0
  %struct.BigStruct_10277 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %273, %struct.Violation_list_struct** %struct.BigStruct_10277
  %struct.BigStruct_11278 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %274, i8** %struct.BigStruct_11278
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37279 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37279 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37279
  store %struct.Violation_list_struct* %load_struct.BigStruct_37279, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end351:                                        ; No predecessors!
  %275 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.185.607, i32 0, i32 0
  %276 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Necessary_for_Tocom, i32 0, i32 0
  %struct.BigStruct_249 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %275, i8** %struct.BigStruct_249
  %struct.BigStruct_950 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %276, i8*** %struct.BigStruct_950
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3251 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3251 = load i32, i32* %struct.BigStruct_3251
  %tobool353 = icmp ne i32 %load_struct.BigStruct_3251, 0
  br i1 %tobool353, label %if.end356, label %if.then354

if.then354:                                       ; No predecessors!
  %277 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %278 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.186.608, i32 0, i32 0
  %struct.BigStruct_10274 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %277, %struct.Violation_list_struct** %struct.BigStruct_10274
  %struct.BigStruct_11275 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %278, i8** %struct.BigStruct_11275
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37276 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37276 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37276
  store %struct.Violation_list_struct* %load_struct.BigStruct_37276, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end356:                                        ; No predecessors!
  %279 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.187.609, i32 0, i32 0
  %280 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Necessary_for_Tvcom, i32 0, i32 0
  %struct.BigStruct_246 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %279, i8** %struct.BigStruct_246
  %struct.BigStruct_947 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %280, i8*** %struct.BigStruct_947
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3248 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3248 = load i32, i32* %struct.BigStruct_3248
  %tobool358 = icmp ne i32 %load_struct.BigStruct_3248, 0
  br i1 %tobool358, label %if.end361, label %if.then359

if.then359:                                       ; No predecessors!
  %281 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %282 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.188.610, i32 0, i32 0
  %struct.BigStruct_10271 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %281, %struct.Violation_list_struct** %struct.BigStruct_10271
  %struct.BigStruct_11272 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %282, i8** %struct.BigStruct_11272
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37273 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37273 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37273
  store %struct.Violation_list_struct* %load_struct.BigStruct_37273, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end361:                                        ; No predecessors!
  %283 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.189.611, i32 0, i32 0
  %284 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Necessary_for_Tvcom_Trans, i32 0, i32 0
  %struct.BigStruct_243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %283, i8** %struct.BigStruct_243
  %struct.BigStruct_944 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %284, i8*** %struct.BigStruct_944
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3245 = load i32, i32* %struct.BigStruct_3245
  %tobool363 = icmp ne i32 %load_struct.BigStruct_3245, 0
  br i1 %tobool363, label %if.end366, label %if.then364

if.then364:                                       ; No predecessors!
  %285 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %286 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.190.612, i32 0, i32 0
  %struct.BigStruct_10268 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %285, %struct.Violation_list_struct** %struct.BigStruct_10268
  %struct.BigStruct_11269 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %286, i8** %struct.BigStruct_11269
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37270 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37270 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37270
  store %struct.Violation_list_struct* %load_struct.BigStruct_37270, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end366:                                        ; No predecessors!
  %287 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.191.613, i32 0, i32 0
  %288 = getelementptr inbounds [13 x i8*], [13 x i8*]* @Nec_for_Ma, i32 0, i32 0
  %struct.BigStruct_240 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %287, i8** %struct.BigStruct_240
  %struct.BigStruct_941 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %288, i8*** %struct.BigStruct_941
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3242 = load i32, i32* %struct.BigStruct_3242
  %tobool368 = icmp ne i32 %load_struct.BigStruct_3242, 0
  br i1 %tobool368, label %if.end371, label %if.then369

if.then369:                                       ; No predecessors!
  %289 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %290 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.192.614, i32 0, i32 0
  %struct.BigStruct_10265 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %289, %struct.Violation_list_struct** %struct.BigStruct_10265
  %struct.BigStruct_11266 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %290, i8** %struct.BigStruct_11266
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37267 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37267 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37267
  store %struct.Violation_list_struct* %load_struct.BigStruct_37267, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end371:                                        ; No predecessors!
  %291 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.193.615, i32 0, i32 0
  %292 = getelementptr inbounds [13 x i8*], [13 x i8*]* @Nec_for_Ma, i32 0, i32 0
  %struct.BigStruct_237 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %291, i8** %struct.BigStruct_237
  %struct.BigStruct_938 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %292, i8*** %struct.BigStruct_938
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3239 = load i32, i32* %struct.BigStruct_3239
  %tobool373 = icmp ne i32 %load_struct.BigStruct_3239, 0
  br i1 %tobool373, label %if.end376, label %if.then374

if.then374:                                       ; No predecessors!
  %293 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %294 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.194.616, i32 0, i32 0
  %struct.BigStruct_10262 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %293, %struct.Violation_list_struct** %struct.BigStruct_10262
  %struct.BigStruct_11263 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %294, i8** %struct.BigStruct_11263
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37264 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37264 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37264
  store %struct.Violation_list_struct* %load_struct.BigStruct_37264, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end376:                                        ; No predecessors!
  %295 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.195.617, i32 0, i32 0
  %296 = getelementptr inbounds [13 x i8*], [13 x i8*]* @Nec_for_Ma, i32 0, i32 0
  %struct.BigStruct_234 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %295, i8** %struct.BigStruct_234
  %struct.BigStruct_935 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %296, i8*** %struct.BigStruct_935
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3236 = load i32, i32* %struct.BigStruct_3236
  %tobool378 = icmp ne i32 %load_struct.BigStruct_3236, 0
  br i1 %tobool378, label %if.end381, label %if.then379

if.then379:                                       ; No predecessors!
  %297 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %298 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.196.618, i32 0, i32 0
  %struct.BigStruct_10259 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %297, %struct.Violation_list_struct** %struct.BigStruct_10259
  %struct.BigStruct_11260 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %298, i8** %struct.BigStruct_11260
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37261 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37261 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37261
  store %struct.Violation_list_struct* %load_struct.BigStruct_37261, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end381:                                        ; No predecessors!
  %299 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.197.619, i32 0, i32 0
  %300 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ZZ, i32 0, i32 0
  %struct.BigStruct_231 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %299, i8** %struct.BigStruct_231
  %struct.BigStruct_932 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %300, i8*** %struct.BigStruct_932
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3233 = load i32, i32* %struct.BigStruct_3233
  %tobool383 = icmp ne i32 %load_struct.BigStruct_3233, 0
  br i1 %tobool383, label %if.end386, label %if.then384

if.then384:                                       ; No predecessors!
  %301 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %302 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.198.620, i32 0, i32 0
  %struct.BigStruct_10256 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %301, %struct.Violation_list_struct** %struct.BigStruct_10256
  %struct.BigStruct_11257 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %302, i8** %struct.BigStruct_11257
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37258 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37258
  store %struct.Violation_list_struct* %load_struct.BigStruct_37258, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end386:                                        ; No predecessors!
  %303 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.199.621, i32 0, i32 0
  %304 = getelementptr inbounds [2 x i8*], [2 x i8*]* @ZZ, i32 0, i32 0
  %struct.BigStruct_228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %303, i8** %struct.BigStruct_228
  %struct.BigStruct_929 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %304, i8*** %struct.BigStruct_929
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3230 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3230 = load i32, i32* %struct.BigStruct_3230
  %tobool388 = icmp ne i32 %load_struct.BigStruct_3230, 0
  br i1 %tobool388, label %if.end391, label %if.then389

if.then389:                                       ; No predecessors!
  %305 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %306 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.200.622, i32 0, i32 0
  %struct.BigStruct_10253 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %305, %struct.Violation_list_struct** %struct.BigStruct_10253
  %struct.BigStruct_11254 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %306, i8** %struct.BigStruct_11254
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37255 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37255 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37255
  store %struct.Violation_list_struct* %load_struct.BigStruct_37255, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end391:                                        ; No predecessors!
  %307 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.201.623, i32 0, i32 0
  %308 = getelementptr inbounds [7 x i8*], [7 x i8*]* @illegal_S_types, i32 0, i32 0
  %struct.BigStruct_210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %307, i8** %struct.BigStruct_210
  %struct.BigStruct_911 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %308, i8*** %struct.BigStruct_911
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %tobool393 = icmp ne i32 %load_struct.BigStruct_3212, 0
  br i1 %tobool393, label %if.end396, label %if.then394

if.then394:                                       ; No predecessors!
  %309 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %310 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.202.624, i32 0, i32 0
  %struct.BigStruct_10250 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %309, %struct.Violation_list_struct** %struct.BigStruct_10250
  %struct.BigStruct_11251 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %310, i8** %struct.BigStruct_11251
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37252 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37252 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37252
  store %struct.Violation_list_struct* %load_struct.BigStruct_37252, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end396:                                        ; No predecessors!
  %311 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.203.625, i32 0, i32 0
  %312 = getelementptr inbounds [6 x i8*], [6 x i8*]* @illegal_SI_types, i32 0, i32 0
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %311, i8** %struct.BigStruct_27
  %struct.BigStruct_98 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %312, i8*** %struct.BigStruct_98
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_329 = load i32, i32* %struct.BigStruct_329
  %tobool398 = icmp ne i32 %load_struct.BigStruct_329, 0
  br i1 %tobool398, label %if.end401, label %if.then399

if.then399:                                       ; No predecessors!
  %313 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %314 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.204.626, i32 0, i32 0
  %struct.BigStruct_10247 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %313, %struct.Violation_list_struct** %struct.BigStruct_10247
  %struct.BigStruct_11248 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %314, i8** %struct.BigStruct_11248
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37249 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37249 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37249
  store %struct.Violation_list_struct* %load_struct.BigStruct_37249, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end401:                                        ; No predecessors!
  %315 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.205.627, i32 0, i32 0
  %316 = getelementptr inbounds [4 x i8*], [4 x i8*]* @Nec_for_MVh, i32 0, i32 0
  %struct.BigStruct_225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %315, i8** %struct.BigStruct_225
  %struct.BigStruct_926 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %316, i8*** %struct.BigStruct_926
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 17, i32 0)
  %struct.BigStruct_3227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3227 = load i32, i32* %struct.BigStruct_3227
  %tobool403 = icmp ne i32 %load_struct.BigStruct_3227, 0
  br i1 %tobool403, label %if.end406, label %if.then404

if.then404:                                       ; No predecessors!
  %317 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %318 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.206.628, i32 0, i32 0
  %struct.BigStruct_10244 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %317, %struct.Violation_list_struct** %struct.BigStruct_10244
  %struct.BigStruct_11245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %318, i8** %struct.BigStruct_11245
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37246 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37246 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37246
  store %struct.Violation_list_struct* %load_struct.BigStruct_37246, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end406:                                        ; No predecessors!
  %319 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.207.629, i32 0, i32 0
  %320 = getelementptr inbounds [2 x i8*], [2 x i8*]* @Incompat_with_MXsr, i32 0, i32 0
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %319, i8** %struct.BigStruct_24
  %struct.BigStruct_95 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %320, i8*** %struct.BigStruct_95
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_326 = load i32, i32* %struct.BigStruct_326
  %tobool408 = icmp ne i32 %load_struct.BigStruct_326, 0
  br i1 %tobool408, label %if.end411, label %if.then409

if.then409:                                       ; No predecessors!
  %321 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %322 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.208.630, i32 0, i32 0
  %struct.BigStruct_10241 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %321, %struct.Violation_list_struct** %struct.BigStruct_10241
  %struct.BigStruct_11242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %322, i8** %struct.BigStruct_11242
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37243 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37243
  store %struct.Violation_list_struct* %load_struct.BigStruct_37243, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end411:                                        ; No predecessors!
  %323 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.209.631, i32 0, i32 0
  %324 = getelementptr inbounds [3 x i8*], [3 x i8*]* @Incompat_with_MXpr, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %323, i8** %struct.BigStruct_2
  %struct.BigStruct_9 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 9
  store i8** %324, i8*** %struct.BigStruct_9
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 16, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool413 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool413, label %if.end416, label %if.then414

if.then414:                                       ; No predecessors!
  %325 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %326 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.210.632, i32 0, i32 0
  %struct.BigStruct_10 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 10
  store %struct.Violation_list_struct* %325, %struct.Violation_list_struct** %struct.BigStruct_10
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %326, i8** %struct.BigStruct_11
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 22, i32 0)
  %struct.BigStruct_37 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 37
  %load_struct.BigStruct_37 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %struct.BigStruct_37
  store %struct.Violation_list_struct* %load_struct.BigStruct_37, %struct.Violation_list_struct** %v, align 4
  br label %done_checking

if.end416:                                        ; No predecessors!
  br label %done_checking

done_checking:                                    ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 20, i32 0)
  %struct.BigStruct_35 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 35
  %load_struct.BigStruct_35 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %struct.BigStruct_35
  %327 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %327, i32 0, i32 0
  store %struct.D_type_list_struct** %load_struct.BigStruct_35, %struct.D_type_list_struct*** %d_type_array, align 4
  %328 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %329 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  %v418 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %329, i32 0, i32 1
  store %struct.Violation_list_struct* %328, %struct.Violation_list_struct** %v418, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 14, i32 0)
  %330 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp_return, align 4
  store %struct.PP_node_struct* %330, %struct.PP_node_struct** %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %331 = load %struct.PP_node_struct*, %struct.PP_node_struct** %retval, align 4
  %struct.BigStruct_36487 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  store %struct.PP_node_struct* %331, %struct.PP_node_struct** %struct.BigStruct_36487
  ret void
}

define void @clean_up_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %w.addr = alloca i32, align 4
  %head_disjunct = alloca %struct.Disjunct_struct, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %w.addr, align 4
  store %struct.Disjunct_struct* %head_disjunct, %struct.Disjunct_struct** %d, align 4
  %0 = load i32, i32* %w.addr, align 4
  %1 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %1, i32 0, i32 %0
  %d2 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 0
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %next, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next3 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next3, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next4 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 0
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next4, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp5 = icmp eq %struct.Connector_struct* %8, null
  br i1 %cmp5, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; No predecessors!
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 0
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next6, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 5
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp7 = icmp eq %struct.Connector_struct* %11, null
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 0
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next8, align 4
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %d1, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next9 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 0
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next9, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next10 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 0
  store %struct.Disjunct_struct* %15, %struct.Disjunct_struct** %next10, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %18 = bitcast %struct.Disjunct_struct* %17 to i8*
  call void @xfree(i8* %18, i32 20)
  br label %if.end

if.else:                                          ; No predecessors!
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 0
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next11, align 4
  store %struct.Disjunct_struct* %20, %struct.Disjunct_struct** %d, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %while.cond

while.end:                                        ; No predecessors!
  %next12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %head_disjunct, i32 0, i32 0
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next12, align 4
  %22 = load i32, i32* %w.addr, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 2
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %d14, align 4
  ret void
}

define void @disjuncts_equal_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  %load_struct.BigStruct_12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_12
  %retval = alloca i32, align 4
  %d2.addr = alloca %struct.Disjunct_struct*, align 4
  %d1.addr = alloca %struct.Disjunct_struct*, align 4
  %e1 = alloca %struct.Connector_struct*, align 4
  %e2 = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_12, %struct.Disjunct_struct** %d2.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d1.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %e1, align 4
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %left1, align 4
  store %struct.Connector_struct* %3, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp = icmp ne %struct.Connector_struct* %4, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %5, null
  br label %land.end

land.end:                                         ; No predecessors!
  %6 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call = call i32 @connectors_equal_prune(%struct.Connector_struct* %8, %struct.Connector_struct* %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  br label %while.end

if.end:                                           ; No predecessors!
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %e1, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %next3, align 4
  store %struct.Connector_struct* %12, %struct.Connector_struct** %e2, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %13, null
  br i1 %cmp4, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp5 = icmp ne %struct.Connector_struct* %14, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; No predecessors!
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 5
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %16, %struct.Connector_struct** %e1, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %right8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 5
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %right8, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.cond9:                                      ; No predecessors!
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp10 = icmp ne %struct.Connector_struct* %19, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; No predecessors!
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %20, null
  br label %land.end13

land.end13:                                       ; No predecessors!
  %21 = phi i1 [ false, %while.cond9 ], [ %cmp12, %land.rhs11 ]
  br i1 %21, label %while.body14, label %while.end21

while.body14:                                     ; No predecessors!
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %call15 = call i32 @connectors_equal_prune(%struct.Connector_struct* %23, %struct.Connector_struct* %22)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; No predecessors!
  br label %while.end21

if.end18:                                         ; No predecessors!
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %next19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %next19, align 4
  store %struct.Connector_struct* %25, %struct.Connector_struct** %e1, align 4
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %next20 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %next20, align 4
  store %struct.Connector_struct* %27, %struct.Connector_struct** %e2, align 4
  br label %while.cond9

while.end21:                                      ; No predecessors!
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %e1, align 4
  %cmp22 = icmp ne %struct.Connector_struct* %28, null
  br i1 %cmp22, label %if.then25, label %lor.lhs.false23

lor.lhs.false23:                                  ; No predecessors!
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %e2, align 4
  %cmp24 = icmp ne %struct.Connector_struct* %29, null
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end26:                                         ; No predecessors!
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2.addr, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 3
  %31 = load i8*, i8** %string, align 4
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1.addr, align 4
  %string27 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %32, i32 0, i32 3
  %33 = load i8*, i8** %string27, align 4
  %call28 = call i32 @strcmp_Package(i8* %33, i8* %31)
  %cmp29 = icmp eq i32 %call28, 0
  %conv = zext i1 %cmp29 to i32
  store i32 %conv, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %34 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %34, i32* %struct.BigStruct_32
  ret void
}

define void @clean_table_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 13
  %load_struct.BigStruct_13 = load %struct.c_list_struct**, %struct.c_list_struct*** %struct.BigStruct_13
  %t.addr = alloca %struct.c_list_struct**, align 4
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca %struct.c_list_struct*, align 4
  %xm = alloca %struct.c_list_struct*, align 4
  %head = alloca %struct.c_list_struct*, align 4
  store %struct.c_list_struct** %load_struct.BigStruct_13, %struct.c_list_struct*** %t.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %size.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %size.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end9

for.body:                                         ; No predecessors!
  store %struct.c_list_struct* null, %struct.c_list_struct** %head, align 4
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.c_list_struct**, %struct.c_list_struct*** %t.addr, align 4
  %arrayidx = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %3, i32 %2
  %4 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx, align 4
  store %struct.c_list_struct* %4, %struct.c_list_struct** %m, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %5 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %cmp2 = icmp ne %struct.c_list_struct* %5, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %6 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %next = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %6, i32 0, i32 2
  %7 = load %struct.c_list_struct*, %struct.c_list_struct** %next, align 4
  store %struct.c_list_struct* %7, %struct.c_list_struct** %xm, align 4
  %8 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %c = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %8, i32 0, i32 0
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 1
  %10 = load i16, i16* %word, align 2
  %conv = sext i16 %10 to i32
  %cmp4 = icmp ne i32 %conv, 251
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %11 = load %struct.c_list_struct*, %struct.c_list_struct** %head, align 4
  %12 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %next6 = getelementptr inbounds %struct.c_list_struct, %struct.c_list_struct* %12, i32 0, i32 2
  store %struct.c_list_struct* %11, %struct.c_list_struct** %next6, align 4
  %13 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  store %struct.c_list_struct* %13, %struct.c_list_struct** %head, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %14 = load %struct.c_list_struct*, %struct.c_list_struct** %m, align 4
  %15 = bitcast %struct.c_list_struct* %14 to i8*
  call void @xfree(i8* %15, i32 12)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %16 = load %struct.c_list_struct*, %struct.c_list_struct** %xm, align 4
  store %struct.c_list_struct* %16, %struct.c_list_struct** %m, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  %17 = load %struct.c_list_struct*, %struct.c_list_struct** %head, align 4
  %18 = load i32, i32* %i, align 4
  %19 = load %struct.c_list_struct**, %struct.c_list_struct*** %t.addr, align 4
  %arrayidx7 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %19, i32 %18
  store %struct.c_list_struct* %17, %struct.c_list_struct** %arrayidx7, align 4
  br label %for.inc8

for.inc8:                                         ; No predecessors!
  %20 = load i32, i32* %i, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end9:                                         ; No predecessors!
  ret void
}

define void @true_dict_match_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %ds = alloca i8*, align 4
  %dt = alloca i8*, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i8* @strrchr_Package(i8* %0, i32 46)
  store i8* %call, i8** %ds, align 4
  %1 = load i8*, i8** %t.addr, align 4
  %call1 = call i8* @strrchr_Package(i8* %1, i32 46)
  store i8* %call1, i8** %dt, align 4
  %2 = load i8*, i8** %dt, align 4
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; No predecessors!
  %3 = load i8*, i8** %dt, align 4
  %add.ptr = getelementptr inbounds i8, i8* %3, i32 1
  %4 = load i8, i8* %add.ptr, align 1
  %conv = sext i8 %4 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %5 = load i8*, i8** %dt, align 4
  %add.ptr4 = getelementptr inbounds i8, i8* %5, i32 1
  %6 = load i8, i8* %add.ptr4, align 1
  %conv5 = sext i8 %6 to i32
  %call6 = call i32 @isdigit_Package(i32 %conv5)
  %tobool = icmp ne i32 %call6, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i8* null, i8** %dt, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %7 = load i8*, i8** %ds, align 4
  %cmp7 = icmp ne i8* %7, null
  br i1 %cmp7, label %land.lhs.true9, label %if.end20

land.lhs.true9:                                   ; No predecessors!
  %8 = load i8*, i8** %ds, align 4
  %add.ptr10 = getelementptr inbounds i8, i8* %8, i32 1
  %9 = load i8, i8* %add.ptr10, align 1
  %conv11 = sext i8 %9 to i32
  %cmp12 = icmp eq i32 %conv11, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14

lor.lhs.false14:                                  ; No predecessors!
  %10 = load i8*, i8** %ds, align 4
  %add.ptr15 = getelementptr inbounds i8, i8* %10, i32 1
  %11 = load i8, i8* %add.ptr15, align 1
  %conv16 = sext i8 %11 to i32
  %call17 = call i32 @isdigit_Package(i32 %conv16)
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; No predecessors!
  store i8* null, i8** %ds, align 4
  br label %if.end20

if.end20:                                         ; No predecessors!
  %12 = load i8*, i8** %dt, align 4
  %cmp21 = icmp eq i8* %12, null
  br i1 %cmp21, label %land.lhs.true23, label %if.else

land.lhs.true23:                                  ; No predecessors!
  %13 = load i8*, i8** %ds, align 4
  %cmp24 = icmp ne i8* %13, null
  br i1 %cmp24, label %if.then26, label %if.else

if.then26:                                        ; No predecessors!
  %14 = load i8*, i8** %t.addr, align 4
  %call27 = call i32 @strlen_Package(i8* %14)
  %15 = load i8*, i8** %ds, align 4
  %16 = load i8*, i8** %s.addr, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %15 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %16 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp28 = icmp sgt i32 %call27, %sub.ptr.sub
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end31:                                         ; No predecessors!
  %17 = load i8*, i8** %ds, align 4
  %18 = load i8*, i8** %s.addr, align 4
  %sub.ptr.lhs.cast32 = ptrtoint i8* %17 to i32
  %sub.ptr.rhs.cast33 = ptrtoint i8* %18 to i32
  %sub.ptr.sub34 = sub i32 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33
  %19 = load i8*, i8** %t.addr, align 4
  %20 = load i8*, i8** %s.addr, align 4
  %call35 = call i32 @strncmp_Package(i8* %20, i8* %19, i32 %sub.ptr.sub34)
  %cmp36 = icmp eq i32 %call35, 0
  %conv37 = zext i1 %cmp36 to i32
  store i32 %conv37, i32* %retval, align 4
  br label %return

if.else:                                          ; No predecessors!
  %21 = load i8*, i8** %dt, align 4
  %cmp38 = icmp ne i8* %21, null
  br i1 %cmp38, label %land.lhs.true40, label %if.else58

land.lhs.true40:                                  ; No predecessors!
  %22 = load i8*, i8** %ds, align 4
  %cmp41 = icmp eq i8* %22, null
  br i1 %cmp41, label %if.then43, label %if.else58

if.then43:                                        ; No predecessors!
  %23 = load i8*, i8** %s.addr, align 4
  %call44 = call i32 @strlen_Package(i8* %23)
  %24 = load i8*, i8** %dt, align 4
  %25 = load i8*, i8** %t.addr, align 4
  %sub.ptr.lhs.cast45 = ptrtoint i8* %24 to i32
  %sub.ptr.rhs.cast46 = ptrtoint i8* %25 to i32
  %sub.ptr.sub47 = sub i32 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46
  %cmp48 = icmp sgt i32 %call44, %sub.ptr.sub47
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end51:                                         ; No predecessors!
  %26 = load i8*, i8** %dt, align 4
  %27 = load i8*, i8** %t.addr, align 4
  %sub.ptr.lhs.cast52 = ptrtoint i8* %26 to i32
  %sub.ptr.rhs.cast53 = ptrtoint i8* %27 to i32
  %sub.ptr.sub54 = sub i32 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53
  %28 = load i8*, i8** %t.addr, align 4
  %29 = load i8*, i8** %s.addr, align 4
  %call55 = call i32 @strncmp_Package(i8* %29, i8* %28, i32 %sub.ptr.sub54)
  %cmp56 = icmp eq i32 %call55, 0
  %conv57 = zext i1 %cmp56 to i32
  store i32 %conv57, i32* %retval, align 4
  br label %return

if.else58:                                        ; No predecessors!
  %30 = load i8*, i8** %t.addr, align 4
  %31 = load i8*, i8** %s.addr, align 4
  %call59 = call i32 @strcmp_Package(i8* %31, i8* %30)
  %cmp60 = icmp eq i32 %call59, 0
  %conv61 = zext i1 %cmp60 to i32
  store i32 %conv61, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %32 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %32, i32* %struct.BigStruct_32
  ret void
}

define void @cost_for_length_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %length.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %length.addr, align 4
  %0 = load i32, i32* %length.addr, align 4
  %sub = sub nsw i32 %0, 1
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %sub, i32* %struct.BigStruct_32
  ret void
}

define void @__iob_func_Package_Clear() {
entry:
  %call = call %struct._iobuf* @__iob_func()
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  store %struct._iobuf* %call, %struct._iobuf** %struct.BigStruct_38
  ret void
}

define void @extract_all_fat_links_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %cl = alloca %struct.Connector_struct*, align 4
  %cr = alloca %struct.Connector_struct*, align 4
  %tl = alloca %struct.Connector_struct*, align 4
  %tr = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %tl, align 4
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left1 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left1, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 5
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %4, %struct.Connector_struct** %cr, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %cmp = icmp ne %struct.Connector_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %tr, align 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next2, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call = call i32 @is_appropriate(%struct.Disjunct_struct* %9)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @put_disjunct_into_table(%struct.Disjunct_struct* %10)
  br label %if.end

if.end:                                           ; No predecessors!
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 4
  store %struct.Connector_struct* %11, %struct.Connector_struct** %next3, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next4, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %cr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left5 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %left5, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 5
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %right6, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %tr, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right7, align 4
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %left8, align 4
  store %struct.Connector_struct* %21, %struct.Connector_struct** %cl, align 4
  br label %for.cond9

for.cond9:                                        ; No predecessors!
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %cmp10 = icmp ne %struct.Connector_struct* %22, null
  br i1 %cmp10, label %for.body11, label %for.end21

for.body11:                                       ; No predecessors!
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %next12, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %tl, align 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next13, align 4
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call14 = call i32 @is_appropriate(%struct.Disjunct_struct* %26)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; No predecessors!
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @put_disjunct_into_table(%struct.Disjunct_struct* %27)
  br label %if.end17

if.end17:                                         ; No predecessors!
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next18 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %29, i32 0, i32 4
  store %struct.Connector_struct* %28, %struct.Connector_struct** %next18, align 4
  br label %for.inc19

for.inc19:                                        ; No predecessors!
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next20 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %30, i32 0, i32 4
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %next20, align 4
  store %struct.Connector_struct* %31, %struct.Connector_struct** %cl, align 4
  br label %for.cond9

for.end21:                                        ; No predecessors!
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right22 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %33, i32 0, i32 5
  store %struct.Connector_struct* %32, %struct.Connector_struct** %right22, align 4
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left23 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %34, i32 0, i32 4
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %left23, align 4
  store %struct.Connector_struct* %35, %struct.Connector_struct** %cl, align 4
  br label %for.cond24

for.cond24:                                       ; No predecessors!
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %cmp25 = icmp ne %struct.Connector_struct* %36, null
  br i1 %cmp25, label %for.body26, label %for.end46

for.body26:                                       ; No predecessors!
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right27 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %37, i32 0, i32 5
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %right27, align 4
  store %struct.Connector_struct* %38, %struct.Connector_struct** %cr, align 4
  br label %for.cond28

for.cond28:                                       ; No predecessors!
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %cmp29 = icmp ne %struct.Connector_struct* %39, null
  br i1 %cmp29, label %for.body30, label %for.end43

for.body30:                                       ; No predecessors!
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next31 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %40, i32 0, i32 4
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %next31, align 4
  store %struct.Connector_struct* %41, %struct.Connector_struct** %tl, align 4
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next32 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 4
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %next32, align 4
  store %struct.Connector_struct* %43, %struct.Connector_struct** %tr, align 4
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next33 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %44, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next33, align 4
  %45 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next34 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %45, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next34, align 4
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call35 = call i32 @is_appropriate(%struct.Disjunct_struct* %46)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; No predecessors!
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @put_disjunct_into_table(%struct.Disjunct_struct* %47)
  br label %if.end38

if.end38:                                         ; No predecessors!
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %tl, align 4
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next39 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %49, i32 0, i32 4
  store %struct.Connector_struct* %48, %struct.Connector_struct** %next39, align 4
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %tr, align 4
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next40 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  store %struct.Connector_struct* %50, %struct.Connector_struct** %next40, align 4
  br label %for.inc41

for.inc41:                                        ; No predecessors!
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %cr, align 4
  %next42 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %52, i32 0, i32 4
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %next42, align 4
  store %struct.Connector_struct* %53, %struct.Connector_struct** %cr, align 4
  br label %for.cond28

for.end43:                                        ; No predecessors!
  br label %for.inc44

for.inc44:                                        ; No predecessors!
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %cl, align 4
  %next45 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %54, i32 0, i32 4
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %next45, align 4
  store %struct.Connector_struct* %55, %struct.Connector_struct** %cl, align 4
  br label %for.cond24

for.end46:                                        ; No predecessors!
  ret void
}

define void @free_image_array_Clear() {
entry:
  %w = alloca i32, align 4
  %in = alloca %struct.Image_node_struct*, align 4
  %inx = alloca %struct.Image_node_struct*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %2
  %3 = load %struct.Image_node_struct*, %struct.Image_node_struct** %arrayidx, align 4
  store %struct.Image_node_struct* %3, %struct.Image_node_struct** %in, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %cmp2 = icmp ne %struct.Image_node_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %5 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %next = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %5, i32 0, i32 0
  %6 = load %struct.Image_node_struct*, %struct.Image_node_struct** %next, align 4
  store %struct.Image_node_struct* %6, %struct.Image_node_struct** %inx, align 4
  %7 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %8 = bitcast %struct.Image_node_struct* %7 to i8*
  call void @xfree(i8* %8, i32 12)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load %struct.Image_node_struct*, %struct.Image_node_struct** %inx, align 4
  store %struct.Image_node_struct* %9, %struct.Image_node_struct** %in, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  br label %for.inc4

for.inc4:                                         ; No predecessors!
  %10 = load i32, i32* %w, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end5:                                         ; No predecessors!
  ret void
}

define void @build_disjuncts_for_X_node_Clear() {
entry:
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  %load_struct.BigStruct_14 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_14
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  %load_struct.BigStruct_15 = load i32, i32* %struct.BigStruct_15
  %cost_cutoff.addr = alloca i32, align 4
  %x.addr = alloca %struct.X_node_struct*, align 4
  %c = alloca %struct.clause_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  store i32 %load_struct.BigStruct_15, i32* %cost_cutoff.addr, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_14, %struct.X_node_struct** %x.addr, align 4
  %0 = load i32, i32* %cost_cutoff.addr, align 4
  %1 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %1, i32 0, i32 1
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call %struct.clause_struct* @build_clause(%struct.Exp_struct* %2, i32 %0)
  store %struct.clause_struct* %call, %struct.clause_struct** %c, align 4
  %3 = load i32, i32* %cost_cutoff.addr, align 4
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %string = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %4, i32 0, i32 0
  %5 = load i8*, i8** %string, align 4
  %6 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %call1 = call %struct.Disjunct_struct* @build_disjunct(%struct.clause_struct* %6, i8* %5, i32 %3)
  store %struct.Disjunct_struct* %call1, %struct.Disjunct_struct** %dis, align 4
  %7 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  call void @free_clause_list(%struct.clause_struct* %7)
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @right_disjunct_list_length_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 5
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp1 = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret void
}

define void @put_into_match_table_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_16 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 16
  %load_struct.BigStruct_16 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %struct.BigStruct_16
  %struct.BigStruct_17 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 17
  %load_struct.BigStruct_17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_17
  %struct.BigStruct_18 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 18
  %load_struct.BigStruct_18 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_18
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 19
  %load_struct.BigStruct_19 = load i32, i32* %struct.BigStruct_19
  %dir.addr = alloca i32, align 4
  %c.addr = alloca %struct.Connector_struct*, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %t.addr = alloca %struct.Match_node_struct**, align 4
  %size.addr = alloca i32, align 4
  %h = alloca i32, align 4
  %m = alloca %struct.Match_node_struct*, align 4
  store i32 %load_struct.BigStruct_19, i32* %dir.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_18, %struct.Connector_struct** %c.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_17, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Match_node_struct** %load_struct.BigStruct_16, %struct.Match_node_struct*** %t.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %size.addr, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c.addr, align 4
  %call = call i32 @fast_match_hash(%struct.Connector_struct* %0)
  %1 = load i32, i32* %size.addr, align 4
  %sub = sub nsw i32 %1, 1
  %and = and i32 %call, %sub
  store i32 %and, i32* %h, align 4
  %call1 = call i8* @xalloc(i32 8)
  %2 = bitcast i8* %call1 to %struct.Match_node_struct*
  store %struct.Match_node_struct* %2, %struct.Match_node_struct** %m, align 4
  %3 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %next = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %3, i32 0, i32 0
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %next, align 4
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %5 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %d2 = getelementptr inbounds %struct.Match_node_struct, %struct.Match_node_struct* %5, i32 0, i32 1
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d2, align 4
  %6 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %6, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %7 = load i32, i32* %h, align 4
  %8 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %8, i32 %7
  %9 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx, align 4
  %10 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %call3 = call %struct.Match_node_struct* @add_to_right_table_list(%struct.Match_node_struct* %10, %struct.Match_node_struct* %9)
  %11 = load i32, i32* %h, align 4
  %12 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx4 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %12, i32 %11
  store %struct.Match_node_struct* %call3, %struct.Match_node_struct** %arrayidx4, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %13 = load i32, i32* %h, align 4
  %14 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx5 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %14, i32 %13
  %15 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx5, align 4
  %16 = load %struct.Match_node_struct*, %struct.Match_node_struct** %m, align 4
  %call6 = call %struct.Match_node_struct* @add_to_left_table_list(%struct.Match_node_struct* %16, %struct.Match_node_struct* %15)
  %17 = load i32, i32* %h, align 4
  %18 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t.addr, align 4
  %arrayidx7 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %18, i32 %17
  store %struct.Match_node_struct* %call6, %struct.Match_node_struct** %arrayidx7, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  ret void
}

define void @tolower_Package_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @tolower(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @toupper_Package_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @toupper(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @conj_in_range_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %retval = alloca i32, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %rw.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %lw.addr, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %lw.addr, align 4
  %1 = load i32, i32* %rw.addr, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %lw.addr, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %lw.addr, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %lw.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret void
}

define void @free_PP_node_Clear() {
entry:
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  %load_struct.BigStruct_20 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_20
  %p.addr = alloca %struct.PP_node_struct*, align 4
  %dtl = alloca %struct.D_type_list_struct*, align 4
  %dtlx = alloca %struct.D_type_list_struct*, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %vx = alloca %struct.Violation_list_struct*, align 4
  %i = alloca i32, align 4
  store %struct.PP_node_struct* %load_struct.BigStruct_20, %struct.PP_node_struct** %p.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %3, i32 0, i32 0
  %4 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array, align 4
  %arrayidx = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %4, i32 %2
  %5 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx, align 4
  store %struct.D_type_list_struct* %5, %struct.D_type_list_struct** %dtl, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %6 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %cmp2 = icmp ne %struct.D_type_list_struct* %6, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %7 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %7, i32 0, i32 0
  %8 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next, align 4
  store %struct.D_type_list_struct* %8, %struct.D_type_list_struct** %dtlx, align 4
  %9 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl, align 4
  %10 = bitcast %struct.D_type_list_struct* %9 to i8*
  call void @xfree(i8* %10, i32 8)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %11 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtlx, align 4
  store %struct.D_type_list_struct* %11, %struct.D_type_list_struct** %dtl, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  br label %for.inc4

for.inc4:                                         ; No predecessors!
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end5:                                         ; No predecessors!
  %13 = load i32, i32* @N_links, align 4
  %cmp6 = icmp sgt i32 %13, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %14 = load i32, i32* @N_links, align 4
  %mul = mul i32 %14, 4
  %15 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %d_type_array7 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %15, i32 0, i32 0
  %16 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array7, align 4
  %17 = bitcast %struct.D_type_list_struct** %16 to i8*
  call void @xfree(i8* %17, i32 %mul)
  br label %if.end

if.end:                                           ; No predecessors!
  %18 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %v8 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %18, i32 0, i32 1
  %19 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v8, align 4
  store %struct.Violation_list_struct* %19, %struct.Violation_list_struct** %v, align 4
  br label %for.cond9

for.cond9:                                        ; No predecessors!
  %20 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp10 = icmp ne %struct.Violation_list_struct* %20, null
  br i1 %cmp10, label %for.body11, label %for.end14

for.body11:                                       ; No predecessors!
  %21 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next12 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %21, i32 0, i32 0
  %22 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next12, align 4
  store %struct.Violation_list_struct* %22, %struct.Violation_list_struct** %vx, align 4
  %23 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %24 = bitcast %struct.Violation_list_struct* %23 to i8*
  call void @xfree(i8* %24, i32 8)
  br label %for.inc13

for.inc13:                                        ; No predecessors!
  %25 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %vx, align 4
  store %struct.Violation_list_struct* %25, %struct.Violation_list_struct** %v, align 4
  br label %for.cond9

for.end14:                                        ; No predecessors!
  %26 = load %struct.PP_node_struct*, %struct.PP_node_struct** %p.addr, align 4
  %27 = bitcast %struct.PP_node_struct* %26 to i8*
  call void @xfree(i8* %27, i32 8)
  ret void
}

define void @set_centers_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %print_word_0.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %tot = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %print_word_0.addr, align 4
  store i32 0, i32* %tot, align 4
  %0 = load i32, i32* %print_word_0.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  store i32 1, i32* %i, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* @N_words_to_print, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 @strlen_Package(i8* %4)
  store i32 %call, i32* %len, align 4
  %5 = load i32, i32* %tot, align 4
  %6 = load i32, i32* %len, align 4
  %div = sdiv i32 %6, 2
  %add = add nsw i32 %5, %div
  %7 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %7
  store i32 %add, i32* %arrayidx1, align 4
  %8 = load i32, i32* %len, align 4
  %add2 = add nsw i32 %8, 1
  %9 = load i32, i32* %tot, align 4
  %add3 = add nsw i32 %9, %add2
  store i32 %add3, i32* %tot, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @print_postscript_data_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %print_word_N.addr = alloca i32, align 4
  %print_word_0.addr = alloca i32, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %link = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 %load_struct.BigStruct_8, i32* %print_word_N.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %print_word_0.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  %0 = load i32, i32* %print_word_0.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 0, i32* %d, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  store i32 1, i32* %d, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  store i32 0, i32* %i, align 4
  %1 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %2 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.635, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %1, i8* %2)
  %3 = load i32, i32* %d, align 4
  store i32 %3, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %4 = load i32, i32* %j, align 4
  %5 = load i32, i32* @N_words_to_print, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %rem = srem i32 %6, 7
  %cmp1 = icmp eq i32 %rem, 0
  br i1 %cmp1, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %cmp2 = icmp sgt i32 %7, 0
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; No predecessors!
  %8 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.1.636, i32 0, i32 0
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %8, i8* %9)
  br label %if.end5

if.end5:                                          ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  %11 = load i32, i32* %j, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %11
  %12 = load i8*, i8** %arrayidx, align 4
  %13 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.2.637, i32 0, i32 0
  %call6 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %13, i8* %14, i8* %12)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %15 = load i32, i32* %j, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %j, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %16 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %17 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.3.638, i32 0, i32 0
  %call8 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %16, i8* %17)
  %18 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.4.639, i32 0, i32 0
  %call9 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %18, i8* %19)
  %20 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %21 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.5.640, i32 0, i32 0
  %call10 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %20, i8* %21)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond11

for.cond11:                                       ; No predecessors!
  %22 = load i32, i32* %link, align 4
  %23 = load i32, i32* @N_links, align 4
  %cmp12 = icmp slt i32 %22, %23
  br i1 %cmp12, label %for.body13, label %for.end58

for.body13:                                       ; No predecessors!
  %24 = load i32, i32* %print_word_0.addr, align 4
  %tobool14 = icmp ne i32 %24, 0
  br i1 %tobool14, label %if.end19, label %land.lhs.true15

land.lhs.true15:                                  ; No predecessors!
  %25 = load i32, i32* %link, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx16 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx16, i32 0, i32 0
  %27 = load i32, i32* %l, align 4
  %cmp17 = icmp eq i32 %27, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; No predecessors!
  br label %for.inc56

if.end19:                                         ; No predecessors!
  %28 = load i32, i32* %print_word_N.addr, align 4
  %tobool20 = icmp ne i32 %28, 0
  br i1 %tobool20, label %if.end25, label %land.lhs.true21

land.lhs.true21:                                  ; No predecessors!
  %29 = load i32, i32* %link, align 4
  %30 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %30, i32 0, i32 %29
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx22, i32 0, i32 1
  %31 = load i32, i32* %r, align 4
  %32 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %32, 1
  %cmp23 = icmp eq i32 %31, %sub
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; No predecessors!
  br label %for.inc56

if.end25:                                         ; No predecessors!
  %33 = load i32, i32* %link, align 4
  %34 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx26 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %34, i32 0, i32 %33
  %l27 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx26, i32 0, i32 0
  %35 = load i32, i32* %l27, align 4
  %cmp28 = icmp eq i32 %35, -1
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; No predecessors!
  br label %for.inc56

if.end30:                                         ; No predecessors!
  %36 = load i32, i32* %j, align 4
  %rem31 = srem i32 %36, 5
  %cmp32 = icmp eq i32 %rem31, 0
  br i1 %cmp32, label %land.lhs.true33, label %if.end37

land.lhs.true33:                                  ; No predecessors!
  %37 = load i32, i32* %j, align 4
  %cmp34 = icmp sgt i32 %37, 0
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; No predecessors!
  %38 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %39 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.6.641, i32 0, i32 0
  %call36 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %38, i8* %39)
  br label %if.end37

if.end37:                                         ; No predecessors!
  %40 = load i32, i32* %j, align 4
  %inc38 = add nsw i32 %40, 1
  store i32 %inc38, i32* %j, align 4
  %41 = load i32, i32* %link, align 4
  %arrayidx39 = getelementptr inbounds [497 x i32], [497 x i32]* @link_heights, i32 0, i32 %41
  %42 = load i32, i32* %arrayidx39, align 4
  %43 = load i32, i32* %link, align 4
  %44 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx40 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %44, i32 0, i32 %43
  %r41 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx40, i32 0, i32 1
  %45 = load i32, i32* %r41, align 4
  %46 = load i32, i32* %d, align 4
  %sub42 = sub nsw i32 %45, %46
  %47 = load i32, i32* %link, align 4
  %48 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx43 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %48, i32 0, i32 %47
  %l44 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx43, i32 0, i32 0
  %49 = load i32, i32* %l44, align 4
  %50 = load i32, i32* %d, align 4
  %sub45 = sub nsw i32 %49, %50
  %51 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.7.642, i32 0, i32 0
  %call46 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %51, i8* %52, i32 %sub45, i32 %sub42, i32 %42)
  %53 = load i32, i32* %link, align 4
  %54 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx47 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %54, i32 0, i32 %53
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx47, i32 0, i32 2
  %55 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %55, i32 0, i32 0
  %56 = load i16, i16* %label, align 4
  %conv = sext i16 %56 to i32
  %cmp48 = icmp slt i32 %conv, 0
  br i1 %cmp48, label %if.then50, label %if.else53

if.then50:                                        ; No predecessors!
  %57 = load i32, i32* %link, align 4
  %58 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx51 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %58, i32 0, i32 %57
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx51, i32 0, i32 4
  %59 = load i8*, i8** %name, align 4
  %60 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %61 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.8.643, i32 0, i32 0
  %call52 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %60, i8* %61, i8* %59)
  br label %if.end55

if.else53:                                        ; No predecessors!
  %62 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %63 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.9.644, i32 0, i32 0
  %call54 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %62, i8* %63)
  br label %if.end55

if.end55:                                         ; No predecessors!
  br label %for.inc56

for.inc56:                                        ; No predecessors!
  %64 = load i32, i32* %link, align 4
  %inc57 = add nsw i32 %64, 1
  store i32 %inc57, i32* %link, align 4
  br label %for.cond11

for.end58:                                        ; No predecessors!
  %65 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %66 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.10.645, i32 0, i32 0
  %call59 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %65, i8* %66)
  %67 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %68 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.11.646, i32 0, i32 0
  %call60 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %67, i8* %68)
  %69 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %70 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.12.647, i32 0, i32 0
  %call61 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %69, i8* %70)
  store i32 0, i32* %j, align 4
  br label %for.cond62

for.cond62:                                       ; No predecessors!
  %71 = load i32, i32* %j, align 4
  %72 = load i32, i32* @N_rows, align 4
  %cmp63 = icmp slt i32 %71, %72
  br i1 %cmp63, label %for.body65, label %for.end70

for.body65:                                       ; No predecessors!
  %73 = load i32, i32* %j, align 4
  %arrayidx66 = getelementptr inbounds [250 x i32], [250 x i32]* @row_starts, i32 0, i32 %73
  %74 = load i32, i32* %arrayidx66, align 4
  %75 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.13.648, i32 0, i32 0
  %call67 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %75, i8* %76, i32 %74)
  br label %for.inc68

for.inc68:                                        ; No predecessors!
  %77 = load i32, i32* %j, align 4
  %inc69 = add nsw i32 %77, 1
  store i32 %inc69, i32* %j, align 4
  br label %for.cond62

for.end70:                                        ; No predecessors!
  %78 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %79 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.14.649, i32 0, i32 0
  %call71 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %78, i8* %79)
  ret void
}

define void @print_links_graphically_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %fp.addr = alloca %struct._iobuf*, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %cl = alloca i32, align 4
  %cr = alloca i32, align 4
  %row = alloca i32, align 4
  %top_row = alloca i32, align 4
  %width = alloca i32, align 4
  %flag = alloca i32, align 4
  %t = alloca i8*, align 4
  %s = alloca i8*, align 4
  %print_word_0 = alloca i32, align 4
  %print_word_N = alloca i32, align 4
  %N_wall_connectors = alloca i32, align 4
  %suppressor_used = alloca i32, align 4
  %connector = alloca [50 x i8], align 1
  %line_len = alloca i32, align 4
  %link_length = alloca i32, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  store i32 0, i32* %print_word_0, align 4
  store i32 0, i32* %print_word_N, align 4
  store i32 0, i32* %N_wall_connectors, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 0, i32* %suppressor_used, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i32, i32* %j, align 4
  %2 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %j, align 4
  %4 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %4, i32 0, i32 %3
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %5 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %5, 0
  br i1 %cmp1, label %if.then2, label %if.end6

if.then2:                                         ; No predecessors!
  %6 = load i32, i32* %N_wall_connectors, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %N_wall_connectors, align 4
  %7 = load i32, i32* %j, align 4
  %8 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %8, i32 0, i32 %7
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 2
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 5
  %10 = load i8*, i8** %string, align 4
  %11 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.18.657, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %10, i8* %11)
  %cmp4 = icmp eq i32 %call, 0
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; No predecessors!
  store i32 1, i32* %suppressor_used, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end6

if.end6:                                          ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load i32, i32* %j, align 4
  %inc7 = add nsw i32 %12, 1
  store i32 %inc7, i32* %j, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %13 = load i32, i32* %suppressor_used, align 4
  %tobool8 = icmp ne i32 %13, 0
  br i1 %tobool8, label %lor.lhs.false, label %lor.end

lor.lhs.false:                                    ; No predecessors!
  %14 = load i32, i32* %N_wall_connectors, align 4
  %cmp9 = icmp sgt i32 %14, 1
  br i1 %cmp9, label %lor.end, label %lor.rhs

lor.rhs:                                          ; No predecessors!
  %15 = load i32, i32* @display_walls, align 4
  %tobool10 = icmp ne i32 %15, 0
  br label %lor.end

lor.end:                                          ; No predecessors!
  %16 = phi i1 [ true, %lor.lhs.false ], [ true, %for.end ], [ %tobool10, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32
  store i32 %lor.ext, i32* %print_word_0, align 4
  br label %if.end11

if.else:                                          ; No predecessors!
  store i32 1, i32* %print_word_0, align 4
  br label %if.end11

if.end11:                                         ; No predecessors!
  store i32 0, i32* %N_wall_connectors, align 4
  %17 = load i32, i32* @right_wall_defined, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.else39

if.then13:                                        ; No predecessors!
  store i32 0, i32* %suppressor_used, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond14

for.cond14:                                       ; No predecessors!
  %18 = load i32, i32* %j, align 4
  %19 = load i32, i32* @N_links, align 4
  %cmp15 = icmp slt i32 %18, %19
  br i1 %cmp15, label %for.body16, label %for.end31

for.body16:                                       ; No predecessors!
  %20 = load i32, i32* %j, align 4
  %21 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %21, i32 0, i32 %20
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %22 = load i32, i32* %r, align 4
  %23 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %23, 1
  %cmp18 = icmp eq i32 %22, %sub
  br i1 %cmp18, label %if.then19, label %if.end28

if.then19:                                        ; No predecessors!
  %24 = load i32, i32* %N_wall_connectors, align 4
  %inc20 = add nsw i32 %24, 1
  store i32 %inc20, i32* %N_wall_connectors, align 4
  %25 = load i32, i32* %j, align 4
  %26 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx21 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %26, i32 0, i32 %25
  %lc22 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx21, i32 0, i32 2
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %lc22, align 4
  %string23 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 5
  %28 = load i8*, i8** %string23, align 4
  %29 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.19.658, i32 0, i32 0
  %call24 = call i32 @strcmp_Package(i8* %28, i8* %29)
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; No predecessors!
  store i32 1, i32* %suppressor_used, align 4
  br label %if.end27

if.end27:                                         ; No predecessors!
  br label %if.end28

if.end28:                                         ; No predecessors!
  br label %for.inc29

for.inc29:                                        ; No predecessors!
  %30 = load i32, i32* %j, align 4
  %inc30 = add nsw i32 %30, 1
  store i32 %inc30, i32* %j, align 4
  br label %for.cond14

for.end31:                                        ; No predecessors!
  %31 = load i32, i32* %suppressor_used, align 4
  %tobool32 = icmp ne i32 %31, 0
  br i1 %tobool32, label %lor.lhs.false33, label %lor.end37

lor.lhs.false33:                                  ; No predecessors!
  %32 = load i32, i32* %N_wall_connectors, align 4
  %cmp34 = icmp sgt i32 %32, 1
  br i1 %cmp34, label %lor.end37, label %lor.rhs35

lor.rhs35:                                        ; No predecessors!
  %33 = load i32, i32* @display_walls, align 4
  %tobool36 = icmp ne i32 %33, 0
  br label %lor.end37

lor.end37:                                        ; No predecessors!
  %34 = phi i1 [ true, %lor.lhs.false33 ], [ true, %for.end31 ], [ %tobool36, %lor.rhs35 ]
  %lor.ext38 = zext i1 %34 to i32
  store i32 %lor.ext38, i32* %print_word_N, align 4
  br label %if.end40

if.else39:                                        ; No predecessors!
  store i32 1, i32* %print_word_N, align 4
  br label %if.end40

if.end40:                                         ; No predecessors!
  %35 = load i32, i32* @N_words, align 4
  store i32 %35, i32* @N_words_to_print, align 4
  %36 = load i32, i32* %print_word_N, align 4
  %tobool41 = icmp ne i32 %36, 0
  br i1 %tobool41, label %if.end43, label %if.then42

if.then42:                                        ; No predecessors!
  %37 = load i32, i32* @N_words_to_print, align 4
  %dec = add nsw i32 %37, -1
  store i32 %dec, i32* @N_words_to_print, align 4
  br label %if.end43

if.end43:                                         ; No predecessors!
  %38 = load i32, i32* %print_word_0, align 4
  %struct.BigStruct_013 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %38, i32* %struct.BigStruct_013
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 39, i32 0)
  %39 = load i32, i32* @N_words_to_print, align 4
  %sub44 = sub nsw i32 %39, 1
  %arrayidx45 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %sub44
  %40 = load i32, i32* %arrayidx45, align 4
  %add = add nsw i32 %40, 1
  store i32 %add, i32* %line_len, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond46

for.cond46:                                       ; No predecessors!
  %41 = load i32, i32* %k, align 4
  %cmp47 = icmp slt i32 %41, 30
  br i1 %cmp47, label %for.body48, label %for.end61

for.body48:                                       ; No predecessors!
  store i32 0, i32* %j, align 4
  br label %for.cond49

for.cond49:                                       ; No predecessors!
  %42 = load i32, i32* %j, align 4
  %43 = load i32, i32* %line_len, align 4
  %cmp50 = icmp slt i32 %42, %43
  br i1 %cmp50, label %for.body51, label %for.end56

for.body51:                                       ; No predecessors!
  %44 = load i32, i32* %j, align 4
  %45 = load i32, i32* %k, align 4
  %arrayidx52 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %45
  %arrayidx53 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx52, i32 0, i32 %44
  store i8 32, i8* %arrayidx53, align 1
  br label %for.inc54

for.inc54:                                        ; No predecessors!
  %46 = load i32, i32* %j, align 4
  %inc55 = add nsw i32 %46, 1
  store i32 %inc55, i32* %j, align 4
  br label %for.cond49

for.end56:                                        ; No predecessors!
  %47 = load i32, i32* %line_len, align 4
  %48 = load i32, i32* %k, align 4
  %arrayidx57 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %48
  %arrayidx58 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx57, i32 0, i32 %47
  store i8 0, i8* %arrayidx58, align 1
  br label %for.inc59

for.inc59:                                        ; No predecessors!
  %49 = load i32, i32* %k, align 4
  %inc60 = add nsw i32 %49, 1
  store i32 %inc60, i32* %k, align 4
  br label %for.cond46

for.end61:                                        ; No predecessors!
  store i32 0, i32* %top_row, align 4
  store i32 1, i32* %link_length, align 4
  br label %for.cond62

for.cond62:                                       ; No predecessors!
  %50 = load i32, i32* %link_length, align 4
  %51 = load i32, i32* @N_words_to_print, align 4
  %cmp63 = icmp slt i32 %50, %51
  br i1 %cmp63, label %for.body64, label %for.end255

for.body64:                                       ; No predecessors!
  store i32 0, i32* %j, align 4
  br label %for.cond65

for.cond65:                                       ; No predecessors!
  %52 = load i32, i32* %j, align 4
  %53 = load i32, i32* @N_links, align 4
  %cmp66 = icmp slt i32 %52, %53
  br i1 %cmp66, label %for.body67, label %for.end252

for.body67:                                       ; No predecessors!
  %54 = load i32, i32* %j, align 4
  %55 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx68 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %55, i32 0, i32 %54
  %l69 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx68, i32 0, i32 0
  %56 = load i32, i32* %l69, align 4
  %cmp70 = icmp eq i32 %56, -1
  br i1 %cmp70, label %if.then71, label %if.end72

if.then71:                                        ; No predecessors!
  br label %for.inc250

if.end72:                                         ; No predecessors!
  %57 = load i32, i32* %j, align 4
  %58 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx73 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %58, i32 0, i32 %57
  %r74 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx73, i32 0, i32 1
  %59 = load i32, i32* %r74, align 4
  %60 = load i32, i32* %j, align 4
  %61 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx75 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %61, i32 0, i32 %60
  %l76 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx75, i32 0, i32 0
  %62 = load i32, i32* %l76, align 4
  %sub77 = sub nsw i32 %59, %62
  %63 = load i32, i32* %link_length, align 4
  %cmp78 = icmp ne i32 %sub77, %63
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; No predecessors!
  br label %for.inc250

if.end80:                                         ; No predecessors!
  %64 = load i32, i32* %print_word_0, align 4
  %tobool81 = icmp ne i32 %64, 0
  br i1 %tobool81, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; No predecessors!
  %65 = load i32, i32* %j, align 4
  %66 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx82 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %66, i32 0, i32 %65
  %l83 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx82, i32 0, i32 0
  %67 = load i32, i32* %l83, align 4
  %cmp84 = icmp eq i32 %67, 0
  br i1 %cmp84, label %if.then85, label %if.end86

if.then85:                                        ; No predecessors!
  br label %for.inc250

if.end86:                                         ; No predecessors!
  %68 = load i32, i32* %print_word_N, align 4
  %tobool87 = icmp ne i32 %68, 0
  br i1 %tobool87, label %if.end94, label %land.lhs.true88

land.lhs.true88:                                  ; No predecessors!
  %69 = load i32, i32* %j, align 4
  %70 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx89 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %70, i32 0, i32 %69
  %r90 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx89, i32 0, i32 1
  %71 = load i32, i32* %r90, align 4
  %72 = load i32, i32* @N_words, align 4
  %sub91 = sub nsw i32 %72, 1
  %cmp92 = icmp eq i32 %71, %sub91
  br i1 %cmp92, label %if.then93, label %if.end94

if.then93:                                        ; No predecessors!
  br label %for.inc250

if.end94:                                         ; No predecessors!
  %73 = load i32, i32* %j, align 4
  %74 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx95 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %74, i32 0, i32 %73
  %l96 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx95, i32 0, i32 0
  %75 = load i32, i32* %l96, align 4
  %arrayidx97 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %75
  %76 = load i32, i32* %arrayidx97, align 4
  store i32 %76, i32* %cl, align 4
  %77 = load i32, i32* %j, align 4
  %78 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx98 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %78, i32 0, i32 %77
  %r99 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx98, i32 0, i32 1
  %79 = load i32, i32* %r99, align 4
  %arrayidx100 = getelementptr inbounds [250 x i32], [250 x i32]* @center, i32 0, i32 %79
  %80 = load i32, i32* %arrayidx100, align 4
  store i32 %80, i32* %cr, align 4
  store i32 0, i32* %row, align 4
  br label %for.cond101

for.cond101:                                      ; No predecessors!
  %81 = load i32, i32* %row, align 4
  %cmp102 = icmp slt i32 %81, 30
  br i1 %cmp102, label %for.body103, label %for.end123

for.body103:                                      ; No predecessors!
  %82 = load i32, i32* %cl, align 4
  %add104 = add nsw i32 %82, 1
  store i32 %add104, i32* %k, align 4
  br label %for.cond105

for.cond105:                                      ; No predecessors!
  %83 = load i32, i32* %k, align 4
  %84 = load i32, i32* %cr, align 4
  %cmp106 = icmp slt i32 %83, %84
  br i1 %cmp106, label %for.body107, label %for.end116

for.body107:                                      ; No predecessors!
  %85 = load i32, i32* %k, align 4
  %86 = load i32, i32* %row, align 4
  %arrayidx108 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %86
  %arrayidx109 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx108, i32 0, i32 %85
  %87 = load i8, i8* %arrayidx109, align 1
  %conv = sext i8 %87 to i32
  %cmp110 = icmp ne i32 %conv, 32
  br i1 %cmp110, label %if.then112, label %if.end113

if.then112:                                       ; No predecessors!
  br label %for.end116

if.end113:                                        ; No predecessors!
  br label %for.inc114

for.inc114:                                       ; No predecessors!
  %88 = load i32, i32* %k, align 4
  %inc115 = add nsw i32 %88, 1
  store i32 %inc115, i32* %k, align 4
  br label %for.cond105

for.end116:                                       ; No predecessors!
  %89 = load i32, i32* %k, align 4
  %90 = load i32, i32* %cr, align 4
  %cmp117 = icmp eq i32 %89, %90
  br i1 %cmp117, label %if.then119, label %if.end120

if.then119:                                       ; No predecessors!
  br label %for.end123

if.end120:                                        ; No predecessors!
  br label %for.inc121

for.inc121:                                       ; No predecessors!
  %91 = load i32, i32* %row, align 4
  %inc122 = add nsw i32 %91, 1
  store i32 %inc122, i32* %row, align 4
  br label %for.cond101

for.end123:                                       ; No predecessors!
  %92 = load i32, i32* %row, align 4
  %93 = load i32, i32* %j, align 4
  %arrayidx124 = getelementptr inbounds [497 x i32], [497 x i32]* @link_heights, i32 0, i32 %93
  store i32 %92, i32* %arrayidx124, align 4
  %94 = load i32, i32* %row, align 4
  %mul = mul nsw i32 2, %94
  %add125 = add nsw i32 %mul, 2
  %cmp126 = icmp sgt i32 %add125, 29
  br i1 %cmp126, label %if.then128, label %if.end130

if.then128:                                       ; No predecessors!
  %95 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %96 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.20.659, i32 0, i32 0
  %call129 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %95, i8* %96)
  br label %if.end467

if.end130:                                        ; No predecessors!
  %97 = load i32, i32* %row, align 4
  %98 = load i32, i32* %top_row, align 4
  %cmp131 = icmp sgt i32 %97, %98
  br i1 %cmp131, label %if.then133, label %if.end134

if.then133:                                       ; No predecessors!
  %99 = load i32, i32* %row, align 4
  store i32 %99, i32* %top_row, align 4
  br label %if.end134

if.end134:                                        ; No predecessors!
  %100 = load i32, i32* %cl, align 4
  %101 = load i32, i32* %row, align 4
  %arrayidx135 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %101
  %arrayidx136 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx135, i32 0, i32 %100
  store i8 43, i8* %arrayidx136, align 1
  %102 = load i32, i32* %cr, align 4
  %103 = load i32, i32* %row, align 4
  %arrayidx137 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %103
  %arrayidx138 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx137, i32 0, i32 %102
  store i8 43, i8* %arrayidx138, align 1
  %104 = load i32, i32* %cl, align 4
  %add139 = add nsw i32 %104, 1
  store i32 %add139, i32* %k, align 4
  br label %for.cond140

for.cond140:                                      ; No predecessors!
  %105 = load i32, i32* %k, align 4
  %106 = load i32, i32* %cr, align 4
  %cmp141 = icmp slt i32 %105, %106
  br i1 %cmp141, label %for.body143, label %for.end148

for.body143:                                      ; No predecessors!
  %107 = load i32, i32* %k, align 4
  %108 = load i32, i32* %row, align 4
  %arrayidx144 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %108
  %arrayidx145 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx144, i32 0, i32 %107
  store i8 45, i8* %arrayidx145, align 1
  br label %for.inc146

for.inc146:                                       ; No predecessors!
  %109 = load i32, i32* %k, align 4
  %inc147 = add nsw i32 %109, 1
  store i32 %inc147, i32* %k, align 4
  br label %for.cond140

for.end148:                                       ; No predecessors!
  %110 = load i32, i32* %j, align 4
  %111 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx149 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %111, i32 0, i32 %110
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx149, i32 0, i32 4
  %112 = load i8*, i8** %name, align 4
  store i8* %112, i8** %s, align 4
  %113 = load i32, i32* @display_link_subscripts, align 4
  %tobool150 = icmp ne i32 %113, 0
  br i1 %tobool150, label %if.then151, label %if.else157

if.then151:                                       ; No predecessors!
  %114 = load i8*, i8** %s, align 4
  %115 = load i8, i8* %114, align 1
  %conv152 = sext i8 %115 to i32
  %struct.BigStruct_011 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv152, i32* %struct.BigStruct_011
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 4, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %tobool154 = icmp ne i32 %load_struct.BigStruct_3212, 0
  br i1 %tobool154, label %if.end156, label %if.then155

if.then155:                                       ; No predecessors!
  %116 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.21.660, i32 0, i32 0
  store i8* %116, i8** %s, align 4
  br label %if.end156

if.end156:                                        ; No predecessors!
  br label %if.end163

if.else157:                                       ; No predecessors!
  %117 = load i8*, i8** %s, align 4
  %118 = load i8, i8* %117, align 1
  %conv158 = sext i8 %118 to i32
  %call159 = call i32 @isupper_Package(i32 %conv158)
  %tobool160 = icmp ne i32 %call159, 0
  br i1 %tobool160, label %if.end162, label %if.then161

if.then161:                                       ; No predecessors!
  %119 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.22.661, i32 0, i32 0
  store i8* %119, i8** %s, align 4
  br label %if.end162

if.end162:                                        ; No predecessors!
  br label %if.end163

if.end163:                                        ; No predecessors!
  %120 = load i8*, i8** %s, align 4
  %arraydecay = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %120, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 49, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 3, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %arrayidx165 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 49
  store i8 0, i8* %arrayidx165, align 1
  store i32 0, i32* %k, align 4
  %121 = load i32, i32* @display_link_subscripts, align 4
  %tobool166 = icmp ne i32 %121, 0
  br i1 %tobool166, label %if.then167, label %if.else170

if.then167:                                       ; No predecessors!
  %arraydecay168 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  %call169 = call i32 @strlen_Package(i8* %arraydecay168)
  store i32 %call169, i32* %k, align 4
  br label %if.end180

if.else170:                                       ; No predecessors!
  %arraydecay171 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  store i8* %arraydecay171, i8** %t, align 4
  br label %for.cond172

for.cond172:                                      ; No predecessors!
  %122 = load i8*, i8** %t, align 4
  %123 = load i8, i8* %122, align 1
  %conv173 = sext i8 %123 to i32
  %call174 = call i32 @isupper_Package(i32 %conv173)
  %tobool175 = icmp ne i32 %call174, 0
  br i1 %tobool175, label %for.body176, label %for.end179

for.body176:                                      ; No predecessors!
  %124 = load i32, i32* %k, align 4
  %inc177 = add nsw i32 %124, 1
  store i32 %inc177, i32* %k, align 4
  br label %for.inc178

for.inc178:                                       ; No predecessors!
  %125 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %125, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  br label %for.cond172

for.end179:                                       ; No predecessors!
  br label %if.end180

if.end180:                                        ; No predecessors!
  %126 = load i32, i32* %cl, align 4
  %127 = load i32, i32* %cr, align 4
  %add181 = add nsw i32 %126, %127
  %128 = load i32, i32* %k, align 4
  %sub182 = sub nsw i32 %add181, %128
  %div = sdiv i32 %sub182, 2
  %add183 = add nsw i32 %div, 1
  %129 = load i32, i32* %cl, align 4
  %cmp184 = icmp sle i32 %add183, %129
  br i1 %cmp184, label %if.then186, label %if.else190

if.then186:                                       ; No predecessors!
  %130 = load i32, i32* %row, align 4
  %arrayidx187 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %130
  %arraydecay188 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx187, i32 0, i32 0
  %131 = load i32, i32* %cl, align 4
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay188, i32 %131
  %add.ptr189 = getelementptr inbounds i8, i8* %add.ptr, i32 1
  store i8* %add.ptr189, i8** %t, align 4
  br label %if.end198

if.else190:                                       ; No predecessors!
  %132 = load i32, i32* %row, align 4
  %arrayidx191 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %132
  %arraydecay192 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx191, i32 0, i32 0
  %133 = load i32, i32* %cl, align 4
  %134 = load i32, i32* %cr, align 4
  %add193 = add nsw i32 %133, %134
  %135 = load i32, i32* %k, align 4
  %sub194 = sub nsw i32 %add193, %135
  %div195 = sdiv i32 %sub194, 2
  %add.ptr196 = getelementptr inbounds i8, i8* %arraydecay192, i32 %div195
  %add.ptr197 = getelementptr inbounds i8, i8* %add.ptr196, i32 1
  store i8* %add.ptr197, i8** %t, align 4
  br label %if.end198

if.end198:                                        ; No predecessors!
  %arraydecay199 = getelementptr inbounds [50 x i8], [50 x i8]* %connector, i32 0, i32 0
  store i8* %arraydecay199, i8** %s, align 4
  %136 = load i32, i32* @display_link_subscripts, align 4
  %tobool200 = icmp ne i32 %136, 0
  br i1 %tobool200, label %if.then201, label %if.else210

if.then201:                                       ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %137 = load i8*, i8** %s, align 4
  %138 = load i8, i8* %137, align 1
  %conv202 = sext i8 %138 to i32
  %cmp203 = icmp ne i32 %conv202, 0
  br i1 %cmp203, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %139 = load i8*, i8** %t, align 4
  %140 = load i8, i8* %139, align 1
  %conv205 = sext i8 %140 to i32
  %cmp206 = icmp eq i32 %conv205, 45
  br label %land.end

land.end:                                         ; No predecessors!
  %141 = phi i1 [ false, %while.cond ], [ %cmp206, %land.rhs ]
  br i1 %141, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %142 = load i8*, i8** %s, align 4
  %incdec.ptr208 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr208, i8** %s, align 4
  %143 = load i8, i8* %142, align 1
  %144 = load i8*, i8** %t, align 4
  %incdec.ptr209 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %incdec.ptr209, i8** %t, align 4
  store i8 %143, i8* %144, align 1
  br label %while.cond

while.end:                                        ; No predecessors!
  br label %if.end224

if.else210:                                       ; No predecessors!
  br label %while.cond211

while.cond211:                                    ; No predecessors!
  %145 = load i8*, i8** %s, align 4
  %146 = load i8, i8* %145, align 1
  %conv212 = sext i8 %146 to i32
  %call213 = call i32 @isupper_Package(i32 %conv212)
  %tobool214 = icmp ne i32 %call213, 0
  br i1 %tobool214, label %land.rhs215, label %land.end219

land.rhs215:                                      ; No predecessors!
  %147 = load i8*, i8** %t, align 4
  %148 = load i8, i8* %147, align 1
  %conv216 = sext i8 %148 to i32
  %cmp217 = icmp eq i32 %conv216, 45
  br label %land.end219

land.end219:                                      ; No predecessors!
  %149 = phi i1 [ false, %while.cond211 ], [ %cmp217, %land.rhs215 ]
  br i1 %149, label %while.body220, label %while.end223

while.body220:                                    ; No predecessors!
  %150 = load i8*, i8** %s, align 4
  %incdec.ptr221 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %incdec.ptr221, i8** %s, align 4
  %151 = load i8, i8* %150, align 1
  %152 = load i8*, i8** %t, align 4
  %incdec.ptr222 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %incdec.ptr222, i8** %t, align 4
  store i8 %151, i8* %152, align 1
  br label %while.cond211

while.end223:                                     ; No predecessors!
  br label %if.end224

if.end224:                                        ; No predecessors!
  store i32 0, i32* %k, align 4
  br label %for.cond225

for.cond225:                                      ; No predecessors!
  %153 = load i32, i32* %k, align 4
  %154 = load i32, i32* %row, align 4
  %cmp226 = icmp slt i32 %153, %154
  br i1 %cmp226, label %for.body228, label %for.end249

for.body228:                                      ; No predecessors!
  %155 = load i32, i32* %cl, align 4
  %156 = load i32, i32* %k, align 4
  %arrayidx229 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %156
  %arrayidx230 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx229, i32 0, i32 %155
  %157 = load i8, i8* %arrayidx230, align 1
  %conv231 = sext i8 %157 to i32
  %cmp232 = icmp eq i32 %conv231, 32
  br i1 %cmp232, label %if.then234, label %if.end237

if.then234:                                       ; No predecessors!
  %158 = load i32, i32* %cl, align 4
  %159 = load i32, i32* %k, align 4
  %arrayidx235 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %159
  %arrayidx236 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx235, i32 0, i32 %158
  store i8 124, i8* %arrayidx236, align 1
  br label %if.end237

if.end237:                                        ; No predecessors!
  %160 = load i32, i32* %cr, align 4
  %161 = load i32, i32* %k, align 4
  %arrayidx238 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %161
  %arrayidx239 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx238, i32 0, i32 %160
  %162 = load i8, i8* %arrayidx239, align 1
  %conv240 = sext i8 %162 to i32
  %cmp241 = icmp eq i32 %conv240, 32
  br i1 %cmp241, label %if.then243, label %if.end246

if.then243:                                       ; No predecessors!
  %163 = load i32, i32* %cr, align 4
  %164 = load i32, i32* %k, align 4
  %arrayidx244 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %164
  %arrayidx245 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx244, i32 0, i32 %163
  store i8 124, i8* %arrayidx245, align 1
  br label %if.end246

if.end246:                                        ; No predecessors!
  br label %for.inc247

for.inc247:                                       ; No predecessors!
  %165 = load i32, i32* %k, align 4
  %inc248 = add nsw i32 %165, 1
  store i32 %inc248, i32* %k, align 4
  br label %for.cond225

for.end249:                                       ; No predecessors!
  br label %for.inc250

for.inc250:                                       ; No predecessors!
  %166 = load i32, i32* %j, align 4
  %inc251 = add nsw i32 %166, 1
  store i32 %inc251, i32* %j, align 4
  br label %for.cond65

for.end252:                                       ; No predecessors!
  br label %for.inc253

for.inc253:                                       ; No predecessors!
  %167 = load i32, i32* %link_length, align 4
  %inc254 = add nsw i32 %167, 1
  store i32 %inc254, i32* %link_length, align 4
  br label %for.cond62

for.end255:                                       ; No predecessors!
  %168 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 0, i32 0
  store i8* %168, i8** %s, align 4
  %169 = load i32, i32* %print_word_0, align 4
  %tobool256 = icmp ne i32 %169, 0
  br i1 %tobool256, label %if.then257, label %if.else258

if.then257:                                       ; No predecessors!
  store i32 0, i32* %k, align 4
  br label %if.end259

if.else258:                                       ; No predecessors!
  store i32 1, i32* %k, align 4
  br label %if.end259

if.end259:                                        ; No predecessors!
  br label %for.cond260

for.cond260:                                      ; No predecessors!
  %170 = load i32, i32* %k, align 4
  %171 = load i32, i32* @N_words_to_print, align 4
  %cmp261 = icmp slt i32 %170, %171
  br i1 %cmp261, label %for.body263, label %for.end277

for.body263:                                      ; No predecessors!
  %172 = load i32, i32* %k, align 4
  %arrayidx264 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %172
  %173 = load i8*, i8** %arrayidx264, align 4
  store i8* %173, i8** %t, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond265

while.cond265:                                    ; No predecessors!
  %174 = load i8*, i8** %t, align 4
  %175 = load i8, i8* %174, align 1
  %conv266 = sext i8 %175 to i32
  %cmp267 = icmp ne i32 %conv266, 0
  br i1 %cmp267, label %while.body269, label %while.end273

while.body269:                                    ; No predecessors!
  %176 = load i8*, i8** %t, align 4
  %incdec.ptr270 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %incdec.ptr270, i8** %t, align 4
  %177 = load i8, i8* %176, align 1
  %178 = load i8*, i8** %s, align 4
  %incdec.ptr271 = getelementptr inbounds i8, i8* %178, i32 1
  store i8* %incdec.ptr271, i8** %s, align 4
  store i8 %177, i8* %178, align 1
  %179 = load i32, i32* %i, align 4
  %inc272 = add nsw i32 %179, 1
  store i32 %inc272, i32* %i, align 4
  br label %while.cond265

while.end273:                                     ; No predecessors!
  %180 = load i8*, i8** %s, align 4
  %incdec.ptr274 = getelementptr inbounds i8, i8* %180, i32 1
  store i8* %incdec.ptr274, i8** %s, align 4
  store i8 32, i8* %180, align 1
  br label %for.inc275

for.inc275:                                       ; No predecessors!
  %181 = load i32, i32* %k, align 4
  %inc276 = add nsw i32 %181, 1
  store i32 %inc276, i32* %k, align 4
  br label %for.cond260

for.end277:                                       ; No predecessors!
  %182 = load i8*, i8** %s, align 4
  store i8 0, i8* %182, align 1
  %183 = load i32, i32* @display_short, align 4
  %tobool278 = icmp ne i32 %183, 0
  br i1 %tobool278, label %if.then279, label %if.else318

if.then279:                                       ; No predecessors!
  store i32 0, i32* %k, align 4
  br label %for.cond280

for.cond280:                                      ; No predecessors!
  %184 = load i32, i32* %k, align 4
  %185 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 0
  %arrayidx281 = getelementptr inbounds [1500 x i8], [1500 x i8]* %185, i32 0, i32 %184
  %186 = load i8, i8* %arrayidx281, align 1
  %conv282 = sext i8 %186 to i32
  %cmp283 = icmp ne i32 %conv282, 0
  br i1 %cmp283, label %for.body285, label %for.end302

for.body285:                                      ; No predecessors!
  %187 = load i32, i32* %k, align 4
  %188 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 0
  %arrayidx286 = getelementptr inbounds [1500 x i8], [1500 x i8]* %188, i32 0, i32 %187
  %189 = load i8, i8* %arrayidx286, align 1
  %conv287 = sext i8 %189 to i32
  %cmp288 = icmp eq i32 %conv287, 43
  br i1 %cmp288, label %if.then295, label %lor.lhs.false290

lor.lhs.false290:                                 ; No predecessors!
  %190 = load i32, i32* %k, align 4
  %191 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 0
  %arrayidx291 = getelementptr inbounds [1500 x i8], [1500 x i8]* %191, i32 0, i32 %190
  %192 = load i8, i8* %arrayidx291, align 1
  %conv292 = sext i8 %192 to i32
  %cmp293 = icmp eq i32 %conv292, 124
  br i1 %cmp293, label %if.then295, label %if.else297

if.then295:                                       ; No predecessors!
  %193 = load i32, i32* %k, align 4
  %194 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 1
  %arrayidx296 = getelementptr inbounds [1500 x i8], [1500 x i8]* %194, i32 0, i32 %193
  store i8 124, i8* %arrayidx296, align 1
  br label %if.end299

if.else297:                                       ; No predecessors!
  %195 = load i32, i32* %k, align 4
  %196 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 1
  %arrayidx298 = getelementptr inbounds [1500 x i8], [1500 x i8]* %196, i32 0, i32 %195
  store i8 32, i8* %arrayidx298, align 1
  br label %if.end299

if.end299:                                        ; No predecessors!
  br label %for.inc300

for.inc300:                                       ; No predecessors!
  %197 = load i32, i32* %k, align 4
  %inc301 = add nsw i32 %197, 1
  store i32 %inc301, i32* %k, align 4
  br label %for.cond280

for.end302:                                       ; No predecessors!
  %198 = load i32, i32* %k, align 4
  %199 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1500 x i8], [1500 x i8]* %199, i32 0, i32 %198
  store i8 0, i8* %arrayidx303, align 1
  store i32 0, i32* %row, align 4
  br label %for.cond304

for.cond304:                                      ; No predecessors!
  %200 = load i32, i32* %row, align 4
  %201 = load i32, i32* %top_row, align 4
  %cmp305 = icmp sle i32 %200, %201
  br i1 %cmp305, label %for.body307, label %for.end316

for.body307:                                      ; No predecessors!
  %202 = load i32, i32* %row, align 4
  %arrayidx308 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %202
  %arraydecay309 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx308, i32 0, i32 0
  %203 = load i32, i32* %row, align 4
  %add310 = add nsw i32 %203, 2
  %arrayidx311 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add310
  %arraydecay312 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx311, i32 0, i32 0
  %call313 = call i8* @strcpy_Package(i8* %arraydecay312, i8* %arraydecay309)
  br label %for.inc314

for.inc314:                                       ; No predecessors!
  %204 = load i32, i32* %row, align 4
  %inc315 = add nsw i32 %204, 1
  store i32 %inc315, i32* %row, align 4
  br label %for.cond304

for.end316:                                       ; No predecessors!
  %205 = load i32, i32* %top_row, align 4
  %add317 = add nsw i32 %205, 2
  store i32 %add317, i32* %top_row, align 4
  br label %if.end371

if.else318:                                       ; No predecessors!
  store i32 0, i32* %row, align 4
  br label %for.cond319

for.cond319:                                      ; No predecessors!
  %206 = load i32, i32* %row, align 4
  %207 = load i32, i32* %top_row, align 4
  %cmp320 = icmp sle i32 %206, %207
  br i1 %cmp320, label %for.body322, label %for.end368

for.body322:                                      ; No predecessors!
  %208 = load i32, i32* %row, align 4
  %arrayidx323 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %208
  %arraydecay324 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx323, i32 0, i32 0
  %209 = load i32, i32* %row, align 4
  %mul325 = mul nsw i32 2, %209
  %add326 = add nsw i32 %mul325, 2
  %arrayidx327 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add326
  %arraydecay328 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx327, i32 0, i32 0
  %call329 = call i8* @strcpy_Package(i8* %arraydecay328, i8* %arraydecay324)
  store i32 0, i32* %k, align 4
  br label %for.cond330

for.cond330:                                      ; No predecessors!
  %210 = load i32, i32* %k, align 4
  %211 = load i32, i32* %row, align 4
  %arrayidx331 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %211
  %arrayidx332 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx331, i32 0, i32 %210
  %212 = load i8, i8* %arrayidx332, align 1
  %conv333 = sext i8 %212 to i32
  %cmp334 = icmp ne i32 %conv333, 0
  br i1 %cmp334, label %for.body336, label %for.end361

for.body336:                                      ; No predecessors!
  %213 = load i32, i32* %k, align 4
  %214 = load i32, i32* %row, align 4
  %arrayidx337 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %214
  %arrayidx338 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx337, i32 0, i32 %213
  %215 = load i8, i8* %arrayidx338, align 1
  %conv339 = sext i8 %215 to i32
  %cmp340 = icmp eq i32 %conv339, 43
  br i1 %cmp340, label %if.then348, label %lor.lhs.false342

lor.lhs.false342:                                 ; No predecessors!
  %216 = load i32, i32* %k, align 4
  %217 = load i32, i32* %row, align 4
  %arrayidx343 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @picture, i32 0, i32 %217
  %arrayidx344 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx343, i32 0, i32 %216
  %218 = load i8, i8* %arrayidx344, align 1
  %conv345 = sext i8 %218 to i32
  %cmp346 = icmp eq i32 %conv345, 124
  br i1 %cmp346, label %if.then348, label %if.else353

if.then348:                                       ; No predecessors!
  %219 = load i32, i32* %k, align 4
  %220 = load i32, i32* %row, align 4
  %mul349 = mul nsw i32 2, %220
  %add350 = add nsw i32 %mul349, 1
  %arrayidx351 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add350
  %arrayidx352 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx351, i32 0, i32 %219
  store i8 124, i8* %arrayidx352, align 1
  br label %if.end358

if.else353:                                       ; No predecessors!
  %221 = load i32, i32* %k, align 4
  %222 = load i32, i32* %row, align 4
  %mul354 = mul nsw i32 2, %222
  %add355 = add nsw i32 %mul354, 1
  %arrayidx356 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add355
  %arrayidx357 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx356, i32 0, i32 %221
  store i8 32, i8* %arrayidx357, align 1
  br label %if.end358

if.end358:                                        ; No predecessors!
  br label %for.inc359

for.inc359:                                       ; No predecessors!
  %223 = load i32, i32* %k, align 4
  %inc360 = add nsw i32 %223, 1
  store i32 %inc360, i32* %k, align 4
  br label %for.cond330

for.end361:                                       ; No predecessors!
  %224 = load i32, i32* %k, align 4
  %225 = load i32, i32* %row, align 4
  %mul362 = mul nsw i32 2, %225
  %add363 = add nsw i32 %mul362, 1
  %arrayidx364 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %add363
  %arrayidx365 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx364, i32 0, i32 %224
  store i8 0, i8* %arrayidx365, align 1
  br label %for.inc366

for.inc366:                                       ; No predecessors!
  %226 = load i32, i32* %row, align 4
  %inc367 = add nsw i32 %226, 1
  store i32 %inc367, i32* %row, align 4
  br label %for.cond319

for.end368:                                       ; No predecessors!
  %227 = load i32, i32* %top_row, align 4
  %mul369 = mul nsw i32 2, %227
  %add370 = add nsw i32 %mul369, 2
  store i32 %add370, i32* %top_row, align 4
  br label %if.end371

if.end371:                                        ; No predecessors!
  %228 = load i32, i32* %print_word_0, align 4
  %tobool372 = icmp ne i32 %228, 0
  br i1 %tobool372, label %if.then373, label %if.else374

if.then373:                                       ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %if.end375

if.else374:                                       ; No predecessors!
  store i32 1, i32* %i, align 4
  br label %if.end375

if.end375:                                        ; No predecessors!
  store i32 0, i32* %k, align 4
  store i32 0, i32* @N_rows, align 4
  %229 = load i32, i32* @N_rows, align 4
  %arrayidx376 = getelementptr inbounds [250 x i32], [250 x i32]* @row_starts, i32 0, i32 %229
  store i32 0, i32* %arrayidx376, align 4
  %230 = load i32, i32* @N_rows, align 4
  %inc377 = add nsw i32 %230, 1
  store i32 %inc377, i32* @N_rows, align 4
  br label %while.cond378

while.cond378:                                    ; No predecessors!
  %231 = load i32, i32* %i, align 4
  %232 = load i32, i32* @N_words_to_print, align 4
  %cmp379 = icmp slt i32 %231, %232
  br i1 %cmp379, label %while.body381, label %while.end464

while.body381:                                    ; No predecessors!
  %233 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_0
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %233, %struct._iobuf** %struct.BigStruct_11
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 0, i32* %width, align 4
  br label %do.body

do.body:                                          ; No predecessors!
  %234 = load i32, i32* %i, align 4
  %arrayidx383 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %234
  %235 = load i8*, i8** %arrayidx383, align 4
  %call384 = call i32 @strlen_Package(i8* %235)
  %add385 = add i32 %call384, 1
  %236 = load i32, i32* %width, align 4
  %add386 = add i32 %236, %add385
  store i32 %add386, i32* %width, align 4
  %237 = load i32, i32* %i, align 4
  %inc387 = add nsw i32 %237, 1
  store i32 %inc387, i32* %i, align 4
  br label %do.cond

do.cond:                                          ; No predecessors!
  %238 = load i32, i32* %i, align 4
  %239 = load i32, i32* @N_words_to_print, align 4
  %cmp388 = icmp slt i32 %238, %239
  br i1 %cmp388, label %land.rhs390, label %land.end397

land.rhs390:                                      ; No predecessors!
  %240 = load i32, i32* %width, align 4
  %241 = load i32, i32* %i, align 4
  %arrayidx391 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %241
  %242 = load i8*, i8** %arrayidx391, align 4
  %call392 = call i32 @strlen_Package(i8* %242)
  %add393 = add nsw i32 %240, %call392
  %add394 = add nsw i32 %add393, 1
  %243 = load i32, i32* @screen_width, align 4
  %cmp395 = icmp slt i32 %add394, %243
  br label %land.end397

land.end397:                                      ; No predecessors!
  %244 = phi i1 [ false, %do.cond ], [ %cmp395, %land.rhs390 ]
  br i1 %244, label %do.body, label %do.end

do.end:                                           ; No predecessors!
  %245 = load i32, i32* %i, align 4
  %246 = load i32, i32* %print_word_0, align 4
  %tobool398 = icmp ne i32 %246, 0
  %lnot = xor i1 %tobool398, true
  %lnot.ext = zext i1 %lnot to i32
  %sub399 = sub nsw i32 %245, %lnot.ext
  %247 = load i32, i32* @N_rows, align 4
  %arrayidx400 = getelementptr inbounds [250 x i32], [250 x i32]* @row_starts, i32 0, i32 %247
  store i32 %sub399, i32* %arrayidx400, align 4
  %248 = load i32, i32* %i, align 4
  %249 = load i32, i32* @N_words_to_print, align 4
  %cmp401 = icmp slt i32 %248, %249
  br i1 %cmp401, label %if.then403, label %if.end405

if.then403:                                       ; No predecessors!
  %250 = load i32, i32* @N_rows, align 4
  %inc404 = add nsw i32 %250, 1
  store i32 %inc404, i32* @N_rows, align 4
  br label %if.end405

if.end405:                                        ; No predecessors!
  %251 = load i32, i32* %top_row, align 4
  store i32 %251, i32* %row, align 4
  br label %for.cond406

for.cond406:                                      ; No predecessors!
  %252 = load i32, i32* %row, align 4
  %cmp407 = icmp sge i32 %252, 0
  br i1 %cmp407, label %for.body409, label %for.end461

for.body409:                                      ; No predecessors!
  store i32 1, i32* %flag, align 4
  %253 = load i32, i32* %k, align 4
  store i32 %253, i32* %j, align 4
  br label %for.cond410

for.cond410:                                      ; No predecessors!
  %254 = load i32, i32* %flag, align 4
  %tobool411 = icmp ne i32 %254, 0
  br i1 %tobool411, label %land.lhs.true412, label %land.end422

land.lhs.true412:                                 ; No predecessors!
  %255 = load i32, i32* %j, align 4
  %256 = load i32, i32* %k, align 4
  %257 = load i32, i32* %width, align 4
  %add413 = add nsw i32 %256, %257
  %cmp414 = icmp slt i32 %255, %add413
  br i1 %cmp414, label %land.rhs416, label %land.end422

land.rhs416:                                      ; No predecessors!
  %258 = load i32, i32* %j, align 4
  %259 = load i32, i32* %row, align 4
  %arrayidx417 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %259
  %arrayidx418 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx417, i32 0, i32 %258
  %260 = load i8, i8* %arrayidx418, align 1
  %conv419 = sext i8 %260 to i32
  %cmp420 = icmp ne i32 %conv419, 0
  br label %land.end422

land.end422:                                      ; No predecessors!
  %261 = phi i1 [ false, %land.lhs.true412 ], [ false, %for.cond410 ], [ %cmp420, %land.rhs416 ]
  br i1 %261, label %for.body423, label %for.end434

for.body423:                                      ; No predecessors!
  %262 = load i32, i32* %flag, align 4
  %tobool424 = icmp ne i32 %262, 0
  br i1 %tobool424, label %land.rhs425, label %land.end431

land.rhs425:                                      ; No predecessors!
  %263 = load i32, i32* %j, align 4
  %264 = load i32, i32* %row, align 4
  %arrayidx426 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %264
  %arrayidx427 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx426, i32 0, i32 %263
  %265 = load i8, i8* %arrayidx427, align 1
  %conv428 = sext i8 %265 to i32
  %cmp429 = icmp eq i32 %conv428, 32
  br label %land.end431

land.end431:                                      ; No predecessors!
  %266 = phi i1 [ false, %for.body423 ], [ %cmp429, %land.rhs425 ]
  %land.ext = zext i1 %266 to i32
  store i32 %land.ext, i32* %flag, align 4
  br label %for.inc432

for.inc432:                                       ; No predecessors!
  %267 = load i32, i32* %j, align 4
  %inc433 = add nsw i32 %267, 1
  store i32 %inc433, i32* %j, align 4
  br label %for.cond410

for.end434:                                       ; No predecessors!
  %268 = load i32, i32* %flag, align 4
  %tobool435 = icmp ne i32 %268, 0
  br i1 %tobool435, label %if.end458, label %if.then436

if.then436:                                       ; No predecessors!
  %269 = load i32, i32* %k, align 4
  store i32 %269, i32* %j, align 4
  br label %for.cond437

for.cond437:                                      ; No predecessors!
  %270 = load i32, i32* %j, align 4
  %271 = load i32, i32* %k, align 4
  %272 = load i32, i32* %width, align 4
  %add438 = add nsw i32 %271, %272
  %cmp439 = icmp slt i32 %270, %add438
  br i1 %cmp439, label %land.rhs441, label %land.end447

land.rhs441:                                      ; No predecessors!
  %273 = load i32, i32* %j, align 4
  %274 = load i32, i32* %row, align 4
  %arrayidx442 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %274
  %arrayidx443 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx442, i32 0, i32 %273
  %275 = load i8, i8* %arrayidx443, align 1
  %conv444 = sext i8 %275 to i32
  %cmp445 = icmp ne i32 %conv444, 0
  br label %land.end447

land.end447:                                      ; No predecessors!
  %276 = phi i1 [ false, %for.cond437 ], [ %cmp445, %land.rhs441 ]
  br i1 %276, label %for.body449, label %for.end456

for.body449:                                      ; No predecessors!
  %277 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %278 = load i32, i32* %j, align 4
  %279 = load i32, i32* %row, align 4
  %arrayidx450 = getelementptr inbounds [30 x [1500 x i8]], [30 x [1500 x i8]]* @xpicture, i32 0, i32 %279
  %arrayidx451 = getelementptr inbounds [1500 x i8], [1500 x i8]* %arrayidx450, i32 0, i32 %278
  %280 = load i8, i8* %arrayidx451, align 1
  %conv452 = sext i8 %280 to i32
  %struct.BigStruct_02 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv452, i32* %struct.BigStruct_02
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %277, %struct._iobuf** %struct.BigStruct_13
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_324 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_324 = load i32, i32* %struct.BigStruct_324
  br label %for.inc454

for.inc454:                                       ; No predecessors!
  %281 = load i32, i32* %j, align 4
  %inc455 = add nsw i32 %281, 1
  store i32 %inc455, i32* %j, align 4
  br label %for.cond437

for.end456:                                       ; No predecessors!
  %282 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_05 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_05
  %struct.BigStruct_16 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %282, %struct._iobuf** %struct.BigStruct_16
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  br label %if.end458

if.end458:                                        ; No predecessors!
  br label %for.inc459

for.inc459:                                       ; No predecessors!
  %283 = load i32, i32* %row, align 4
  %dec460 = add nsw i32 %283, -1
  store i32 %dec460, i32* %row, align 4
  br label %for.cond406

for.end461:                                       ; No predecessors!
  %284 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_08 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_08
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %284, %struct._iobuf** %struct.BigStruct_19
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 0, i32 0)
  %struct.BigStruct_3210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3210 = load i32, i32* %struct.BigStruct_3210
  %285 = load i32, i32* %width, align 4
  %286 = load i32, i32* %k, align 4
  %add463 = add nsw i32 %286, %285
  store i32 %add463, i32* %k, align 4
  br label %while.cond378

while.end464:                                     ; No predecessors!
  %287 = load i32, i32* @display_postscript, align 4
  %tobool465 = icmp ne i32 %287, 0
  br i1 %tobool465, label %if.then466, label %if.end467

if.then466:                                       ; No predecessors!
  %288 = load i32, i32* %print_word_N, align 4
  %289 = load i32, i32* %print_word_0, align 4
  %290 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %290, %struct._iobuf** %struct.BigStruct_114
  %struct.BigStruct_515 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %289, i32* %struct.BigStruct_515
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %288, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 40, i32 0)
  br label %if.end467

if.end467:                                        ; No predecessors!
  ret void
}

define void @old_hash_disjunct_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  %e = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %0, i32 0, i32 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 5
  %5 = load i8*, i8** %string, align 4
  %call = call i32 @string_hash(i8* %5, i32 %3)
  store i32 %call, i32* %i, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %7, %struct.Connector_struct** %e, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %8, i32 0, i32 5
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %e, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %10, null
  br i1 %cmp2, label %for.body3, label %for.end8

for.body3:                                        ; No predecessors!
  %11 = load i32, i32* %i, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %string4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 5
  %13 = load i8*, i8** %string4, align 4
  %call5 = call i32 @string_hash(i8* %13, i32 %11)
  store i32 %call5, i32* %i, align 4
  br label %for.inc6

for.inc6:                                         ; No predecessors!
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %next7, align 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %e, align 4
  br label %for.cond1

for.end8:                                         ; No predecessors!
  %16 = load i32, i32* %i, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %string9 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 3
  %18 = load i8*, i8** %string9, align 4
  %call10 = call i32 @string_hash(i8* %18, i32 %16)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call10, i32* %struct.BigStruct_32
  ret void
}

define void @clean_up_expressions_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %w.addr = alloca i32, align 4
  %head_node = alloca %struct.X_node_struct, align 4
  %d = alloca %struct.X_node_struct*, align 4
  %d1 = alloca %struct.X_node_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %w.addr, align 4
  store %struct.X_node_struct* %head_node, %struct.X_node_struct** %d, align 4
  %0 = load i32, i32* %w.addr, align 4
  %1 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %1, i32 0, i32 %0
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %2 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %3, i32 0, i32 2
  store %struct.X_node_struct* %2, %struct.X_node_struct** %next, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next1 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %4, i32 0, i32 2
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %next1, align 4
  %cmp = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next2 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 2
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %next2, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %7, i32 0, i32 1
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %cmp3 = icmp eq %struct.Exp_struct* %8, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next4 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next4, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %d1, align 4
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %d1, align 4
  %next5 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %11, i32 0, i32 2
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %next5, align 4
  %13 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next6 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %13, i32 0, i32 2
  store %struct.X_node_struct* %12, %struct.X_node_struct** %next6, align 4
  %14 = load %struct.X_node_struct*, %struct.X_node_struct** %d1, align 4
  %15 = bitcast %struct.X_node_struct* %14 to i8*
  call void @xfree(i8* %15, i32 12)
  br label %if.end

if.else:                                          ; No predecessors!
  %16 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next7 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %16, i32 0, i32 2
  %17 = load %struct.X_node_struct*, %struct.X_node_struct** %next7, align 4
  store %struct.X_node_struct* %17, %struct.X_node_struct** %d, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %while.cond

while.end:                                        ; No predecessors!
  %next8 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %head_node, i32 0, i32 2
  %18 = load %struct.X_node_struct*, %struct.X_node_struct** %next8, align 4
  %19 = load i32, i32* %w.addr, align 4
  %20 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %20, i32 0, i32 %19
  %x10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 1
  store %struct.X_node_struct* %18, %struct.X_node_struct** %x10, align 4
  ret void
}

define void @free_lookup_list_Clear() {
entry:
  %n = alloca %struct.Dict_node_struct*, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %2, %struct.Dict_node_struct** %n, align 4
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %4 = bitcast %struct.Dict_node_struct* %3 to i8*
  call void @xfree(i8* %4, i32 20)
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %n, align 4
  store %struct.Dict_node_struct* %5, %struct.Dict_node_struct** @lookup_list, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  ret void
}

define void @prune_lookup_list_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %dnx = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %dn_new, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  store %struct.Dict_node_struct* %0, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 4
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %3, %struct.Dict_node_struct** %dnx, align 4
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %5, i32 0, i32 0
  %6 = load i8*, i8** %string, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %6, i8** %struct.BigStruct_21
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %4, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 27, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right1 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 4
  store %struct.Dict_node_struct* %7, %struct.Dict_node_struct** %right1, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %dn_new, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %11 = bitcast %struct.Dict_node_struct* %10 to i8*
  call void @xfree(i8* %11, i32 20)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** @lookup_list, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp3 = icmp ne %struct.Dict_node_struct* %14, null
  br i1 %cmp3, label %for.body4, label %for.end8

for.body4:                                        ; No predecessors!
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right5 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %15, i32 0, i32 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right5, align 4
  store %struct.Dict_node_struct* %16, %struct.Dict_node_struct** %dnx, align 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right6 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 4
  store %struct.Dict_node_struct* %17, %struct.Dict_node_struct** %right6, align 4
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  store %struct.Dict_node_struct* %19, %struct.Dict_node_struct** @lookup_list, align 4
  br label %for.inc7

for.inc7:                                         ; No predecessors!
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  store %struct.Dict_node_struct* %20, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond2

for.end8:                                         ; No predecessors!
  ret void
}

define void @boolean_dictionary_lookup_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  %cmp = icmp ne %struct.Dict_node_struct* %call, null
  %conv = zext i1 %cmp to i32
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %conv, i32* %struct.BigStruct_32
  ret void
}

define void @set_parent_of_node_Clear() {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 22
  %load_struct.BigStruct_22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_22
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 23
  %load_struct.BigStruct_23 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_23
  %new.addr = alloca %struct.Dict_node_struct*, align 4
  %del.addr = alloca %struct.Dict_node_struct*, align 4
  %p.addr = alloca %struct.Dict_node_struct*, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_23, %struct.Dict_node_struct** %new.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_22, %struct.Dict_node_struct** %del.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %p.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  store %struct.Dict_node_struct* %1, %struct.Dict_node_struct** @dict_root, align 4
  br label %if.end10

if.else:                                          ; No predecessors!
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 3
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %del.addr, align 4
  %cmp1 = icmp eq %struct.Dict_node_struct* %3, %4
  br i1 %cmp1, label %if.then2, label %if.else4

if.then2:                                         ; No predecessors!
  %5 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %left3 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 3
  store %struct.Dict_node_struct* %5, %struct.Dict_node_struct** %left3, align 4
  br label %if.end9

if.else4:                                         ; No predecessors!
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %7, i32 0, i32 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %del.addr, align 4
  %cmp5 = icmp eq %struct.Dict_node_struct* %8, %9
  br i1 %cmp5, label %if.then6, label %if.else8

if.then6:                                         ; No predecessors!
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %new.addr, align 4
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %p.addr, align 4
  %right7 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %11, i32 0, i32 4
  store %struct.Dict_node_struct* %10, %struct.Dict_node_struct** %right7, align 4
  br label %if.end

if.else8:                                         ; No predecessors!
  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.50.766, i32 0, i32 0
  %13 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.49.767, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %12, i8* %13)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; No predecessors!
  br label %if.end9

if.end9:                                          ; No predecessors!
  br label %if.end10

if.end10:                                         ; No predecessors!
  ret void
}

define void @build_digraph_Clear() {
entry:
  %i = alloca i32, align 4
  %link = alloca i32, align 4
  %N_fat = alloca i32, align 4
  %lp = alloca %struct.Link_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 0, i32* %N_fat, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %2
  store %struct.List_o_links_struct* null, %struct.List_o_links_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end50

for.body3:                                        ; No predecessors!
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  store %struct.Link_struct* %arrayidx4, %struct.Link_struct** %lp, align 4
  %8 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %8, i32 0, i32 2
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 0
  %10 = load i16, i16* %label, align 4
  %conv = sext i16 %10 to i32
  store i32 %conv, i32* %i, align 4
  %11 = load i32, i32* %i, align 4
  %cmp5 = icmp slt i32 %11, -1
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc48

if.end:                                           ; No predecessors!
  %call = call i8* @xalloc(i32 16)
  %12 = bitcast i8* %call to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %12, %struct.List_o_links_struct** %lol, align 4
  %13 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %13, i32 0, i32 0
  %14 = load i32, i32* %l, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %14
  %15 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx7, align 4
  %16 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %16, i32 0, i32 3
  store %struct.List_o_links_struct* %15, %struct.List_o_links_struct** %next, align 4
  %17 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %18 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %l8 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %18, i32 0, i32 0
  %19 = load i32, i32* %l8, align 4
  %arrayidx9 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %19
  store %struct.List_o_links_struct* %17, %struct.List_o_links_struct** %arrayidx9, align 4
  %20 = load i32, i32* %link, align 4
  %21 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link10 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %21, i32 0, i32 0
  store i32 %20, i32* %link10, align 4
  %22 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %22, i32 0, i32 1
  %23 = load i32, i32* %r, align 4
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %24, i32 0, i32 1
  store i32 %23, i32* %word, align 4
  %25 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %lc11 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %25, i32 0, i32 2
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %lc11, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 2
  %27 = load i8, i8* %priority, align 4
  %conv12 = sext i8 %27 to i32
  store i32 %conv12, i32* %i, align 4
  %28 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %28, 0
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; No predecessors!
  %29 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %29, i32 0, i32 2
  store i32 0, i32* %dir, align 4
  br label %if.end23

if.else:                                          ; No predecessors!
  %30 = load i32, i32* %i, align 4
  %cmp16 = icmp eq i32 %30, 2
  br i1 %cmp16, label %if.then18, label %if.else20

if.then18:                                        ; No predecessors!
  %31 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir19 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %31, i32 0, i32 2
  store i32 1, i32* %dir19, align 4
  br label %if.end22

if.else20:                                        ; No predecessors!
  %32 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir21 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %32, i32 0, i32 2
  store i32 -1, i32* %dir21, align 4
  br label %if.end22

if.end22:                                         ; No predecessors!
  br label %if.end23

if.end23:                                         ; No predecessors!
  %call24 = call i8* @xalloc(i32 16)
  %33 = bitcast i8* %call24 to %struct.List_o_links_struct*
  store %struct.List_o_links_struct* %33, %struct.List_o_links_struct** %lol, align 4
  %34 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %r25 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %34, i32 0, i32 1
  %35 = load i32, i32* %r25, align 4
  %arrayidx26 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %35
  %36 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx26, align 4
  %37 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next27 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %37, i32 0, i32 3
  store %struct.List_o_links_struct* %36, %struct.List_o_links_struct** %next27, align 4
  %38 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %39 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %r28 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %39, i32 0, i32 1
  %40 = load i32, i32* %r28, align 4
  %arrayidx29 = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %40
  store %struct.List_o_links_struct* %38, %struct.List_o_links_struct** %arrayidx29, align 4
  %41 = load i32, i32* %link, align 4
  %42 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link30 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %42, i32 0, i32 0
  store i32 %41, i32* %link30, align 4
  %43 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %l31 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %43, i32 0, i32 0
  %44 = load i32, i32* %l31, align 4
  %45 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %word32 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %45, i32 0, i32 1
  store i32 %44, i32* %word32, align 4
  %46 = load %struct.Link_struct*, %struct.Link_struct** %lp, align 4
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %46, i32 0, i32 3
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %priority33 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %47, i32 0, i32 2
  %48 = load i8, i8* %priority33, align 4
  %conv34 = sext i8 %48 to i32
  store i32 %conv34, i32* %i, align 4
  %49 = load i32, i32* %i, align 4
  %cmp35 = icmp eq i32 %49, 0
  br i1 %cmp35, label %if.then37, label %if.else39

if.then37:                                        ; No predecessors!
  %50 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir38 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %50, i32 0, i32 2
  store i32 0, i32* %dir38, align 4
  br label %if.end47

if.else39:                                        ; No predecessors!
  %51 = load i32, i32* %i, align 4
  %cmp40 = icmp eq i32 %51, 2
  br i1 %cmp40, label %if.then42, label %if.else44

if.then42:                                        ; No predecessors!
  %52 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir43 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %52, i32 0, i32 2
  store i32 1, i32* %dir43, align 4
  br label %if.end46

if.else44:                                        ; No predecessors!
  %53 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %dir45 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %53, i32 0, i32 2
  store i32 -1, i32* %dir45, align 4
  br label %if.end46

if.end46:                                         ; No predecessors!
  br label %if.end47

if.end47:                                         ; No predecessors!
  br label %for.inc48

for.inc48:                                        ; No predecessors!
  %54 = load i32, i32* %link, align 4
  %inc49 = add nsw i32 %54, 1
  store i32 %inc49, i32* %link, align 4
  br label %for.cond1

for.end50:                                        ; No predecessors!
  ret void
}

define void @build_DIS_CON_tree_Clear() {
entry:
  %w = alloca i32, align 4
  %dnroot = alloca %struct.DIS_node_struct*, align 4
  %dn = alloca %struct.DIS_node_struct*, align 4
  %child = alloca %struct.CON_list_struct*, align 4
  %xchild = alloca %struct.CON_list_struct*, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  %xlol = alloca %struct.List_o_links_struct*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %2
  store i32 -1, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store %struct.DIS_node_struct* null, %struct.DIS_node_struct** %dnroot, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load i32, i32* %w, align 4
  %5 = load i32, i32* @N_words, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end29

for.body3:                                        ; No predecessors!
  %6 = load i32, i32* %w, align 4
  %arrayidx4 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %6
  %7 = load i32, i32* %arrayidx4, align 4
  %cmp5 = icmp eq i32 %7, -1
  br i1 %cmp5, label %if.then, label %if.end26

if.then:                                          ; No predecessors!
  %8 = load i32, i32* %w, align 4
  %call = call %struct.DIS_node_struct* @build_DIS_node(i32 %8)
  store %struct.DIS_node_struct* %call, %struct.DIS_node_struct** %dn, align 4
  %9 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %cmp6 = icmp eq %struct.DIS_node_struct* %9, null
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; No predecessors!
  %10 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  store %struct.DIS_node_struct* %10, %struct.DIS_node_struct** %dnroot, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %11 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %cl = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %11, i32 0, i32 0
  %12 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl, align 4
  store %struct.CON_list_struct* %12, %struct.CON_list_struct** %child, align 4
  br label %for.cond8

for.cond8:                                        ; No predecessors!
  %13 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %cmp9 = icmp ne %struct.CON_list_struct* %13, null
  br i1 %cmp9, label %for.body10, label %for.end15

for.body10:                                       ; No predecessors!
  %14 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %next = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %14, i32 0, i32 0
  %15 = load %struct.CON_list_struct*, %struct.CON_list_struct** %next, align 4
  store %struct.CON_list_struct* %15, %struct.CON_list_struct** %xchild, align 4
  %16 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %cl11 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %16, i32 0, i32 0
  %17 = load %struct.CON_list_struct*, %struct.CON_list_struct** %cl11, align 4
  %18 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %next12 = getelementptr inbounds %struct.CON_list_struct, %struct.CON_list_struct* %18, i32 0, i32 0
  store %struct.CON_list_struct* %17, %struct.CON_list_struct** %next12, align 4
  %19 = load %struct.CON_list_struct*, %struct.CON_list_struct** %child, align 4
  %20 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %cl13 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %20, i32 0, i32 0
  store %struct.CON_list_struct* %19, %struct.CON_list_struct** %cl13, align 4
  br label %for.inc14

for.inc14:                                        ; No predecessors!
  %21 = load %struct.CON_list_struct*, %struct.CON_list_struct** %xchild, align 4
  store %struct.CON_list_struct* %21, %struct.CON_list_struct** %child, align 4
  br label %for.cond8

for.end15:                                        ; No predecessors!
  %22 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %lol16 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %22, i32 0, i32 1
  %23 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol16, align 4
  store %struct.List_o_links_struct* %23, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond17

for.cond17:                                       ; No predecessors!
  %24 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp18 = icmp ne %struct.List_o_links_struct* %24, null
  br i1 %cmp18, label %for.body19, label %for.end25

for.body19:                                       ; No predecessors!
  %25 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next20 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %25, i32 0, i32 3
  %26 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next20, align 4
  store %struct.List_o_links_struct* %26, %struct.List_o_links_struct** %xlol, align 4
  %27 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %lol21 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %27, i32 0, i32 1
  %28 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol21, align 4
  %29 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next22 = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %29, i32 0, i32 3
  store %struct.List_o_links_struct* %28, %struct.List_o_links_struct** %next22, align 4
  %30 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %31 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %lol23 = getelementptr inbounds %struct.DIS_node_struct, %struct.DIS_node_struct* %31, i32 0, i32 1
  store %struct.List_o_links_struct* %30, %struct.List_o_links_struct** %lol23, align 4
  br label %for.inc24

for.inc24:                                        ; No predecessors!
  %32 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %xlol, align 4
  store %struct.List_o_links_struct* %32, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond17

for.end25:                                        ; No predecessors!
  %33 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dn, align 4
  %34 = bitcast %struct.DIS_node_struct* %33 to i8*
  call void @xfree(i8* %34, i32 12)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end26

if.end26:                                         ; No predecessors!
  br label %for.inc27

for.inc27:                                        ; No predecessors!
  %35 = load i32, i32* %w, align 4
  %inc28 = add nsw i32 %35, 1
  store i32 %inc28, i32* %w, align 4
  br label %for.cond1

for.end29:                                        ; No predecessors!
  %36 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %dnroot, align 4
  %struct.BigStruct_39 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 39
  store %struct.DIS_node_struct* %36, %struct.DIS_node_struct** %struct.BigStruct_39
  ret void
}

define void @free_digraph_Clear() {
entry:
  %lol = alloca %struct.List_o_links_struct*, align 4
  %lolx = alloca %struct.List_o_links_struct*, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.List_o_links_struct*], [250 x %struct.List_o_links_struct*]* @word_links, i32 0, i32 %2
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %arrayidx, align 4
  store %struct.List_o_links_struct* %3, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp2 = icmp ne %struct.List_o_links_struct* %4, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %5, i32 0, i32 3
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %6, %struct.List_o_links_struct** %lolx, align 4
  %7 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %8 = bitcast %struct.List_o_links_struct* %7 to i8*
  call void @xfree(i8* %8, i32 16)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lolx, align 4
  store %struct.List_o_links_struct* %9, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  br label %for.inc4

for.inc4:                                         ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end5:                                         ; No predecessors!
  ret void
}

define void @print_links_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %fp.addr = alloca %struct._iobuf*, align 4
  %link = alloca i32, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %link, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %link, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %3, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc

if.end:                                           ; No predecessors!
  %4 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.16, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %4, i8* %5)
  %6 = load i32, i32* %link, align 4
  %7 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %7, %struct._iobuf** %struct.BigStruct_11
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %6, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 6, i32 0)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %8 = load i32, i32* %link, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %link, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %9 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.17, i32 0, i32 0
  %call2 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %9, i8* %10)
  ret void
}

define void @print_links_and_domains_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  %load_struct.BigStruct_20 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_20
  %pp.addr = alloca %struct.PP_node_struct*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %link = alloca i32, align 4
  %longest = alloca i32, align 4
  %j = alloca i32, align 4
  %d = alloca %struct.D_type_list_struct*, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  store %struct.PP_node_struct* %load_struct.BigStruct_20, %struct.PP_node_struct** %pp.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  store i32 0, i32* %longest, align 4
  store i32 0, i32* %link, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %link, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %link, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %l, align 4
  %cmp1 = icmp eq i32 %3, -1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc9

if.end:                                           ; No predecessors!
  store i32 0, i32* %j, align 4
  %4 = load i32, i32* %link, align 4
  %5 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %5, i32 0, i32 0
  %6 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array, align 4
  %arrayidx2 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %6, i32 %4
  %7 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx2, align 4
  store %struct.D_type_list_struct* %7, %struct.D_type_list_struct** %d, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %8 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %cmp4 = icmp ne %struct.D_type_list_struct* %8, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; No predecessors!
  %9 = load i32, i32* %j, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %j, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %10, i32 0, i32 0
  %11 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next, align 4
  store %struct.D_type_list_struct* %11, %struct.D_type_list_struct** %d, align 4
  br label %for.cond3

for.end:                                          ; No predecessors!
  %12 = load i32, i32* %j, align 4
  %13 = load i32, i32* %longest, align 4
  %cmp6 = icmp sgt i32 %12, %13
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; No predecessors!
  %14 = load i32, i32* %j, align 4
  store i32 %14, i32* %longest, align 4
  br label %if.end8

if.end8:                                          ; No predecessors!
  br label %for.inc9

for.inc9:                                         ; No predecessors!
  %15 = load i32, i32* %link, align 4
  %inc10 = add nsw i32 %15, 1
  store i32 %inc10, i32* %link, align 4
  br label %for.cond

for.end11:                                        ; No predecessors!
  store i32 0, i32* %link, align 4
  br label %for.cond12

for.cond12:                                       ; No predecessors!
  %16 = load i32, i32* %link, align 4
  %17 = load i32, i32* @N_links, align 4
  %cmp13 = icmp slt i32 %16, %17
  br i1 %cmp13, label %for.body14, label %for.end39

for.body14:                                       ; No predecessors!
  %18 = load i32, i32* %link, align 4
  %arrayidx15 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %18
  %l16 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx15, i32 0, i32 0
  %19 = load i32, i32* %l16, align 4
  %cmp17 = icmp eq i32 %19, -1
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; No predecessors!
  br label %for.inc37

if.end19:                                         ; No predecessors!
  store i32 0, i32* %j, align 4
  %20 = load i32, i32* %link, align 4
  %21 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %d_type_array20 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %21, i32 0, i32 0
  %22 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array20, align 4
  %arrayidx21 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %22, i32 %20
  %23 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx21, align 4
  store %struct.D_type_list_struct* %23, %struct.D_type_list_struct** %d, align 4
  br label %for.cond22

for.cond22:                                       ; No predecessors!
  %24 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %cmp23 = icmp ne %struct.D_type_list_struct* %24, null
  br i1 %cmp23, label %for.body24, label %for.end28

for.body24:                                       ; No predecessors!
  %25 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %type = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %25, i32 0, i32 1
  %26 = load i32, i32* %type, align 4
  %27 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %28 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.18, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %27, i8* %28, i32 %26)
  %29 = load i32, i32* %j, align 4
  %inc25 = add nsw i32 %29, 1
  store i32 %inc25, i32* %j, align 4
  br label %for.inc26

for.inc26:                                        ; No predecessors!
  %30 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %d, align 4
  %next27 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %30, i32 0, i32 0
  %31 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next27, align 4
  store %struct.D_type_list_struct* %31, %struct.D_type_list_struct** %d, align 4
  br label %for.cond22

for.end28:                                        ; No predecessors!
  br label %for.cond29

for.cond29:                                       ; No predecessors!
  %32 = load i32, i32* %j, align 4
  %33 = load i32, i32* %longest, align 4
  %cmp30 = icmp slt i32 %32, %33
  br i1 %cmp30, label %for.body31, label %for.end35

for.body31:                                       ; No predecessors!
  %34 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.19, i32 0, i32 0
  %call32 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %34, i8* %35)
  br label %for.inc33

for.inc33:                                        ; No predecessors!
  %36 = load i32, i32* %j, align 4
  %inc34 = add nsw i32 %36, 1
  store i32 %inc34, i32* %j, align 4
  br label %for.cond29

for.end35:                                        ; No predecessors!
  %37 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.20, i32 0, i32 0
  %call36 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %37, i8* %38)
  %39 = load i32, i32* %link, align 4
  %40 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %40, %struct._iobuf** %struct.BigStruct_11
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %39, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 6, i32 0)
  br label %for.inc37

for.inc37:                                        ; No predecessors!
  %41 = load i32, i32* %link, align 4
  %inc38 = add nsw i32 %41, 1
  store i32 %inc38, i32* %link, align 4
  br label %for.cond12

for.end39:                                        ; No predecessors!
  %42 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %43 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.21, i32 0, i32 0
  %call40 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %42, i8* %43)
  %44 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %v41 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %44, i32 0, i32 1
  %45 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v41, align 4
  %cmp42 = icmp ne %struct.Violation_list_struct* %45, null
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; No predecessors!
  %46 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %47 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.22, i32 0, i32 0
  %call44 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %46, i8* %47)
  br label %if.end45

if.end45:                                         ; No predecessors!
  %48 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp.addr, align 4
  %v46 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %48, i32 0, i32 1
  %49 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v46, align 4
  store %struct.Violation_list_struct* %49, %struct.Violation_list_struct** %v, align 4
  br label %for.cond47

for.cond47:                                       ; No predecessors!
  %50 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp48 = icmp ne %struct.Violation_list_struct* %50, null
  br i1 %cmp48, label %for.body49, label %for.end53

for.body49:                                       ; No predecessors!
  %51 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %string = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %51, i32 0, i32 1
  %52 = load i8*, i8** %string, align 4
  %53 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %54 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.23, i32 0, i32 0
  %call50 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %53, i8* %54, i8* %52)
  br label %for.inc51

for.inc51:                                        ; No predecessors!
  %55 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next52 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %55, i32 0, i32 0
  %56 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next52, align 4
  store %struct.Violation_list_struct* %56, %struct.Violation_list_struct** %v, align 4
  br label %for.cond47

for.end53:                                        ; No predecessors!
  ret void
}

define void @and_cost_Clear() {
entry:
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %j = alloca i32, align 4
  %cost = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end28

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x i8]* @is_conjunction to [0 x i8]*
  %arrayidx1 = getelementptr inbounds [0 x i8], [0 x i8]* %5, i32 0, i32 %4
  %6 = load i8, i8* %arrayidx1, align 1
  %tobool = icmp ne i8 %6, 0
  br i1 %tobool, label %if.then, label %if.end25

if.then:                                          ; No predecessors!
  store i32 0, i32* @N_and_elements, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* @N_words, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 %9
  store i32 0, i32* %arrayidx5, align 4
  %10 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [250 x i32], [250 x i32]* @and_element_sizes, i32 0, i32 %10
  store i32 0, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %12 = load i32, i32* @left_wall_defined, align 4
  %tobool7 = icmp ne i32 %12, 0
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; No predecessors!
  %13 = getelementptr inbounds [250 x i32], [250 x i32]* @visited, i32 0, i32 0
  store i32 1, i32* %13, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %14 = load i32, i32* %w, align 4
  call void @and_dfs_commas(i32 %14)
  %15 = load i32, i32* @N_and_elements, align 4
  %cmp9 = icmp sgt i32 %15, 0
  br i1 %cmp9, label %if.then10, label %if.end24

if.then10:                                        ; No predecessors!
  store i32 250, i32* %min, align 4
  store i32 0, i32* %max, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; No predecessors!
  %16 = load i32, i32* %i, align 4
  %17 = load i32, i32* @N_and_elements, align 4
  %cmp12 = icmp slt i32 %16, %17
  br i1 %cmp12, label %for.body13, label %for.end23

for.body13:                                       ; No predecessors!
  %18 = load i32, i32* %i, align 4
  %arrayidx14 = getelementptr inbounds [250 x i32], [250 x i32]* @and_element_sizes, i32 0, i32 %18
  %19 = load i32, i32* %arrayidx14, align 4
  store i32 %19, i32* %j, align 4
  %20 = load i32, i32* %j, align 4
  %21 = load i32, i32* %min, align 4
  %cmp15 = icmp slt i32 %20, %21
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; No predecessors!
  %22 = load i32, i32* %j, align 4
  store i32 %22, i32* %min, align 4
  br label %if.end17

if.end17:                                         ; No predecessors!
  %23 = load i32, i32* %j, align 4
  %24 = load i32, i32* %max, align 4
  %cmp18 = icmp sgt i32 %23, %24
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; No predecessors!
  %25 = load i32, i32* %j, align 4
  store i32 %25, i32* %max, align 4
  br label %if.end20

if.end20:                                         ; No predecessors!
  br label %for.inc21

for.inc21:                                        ; No predecessors!
  %26 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %26, 1
  store i32 %inc22, i32* %i, align 4
  br label %for.cond11

for.end23:                                        ; No predecessors!
  %27 = load i32, i32* %max, align 4
  %28 = load i32, i32* %min, align 4
  %sub = sub nsw i32 %27, %28
  %29 = load i32, i32* %cost, align 4
  %add = add nsw i32 %29, %sub
  store i32 %add, i32* %cost, align 4
  br label %if.end24

if.end24:                                         ; No predecessors!
  br label %if.end25

if.end25:                                         ; No predecessors!
  br label %for.inc26

for.inc26:                                        ; No predecessors!
  %30 = load i32, i32* %w, align 4
  %inc27 = add nsw i32 %30, 1
  store i32 %inc27, i32* %w, align 4
  br label %for.cond

for.end28:                                        ; No predecessors!
  %31 = load i32, i32* %cost, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %31, i32* %struct.BigStruct_32
  ret void
}

define void @link_cost_Clear() {
entry:
  %lcost = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %lcost, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %3, i32 0, i32 %2
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 1
  %4 = load i32, i32* %r, align 4
  %5 = load i32, i32* %i, align 4
  %6 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %6, i32 0, i32 %5
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx1, i32 0, i32 0
  %7 = load i32, i32* %l, align 4
  %sub = sub nsw i32 %4, %7
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %sub, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 28, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %8 = load i32, i32* %lcost, align 4
  %add = add nsw i32 %8, %load_struct.BigStruct_32
  store i32 %add, i32* %lcost, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %10 = load i32, i32* %lcost, align 4
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %10, i32* %struct.BigStruct_321
  ret void
}

define void @disjunct_cost_Clear() {
entry:
  %lcost = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %lcost, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %3, i32 0, i32 %2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  %cmp1 = icmp ne %struct.Disjunct_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx2 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %6, i32 0, i32 %5
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx2, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 1
  %8 = load i16, i16* %cost, align 4
  %conv = sext i16 %8 to i32
  %9 = load i32, i32* %lcost, align 4
  %add = add nsw i32 %9, %conv
  store i32 %add, i32* %lcost, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %11 = load i32, i32* %lcost, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret void
}

define void @compute_link_names_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %3, i32 0, i32 %2
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx, i32 0, i32 3
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 5
  %5 = load i8*, i8** %string, align 4
  %6 = load i32, i32* %i, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx1, i32 0, i32 2
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %string2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 5
  %9 = load i8*, i8** %string2, align 4
  %call = call i8* @intersect_strings(i8* %9, i8* %5)
  %10 = load i32, i32* %i, align 4
  %11 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %11, i32 0, i32 %10
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx3, i32 0, i32 4
  store i8* %call, i8** %name, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @analyze_fat_linkage_Clear() {
entry:
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  %load_struct.BigStruct_24 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  %load_struct.BigStruct_25 = load i32, i32* %struct.BigStruct_25
  %should_print.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %should_print_messages = alloca i32, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %li = alloca %struct.Linkage_info_struct, align 4
  %d_root = alloca %struct.DIS_node_struct*, align 4
  %pp = alloca %struct.PP_node_struct*, align 4
  %accum = alloca %struct.PP_node_struct*, align 4
  %dtl0 = alloca %struct.D_type_list_struct*, align 4
  %dtl1 = alloca %struct.D_type_list_struct*, align 4
  store i32 %load_struct.BigStruct_25, i32* %should_print.addr, align 4
  store i32 1, i32* %should_print_messages, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 48, i32 0)
  store i32 0, i32* @structure_violation, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 49, i32 0)
  %struct.BigStruct_39 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 39
  %load_struct.BigStruct_39 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %struct.BigStruct_39
  store %struct.DIS_node_struct* %load_struct.BigStruct_39, %struct.DIS_node_struct** %d_root, align 4
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  store i16 0, i16* %N_violations, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 55, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %conv = trunc i32 %load_struct.BigStruct_3212 to i16
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 3
  store i16 %conv, i16* %disjunct_cost, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 58, i32 0)
  %struct.BigStruct_3213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3213 = load i32, i32* %struct.BigStruct_3213
  %conv3 = trunc i32 %load_struct.BigStruct_3213 to i16
  %null_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 2
  store i16 %conv3, i16* %null_cost, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 54, i32 1)
  %struct.BigStruct_3211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3211 = load i32, i32* %struct.BigStruct_3211
  %conv5 = trunc i32 %load_struct.BigStruct_3211 to i16
  %link_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 5
  store i16 %conv5, i16* %link_cost, align 4
  %0 = load i32, i32* @structure_violation, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; No predecessors!
  %1 = load i32, i32* %should_print.addr, align 4
  %tobool6 = icmp ne i32 %1, 0
  br i1 %tobool6, label %land.lhs.true7, label %lor.lhs.false

land.lhs.true7:                                   ; No predecessors!
  %2 = load i32, i32* @display_multiple, align 4
  %tobool8 = icmp ne i32 %2, 0
  br i1 %tobool8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %3 = load i32, i32* %should_print.addr, align 4
  %tobool9 = icmp ne i32 %3, 0
  br i1 %tobool9, label %land.lhs.true10, label %if.end20

land.lhs.true10:                                  ; No predecessors!
  %4 = load i32, i32* @display_fat, align 4
  %tobool11 = icmp ne i32 %4, 0
  br i1 %tobool11, label %if.then, label %if.end20

if.then:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 56, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %7
  %8 = load i32, i32* %i, align 4
  %9 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %9, i32 0, i32 %8
  %10 = bitcast %struct.Link_struct* %arrayidx to i8*
  %11 = bitcast %struct.Link_struct* %arrayidx13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %10, i8* %11, i32 20, i32 4, i1 false)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx15 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx15, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 41, i32 1)
  %13 = load i32, i32* @display_links, align 4
  %tobool16 = icmp ne i32 %13, 0
  br i1 %tobool16, label %if.then17, label %if.end

if.then17:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx19 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 1
  %struct.BigStruct_110 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx19, %struct._iobuf** %struct.BigStruct_110
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 51, i32 1)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end20

if.end20:                                         ; No predecessors!
  %14 = load i32, i32* @structure_violation, align 4
  %tobool21 = icmp ne i32 %14, 0
  br i1 %tobool21, label %if.then22, label %if.else

if.then22:                                        ; No predecessors!
  %15 = load i32, i32* @display_links, align 4
  %tobool23 = icmp ne i32 %15, 0
  br i1 %tobool23, label %land.lhs.true24, label %if.end30

land.lhs.true24:                                  ; No predecessors!
  %16 = load i32, i32* @display_bad, align 4
  %tobool25 = icmp ne i32 %16, 0
  br i1 %tobool25, label %if.then26, label %if.end30

if.then26:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx28 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %17 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.25, i32 0, i32 0
  %call29 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx28, i8* %17)
  br label %if.end30

if.end30:                                         ; No predecessors!
  %N_violations31 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %18 = load i16, i16* %N_violations31, align 4
  %inc32 = add i16 %18, 1
  store i16 %inc32, i16* %N_violations31, align 4
  %and_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 4
  store i16 0, i16* %and_cost, align 2
  br label %if.end211

if.else:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 53, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv34 = trunc i32 %load_struct.BigStruct_32 to i16
  %and_cost35 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 4
  store i16 %conv34, i16* %and_cost35, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 56, i32 0)
  %call36 = call i8* @xalloc(i32 8)
  %19 = bitcast i8* %call36 to %struct.PP_node_struct*
  store %struct.PP_node_struct* %19, %struct.PP_node_struct** %accum, align 4
  %20 = load i32, i32* @N_links, align 4
  %mul = mul i32 %20, 4
  %call37 = call i8* @xalloc(i32 %mul)
  %21 = bitcast i8* %call37 to %struct.D_type_list_struct**
  %22 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %22, i32 0, i32 0
  store %struct.D_type_list_struct** %21, %struct.D_type_list_struct*** %d_type_array, align 4
  %23 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %v38 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %23, i32 0, i32 1
  store %struct.Violation_list_struct* null, %struct.Violation_list_struct** %v38, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond39

for.cond39:                                       ; No predecessors!
  %24 = load i32, i32* %i, align 4
  %25 = load i32, i32* @N_links, align 4
  %cmp40 = icmp slt i32 %24, %25
  br i1 %cmp40, label %for.body42, label %for.end47

for.body42:                                       ; No predecessors!
  %26 = load i32, i32* %i, align 4
  %27 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array43 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %27, i32 0, i32 0
  %28 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array43, align 4
  %arrayidx44 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %28, i32 %26
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx44, align 4
  br label %for.inc45

for.inc45:                                        ; No predecessors!
  %29 = load i32, i32* %i, align 4
  %inc46 = add nsw i32 %29, 1
  store i32 %inc46, i32* %i, align 4
  br label %for.cond39

for.end47:                                        ; No predecessors!
  br label %for.cond48

for.cond48:                                       ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond49

for.cond49:                                       ; No predecessors!
  %30 = load i32, i32* %i, align 4
  %31 = load i32, i32* @N_links, align 4
  %cmp50 = icmp slt i32 %30, %31
  br i1 %cmp50, label %for.body52, label %for.end63

for.body52:                                       ; No predecessors!
  %32 = load i32, i32* %i, align 4
  %arrayidx53 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %32
  %changed = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx53, i32 0, i32 1
  store i8 0, i8* %changed, align 1
  %33 = load i32, i32* %i, align 4
  %arrayidx54 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %33
  %used = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx54, i32 0, i32 0
  store i8 0, i8* %used, align 4
  %34 = load i32, i32* %i, align 4
  %35 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx55 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %35, i32 0, i32 %34
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx55, i32 0, i32 0
  %36 = load i32, i32* %l, align 4
  %37 = load i32, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %37
  %newl = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx56, i32 0, i32 2
  store i32 %36, i32* %newl, align 4
  %38 = load i32, i32* %i, align 4
  %39 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx57 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %39, i32 0, i32 %38
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx57, i32 0, i32 1
  %40 = load i32, i32* %r, align 4
  %41 = load i32, i32* %i, align 4
  %arrayidx58 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %41
  %newr = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx58, i32 0, i32 3
  store i32 %40, i32* %newr, align 4
  %42 = load i32, i32* %i, align 4
  %arrayidx59 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %42
  %43 = load i32, i32* %i, align 4
  %44 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx60 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %44, i32 0, i32 %43
  %45 = bitcast %struct.Link_struct* %arrayidx59 to i8*
  %46 = bitcast %struct.Link_struct* %arrayidx60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 20, i32 4, i1 false)
  br label %for.inc61

for.inc61:                                        ; No predecessors!
  %47 = load i32, i32* %i, align 4
  %inc62 = add nsw i32 %47, 1
  store i32 %inc62, i32* %i, align 4
  br label %for.cond49

for.end63:                                        ; No predecessors!
  %48 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %d_root, align 4
  call void @fill_patch_array_DIS(%struct.DIS_node_struct* %48, %struct.Links_to_patch_struct* null)
  store i32 0, i32* %i, align 4
  br label %for.cond64

for.cond64:                                       ; No predecessors!
  %49 = load i32, i32* %i, align 4
  %50 = load i32, i32* @N_links, align 4
  %cmp65 = icmp slt i32 %49, %50
  br i1 %cmp65, label %for.body67, label %for.end105

for.body67:                                       ; No predecessors!
  %51 = load i32, i32* %i, align 4
  %arrayidx68 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %51
  %changed69 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx68, i32 0, i32 1
  %52 = load i8, i8* %changed69, align 1
  %conv70 = sext i8 %52 to i32
  %tobool71 = icmp ne i32 %conv70, 0
  br i1 %tobool71, label %if.then77, label %lor.lhs.false72

lor.lhs.false72:                                  ; No predecessors!
  %53 = load i32, i32* %i, align 4
  %arrayidx73 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %53
  %used74 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx73, i32 0, i32 0
  %54 = load i8, i8* %used74, align 4
  %conv75 = sext i8 %54 to i32
  %tobool76 = icmp ne i32 %conv75, 0
  br i1 %tobool76, label %if.then77, label %if.else86

if.then77:                                        ; No predecessors!
  %55 = load i32, i32* %i, align 4
  %arrayidx78 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %55
  %newl79 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx78, i32 0, i32 2
  %56 = load i32, i32* %newl79, align 4
  %57 = load i32, i32* %i, align 4
  %arrayidx80 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %57
  %l81 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx80, i32 0, i32 0
  store i32 %56, i32* %l81, align 4
  %58 = load i32, i32* %i, align 4
  %arrayidx82 = getelementptr inbounds [497 x %struct.patch_element_struct], [497 x %struct.patch_element_struct]* @patch_array, i32 0, i32 %58
  %newr83 = getelementptr inbounds %struct.patch_element_struct, %struct.patch_element_struct* %arrayidx82, i32 0, i32 3
  %59 = load i32, i32* %newr83, align 4
  %60 = load i32, i32* %i, align 4
  %arrayidx84 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %60
  %r85 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx84, i32 0, i32 1
  store i32 %59, i32* %r85, align 4
  br label %if.end102

if.else86:                                        ; No predecessors!
  %61 = load i32, i32* %i, align 4
  %62 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx87 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %62, i32 0, i32 %61
  %l88 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx87, i32 0, i32 0
  %63 = load i32, i32* %l88, align 4
  %arrayidx89 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %63
  %64 = load i32, i32* %arrayidx89, align 4
  %cmp90 = icmp ne i32 %64, -1
  br i1 %cmp90, label %land.lhs.true92, label %if.end101

land.lhs.true92:                                  ; No predecessors!
  %65 = load i32, i32* %i, align 4
  %66 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx93 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %66, i32 0, i32 %65
  %r94 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx93, i32 0, i32 1
  %67 = load i32, i32* %r94, align 4
  %arrayidx95 = getelementptr inbounds [250 x i32], [250 x i32]* @dfs_root_word, i32 0, i32 %67
  %68 = load i32, i32* %arrayidx95, align 4
  %cmp96 = icmp ne i32 %68, -1
  br i1 %cmp96, label %if.then98, label %if.end101

if.then98:                                        ; No predecessors!
  %69 = load i32, i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %69
  %l100 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx99, i32 0, i32 0
  store i32 -1, i32* %l100, align 4
  br label %if.end101

if.end101:                                        ; No predecessors!
  br label %if.end102

if.end102:                                        ; No predecessors!
  br label %for.inc103

for.inc103:                                       ; No predecessors!
  %70 = load i32, i32* %i, align 4
  %inc104 = add nsw i32 %70, 1
  store i32 %inc104, i32* %i, align 4
  br label %for.cond64

for.end105:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 9, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 7, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 23, i32 1)
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  %load_struct.BigStruct_36 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_36
  store %struct.PP_node_struct* %load_struct.BigStruct_36, %struct.PP_node_struct** %pp, align 4
  %71 = load i32, i32* @display_multiple, align 4
  %tobool107 = icmp ne i32 %71, 0
  br i1 %tobool107, label %land.lhs.true108, label %if.end113

land.lhs.true108:                                 ; No predecessors!
  %72 = load i32, i32* %should_print.addr, align 4
  %tobool109 = icmp ne i32 %72, 0
  br i1 %tobool109, label %if.then110, label %if.end113

if.then110:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_383 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_383
  %arrayidx112 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_383, i32 1
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx112, %struct._iobuf** %struct.BigStruct_19
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 41, i32 1)
  br label %if.end113

if.end113:                                        ; No predecessors!
  %73 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %v114 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %73, i32 0, i32 1
  %74 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v114, align 4
  %cmp115 = icmp eq %struct.Violation_list_struct* %74, null
  br i1 %cmp115, label %if.then117, label %if.else178

if.then117:                                       ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond118

for.cond118:                                      ; No predecessors!
  %75 = load i32, i32* %i, align 4
  %76 = load i32, i32* @N_links, align 4
  %cmp119 = icmp slt i32 %75, %76
  br i1 %cmp119, label %for.body121, label %for.end163

for.body121:                                      ; No predecessors!
  %77 = load i32, i32* %i, align 4
  %arrayidx122 = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %77
  %l123 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx122, i32 0, i32 0
  %78 = load i32, i32* %l123, align 4
  %cmp124 = icmp eq i32 %78, -1
  br i1 %cmp124, label %if.then126, label %if.end127

if.then126:                                       ; No predecessors!
  br label %for.inc161

if.end127:                                        ; No predecessors!
  %79 = load i32, i32* %i, align 4
  %80 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array128 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %80, i32 0, i32 0
  %81 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array128, align 4
  %arrayidx129 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %81, i32 %79
  %82 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx129, align 4
  %cmp130 = icmp eq %struct.D_type_list_struct* %82, null
  br i1 %cmp130, label %if.then132, label %if.else139

if.then132:                                       ; No predecessors!
  %83 = load i32, i32* %i, align 4
  %84 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %d_type_array133 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %84, i32 0, i32 0
  %85 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array133, align 4
  %arrayidx134 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %85, i32 %83
  %86 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx134, align 4
  %87 = load i32, i32* %i, align 4
  %88 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array135 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %88, i32 0, i32 0
  %89 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array135, align 4
  %arrayidx136 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %89, i32 %87
  store %struct.D_type_list_struct* %86, %struct.D_type_list_struct** %arrayidx136, align 4
  %90 = load i32, i32* %i, align 4
  %91 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %d_type_array137 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %91, i32 0, i32 0
  %92 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array137, align 4
  %arrayidx138 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %92, i32 %90
  store %struct.D_type_list_struct* null, %struct.D_type_list_struct** %arrayidx138, align 4
  br label %if.end160

if.else139:                                       ; No predecessors!
  %93 = load i32, i32* %i, align 4
  %94 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %d_type_array140 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %94, i32 0, i32 0
  %95 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array140, align 4
  %arrayidx141 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %95, i32 %93
  %96 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx141, align 4
  store %struct.D_type_list_struct* %96, %struct.D_type_list_struct** %dtl0, align 4
  %97 = load i32, i32* %i, align 4
  %98 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %d_type_array142 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %98, i32 0, i32 0
  %99 = load %struct.D_type_list_struct**, %struct.D_type_list_struct*** %d_type_array142, align 4
  %arrayidx143 = getelementptr inbounds %struct.D_type_list_struct*, %struct.D_type_list_struct** %99, i32 %97
  %100 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %arrayidx143, align 4
  store %struct.D_type_list_struct* %100, %struct.D_type_list_struct** %dtl1, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %101 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %cmp144 = icmp ne %struct.D_type_list_struct* %101, null
  br i1 %cmp144, label %land.lhs.true146, label %land.end

land.lhs.true146:                                 ; No predecessors!
  %102 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %cmp147 = icmp ne %struct.D_type_list_struct* %102, null
  br i1 %cmp147, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %103 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %type = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %103, i32 0, i32 1
  %104 = load i32, i32* %type, align 4
  %105 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %type149 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %105, i32 0, i32 1
  %106 = load i32, i32* %type149, align 4
  %cmp150 = icmp eq i32 %104, %106
  br label %land.end

land.end:                                         ; No predecessors!
  %107 = phi i1 [ false, %land.lhs.true146 ], [ false, %while.cond ], [ %cmp150, %land.rhs ]
  br i1 %107, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %108 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %next = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %108, i32 0, i32 0
  %109 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next, align 4
  store %struct.D_type_list_struct* %109, %struct.D_type_list_struct** %dtl0, align 4
  %110 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %next152 = getelementptr inbounds %struct.D_type_list_struct, %struct.D_type_list_struct* %110, i32 0, i32 0
  %111 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %next152, align 4
  store %struct.D_type_list_struct* %111, %struct.D_type_list_struct** %dtl1, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %112 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl0, align 4
  %cmp153 = icmp ne %struct.D_type_list_struct* %112, null
  br i1 %cmp153, label %if.then158, label %lor.lhs.false155

lor.lhs.false155:                                 ; No predecessors!
  %113 = load %struct.D_type_list_struct*, %struct.D_type_list_struct** %dtl1, align 4
  %cmp156 = icmp ne %struct.D_type_list_struct* %113, null
  br i1 %cmp156, label %if.then158, label %if.end159

if.then158:                                       ; No predecessors!
  br label %for.end163

if.end159:                                        ; No predecessors!
  br label %if.end160

if.end160:                                        ; No predecessors!
  br label %for.inc161

for.inc161:                                       ; No predecessors!
  %114 = load i32, i32* %i, align 4
  %inc162 = add nsw i32 %114, 1
  store i32 %inc162, i32* %i, align 4
  br label %for.cond118

for.end163:                                       ; No predecessors!
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* @N_links, align 4
  %cmp164 = icmp ne i32 %115, %116
  br i1 %cmp164, label %if.then166, label %if.end177

if.then166:                                       ; No predecessors!
  %117 = load i32, i32* @display_links, align 4
  %tobool167 = icmp ne i32 %117, 0
  br i1 %tobool167, label %land.lhs.true168, label %if.end176

land.lhs.true168:                                 ; No predecessors!
  %118 = load i32, i32* %should_print_messages, align 4
  %tobool169 = icmp ne i32 %118, 0
  br i1 %tobool169, label %if.then170, label %if.end176

if.then170:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  %arrayidx172 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_384, i32 1
  %119 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.26, i32 0, i32 0
  %call173 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx172, i8* %119)
  %N_violations174 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %120 = load i16, i16* %N_violations174, align 4
  %inc175 = add i16 %120, 1
  store i16 %inc175, i16* %N_violations174, align 4
  br label %if.end176

if.end176:                                        ; No predecessors!
  %121 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %121, %struct.PP_node_struct** %struct.BigStruct_20
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  br label %for.end194

if.end177:                                        ; No predecessors!
  br label %if.end189

if.else178:                                       ; No predecessors!
  %122 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %v179 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %122, i32 0, i32 1
  %123 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v179, align 4
  store %struct.Violation_list_struct* %123, %struct.Violation_list_struct** %v, align 4
  br label %for.cond180

for.cond180:                                      ; No predecessors!
  %124 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp181 = icmp ne %struct.Violation_list_struct* %124, null
  br i1 %cmp181, label %for.body183, label %for.end188

for.body183:                                      ; No predecessors!
  %N_violations184 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %125 = load i16, i16* %N_violations184, align 4
  %inc185 = add i16 %125, 1
  store i16 %inc185, i16* %N_violations184, align 4
  br label %for.inc186

for.inc186:                                       ; No predecessors!
  %126 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next187 = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %126, i32 0, i32 0
  %127 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next187, align 4
  store %struct.Violation_list_struct* %127, %struct.Violation_list_struct** %v, align 4
  br label %for.cond180

for.end188:                                       ; No predecessors!
  br label %if.end189

if.end189:                                        ; No predecessors!
  %128 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %struct.BigStruct_207 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %128, %struct.PP_node_struct** %struct.BigStruct_207
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  %129 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %d_root, align 4
  %call190 = call i32 @advance_DIS(%struct.DIS_node_struct* %129)
  %tobool191 = icmp ne i32 %call190, 0
  br i1 %tobool191, label %if.end193, label %if.then192

if.then192:                                       ; No predecessors!
  br label %for.end194

if.end193:                                        ; No predecessors!
  br label %for.cond48

for.end194:                                       ; No predecessors!
  %130 = load i32, i32* @display_on, align 4
  %tobool195 = icmp ne i32 %130, 0
  br i1 %tobool195, label %land.lhs.true196, label %if.end210

land.lhs.true196:                                 ; No predecessors!
  %N_violations197 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %131 = load i16, i16* %N_violations197, align 4
  %conv198 = sext i16 %131 to i32
  %cmp199 = icmp ne i32 %conv198, 0
  br i1 %cmp199, label %land.lhs.true201, label %if.end210

land.lhs.true201:                                 ; No predecessors!
  %132 = load i32, i32* @verbosity, align 4
  %cmp202 = icmp sgt i32 %132, 1
  br i1 %cmp202, label %land.lhs.true204, label %if.end210

land.lhs.true204:                                 ; No predecessors!
  %133 = load i32, i32* %should_print_messages, align 4
  %tobool205 = icmp ne i32 %133, 0
  br i1 %tobool205, label %if.then206, label %if.end210

if.then206:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_385 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_385
  %arrayidx208 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_385, i32 1
  %134 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.27, i32 0, i32 0
  %call209 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx208, i8* %134)
  br label %if.end210

if.end210:                                        ; No predecessors!
  %135 = load %struct.PP_node_struct*, %struct.PP_node_struct** %accum, align 4
  %struct.BigStruct_208 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %135, %struct.PP_node_struct** %struct.BigStruct_208
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  br label %if.end211

if.end211:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 50, i32 0)
  %136 = load %struct.DIS_node_struct*, %struct.DIS_node_struct** %d_root, align 4
  call void @free_DIS_tree(%struct.DIS_node_struct* %136)
  %137 = load i32, i32* %should_print.addr, align 4
  %tobool212 = icmp ne i32 %137, 0
  br i1 %tobool212, label %if.then213, label %if.end217

if.then213:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_386 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_386
  %arrayidx215 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_386, i32 1
  %struct.BigStruct_114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx215, %struct._iobuf** %struct.BigStruct_114
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_3215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3215 = load i32, i32* %struct.BigStruct_3215
  br label %if.end217

if.end217:                                        ; No predecessors!
  %138 = bitcast %struct.Linkage_info_struct* %load_struct.BigStruct_24 to i8*
  %139 = bitcast %struct.Linkage_info_struct* %li to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %138, i8* %139, i32 16, i32 4, i1 false)
  ret void
}

define void @null_cost_Clear() {
entry:
  %0 = load i32, i32* @N_null, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %0, i32* %struct.BigStruct_32
  ret void
}

define void @fflush_Package_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %call = call i32 @fflush(%struct._iobuf* %load_struct.BigStruct_1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @analyze_thin_linkage_Clear() {
entry:
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  %load_struct.BigStruct_24 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  %load_struct.BigStruct_25 = load i32, i32* %struct.BigStruct_25
  %should_print.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca %struct.Violation_list_struct*, align 4
  %li = alloca %struct.Linkage_info_struct, align 4
  %pp = alloca %struct.PP_node_struct*, align 4
  store i32 %load_struct.BigStruct_25, i32* %should_print.addr, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 56, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_links, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.Link_struct], [497 x %struct.Link_struct]* @pp_link_array, i32 0, i32 %2
  %3 = load i32, i32* %i, align 4
  %4 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %4, i32 0, i32 %3
  %5 = bitcast %struct.Link_struct* %arrayidx to i8*
  %6 = bitcast %struct.Link_struct* %arrayidx1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %5, i8* %6, i32 20, i32 4, i1 false)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 23, i32 1)
  %struct.BigStruct_36 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 36
  %load_struct.BigStruct_36 = load %struct.PP_node_struct*, %struct.PP_node_struct** %struct.BigStruct_36
  store %struct.PP_node_struct* %load_struct.BigStruct_36, %struct.PP_node_struct** %pp, align 4
  %8 = load i32, i32* @display_fat, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %9 = load i32, i32* @display_multiple, align 4
  %tobool2 = icmp ne i32 %9, 0
  br i1 %tobool2, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; No predecessors!
  %10 = load i32, i32* %should_print.addr, align 4
  %tobool3 = icmp ne i32 %10, 0
  br i1 %tobool3, label %if.then, label %if.end10

if.then:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx5 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx5, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 41, i32 1)
  %11 = load i32, i32* @display_links, align 4
  %tobool6 = icmp ne i32 %11, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; No predecessors!
  %12 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx9 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 1
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx9, %struct._iobuf** %struct.BigStruct_13
  %struct.BigStruct_204 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %12, %struct.PP_node_struct** %struct.BigStruct_204
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 52, i32 1)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end10

if.end10:                                         ; No predecessors!
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  store i16 0, i16* %N_violations, align 4
  %and_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 4
  store i16 0, i16* %and_cost, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 55, i32 0)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %conv = trunc i32 %load_struct.BigStruct_325 to i16
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 3
  store i16 %conv, i16* %disjunct_cost, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 58, i32 0)
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_326 = load i32, i32* %struct.BigStruct_326
  %conv13 = trunc i32 %load_struct.BigStruct_326 to i16
  %null_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 2
  store i16 %conv13, i16* %null_cost, align 2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 54, i32 1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv15 = trunc i32 %load_struct.BigStruct_32 to i16
  %link_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 5
  store i16 %conv15, i16* %link_cost, align 4
  %13 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %v16 = getelementptr inbounds %struct.PP_node_struct, %struct.PP_node_struct* %13, i32 0, i32 1
  %14 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v16, align 4
  store %struct.Violation_list_struct* %14, %struct.Violation_list_struct** %v, align 4
  br label %for.cond17

for.cond17:                                       ; No predecessors!
  %15 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %cmp18 = icmp ne %struct.Violation_list_struct* %15, null
  br i1 %cmp18, label %for.body20, label %for.end24

for.body20:                                       ; No predecessors!
  %N_violations21 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %li, i32 0, i32 1
  %16 = load i16, i16* %N_violations21, align 4
  %inc22 = add i16 %16, 1
  store i16 %inc22, i16* %N_violations21, align 4
  br label %for.inc23

for.inc23:                                        ; No predecessors!
  %17 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %v, align 4
  %next = getelementptr inbounds %struct.Violation_list_struct, %struct.Violation_list_struct* %17, i32 0, i32 0
  %18 = load %struct.Violation_list_struct*, %struct.Violation_list_struct** %next, align 4
  store %struct.Violation_list_struct* %18, %struct.Violation_list_struct** %v, align 4
  br label %for.cond17

for.end24:                                        ; No predecessors!
  %19 = load %struct.PP_node_struct*, %struct.PP_node_struct** %pp, align 4
  %struct.BigStruct_20 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 20
  store %struct.PP_node_struct* %19, %struct.PP_node_struct** %struct.BigStruct_20
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 38, i32 0)
  %20 = load i32, i32* %should_print.addr, align 4
  %tobool25 = icmp ne i32 %20, 0
  br i1 %tobool25, label %if.then26, label %if.end30

if.then26:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx28 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %struct.BigStruct_17 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx28, %struct._iobuf** %struct.BigStruct_17
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_328 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_328 = load i32, i32* %struct.BigStruct_328
  br label %if.end30

if.end30:                                         ; No predecessors!
  %21 = bitcast %struct.Linkage_info_struct* %load_struct.BigStruct_24 to i8*
  %22 = bitcast %struct.Linkage_info_struct* %li to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %21, i8* %22, i32 16, i32 4, i1 false)
  ret void
}

define void @compute_matchers_for_a_label_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %k.addr = alloca i32, align 4
  %lengths = alloca i32*, align 4
  %N_connectors = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tot_len = alloca i32, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %s = alloca i8*, align 4
  %os = alloca i8*, align 4
  store i32 %load_struct.BigStruct_0, i32* %k.addr, align 4
  %0 = load i32, i32* %k.addr, align 4
  %1 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %1, i32 %0
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %2, %struct.Disjunct_struct** %d, align 4
  store i32 0, i32* %N_connectors, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %4, %struct.Connector_struct** %c, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp = icmp ne %struct.Connector_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %6 = load i32, i32* %N_connectors, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %N_connectors, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %8, %struct.Connector_struct** %c, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 5
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %11, null
  br i1 %cmp2, label %for.body3, label %for.end7

for.body3:                                        ; No predecessors!
  %12 = load i32, i32* %N_connectors, align 4
  %inc4 = add nsw i32 %12, 1
  store i32 %inc4, i32* %N_connectors, align 4
  br label %for.inc5

for.inc5:                                         ; No predecessors!
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next6, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.end7:                                         ; No predecessors!
  %15 = load i32, i32* %N_connectors, align 4
  %mul = mul i32 %15, 4
  %call = call i8* @xalloc(i32 %mul)
  %16 = bitcast i8* %call to i32*
  store i32* %16, i32** %lengths, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond8

for.cond8:                                        ; No predecessors!
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %N_connectors, align 4
  %cmp9 = icmp slt i32 %17, %18
  br i1 %cmp9, label %for.body10, label %for.end14

for.body10:                                       ; No predecessors!
  %19 = load i32, i32* %i, align 4
  %20 = load i32*, i32** %lengths, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %20, i32 %19
  store i32 0, i32* %arrayidx11, align 4
  br label %for.inc12

for.inc12:                                        ; No predecessors!
  %21 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %21, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond8

for.end14:                                        ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp15 = icmp ne %struct.Disjunct_struct* %22, null
  br i1 %cmp15, label %while.body, label %while.end57

while.body:                                       ; No predecessors!
  store i32 0, i32* %i, align 4
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %23, i32 0, i32 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %left16, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %c, align 4
  br label %for.cond17

for.cond17:                                       ; No predecessors!
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp18 = icmp ne %struct.Connector_struct* %25, null
  br i1 %cmp18, label %for.body19, label %for.end31

for.body19:                                       ; No predecessors!
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 5
  %27 = load i8*, i8** %string, align 4
  store i8* %27, i8** %s, align 4
  br label %while.cond20

while.cond20:                                     ; No predecessors!
  %28 = load i8*, i8** %s, align 4
  %29 = load i8, i8* %28, align 1
  %conv = sext i8 %29 to i32
  %call21 = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call21, 0
  br i1 %tobool, label %while.body22, label %while.end

while.body22:                                     ; No predecessors!
  %30 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %while.cond20

while.end:                                        ; No predecessors!
  %31 = load i8*, i8** %s, align 4
  %call23 = call i32 @strlen_Package(i8* %31)
  store i32 %call23, i32* %j, align 4
  %32 = load i32, i32* %j, align 4
  %33 = load i32, i32* %i, align 4
  %34 = load i32*, i32** %lengths, align 4
  %arrayidx24 = getelementptr inbounds i32, i32* %34, i32 %33
  %35 = load i32, i32* %arrayidx24, align 4
  %cmp25 = icmp sgt i32 %32, %35
  br i1 %cmp25, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %36 = load i32, i32* %j, align 4
  %37 = load i32, i32* %i, align 4
  %38 = load i32*, i32** %lengths, align 4
  %arrayidx27 = getelementptr inbounds i32, i32* %38, i32 %37
  store i32 %36, i32* %arrayidx27, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %39 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %39, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.inc29

for.inc29:                                        ; No predecessors!
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next30 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %40, i32 0, i32 4
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %next30, align 4
  store %struct.Connector_struct* %41, %struct.Connector_struct** %c, align 4
  br label %for.cond17

for.end31:                                        ; No predecessors!
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right32 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %42, i32 0, i32 5
  %43 = load %struct.Connector_struct*, %struct.Connector_struct** %right32, align 4
  store %struct.Connector_struct* %43, %struct.Connector_struct** %c, align 4
  br label %for.cond33

for.cond33:                                       ; No predecessors!
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp34 = icmp ne %struct.Connector_struct* %44, null
  br i1 %cmp34, label %for.body36, label %for.end55

for.body36:                                       ; No predecessors!
  %45 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string37 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %45, i32 0, i32 5
  %46 = load i8*, i8** %string37, align 4
  store i8* %46, i8** %s, align 4
  br label %while.cond38

while.cond38:                                     ; No predecessors!
  %47 = load i8*, i8** %s, align 4
  %48 = load i8, i8* %47, align 1
  %conv39 = sext i8 %48 to i32
  %call40 = call i32 @isupper_Package(i32 %conv39)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %while.body42, label %while.end44

while.body42:                                     ; No predecessors!
  %49 = load i8*, i8** %s, align 4
  %incdec.ptr43 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %incdec.ptr43, i8** %s, align 4
  br label %while.cond38

while.end44:                                      ; No predecessors!
  %50 = load i8*, i8** %s, align 4
  %call45 = call i32 @strlen_Package(i8* %50)
  store i32 %call45, i32* %j, align 4
  %51 = load i32, i32* %j, align 4
  %52 = load i32, i32* %i, align 4
  %53 = load i32*, i32** %lengths, align 4
  %arrayidx46 = getelementptr inbounds i32, i32* %53, i32 %52
  %54 = load i32, i32* %arrayidx46, align 4
  %cmp47 = icmp sgt i32 %51, %54
  br i1 %cmp47, label %if.then49, label %if.end51

if.then49:                                        ; No predecessors!
  %55 = load i32, i32* %j, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load i32*, i32** %lengths, align 4
  %arrayidx50 = getelementptr inbounds i32, i32* %57, i32 %56
  store i32 %55, i32* %arrayidx50, align 4
  br label %if.end51

if.end51:                                         ; No predecessors!
  %58 = load i32, i32* %i, align 4
  %inc52 = add nsw i32 %58, 1
  store i32 %inc52, i32* %i, align 4
  br label %for.inc53

for.inc53:                                        ; No predecessors!
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next54 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %59, i32 0, i32 4
  %60 = load %struct.Connector_struct*, %struct.Connector_struct** %next54, align 4
  store %struct.Connector_struct* %60, %struct.Connector_struct** %c, align 4
  br label %for.cond33

for.end55:                                        ; No predecessors!
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next56 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %61, i32 0, i32 0
  %62 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next56, align 4
  store %struct.Disjunct_struct* %62, %struct.Disjunct_struct** %d, align 4
  br label %while.cond

while.end57:                                      ; No predecessors!
  store i32 0, i32* %tot_len, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; No predecessors!
  %63 = load i32, i32* %i, align 4
  %64 = load i32, i32* %N_connectors, align 4
  %cmp59 = icmp slt i32 %63, %64
  br i1 %cmp59, label %for.body61, label %for.end66

for.body61:                                       ; No predecessors!
  %65 = load i32, i32* %i, align 4
  %66 = load i32*, i32** %lengths, align 4
  %arrayidx62 = getelementptr inbounds i32, i32* %66, i32 %65
  %67 = load i32, i32* %arrayidx62, align 4
  %add = add nsw i32 %67, 1
  %68 = load i32, i32* %tot_len, align 4
  %add63 = add nsw i32 %68, %add
  store i32 %add63, i32* %tot_len, align 4
  br label %for.inc64

for.inc64:                                        ; No predecessors!
  %69 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %69, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond58

for.end66:                                        ; No predecessors!
  %70 = load i32, i32* %k.addr, align 4
  %71 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx67 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %71, i32 %70
  %72 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx67, align 4
  store %struct.Disjunct_struct* %72, %struct.Disjunct_struct** %d, align 4
  br label %for.cond68

for.cond68:                                       ; No predecessors!
  %73 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp69 = icmp ne %struct.Disjunct_struct* %73, null
  br i1 %cmp69, label %for.body71, label %for.end100

for.body71:                                       ; No predecessors!
  store i32 0, i32* %i, align 4
  %74 = load i32, i32* %tot_len, align 4
  %add72 = add nsw i32 %74, 1
  %call73 = call i8* @xalloc(i32 %add72)
  store i8* %call73, i8** %s, align 4
  store i8* %call73, i8** %os, align 4
  %75 = load i32, i32* %tot_len, align 4
  %add74 = add nsw i32 %75, 1
  %76 = load i8*, i8** %s, align 4
  call void @free_this_string_later(i8* %76, i32 %add74)
  %77 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left75 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %77, i32 0, i32 4
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %left75, align 4
  store %struct.Connector_struct* %78, %struct.Connector_struct** %c, align 4
  br label %for.cond76

for.cond76:                                       ; No predecessors!
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp77 = icmp ne %struct.Connector_struct* %79, null
  br i1 %cmp77, label %for.body79, label %for.end85

for.body79:                                       ; No predecessors!
  %80 = load i32, i32* %i, align 4
  %81 = load i32*, i32** %lengths, align 4
  %arrayidx80 = getelementptr inbounds i32, i32* %81, i32 %80
  %82 = load i32, i32* %arrayidx80, align 4
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %84 = load i8*, i8** %s, align 4
  %call81 = call i8* @stick_in_one_connector(i8* %84, %struct.Connector_struct* %83, i32 %82)
  store i8* %call81, i8** %s, align 4
  %85 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %85, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.inc83

for.inc83:                                        ; No predecessors!
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next84 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %86, i32 0, i32 4
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %next84, align 4
  store %struct.Connector_struct* %87, %struct.Connector_struct** %c, align 4
  br label %for.cond76

for.end85:                                        ; No predecessors!
  %88 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right86 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %88, i32 0, i32 5
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %right86, align 4
  store %struct.Connector_struct* %89, %struct.Connector_struct** %c, align 4
  br label %for.cond87

for.cond87:                                       ; No predecessors!
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp88 = icmp ne %struct.Connector_struct* %90, null
  br i1 %cmp88, label %for.body90, label %for.end96

for.body90:                                       ; No predecessors!
  %91 = load i32, i32* %i, align 4
  %92 = load i32*, i32** %lengths, align 4
  %arrayidx91 = getelementptr inbounds i32, i32* %92, i32 %91
  %93 = load i32, i32* %arrayidx91, align 4
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %95 = load i8*, i8** %s, align 4
  %call92 = call i8* @stick_in_one_connector(i8* %95, %struct.Connector_struct* %94, i32 %93)
  store i8* %call92, i8** %s, align 4
  %96 = load i32, i32* %i, align 4
  %inc93 = add nsw i32 %96, 1
  store i32 %inc93, i32* %i, align 4
  br label %for.inc94

for.inc94:                                        ; No predecessors!
  %97 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next95 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %97, i32 0, i32 4
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %next95, align 4
  store %struct.Connector_struct* %98, %struct.Connector_struct** %c, align 4
  br label %for.cond87

for.end96:                                        ; No predecessors!
  %99 = load i8*, i8** %os, align 4
  %100 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %string97 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %100, i32 0, i32 3
  store i8* %99, i8** %string97, align 4
  br label %for.inc98

for.inc98:                                        ; No predecessors!
  %101 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next99 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %101, i32 0, i32 0
  %102 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next99, align 4
  store %struct.Disjunct_struct* %102, %struct.Disjunct_struct** %d, align 4
  br label %for.cond68

for.end100:                                       ; No predecessors!
  %103 = load i32, i32* %N_connectors, align 4
  %mul101 = mul i32 %103, 4
  %104 = load i32*, i32** %lengths, align 4
  %105 = bitcast i32* %104 to i8*
  call void @xfree(i8* %105, i32 %mul101)
  ret void
}

define void @explode_disjunct_list_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call = call %struct.Disjunct_struct* @build_fat_link_substitutions(%struct.Disjunct_struct* %1)
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call1 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %2, %struct.Disjunct_struct* %call)
  store %struct.Disjunct_struct* %call1, %struct.Disjunct_struct** %d1, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 0
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @build_COMMA_disjunct_list_Clear() {
entry:
  %lab = alloca i32, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %work_disjunct = alloca %struct.Disjunct_struct, align 4
  %wd = alloca %struct.Disjunct_struct*, align 4
  %work_connector1 = alloca %struct.Connector_struct, align 4
  %work_connector2 = alloca %struct.Connector_struct, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  %c2 = alloca %struct.Connector_struct*, align 4
  %work_connector3 = alloca %struct.Connector_struct, align 4
  %c3 = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %work_connector1, %struct.Connector_struct** %c1, align 4
  store %struct.Connector_struct* %work_connector2, %struct.Connector_struct** %c2, align 4
  store %struct.Connector_struct* %work_connector3, %struct.Connector_struct** %c3, align 4
  store %struct.Disjunct_struct* %work_disjunct, %struct.Disjunct_struct** %wd, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d1, align 4
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %0, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 4
  store %struct.Connector_struct* %1, %struct.Connector_struct** %next1, align 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %3, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next2, align 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 2
  store i8 2, i8* %priority, align 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 2
  store i8 2, i8* %priority3, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %priority4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 2
  store i8 1, i8* %priority4, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %multi5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 3
  store i8 0, i8* %multi5, align 1
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 3
  store i8 0, i8* %multi6, align 1
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %11, i32 0, i32 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %left, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 5
  store %struct.Connector_struct* %12, %struct.Connector_struct** %right, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 3
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.9.39, i32 0, i32 0
  store i8* %15, i8** %string, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %next7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next7, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 1
  store i16 0, i16* %cost, align 4
  store i32 0, i32* %lab, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %18 = load i32, i32* %lab, align 4
  %19 = load i32, i32* @LT_size, align 4
  %cmp = icmp slt i32 %18, %19
  br i1 %cmp, label %for.body, label %for.end20

for.body:                                         ; No predecessors!
  %20 = load i32, i32* %lab, align 4
  %21 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %21, i32 %20
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %22, %struct.Disjunct_struct** %d, align 4
  br label %for.cond8

for.cond8:                                        ; No predecessors!
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp9 = icmp ne %struct.Disjunct_struct* %23, null
  br i1 %cmp9, label %for.body10, label %for.end

for.body10:                                       ; No predecessors!
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %string11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 3
  %25 = load i8*, i8** %string11, align 4
  %26 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %string12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %26, i32 0, i32 5
  store i8* %25, i8** %string12, align 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %string13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 5
  store i8* %25, i8** %string13, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string14 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %28, i32 0, i32 5
  store i8* %25, i8** %string14, align 4
  %29 = load i32, i32* %lab, align 4
  %conv = trunc i32 %29 to i16
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %30, i32 0, i32 0
  store i16 %conv, i16* %label, align 4
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %label15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %31, i32 0, i32 0
  store i16 %conv, i16* %label15, align 4
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label16 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %32, i32 0, i32 0
  store i16 %conv, i16* %label16, align 4
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %wd, align 4
  %call = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %33)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d2, align 4
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next17 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 0
  store %struct.Disjunct_struct* %34, %struct.Disjunct_struct** %next17, align 4
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %36, %struct.Disjunct_struct** %d1, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %37, i32 0, i32 0
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next18, align 4
  store %struct.Disjunct_struct* %38, %struct.Disjunct_struct** %d, align 4
  br label %for.cond8

for.end:                                          ; No predecessors!
  br label %for.inc19

for.inc19:                                        ; No predecessors!
  %39 = load i32, i32* %lab, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %lab, align 4
  br label %for.cond

for.end20:                                        ; No predecessors!
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %40, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @build_AND_disjunct_list_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %lab = alloca i32, align 4
  %d_list = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d3 = alloca %struct.Disjunct_struct*, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %d_copy = alloca %struct.Disjunct_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  %c2 = alloca %struct.Connector_struct*, align 4
  %c3 = alloca %struct.Connector_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_list, align 4
  store i32 0, i32* %lab, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %lab, align 4
  %1 = load i32, i32* @LT_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end53

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %lab, align 4
  %3 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %3, i32 %2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp2 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp2, label %for.body3, label %for.end51

for.body3:                                        ; No predecessors!
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call = call %struct.Disjunct_struct* @build_fat_link_substitutions(%struct.Disjunct_struct* %6)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d1, align 4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call4 = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %7)
  store %struct.Disjunct_struct* %call4, %struct.Disjunct_struct** %d_copy, align 4
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 0
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %next, align 4
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_copy, align 4
  store %struct.Disjunct_struct* %10, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond5

for.cond5:                                        ; No predecessors!
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp6 = icmp ne %struct.Disjunct_struct* %11, null
  br i1 %cmp6, label %for.body7, label %for.end48

for.body7:                                        ; No predecessors!
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 0
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next8, align 4
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %d3, align 4
  %call9 = call i8* @xalloc(i32 16)
  %14 = bitcast i8* %call9 to %struct.Connector_struct*
  store %struct.Connector_struct* %14, %struct.Connector_struct** %c1, align 4
  %call10 = call i8* @xalloc(i32 16)
  %15 = bitcast i8* %call10 to %struct.Connector_struct*
  store %struct.Connector_struct* %15, %struct.Connector_struct** %c2, align 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next11, align 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next12, align 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 2
  store i8 2, i8* %priority, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 2
  store i8 2, i8* %priority13, align 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %20, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi14 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %21, i32 0, i32 3
  store i8 0, i8* %multi14, align 1
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 3
  %23 = load i8*, i8** %string, align 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %string15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 5
  store i8* %23, i8** %string15, align 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string16 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 5
  store i8* %23, i8** %string16, align 4
  %26 = load i32, i32* %lab, align 4
  %conv = trunc i32 %26 to i16
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %27, i32 0, i32 0
  store i16 %conv, i16* %label, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label17 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %28, i32 0, i32 0
  store i16 %conv, i16* %label17, align 4
  %29 = load i8*, i8** %s.addr, align 4
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %string18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 3
  store i8* %29, i8** %string18, align 4
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 5
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp19 = icmp eq %struct.Connector_struct* %32, null
  br i1 %cmp19, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right21 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %34, i32 0, i32 5
  store %struct.Connector_struct* %33, %struct.Connector_struct** %right21, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right22 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 5
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %right22, align 4
  store %struct.Connector_struct* %36, %struct.Connector_struct** %c3, align 4
  br label %for.cond23

for.cond23:                                       ; No predecessors!
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next24 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 4
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %next24, align 4
  %cmp25 = icmp ne %struct.Connector_struct* %38, null
  br i1 %cmp25, label %for.body27, label %for.end

for.body27:                                       ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next28 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %39, i32 0, i32 4
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %next28, align 4
  store %struct.Connector_struct* %40, %struct.Connector_struct** %c3, align 4
  br label %for.cond23

for.end:                                          ; No predecessors!
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next29 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 4
  store %struct.Connector_struct* %41, %struct.Connector_struct** %next29, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %43, i32 0, i32 4
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp30 = icmp eq %struct.Connector_struct* %44, null
  br i1 %cmp30, label %if.then32, label %if.else34

if.then32:                                        ; No predecessors!
  %45 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left33 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %46, i32 0, i32 4
  store %struct.Connector_struct* %45, %struct.Connector_struct** %left33, align 4
  br label %if.end45

if.else34:                                        ; No predecessors!
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left35 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 4
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %left35, align 4
  store %struct.Connector_struct* %48, %struct.Connector_struct** %c3, align 4
  br label %for.cond36

for.cond36:                                       ; No predecessors!
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next37 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %49, i32 0, i32 4
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %next37, align 4
  %cmp38 = icmp ne %struct.Connector_struct* %50, null
  br i1 %cmp38, label %for.body40, label %for.end43

for.body40:                                       ; No predecessors!
  br label %for.inc41

for.inc41:                                        ; No predecessors!
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next42 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %next42, align 4
  store %struct.Connector_struct* %52, %struct.Connector_struct** %c3, align 4
  br label %for.cond36

for.end43:                                        ; No predecessors!
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %c3, align 4
  %next44 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %54, i32 0, i32 4
  store %struct.Connector_struct* %53, %struct.Connector_struct** %next44, align 4
  br label %if.end45

if.end45:                                         ; No predecessors!
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %56 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next46 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %56, i32 0, i32 0
  store %struct.Disjunct_struct* %55, %struct.Disjunct_struct** %next46, align 4
  %57 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %57, %struct.Disjunct_struct** %d_list, align 4
  br label %for.inc47

for.inc47:                                        ; No predecessors!
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d3, align 4
  store %struct.Disjunct_struct* %58, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond5

for.end48:                                        ; No predecessors!
  br label %for.inc49

for.inc49:                                        ; No predecessors!
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next50 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %59, i32 0, i32 0
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next50, align 4
  store %struct.Disjunct_struct* %60, %struct.Disjunct_struct** %d, align 4
  br label %for.cond1

for.end51:                                        ; No predecessors!
  br label %for.inc52

for.inc52:                                        ; No predecessors!
  %61 = load i32, i32* %lab, align 4
  %inc = add nsw i32 %61, 1
  store i32 %inc, i32* %lab, align 4
  br label %for.cond

for.end53:                                        ; No predecessors!
  %62 = load i8*, i8** %s.addr, align 4
  %63 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.10.40, i32 0, i32 0
  %call54 = call i32 @strcmp_Package(i8* %62, i8* %63)
  %cmp55 = icmp eq i32 %call54, 0
  br i1 %cmp55, label %if.then57, label %if.else149

if.then57:                                        ; No predecessors!
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  store %struct.Disjunct_struct* %64, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond58

for.cond58:                                       ; No predecessors!
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp59 = icmp ne %struct.Disjunct_struct* %65, null
  br i1 %cmp59, label %for.body61, label %for.end148

for.body61:                                       ; No predecessors!
  %66 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right62 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %66, i32 0, i32 5
  %67 = load %struct.Connector_struct*, %struct.Connector_struct** %right62, align 4
  store %struct.Connector_struct* %67, %struct.Connector_struct** %c1, align 4
  br label %for.cond63

for.cond63:                                       ; No predecessors!
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp64 = icmp ne %struct.Connector_struct* %68, null
  br i1 %cmp64, label %for.body66, label %for.end99

for.body66:                                       ; No predecessors!
  %69 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string67 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %69, i32 0, i32 5
  %70 = load i8*, i8** %string67, align 4
  %arrayidx68 = getelementptr inbounds i8, i8* %70, i32 0
  %71 = load i8, i8* %arrayidx68, align 1
  %conv69 = sext i8 %71 to i32
  %cmp70 = icmp eq i32 %conv69, 83
  br i1 %cmp70, label %land.lhs.true, label %if.end96

land.lhs.true:                                    ; No predecessors!
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string72 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %72, i32 0, i32 5
  %73 = load i8*, i8** %string72, align 4
  %arrayidx73 = getelementptr inbounds i8, i8* %73, i32 1
  %74 = load i8, i8* %arrayidx73, align 1
  %conv74 = sext i8 %74 to i32
  %cmp75 = icmp eq i32 %conv74, 94
  br i1 %cmp75, label %if.then94, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string77 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %75, i32 0, i32 5
  %76 = load i8*, i8** %string77, align 4
  %arrayidx78 = getelementptr inbounds i8, i8* %76, i32 1
  %77 = load i8, i8* %arrayidx78, align 1
  %conv79 = sext i8 %77 to i32
  %cmp80 = icmp eq i32 %conv79, 115
  br i1 %cmp80, label %if.then94, label %lor.lhs.false82

lor.lhs.false82:                                  ; No predecessors!
  %78 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string83 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %78, i32 0, i32 5
  %79 = load i8*, i8** %string83, align 4
  %arrayidx84 = getelementptr inbounds i8, i8* %79, i32 1
  %80 = load i8, i8* %arrayidx84, align 1
  %conv85 = sext i8 %80 to i32
  %cmp86 = icmp eq i32 %conv85, 112
  br i1 %cmp86, label %if.then94, label %lor.lhs.false88

lor.lhs.false88:                                  ; No predecessors!
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string89 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %81, i32 0, i32 5
  %82 = load i8*, i8** %string89, align 4
  %arrayidx90 = getelementptr inbounds i8, i8* %82, i32 1
  %83 = load i8, i8* %arrayidx90, align 1
  %conv91 = sext i8 %83 to i32
  %cmp92 = icmp eq i32 %conv91, 0
  br i1 %cmp92, label %if.then94, label %if.end96

if.then94:                                        ; No predecessors!
  %84 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string95 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %84, i32 0, i32 5
  %85 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.11.41, i32 0, i32 0
  store i8* %85, i8** %string95, align 4
  br label %if.end96

if.end96:                                         ; No predecessors!
  br label %for.inc97

for.inc97:                                        ; No predecessors!
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next98 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %86, i32 0, i32 4
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %next98, align 4
  store %struct.Connector_struct* %87, %struct.Connector_struct** %c1, align 4
  br label %for.cond63

for.end99:                                        ; No predecessors!
  %88 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left100 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %88, i32 0, i32 4
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %left100, align 4
  store %struct.Connector_struct* %89, %struct.Connector_struct** %c1, align 4
  br label %for.cond101

for.cond101:                                      ; No predecessors!
  %90 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp102 = icmp ne %struct.Connector_struct* %90, null
  br i1 %cmp102, label %for.body104, label %for.end145

for.body104:                                      ; No predecessors!
  %91 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string105 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %91, i32 0, i32 5
  %92 = load i8*, i8** %string105, align 4
  %arrayidx106 = getelementptr inbounds i8, i8* %92, i32 0
  %93 = load i8, i8* %arrayidx106, align 1
  %conv107 = sext i8 %93 to i32
  %cmp108 = icmp eq i32 %conv107, 83
  br i1 %cmp108, label %land.lhs.true110, label %if.end142

land.lhs.true110:                                 ; No predecessors!
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string111 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %94, i32 0, i32 5
  %95 = load i8*, i8** %string111, align 4
  %arrayidx112 = getelementptr inbounds i8, i8* %95, i32 1
  %96 = load i8, i8* %arrayidx112, align 1
  %conv113 = sext i8 %96 to i32
  %cmp114 = icmp eq i32 %conv113, 73
  br i1 %cmp114, label %land.lhs.true116, label %if.end142

land.lhs.true116:                                 ; No predecessors!
  %97 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string117 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %97, i32 0, i32 5
  %98 = load i8*, i8** %string117, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %98, i32 2
  %99 = load i8, i8* %arrayidx118, align 1
  %conv119 = sext i8 %99 to i32
  %cmp120 = icmp eq i32 %conv119, 94
  br i1 %cmp120, label %if.then140, label %lor.lhs.false122

lor.lhs.false122:                                 ; No predecessors!
  %100 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string123 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %100, i32 0, i32 5
  %101 = load i8*, i8** %string123, align 4
  %arrayidx124 = getelementptr inbounds i8, i8* %101, i32 2
  %102 = load i8, i8* %arrayidx124, align 1
  %conv125 = sext i8 %102 to i32
  %cmp126 = icmp eq i32 %conv125, 115
  br i1 %cmp126, label %if.then140, label %lor.lhs.false128

lor.lhs.false128:                                 ; No predecessors!
  %103 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string129 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %103, i32 0, i32 5
  %104 = load i8*, i8** %string129, align 4
  %arrayidx130 = getelementptr inbounds i8, i8* %104, i32 2
  %105 = load i8, i8* %arrayidx130, align 1
  %conv131 = sext i8 %105 to i32
  %cmp132 = icmp eq i32 %conv131, 112
  br i1 %cmp132, label %if.then140, label %lor.lhs.false134

lor.lhs.false134:                                 ; No predecessors!
  %106 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string135 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %106, i32 0, i32 5
  %107 = load i8*, i8** %string135, align 4
  %arrayidx136 = getelementptr inbounds i8, i8* %107, i32 2
  %108 = load i8, i8* %arrayidx136, align 1
  %conv137 = sext i8 %108 to i32
  %cmp138 = icmp eq i32 %conv137, 0
  br i1 %cmp138, label %if.then140, label %if.end142

if.then140:                                       ; No predecessors!
  %109 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string141 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %109, i32 0, i32 5
  %110 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.12.42, i32 0, i32 0
  store i8* %110, i8** %string141, align 4
  br label %if.end142

if.end142:                                        ; No predecessors!
  br label %for.inc143

for.inc143:                                       ; No predecessors!
  %111 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next144 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %111, i32 0, i32 4
  %112 = load %struct.Connector_struct*, %struct.Connector_struct** %next144, align 4
  store %struct.Connector_struct* %112, %struct.Connector_struct** %c1, align 4
  br label %for.cond101

for.end145:                                       ; No predecessors!
  br label %for.inc146

for.inc146:                                       ; No predecessors!
  %113 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next147 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %113, i32 0, i32 0
  %114 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next147, align 4
  store %struct.Disjunct_struct* %114, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond58

for.end148:                                       ; No predecessors!
  br label %if.end240

if.else149:                                       ; No predecessors!
  %115 = load i8*, i8** %s.addr, align 4
  %116 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.13.43, i32 0, i32 0
  %call150 = call i32 @strcmp_Package(i8* %115, i8* %116)
  %cmp151 = icmp eq i32 %call150, 0
  br i1 %cmp151, label %if.then157, label %lor.lhs.false153

lor.lhs.false153:                                 ; No predecessors!
  %117 = load i8*, i8** %s.addr, align 4
  %118 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.14.44, i32 0, i32 0
  %call154 = call i32 @strcmp_Package(i8* %117, i8* %118)
  %cmp155 = icmp eq i32 %call154, 0
  br i1 %cmp155, label %if.then157, label %if.end239

if.then157:                                       ; No predecessors!
  %119 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  store %struct.Disjunct_struct* %119, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond158

for.cond158:                                      ; No predecessors!
  %120 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp159 = icmp ne %struct.Disjunct_struct* %120, null
  br i1 %cmp159, label %for.body161, label %for.end238

for.body161:                                      ; No predecessors!
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right162 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %121, i32 0, i32 5
  %122 = load %struct.Connector_struct*, %struct.Connector_struct** %right162, align 4
  store %struct.Connector_struct* %122, %struct.Connector_struct** %c1, align 4
  br label %for.cond163

for.cond163:                                      ; No predecessors!
  %123 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp164 = icmp ne %struct.Connector_struct* %123, null
  br i1 %cmp164, label %for.body166, label %for.end195

for.body166:                                      ; No predecessors!
  %124 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string167 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %124, i32 0, i32 5
  %125 = load i8*, i8** %string167, align 4
  %arrayidx168 = getelementptr inbounds i8, i8* %125, i32 0
  %126 = load i8, i8* %arrayidx168, align 1
  %conv169 = sext i8 %126 to i32
  %cmp170 = icmp eq i32 %conv169, 83
  br i1 %cmp170, label %land.lhs.true172, label %if.end192

land.lhs.true172:                                 ; No predecessors!
  %127 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string173 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %127, i32 0, i32 5
  %128 = load i8*, i8** %string173, align 4
  %arrayidx174 = getelementptr inbounds i8, i8* %128, i32 1
  %129 = load i8, i8* %arrayidx174, align 1
  %conv175 = sext i8 %129 to i32
  %cmp176 = icmp eq i32 %conv175, 94
  br i1 %cmp176, label %if.then190, label %lor.lhs.false178

lor.lhs.false178:                                 ; No predecessors!
  %130 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string179 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %130, i32 0, i32 5
  %131 = load i8*, i8** %string179, align 4
  %arrayidx180 = getelementptr inbounds i8, i8* %131, i32 1
  %132 = load i8, i8* %arrayidx180, align 1
  %conv181 = sext i8 %132 to i32
  %cmp182 = icmp eq i32 %conv181, 115
  br i1 %cmp182, label %if.then190, label %lor.lhs.false184

lor.lhs.false184:                                 ; No predecessors!
  %133 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string185 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %133, i32 0, i32 5
  %134 = load i8*, i8** %string185, align 4
  %arrayidx186 = getelementptr inbounds i8, i8* %134, i32 1
  %135 = load i8, i8* %arrayidx186, align 1
  %conv187 = sext i8 %135 to i32
  %cmp188 = icmp eq i32 %conv187, 112
  br i1 %cmp188, label %if.then190, label %if.end192

if.then190:                                       ; No predecessors!
  %136 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string191 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %136, i32 0, i32 5
  %137 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.15.45, i32 0, i32 0
  store i8* %137, i8** %string191, align 4
  br label %if.end192

if.end192:                                        ; No predecessors!
  br label %for.inc193

for.inc193:                                       ; No predecessors!
  %138 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next194 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %138, i32 0, i32 4
  %139 = load %struct.Connector_struct*, %struct.Connector_struct** %next194, align 4
  store %struct.Connector_struct* %139, %struct.Connector_struct** %c1, align 4
  br label %for.cond163

for.end195:                                       ; No predecessors!
  %140 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left196 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %140, i32 0, i32 4
  %141 = load %struct.Connector_struct*, %struct.Connector_struct** %left196, align 4
  store %struct.Connector_struct* %141, %struct.Connector_struct** %c1, align 4
  br label %for.cond197

for.cond197:                                      ; No predecessors!
  %142 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %cmp198 = icmp ne %struct.Connector_struct* %142, null
  br i1 %cmp198, label %for.body200, label %for.end235

for.body200:                                      ; No predecessors!
  %143 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string201 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %143, i32 0, i32 5
  %144 = load i8*, i8** %string201, align 4
  %arrayidx202 = getelementptr inbounds i8, i8* %144, i32 0
  %145 = load i8, i8* %arrayidx202, align 1
  %conv203 = sext i8 %145 to i32
  %cmp204 = icmp eq i32 %conv203, 83
  br i1 %cmp204, label %land.lhs.true206, label %if.end232

land.lhs.true206:                                 ; No predecessors!
  %146 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string207 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %146, i32 0, i32 5
  %147 = load i8*, i8** %string207, align 4
  %arrayidx208 = getelementptr inbounds i8, i8* %147, i32 1
  %148 = load i8, i8* %arrayidx208, align 1
  %conv209 = sext i8 %148 to i32
  %cmp210 = icmp eq i32 %conv209, 73
  br i1 %cmp210, label %land.lhs.true212, label %if.end232

land.lhs.true212:                                 ; No predecessors!
  %149 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string213 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %149, i32 0, i32 5
  %150 = load i8*, i8** %string213, align 4
  %arrayidx214 = getelementptr inbounds i8, i8* %150, i32 2
  %151 = load i8, i8* %arrayidx214, align 1
  %conv215 = sext i8 %151 to i32
  %cmp216 = icmp eq i32 %conv215, 94
  br i1 %cmp216, label %if.then230, label %lor.lhs.false218

lor.lhs.false218:                                 ; No predecessors!
  %152 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string219 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %152, i32 0, i32 5
  %153 = load i8*, i8** %string219, align 4
  %arrayidx220 = getelementptr inbounds i8, i8* %153, i32 2
  %154 = load i8, i8* %arrayidx220, align 1
  %conv221 = sext i8 %154 to i32
  %cmp222 = icmp eq i32 %conv221, 115
  br i1 %cmp222, label %if.then230, label %lor.lhs.false224

lor.lhs.false224:                                 ; No predecessors!
  %155 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string225 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %155, i32 0, i32 5
  %156 = load i8*, i8** %string225, align 4
  %arrayidx226 = getelementptr inbounds i8, i8* %156, i32 2
  %157 = load i8, i8* %arrayidx226, align 1
  %conv227 = sext i8 %157 to i32
  %cmp228 = icmp eq i32 %conv227, 112
  br i1 %cmp228, label %if.then230, label %if.end232

if.then230:                                       ; No predecessors!
  %158 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string231 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %158, i32 0, i32 5
  %159 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.16.46, i32 0, i32 0
  store i8* %159, i8** %string231, align 4
  br label %if.end232

if.end232:                                        ; No predecessors!
  br label %for.inc233

for.inc233:                                       ; No predecessors!
  %160 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next234 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %160, i32 0, i32 4
  %161 = load %struct.Connector_struct*, %struct.Connector_struct** %next234, align 4
  store %struct.Connector_struct* %161, %struct.Connector_struct** %c1, align 4
  br label %for.cond197

for.end235:                                       ; No predecessors!
  br label %for.inc236

for.inc236:                                       ; No predecessors!
  %162 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next237 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %162, i32 0, i32 0
  %163 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next237, align 4
  store %struct.Disjunct_struct* %163, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond158

for.end238:                                       ; No predecessors!
  br label %if.end239

if.end239:                                        ; No predecessors!
  br label %if.end240

if.end240:                                        ; No predecessors!
  %164 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %164, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @set_has_fat_down_Clear() {
entry:
  %link = alloca i32, align 4
  %w = alloca i32, align 4
  %N_fat = alloca i32, align 4
  store i32 0, i32* %N_fat, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %2
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %link, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load i32, i32* %link, align 4
  %5 = load i32, i32* @N_links, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end22

for.body3:                                        ; No predecessors!
  %6 = load i32, i32* %link, align 4
  %7 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %7, i32 0, i32 %6
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx4, i32 0, i32 2
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 2
  %9 = load i8, i8* %priority, align 4
  %conv = sext i8 %9 to i32
  %cmp5 = icmp eq i32 %conv, 2
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %10 = load i32, i32* %N_fat, align 4
  %inc7 = add nsw i32 %10, 1
  store i32 %inc7, i32* %N_fat, align 4
  %11 = load i32, i32* %link, align 4
  %12 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %12, i32 0, i32 %11
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 0
  %13 = load i32, i32* %l, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %13
  store i8 1, i8* %arrayidx9, align 1
  br label %if.end19

if.else:                                          ; No predecessors!
  %14 = load i32, i32* %link, align 4
  %15 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %15, i32 0, i32 %14
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx10, i32 0, i32 3
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  %priority11 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 2
  %17 = load i8, i8* %priority11, align 4
  %conv12 = sext i8 %17 to i32
  %cmp13 = icmp eq i32 %conv12, 2
  br i1 %cmp13, label %if.then15, label %if.end

if.then15:                                        ; No predecessors!
  %18 = load i32, i32* %N_fat, align 4
  %inc16 = add nsw i32 %18, 1
  store i32 %inc16, i32* %N_fat, align 4
  %19 = load i32, i32* %link, align 4
  %20 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %20, i32 0, i32 %19
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx17, i32 0, i32 1
  %21 = load i32, i32* %r, align 4
  %arrayidx18 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %21
  store i8 1, i8* %arrayidx18, align 1
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end19

if.end19:                                         ; No predecessors!
  br label %for.inc20

for.inc20:                                        ; No predecessors!
  %22 = load i32, i32* %link, align 4
  %inc21 = add nsw i32 %22, 1
  store i32 %inc21, i32* %link, align 4
  br label %for.cond1

for.end22:                                        ; No predecessors!
  %23 = load i32, i32* %N_fat, align 4
  %cmp23 = icmp sgt i32 %23, 0
  %conv24 = zext i1 %cmp23 to i32
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %conv24, i32* %struct.BigStruct_32
  ret void
}

define void @build_image_array_Clear() {
entry:
  %link = alloca i32, align 4
  %end = alloca i32, align 4
  %word = alloca i32, align 4
  %this_end_con = alloca %struct.Connector_struct*, align 4
  %other_end_con = alloca %struct.Connector_struct*, align 4
  %upcon = alloca %struct.Connector_struct*, align 4
  %updiscon = alloca %struct.Connector_struct*, align 4
  %clist = alloca %struct.Connector_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %updis = alloca %struct.Disjunct_struct*, align 4
  %in = alloca %struct.Image_node_struct*, align 4
  store i32 0, i32* %word, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %word, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %word, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %2
  store %struct.Image_node_struct* null, %struct.Image_node_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %word, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %word, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 -1, i32* %end, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load i32, i32* %end, align 4
  %cmp2 = icmp sle i32 %4, 1
  br i1 %cmp2, label %for.body3, label %for.end117

for.body3:                                        ; No predecessors!
  store i32 0, i32* %link, align 4
  br label %for.cond4

for.cond4:                                        ; No predecessors!
  %5 = load i32, i32* %link, align 4
  %6 = load i32, i32* @N_links, align 4
  %cmp5 = icmp slt i32 %5, %6
  br i1 %cmp5, label %for.body6, label %for.end115

for.body6:                                        ; No predecessors!
  %7 = load i32, i32* %end, align 4
  %cmp7 = icmp slt i32 %7, 0
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %8 = load i32, i32* %link, align 4
  %9 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %9, i32 0, i32 %8
  %l = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx8, i32 0, i32 0
  %10 = load i32, i32* %l, align 4
  store i32 %10, i32* %word, align 4
  %11 = load i32, i32* %word, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %11
  %12 = load i8, i8* %arrayidx9, align 1
  %tobool = icmp ne i8 %12, 0
  br i1 %tobool, label %if.end, label %if.then10

if.then10:                                        ; No predecessors!
  br label %for.inc113

if.end:                                           ; No predecessors!
  %13 = load i32, i32* %link, align 4
  %14 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx11 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %14, i32 0, i32 %13
  %lc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx11, i32 0, i32 2
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %lc, align 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %this_end_con, align 4
  %16 = load i32, i32* %link, align 4
  %17 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx12 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %17, i32 0, i32 %16
  %rc = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx12, i32 0, i32 3
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %rc, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %other_end_con, align 4
  %19 = load i32, i32* %word, align 4
  %20 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %20, i32 0, i32 %19
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx13, align 4
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %dis, align 4
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 5
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %23, %struct.Connector_struct** %clist, align 4
  br label %if.end24

if.else:                                          ; No predecessors!
  %24 = load i32, i32* %link, align 4
  %25 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx14 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %25, i32 0, i32 %24
  %r = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx14, i32 0, i32 1
  %26 = load i32, i32* %r, align 4
  store i32 %26, i32* %word, align 4
  %27 = load i32, i32* %word, align 4
  %arrayidx15 = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %27
  %28 = load i8, i8* %arrayidx15, align 1
  %tobool16 = icmp ne i8 %28, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; No predecessors!
  br label %for.inc113

if.end18:                                         ; No predecessors!
  %29 = load i32, i32* %link, align 4
  %30 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %30, i32 0, i32 %29
  %rc20 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx19, i32 0, i32 3
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %rc20, align 4
  store %struct.Connector_struct* %31, %struct.Connector_struct** %this_end_con, align 4
  %32 = load i32, i32* %link, align 4
  %33 = bitcast [497 x %struct.Link_struct]* @link_array to [0 x %struct.Link_struct]*
  %arrayidx21 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %33, i32 0, i32 %32
  %lc22 = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx21, i32 0, i32 2
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %lc22, align 4
  store %struct.Connector_struct* %34, %struct.Connector_struct** %other_end_con, align 4
  %35 = load i32, i32* %word, align 4
  %36 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %36, i32 0, i32 %35
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx23, align 4
  store %struct.Disjunct_struct* %37, %struct.Disjunct_struct** %dis, align 4
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %38, i32 0, i32 4
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %39, %struct.Connector_struct** %clist, align 4
  br label %if.end24

if.end24:                                         ; No predecessors!
  %40 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %40, i32 0, i32 2
  %41 = load i8, i8* %priority, align 4
  %conv = sext i8 %41 to i32
  %cmp25 = icmp eq i32 %conv, 2
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; No predecessors!
  br label %for.inc113

if.end28:                                         ; No predecessors!
  %42 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %42, i32 0, i32 0
  %43 = load i16, i16* %label, align 4
  %conv29 = sext i16 %43 to i32
  %cmp30 = icmp ne i32 %conv29, -1
  br i1 %cmp30, label %land.lhs.true, label %if.end37

land.lhs.true:                                    ; No predecessors!
  %44 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %label32 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %44, i32 0, i32 0
  %45 = load i16, i16* %label32, align 4
  %conv33 = sext i16 %45 to i32
  %cmp34 = icmp slt i32 %conv33, 0
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; No predecessors!
  br label %for.inc113

if.end37:                                         ; No predecessors!
  %call = call i8* @xalloc(i32 12)
  %46 = bitcast i8* %call to %struct.Image_node_struct*
  store %struct.Image_node_struct* %46, %struct.Image_node_struct** %in, align 4
  %47 = load i32, i32* %word, align 4
  %arrayidx38 = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %47
  %48 = load %struct.Image_node_struct*, %struct.Image_node_struct** %arrayidx38, align 4
  %49 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %next = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %49, i32 0, i32 0
  store %struct.Image_node_struct* %48, %struct.Image_node_struct** %next, align 4
  %50 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %51 = load i32, i32* %word, align 4
  %arrayidx39 = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %51
  store %struct.Image_node_struct* %50, %struct.Image_node_struct** %arrayidx39, align 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %other_end_con, align 4
  %53 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %53, i32 0, i32 1
  store %struct.Connector_struct* %52, %struct.Connector_struct** %c, align 4
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %priority40 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %54, i32 0, i32 2
  %55 = load i8, i8* %priority40, align 4
  %conv41 = sext i8 %55 to i32
  %cmp42 = icmp eq i32 %conv41, 1
  br i1 %cmp42, label %if.then44, label %if.else45

if.then44:                                        ; No predecessors!
  %56 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %56, i32 0, i32 2
  store i32 0, i32* %place, align 4
  br label %if.end112

if.else45:                                        ; No predecessors!
  %57 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place46 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %57, i32 0, i32 2
  store i32 1, i32* %place46, align 4
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left47 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %58, i32 0, i32 4
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %left47, align 4
  %cmp48 = icmp ne %struct.Connector_struct* %59, null
  br i1 %cmp48, label %land.lhs.true50, label %if.else58

land.lhs.true50:                                  ; No predecessors!
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left51 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %60, i32 0, i32 4
  %61 = load %struct.Connector_struct*, %struct.Connector_struct** %left51, align 4
  %priority52 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %61, i32 0, i32 2
  %62 = load i8, i8* %priority52, align 4
  %conv53 = sext i8 %62 to i32
  %cmp54 = icmp eq i32 %conv53, 1
  br i1 %cmp54, label %if.then56, label %if.else58

if.then56:                                        ; No predecessors!
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left57 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %63, i32 0, i32 4
  %64 = load %struct.Connector_struct*, %struct.Connector_struct** %left57, align 4
  store %struct.Connector_struct* %64, %struct.Connector_struct** %upcon, align 4
  br label %if.end72

if.else58:                                        ; No predecessors!
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right59 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %65, i32 0, i32 5
  %66 = load %struct.Connector_struct*, %struct.Connector_struct** %right59, align 4
  %cmp60 = icmp ne %struct.Connector_struct* %66, null
  br i1 %cmp60, label %land.lhs.true62, label %if.else70

land.lhs.true62:                                  ; No predecessors!
  %67 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right63 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %67, i32 0, i32 5
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %right63, align 4
  %priority64 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %68, i32 0, i32 2
  %69 = load i8, i8* %priority64, align 4
  %conv65 = sext i8 %69 to i32
  %cmp66 = icmp eq i32 %conv65, 1
  br i1 %cmp66, label %if.then68, label %if.else70

if.then68:                                        ; No predecessors!
  %70 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %70, i32 0, i32 5
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %right69, align 4
  store %struct.Connector_struct* %71, %struct.Connector_struct** %upcon, align 4
  br label %if.end71

if.else70:                                        ; No predecessors!
  store %struct.Connector_struct* null, %struct.Connector_struct** %upcon, align 4
  br label %if.end71

if.end71:                                         ; No predecessors!
  br label %if.end72

if.end72:                                         ; No predecessors!
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %cmp73 = icmp ne %struct.Connector_struct* %72, null
  br i1 %cmp73, label %if.then75, label %if.end94

if.then75:                                        ; No predecessors!
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label76 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %73, i32 0, i32 0
  %74 = load i16, i16* %label76, align 4
  %idxprom = sext i16 %74 to i32
  %75 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx77 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %75, i32 %idxprom
  %76 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx77, align 4
  store %struct.Disjunct_struct* %76, %struct.Disjunct_struct** %updis, align 4
  %77 = load i32, i32* %end, align 4
  %cmp78 = icmp sgt i32 %77, 0
  br i1 %cmp78, label %if.then80, label %if.else82

if.then80:                                        ; No predecessors!
  %78 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %left81 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %78, i32 0, i32 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %left81, align 4
  store %struct.Connector_struct* %79, %struct.Connector_struct** %updiscon, align 4
  br label %if.end84

if.else82:                                        ; No predecessors!
  %80 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %updis, align 4
  %right83 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %80, i32 0, i32 5
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %right83, align 4
  store %struct.Connector_struct* %81, %struct.Connector_struct** %updiscon, align 4
  br label %if.end84

if.end84:                                         ; No predecessors!
  br label %for.cond85

for.cond85:                                       ; No predecessors!
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %cmp86 = icmp ne %struct.Connector_struct* %82, null
  br i1 %cmp86, label %for.body88, label %for.end93

for.body88:                                       ; No predecessors!
  %83 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place89 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %83, i32 0, i32 2
  %84 = load i32, i32* %place89, align 4
  %inc90 = add nsw i32 %84, 1
  store i32 %inc90, i32* %place89, align 4
  br label %for.inc91

for.inc91:                                        ; No predecessors!
  %85 = load %struct.Connector_struct*, %struct.Connector_struct** %updiscon, align 4
  %next92 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %85, i32 0, i32 4
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %next92, align 4
  store %struct.Connector_struct* %86, %struct.Connector_struct** %updiscon, align 4
  br label %for.cond85

for.end93:                                        ; No predecessors!
  br label %if.end94

if.end94:                                         ; No predecessors!
  br label %for.cond95

for.cond95:                                       ; No predecessors!
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %this_end_con, align 4
  %cmp96 = icmp ne %struct.Connector_struct* %87, %88
  br i1 %cmp96, label %for.body98, label %for.end109

for.body98:                                       ; No predecessors!
  %89 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %label99 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %89, i32 0, i32 0
  %90 = load i16, i16* %label99, align 4
  %conv100 = sext i16 %90 to i32
  %cmp101 = icmp slt i32 %conv100, 0
  br i1 %cmp101, label %if.then103, label %if.end106

if.then103:                                       ; No predecessors!
  %91 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place104 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %91, i32 0, i32 2
  %92 = load i32, i32* %place104, align 4
  %inc105 = add nsw i32 %92, 1
  store i32 %inc105, i32* %place104, align 4
  br label %if.end106

if.end106:                                        ; No predecessors!
  br label %for.inc107

for.inc107:                                       ; No predecessors!
  %93 = load %struct.Connector_struct*, %struct.Connector_struct** %clist, align 4
  %next108 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %93, i32 0, i32 4
  %94 = load %struct.Connector_struct*, %struct.Connector_struct** %next108, align 4
  store %struct.Connector_struct* %94, %struct.Connector_struct** %clist, align 4
  br label %for.cond95

for.end109:                                       ; No predecessors!
  %95 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place110 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %95, i32 0, i32 2
  %96 = load i32, i32* %place110, align 4
  %97 = load i32, i32* %end, align 4
  %sub = sub nsw i32 0, %97
  %mul = mul nsw i32 %96, %sub
  %98 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place111 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %98, i32 0, i32 2
  store i32 %mul, i32* %place111, align 4
  br label %if.end112

if.end112:                                        ; No predecessors!
  br label %for.inc113

for.inc113:                                       ; No predecessors!
  %99 = load i32, i32* %link, align 4
  %inc114 = add nsw i32 %99, 1
  store i32 %inc114, i32* %link, align 4
  br label %for.cond4

for.end115:                                       ; No predecessors!
  br label %for.inc116

for.inc116:                                       ; No predecessors!
  %100 = load i32, i32* %end, align 4
  %add = add nsw i32 %100, 2
  store i32 %add, i32* %end, align 4
  br label %for.cond1

for.end117:                                       ; No predecessors!
  ret void
}

define void @is_canonical_linkage_Clear() {
entry:
  %w = alloca i32, align 4
  %d_label = alloca i32, align 4
  %place = alloca i32, align 4
  %d_c = alloca %struct.Connector_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %dummy_connector = alloca %struct.Connector_struct, align 4
  %upcon = alloca %struct.Connector_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %chosen_d = alloca %struct.Disjunct_struct*, align 4
  %in = alloca %struct.Image_node_struct*, align 4
  store i32 0, i32* %d_label, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 2
  store i8 1, i8* %priority, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 66, i32 0)
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end132

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @has_fat_down, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  br label %for.inc130

if.end:                                           ; No predecessors!
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx1 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %5, i32 0, i32 %4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx1, align 4
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %chosen_d, align 4
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %8, %struct.Connector_struct** %d_c, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %cmp3 = icmp ne %struct.Connector_struct* %9, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %priority5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 2
  %11 = load i8, i8* %priority5, align 4
  %conv = sext i8 %11 to i32
  %cmp6 = icmp eq i32 %conv, 2
  br i1 %cmp6, label %if.then8, label %if.end10

if.then8:                                         ; No predecessors!
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 0
  %13 = load i16, i16* %label, align 4
  %conv9 = sext i16 %13 to i32
  store i32 %conv9, i32* %d_label, align 4
  br label %for.end

if.end10:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %14, i32 0, i32 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %d_c, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %cmp11 = icmp ne %struct.Connector_struct* %16, null
  br i1 %cmp11, label %if.end14, label %if.then13

if.then13:                                        ; No predecessors!
  %17 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.22.51, i32 0, i32 0
  %18 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.21.52, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %17, i8* %18)
  call void @exit_Package(i32 1) #5
  unreachable

if.end14:                                         ; No predecessors!
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left15 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %left15, align 4
  %cmp16 = icmp ne %struct.Connector_struct* %20, null
  br i1 %cmp16, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; No predecessors!
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left18 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 4
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %left18, align 4
  %priority19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 2
  %23 = load i8, i8* %priority19, align 4
  %conv20 = sext i8 %23 to i32
  %cmp21 = icmp eq i32 %conv20, 1
  br i1 %cmp21, label %if.then23, label %if.else

if.then23:                                        ; No predecessors!
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %left24 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %left24, align 4
  store %struct.Connector_struct* %25, %struct.Connector_struct** %upcon, align 4
  br label %if.end37

if.else:                                          ; No predecessors!
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 5
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp25 = icmp ne %struct.Connector_struct* %27, null
  br i1 %cmp25, label %land.lhs.true27, label %if.else35

land.lhs.true27:                                  ; No predecessors!
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %right28 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %28, i32 0, i32 5
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %right28, align 4
  %priority29 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %29, i32 0, i32 2
  %30 = load i8, i8* %priority29, align 4
  %conv30 = sext i8 %30 to i32
  %cmp31 = icmp eq i32 %conv30, 1
  br i1 %cmp31, label %if.then33, label %if.else35

if.then33:                                        ; No predecessors!
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %chosen_d, align 4
  %right34 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 5
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %right34, align 4
  store %struct.Connector_struct* %32, %struct.Connector_struct** %upcon, align 4
  br label %if.end36

if.else35:                                        ; No predecessors!
  store %struct.Connector_struct* null, %struct.Connector_struct** %upcon, align 4
  br label %if.end36

if.end36:                                         ; No predecessors!
  br label %if.end37

if.end37:                                         ; No predecessors!
  %33 = load i32, i32* %d_label, align 4
  %34 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx38 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %34, i32 %33
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx38, align 4
  store %struct.Disjunct_struct* %35, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond39

for.cond39:                                       ; No predecessors!
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp40 = icmp ne %struct.Disjunct_struct* %36, null
  br i1 %cmp40, label %for.body42, label %for.end125

for.body42:                                       ; No predecessors!
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %d_c, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %37, i32 0, i32 5
  %38 = load i8*, i8** %string, align 4
  %39 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %string43 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %39, i32 0, i32 3
  %40 = load i8*, i8** %string43, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %40, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %38, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 8, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool45 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; No predecessors!
  br label %for.inc123

if.end47:                                         ; No predecessors!
  %41 = load i32, i32* %w, align 4
  %arrayidx48 = getelementptr inbounds [250 x %struct.Image_node_struct*], [250 x %struct.Image_node_struct*]* @image_array, i32 0, i32 %41
  %42 = load %struct.Image_node_struct*, %struct.Image_node_struct** %arrayidx48, align 4
  store %struct.Image_node_struct* %42, %struct.Image_node_struct** %in, align 4
  br label %for.cond49

for.cond49:                                       ; No predecessors!
  %43 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %cmp50 = icmp ne %struct.Image_node_struct* %43, null
  br i1 %cmp50, label %for.body52, label %for.end118

for.body52:                                       ; No predecessors!
  %44 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %place53 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %44, i32 0, i32 2
  %45 = load i32, i32* %place53, align 4
  store i32 %45, i32* %place, align 4
  %46 = load i32, i32* %place, align 4
  %cmp54 = icmp eq i32 %46, 0
  br i1 %cmp54, label %if.then56, label %if.else83

if.then56:                                        ; No predecessors!
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %cmp57 = icmp ne %struct.Connector_struct* %47, null
  br i1 %cmp57, label %if.end61, label %if.then59

if.then59:                                        ; No predecessors!
  %48 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.24.53, i32 0, i32 0
  %49 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.23.54, i32 0, i32 0
  %call60 = call i32 (i8*, ...) @printf(i8* %48, i8* %49)
  call void @exit_Package(i32 1) #5
  unreachable

if.end61:                                         ; No predecessors!
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label62 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %50, i32 0, i32 0
  %51 = load i16, i16* %label62, align 4
  %label63 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 0
  store i16 %51, i16* %label63, align 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label64 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %52, i32 0, i32 0
  %53 = load i16, i16* %label64, align 4
  %conv65 = sext i16 %53 to i32
  %54 = load i32, i32* %d_label, align 4
  %cmp66 = icmp eq i32 %conv65, %54
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; No predecessors!
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %string69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %55, i32 0, i32 3
  %56 = load i8*, i8** %string69, align 4
  %string70 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 5
  store i8* %56, i8** %string70, align 4
  br label %if.end77

if.else71:                                        ; No predecessors!
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %upcon, align 4
  %label72 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %57, i32 0, i32 0
  %58 = load i16, i16* %label72, align 4
  %conv73 = sext i16 %58 to i32
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %59, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %conv73, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 2, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %string75 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %load_struct.BigStruct_33, i32 0, i32 3
  %60 = load i8*, i8** %string75, align 4
  %string76 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %dummy_connector, i32 0, i32 5
  store i8* %60, i8** %string76, align 4
  br label %if.end77

if.end77:                                         ; No predecessors!
  %61 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c78 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %61, i32 0, i32 1
  %62 = load %struct.Connector_struct*, %struct.Connector_struct** %c78, align 4
  %call79 = call i32 @match(%struct.Connector_struct* %dummy_connector, %struct.Connector_struct* %62)
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.end82, label %if.then81

if.then81:                                        ; No predecessors!
  br label %for.end118

if.end82:                                         ; No predecessors!
  br label %if.end115

if.else83:                                        ; No predecessors!
  %63 = load i32, i32* %place, align 4
  %cmp84 = icmp sgt i32 %63, 0
  br i1 %cmp84, label %if.then86, label %if.else100

if.then86:                                        ; No predecessors!
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right87 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %64, i32 0, i32 5
  %65 = load %struct.Connector_struct*, %struct.Connector_struct** %right87, align 4
  store %struct.Connector_struct* %65, %struct.Connector_struct** %c, align 4
  br label %for.cond88

for.cond88:                                       ; No predecessors!
  %66 = load i32, i32* %place, align 4
  %cmp89 = icmp sgt i32 %66, 1
  br i1 %cmp89, label %for.body91, label %for.end94

for.body91:                                       ; No predecessors!
  %67 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next92 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %67, i32 0, i32 4
  %68 = load %struct.Connector_struct*, %struct.Connector_struct** %next92, align 4
  store %struct.Connector_struct* %68, %struct.Connector_struct** %c, align 4
  br label %for.inc93

for.inc93:                                        ; No predecessors!
  %69 = load i32, i32* %place, align 4
  %dec = add nsw i32 %69, -1
  store i32 %dec, i32* %place, align 4
  br label %for.cond88

for.end94:                                        ; No predecessors!
  %70 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c95 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %70, i32 0, i32 1
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %c95, align 4
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %call96 = call i32 @match(%struct.Connector_struct* %72, %struct.Connector_struct* %71)
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %if.end99, label %if.then98

if.then98:                                        ; No predecessors!
  br label %for.end118

if.end99:                                         ; No predecessors!
  br label %if.end114

if.else100:                                       ; No predecessors!
  %73 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left101 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %73, i32 0, i32 4
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %left101, align 4
  store %struct.Connector_struct* %74, %struct.Connector_struct** %c, align 4
  br label %for.cond102

for.cond102:                                      ; No predecessors!
  %75 = load i32, i32* %place, align 4
  %cmp103 = icmp slt i32 %75, -1
  br i1 %cmp103, label %for.body105, label %for.end108

for.body105:                                      ; No predecessors!
  %76 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next106 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %76, i32 0, i32 4
  %77 = load %struct.Connector_struct*, %struct.Connector_struct** %next106, align 4
  store %struct.Connector_struct* %77, %struct.Connector_struct** %c, align 4
  br label %for.inc107

for.inc107:                                       ; No predecessors!
  %78 = load i32, i32* %place, align 4
  %inc = add nsw i32 %78, 1
  store i32 %inc, i32* %place, align 4
  br label %for.cond102

for.end108:                                       ; No predecessors!
  %79 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %c109 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %79, i32 0, i32 1
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %c109, align 4
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %call110 = call i32 @match(%struct.Connector_struct* %81, %struct.Connector_struct* %80)
  %tobool111 = icmp ne i32 %call110, 0
  br i1 %tobool111, label %if.end113, label %if.then112

if.then112:                                       ; No predecessors!
  br label %for.end118

if.end113:                                        ; No predecessors!
  br label %if.end114

if.end114:                                        ; No predecessors!
  br label %if.end115

if.end115:                                        ; No predecessors!
  br label %for.inc116

for.inc116:                                       ; No predecessors!
  %82 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %next117 = getelementptr inbounds %struct.Image_node_struct, %struct.Image_node_struct* %82, i32 0, i32 0
  %83 = load %struct.Image_node_struct*, %struct.Image_node_struct** %next117, align 4
  store %struct.Image_node_struct* %83, %struct.Image_node_struct** %in, align 4
  br label %for.cond49

for.end118:                                       ; No predecessors!
  %84 = load %struct.Image_node_struct*, %struct.Image_node_struct** %in, align 4
  %cmp119 = icmp eq %struct.Image_node_struct* %84, null
  br i1 %cmp119, label %if.then121, label %if.end122

if.then121:                                       ; No predecessors!
  br label %for.end125

if.end122:                                        ; No predecessors!
  br label %for.inc123

for.inc123:                                       ; No predecessors!
  %85 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next124 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %85, i32 0, i32 0
  %86 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next124, align 4
  store %struct.Disjunct_struct* %86, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond39

for.end125:                                       ; No predecessors!
  %87 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp126 = icmp ne %struct.Disjunct_struct* %87, null
  br i1 %cmp126, label %if.then128, label %if.end129

if.then128:                                       ; No predecessors!
  br label %for.end132

if.end129:                                        ; No predecessors!
  br label %for.inc130

for.inc130:                                       ; No predecessors!
  %88 = load i32, i32* %w, align 4
  %inc131 = add nsw i32 %88, 1
  store i32 %inc131, i32* %w, align 4
  br label %for.cond

for.end132:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 31, i32 0)
  %89 = load i32, i32* %w, align 4
  %90 = load i32, i32* @N_words, align 4
  %cmp133 = icmp eq i32 %89, %90
  %conv134 = zext i1 %cmp133 to i32
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %conv134, i32* %struct.BigStruct_321
  ret void
}

define void @initialize_links_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Disjunct_struct*], [250 x %struct.Disjunct_struct*]* @chosen_disjuncts, i32 0, i32 %2
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @extract_links_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %cost.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %total = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %cost.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %index.addr, align 4
  store i32 0, i32* %c, align 4
  store i32 0, i32* @N_links, align 4
  store i32 0, i32* %total, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 68, i32 0)
  %0 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 0, i32 2
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %0, align 4
  store %struct.Disjunct_struct* %1, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end4

if.then:                                          ; No predecessors!
  %5 = load i32, i32* %cost.addr, align 4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 5
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %8 = load i32, i32* @N_words, align 4
  %call = call i32 @magic(i32 0, i32 %8, %struct.Connector_struct* %7, %struct.Connector_struct* null, i32 %5)
  store i32 %call, i32* %c, align 4
  %9 = load i32, i32* %c, align 4
  %10 = load i32, i32* %total, align 4
  %add = add nsw i32 %10, %9
  store i32 %add, i32* %total, align 4
  %11 = load i32, i32* %total, align 4
  %12 = load i32, i32* %index.addr, align 4
  %cmp2 = icmp sgt i32 %11, %12
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; No predecessors!
  br label %for.end

if.end:                                           ; No predecessors!
  br label %if.end4

if.end4:                                          ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 0
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %14, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %15 = load i32, i32* %total, align 4
  %16 = load i32, i32* %index.addr, align 4
  %cmp5 = icmp sgt i32 %15, %16
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; No predecessors!
  %17 = load i32, i32* %index.addr, align 4
  %18 = load i32, i32* %total, align 4
  %sub = sub nsw i32 %17, %18
  %19 = load i32, i32* %c, align 4
  %add7 = add nsw i32 %sub, %19
  %20 = load i32, i32* %cost.addr, align 4
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 5
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %right8, align 4
  %23 = load i32, i32* @N_words, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  call void @list_links(%struct.Disjunct_struct* %24, %struct.Disjunct_struct* null, i32 0, i32 %23, %struct.Connector_struct* %22, %struct.Connector_struct* null, i32 %20, i32 %add7)
  br label %if.end13

if.else:                                          ; No predecessors!
  %25 = load i32, i32* %cost.addr, align 4
  %26 = load i32, i32* @N_words, align 4
  %call9 = call i32 @magic(i32 0, i32 %26, %struct.Connector_struct* null, %struct.Connector_struct* null, i32 %25)
  store i32 %call9, i32* %c, align 4
  %27 = load i32, i32* %c, align 4
  %28 = load i32, i32* %total, align 4
  %add10 = add nsw i32 %28, %27
  store i32 %add10, i32* %total, align 4
  %29 = load i32, i32* %index.addr, align 4
  %30 = load i32, i32* %total, align 4
  %sub11 = sub nsw i32 %29, %30
  %31 = load i32, i32* %c, align 4
  %add12 = add nsw i32 %sub11, %31
  %32 = load i32, i32* %cost.addr, align 4
  %33 = load i32, i32* @N_words, align 4
  call void @list_links(%struct.Disjunct_struct* null, %struct.Disjunct_struct* null, i32 0, i32 %33, %struct.Connector_struct* null, %struct.Connector_struct* null, i32 %32, i32 %add12)
  br label %if.end13

if.end13:                                         ; No predecessors!
  ret void
}

define void @left_disjunct_list_length_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp ne %struct.Connector_struct* %2, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret void
}

define void @free_fast_matcher_Clear() {
entry:
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %1 = load i32, i32* @match_cost, align 4
  %2 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.90, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2, i32 %1)
  br label %if.end

if.end:                                           ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %4 = load i32, i32* @N_words, align 4
  %cmp1 = icmp slt i32 %3, %4
  br i1 %cmp1, label %for.body, label %for.end23

for.body:                                         ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size, i32 0, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %cmp3 = icmp slt i32 %5, %7
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %w, align 4
  %arrayidx5 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @l_table, i32 0, i32 %9
  %10 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx5, align 4
  %arrayidx6 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %10, i32 %8
  %11 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx6, align 4
  call void @free_match_list(%struct.Match_node_struct* %11)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %13 = load i32, i32* %w, align 4
  %arrayidx7 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size, i32 0, i32 %13
  %14 = load i32, i32* %arrayidx7, align 4
  %mul = mul i32 %14, 4
  %15 = load i32, i32* %w, align 4
  %arrayidx8 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @l_table, i32 0, i32 %15
  %16 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx8, align 4
  %17 = bitcast %struct.Match_node_struct** %16 to i8*
  call void @xfree(i8* %17, i32 %mul)
  store i32 0, i32* %i, align 4
  br label %for.cond9

for.cond9:                                        ; No predecessors!
  %18 = load i32, i32* %i, align 4
  %19 = load i32, i32* %w, align 4
  %arrayidx10 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size, i32 0, i32 %19
  %20 = load i32, i32* %arrayidx10, align 4
  %cmp11 = icmp slt i32 %18, %20
  br i1 %cmp11, label %for.body12, label %for.end17

for.body12:                                       ; No predecessors!
  %21 = load i32, i32* %i, align 4
  %22 = load i32, i32* %w, align 4
  %arrayidx13 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @r_table, i32 0, i32 %22
  %23 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx13, align 4
  %arrayidx14 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %23, i32 %21
  %24 = load %struct.Match_node_struct*, %struct.Match_node_struct** %arrayidx14, align 4
  call void @free_match_list(%struct.Match_node_struct* %24)
  br label %for.inc15

for.inc15:                                        ; No predecessors!
  %25 = load i32, i32* %i, align 4
  %inc16 = add nsw i32 %25, 1
  store i32 %inc16, i32* %i, align 4
  br label %for.cond9

for.end17:                                        ; No predecessors!
  %26 = load i32, i32* %w, align 4
  %arrayidx18 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size, i32 0, i32 %26
  %27 = load i32, i32* %arrayidx18, align 4
  %mul19 = mul i32 %27, 4
  %28 = load i32, i32* %w, align 4
  %arrayidx20 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @r_table, i32 0, i32 %28
  %29 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %arrayidx20, align 4
  %30 = bitcast %struct.Match_node_struct** %29 to i8*
  call void @xfree(i8* %30, i32 %mul19)
  br label %for.inc21

for.inc21:                                        ; No predecessors!
  %31 = load i32, i32* %w, align 4
  %inc22 = add nsw i32 %31, 1
  store i32 %inc22, i32* %w, align 4
  br label %for.cond

for.end23:                                        ; No predecessors!
  %32 = load %struct.Match_node_struct*, %struct.Match_node_struct** @mn_free_list, align 4
  call void @free_match_list(%struct.Match_node_struct* %32)
  store %struct.Match_node_struct* null, %struct.Match_node_struct** @mn_free_list, align 4
  ret void
}

define void @init_fast_matcher_Clear() {
entry:
  %w = alloca i32, align 4
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca %struct.Match_node_struct**, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  store i32 0, i32* @match_cost, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end48

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_46 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %struct.BigStruct_46
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 70, i32 0)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  store i32 %load_struct.BigStruct_327, i32* %len, align 4
  %5 = load i32, i32* %len, align 4
  %call2 = call i32 @next_power_of_two_up(i32 %5)
  store i32 %call2, i32* %size, align 4
  %6 = load i32, i32* %size, align 4
  %7 = load i32, i32* %w, align 4
  %arrayidx3 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size, i32 0, i32 %7
  store i32 %6, i32* %arrayidx3, align 4
  %8 = load i32, i32* %size, align 4
  %mul = mul i32 %8, 4
  %call4 = call i8* @xalloc(i32 %mul)
  %9 = bitcast i8* %call4 to %struct.Match_node_struct**
  %10 = load i32, i32* %w, align 4
  %arrayidx5 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @l_table, i32 0, i32 %10
  store %struct.Match_node_struct** %9, %struct.Match_node_struct*** %arrayidx5, align 4
  store %struct.Match_node_struct** %9, %struct.Match_node_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond6

for.cond6:                                        ; No predecessors!
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %size, align 4
  %cmp7 = icmp slt i32 %11, %12
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; No predecessors!
  %13 = load i32, i32* %i, align 4
  %14 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %arrayidx9 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %14, i32 %13
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond6

for.end:                                          ; No predecessors!
  %16 = load i32, i32* %w, align 4
  %17 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %17, i32 0, i32 %16
  %d11 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx10, i32 0, i32 2
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d11, align 4
  store %struct.Disjunct_struct* %18, %struct.Disjunct_struct** %d, align 4
  br label %for.cond12

for.cond12:                                       ; No predecessors!
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp13 = icmp ne %struct.Disjunct_struct* %19, null
  br i1 %cmp13, label %for.body14, label %for.end18

for.body14:                                       ; No predecessors!
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp15 = icmp ne %struct.Connector_struct* %21, null
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %left16, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %25 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %26 = load i32, i32* %size, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %26, i32* %struct.BigStruct_01
  %struct.BigStruct_162 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 16
  store %struct.Match_node_struct** %25, %struct.Match_node_struct*** %struct.BigStruct_162
  %struct.BigStruct_173 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 17
  store %struct.Disjunct_struct* %24, %struct.Disjunct_struct** %struct.BigStruct_173
  %struct.BigStruct_184 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 18
  store %struct.Connector_struct* %23, %struct.Connector_struct** %struct.BigStruct_184
  %struct.BigStruct_195 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 19
  store i32 -1, i32* %struct.BigStruct_195
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 34, i32 0)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc17

for.inc17:                                        ; No predecessors!
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %27, i32 0, i32 0
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %28, %struct.Disjunct_struct** %d, align 4
  br label %for.cond12

for.end18:                                        ; No predecessors!
  %29 = load i32, i32* %w, align 4
  %30 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %30, i32 0, i32 %29
  %d20 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx19, i32 0, i32 2
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d20, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %31, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 33, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 %load_struct.BigStruct_32, i32* %len, align 4
  %32 = load i32, i32* %len, align 4
  %call22 = call i32 @next_power_of_two_up(i32 %32)
  store i32 %call22, i32* %size, align 4
  %33 = load i32, i32* %size, align 4
  %34 = load i32, i32* %w, align 4
  %arrayidx23 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size, i32 0, i32 %34
  store i32 %33, i32* %arrayidx23, align 4
  %35 = load i32, i32* %size, align 4
  %mul24 = mul i32 %35, 4
  %call25 = call i8* @xalloc(i32 %mul24)
  %36 = bitcast i8* %call25 to %struct.Match_node_struct**
  %37 = load i32, i32* %w, align 4
  %arrayidx26 = getelementptr inbounds [250 x %struct.Match_node_struct**], [250 x %struct.Match_node_struct**]* @r_table, i32 0, i32 %37
  store %struct.Match_node_struct** %36, %struct.Match_node_struct*** %arrayidx26, align 4
  store %struct.Match_node_struct** %36, %struct.Match_node_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond27

for.cond27:                                       ; No predecessors!
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %size, align 4
  %cmp28 = icmp slt i32 %38, %39
  br i1 %cmp28, label %for.body29, label %for.end33

for.body29:                                       ; No predecessors!
  %40 = load i32, i32* %i, align 4
  %41 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %arrayidx30 = getelementptr inbounds %struct.Match_node_struct*, %struct.Match_node_struct** %41, i32 %40
  store %struct.Match_node_struct* null, %struct.Match_node_struct** %arrayidx30, align 4
  br label %for.inc31

for.inc31:                                        ; No predecessors!
  %42 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %42, 1
  store i32 %inc32, i32* %i, align 4
  br label %for.cond27

for.end33:                                        ; No predecessors!
  %43 = load i32, i32* %w, align 4
  %44 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx34 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %44, i32 0, i32 %43
  %d35 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx34, i32 0, i32 2
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d35, align 4
  store %struct.Disjunct_struct* %45, %struct.Disjunct_struct** %d, align 4
  br label %for.cond36

for.cond36:                                       ; No predecessors!
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp37 = icmp ne %struct.Disjunct_struct* %46, null
  br i1 %cmp37, label %for.body38, label %for.end45

for.body38:                                       ; No predecessors!
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 5
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %cmp39 = icmp ne %struct.Connector_struct* %48, null
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; No predecessors!
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right41 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %49, i32 0, i32 5
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %right41, align 4
  %51 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %52 = load %struct.Match_node_struct**, %struct.Match_node_struct*** %t, align 4
  %53 = load i32, i32* %size, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %53, i32* %struct.BigStruct_0
  %struct.BigStruct_16 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 16
  store %struct.Match_node_struct** %52, %struct.Match_node_struct*** %struct.BigStruct_16
  %struct.BigStruct_17 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 17
  store %struct.Disjunct_struct* %51, %struct.Disjunct_struct** %struct.BigStruct_17
  %struct.BigStruct_18 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 18
  store %struct.Connector_struct* %50, %struct.Connector_struct** %struct.BigStruct_18
  %struct.BigStruct_19 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 19
  store i32 1, i32* %struct.BigStruct_19
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 34, i32 0)
  br label %if.end42

if.end42:                                         ; No predecessors!
  br label %for.inc43

for.inc43:                                        ; No predecessors!
  %54 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next44 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %54, i32 0, i32 0
  %55 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next44, align 4
  store %struct.Disjunct_struct* %55, %struct.Disjunct_struct** %d, align 4
  br label %for.cond36

for.end45:                                        ; No predecessors!
  br label %for.inc46

for.inc46:                                        ; No predecessors!
  %56 = load i32, i32* %w, align 4
  %inc47 = add nsw i32 %56, 1
  store i32 %inc47, i32* %w, align 4
  br label %for.cond

for.end48:                                        ; No predecessors!
  ret void
}

define void @contains_underbar_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 95
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  %4 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret void
}

define void @max_postfix_found_Clear() {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %d.addr = alloca %struct.Dict_node_struct*, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %0, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %d.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %1, i32 0, i32 0
  %2 = load i8*, i8** %string, align 4
  %call = call i32 @numberfy(i8* %2)
  store i32 %call, i32* %j, align 4
  %3 = load i32, i32* %j, align 4
  %4 = load i32, i32* %i, align 4
  %cmp1 = icmp sgt i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %5 = load i32, i32* %j, align 4
  store i32 %5, i32* %i, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 4
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %7, %struct.Dict_node_struct** %d.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %8 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %8, i32* %struct.BigStruct_32
  ret void
}

define void @build_idiom_word_name_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %new_s = alloca i8*, align 4
  %x = alloca i8*, align 4
  %count = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %call, %struct.Dict_node_struct** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 74, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %add = add nsw i32 %load_struct.BigStruct_32, 1
  store i32 %add, i32* %count, align 4
  %1 = load i8*, i8** %s.addr, align 4
  %call2 = call i32 @strlen_Package(i8* %1)
  %add3 = add i32 %call2, 10
  %call4 = call i8* @xalloc(i32 %add3)
  store i8* %call4, i8** %x, align 4
  store i8* %call4, i8** %new_s, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv6 = sext i8 %5 to i32
  %cmp7 = icmp ne i32 %conv6, 46
  br label %land.end

land.end:                                         ; No predecessors!
  %6 = phi i1 [ false, %while.cond ], [ %cmp7, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %7 = load i8*, i8** %s.addr, align 4
  %8 = load i8, i8* %7, align 1
  %9 = load i8*, i8** %x, align 4
  store i8 %8, i8* %9, align 1
  %10 = load i8*, i8** %x, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %x, align 4
  %11 = load i8*, i8** %s.addr, align 4
  %incdec.ptr9 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr9, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %12 = load i32, i32* %count, align 4
  %13 = load i8*, i8** %x, align 4
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.93, i32 0, i32 0
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %13, i8* %14, i32 %12)
  %15 = load i8*, i8** %new_s, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %15, i8** %struct.BigStruct_34
  ret void
}

define void @increment_current_name_Clear() {
entry:
  %i = alloca i32, align 4
  %carry = alloca i32, align 4
  store i32 7, i32* %i, align 4
  store i32 1, i32* %carry, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = load i32, i32* %carry, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  %inc = add i8 %2, 1
  store i8 %inc, i8* %arrayidx, align 1
  %3 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %3
  %4 = load i8, i8* %arrayidx1, align 1
  %conv = sext i8 %4 to i32
  %cmp2 = icmp eq i32 %conv, 91
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %5
  store i8 65, i8* %arrayidx4, align 1
  store i32 1, i32* %carry, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  store i32 0, i32* %carry, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %i, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  ret void
}

define void @generate_id_connector_Clear() {
entry:
  %i = alloca i32, align 4
  %t = alloca i8*, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %0
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 65
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %inc = add i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %sub = sub i32 8, %3
  %add = add i32 %sub, 2
  %add2 = add i32 %add, 1
  %add3 = add i32 %add2, 1
  %call = call i8* @xalloc(i32 %add3)
  store i8* %call, i8** %t, align 4
  store i8* %call, i8** %s, align 4
  %4 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  store i8 73, i8* %4, align 1
  %5 = load i8*, i8** %t, align 4
  %incdec.ptr4 = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr4, i8** %t, align 4
  store i8 68, i8* %5, align 1
  br label %for.cond5

for.cond5:                                        ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %cmp6 = icmp ult i32 %6, 8
  br i1 %cmp6, label %for.body8, label %for.end13

for.body8:                                        ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [9 x i8], [9 x i8]* @current_name, i32 0, i32 %7
  %8 = load i8, i8* %arrayidx9, align 1
  %9 = load i8*, i8** %t, align 4
  %incdec.ptr10 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr10, i8** %t, align 4
  store i8 %8, i8* %9, align 1
  br label %for.inc11

for.inc11:                                        ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc12 = add i32 %10, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond5

for.end13:                                        ; No predecessors!
  %11 = load i8*, i8** %t, align 4
  %incdec.ptr14 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr14, i8** %t, align 4
  store i8 0, i8* %11, align 1
  %12 = load i8*, i8** %s, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %12, i8** %struct.BigStruct_34
  ret void
}

define void @separate_word_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %retval = alloca i32, align 4
  %is_first_word.addr = alloca i32, align 4
  %wend.addr = alloca i8*, align 4
  %w.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %n_stripped = alloca i32, align 4
  %stripped = alloca [10 x i32], align 4
  %word = alloca [61 x i8], align 1
  store i32 %load_struct.BigStruct_5, i32* %is_first_word.addr, align 4
  store i8* %load_struct.BigStruct_3, i8** %wend.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %w.addr, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %0
  %1 = load i8*, i8** %arrayidx, align 4
  %cmp = icmp ne i8* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %2
  %3 = load i8*, i8** %arrayidx2, align 4
  %call = call i32 @strlen_Package(i8* %3)
  %4 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %4
  %5 = load i8*, i8** %arrayidx3, align 4
  %6 = load i8*, i8** %w.addr, align 4
  %call4 = call i32 @strncmp_Package(i8* %6, i8* %5, i32 %call)
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then, label %if.end11

if.then:                                          ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %7
  %8 = load i8*, i8** %arrayidx6, align 4
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %8, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_329 = load i32, i32* %struct.BigStruct_329
  %tobool = icmp ne i32 %load_struct.BigStruct_329, 0
  br i1 %tobool, label %if.end, label %if.then8

if.then8:                                         ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %9
  %10 = load i8*, i8** %arrayidx9, align 4
  %call10 = call i32 @strlen_Package(i8* %10)
  %11 = load i8*, i8** %w.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 %call10
  store i8* %add.ptr, i8** %w.addr, align 4
  br label %for.end

if.end11:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  %13 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [3 x i8*], [3 x i8*]* @strip_left, i32 0, i32 %13
  %14 = load i8*, i8** %arrayidx12, align 4
  %cmp13 = icmp eq i8* %14, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; No predecessors!
  br label %for.end16

if.end15:                                         ; No predecessors!
  br label %for.cond

for.end16:                                        ; No predecessors!
  store i32 0, i32* %n_stripped, align 4
  br label %for.cond17

for.cond17:                                       ; No predecessors!
  %15 = load i32, i32* %n_stripped, align 4
  %cmp18 = icmp slt i32 %15, 10
  br i1 %cmp18, label %for.body19, label %for.end93

for.body19:                                       ; No predecessors!
  %16 = load i8*, i8** %wend.addr, align 4
  %17 = load i8*, i8** %w.addr, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %18 = load i8*, i8** %w.addr, align 4
  %arraydecay = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_21
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %18, i8** %struct.BigStruct_32
  %struct.BigStruct_53 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %sub.ptr.sub, i32* %struct.BigStruct_53
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 3, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %19 = load i8*, i8** %wend.addr, align 4
  %20 = load i8*, i8** %w.addr, align 4
  %sub.ptr.lhs.cast21 = ptrtoint i8* %19 to i32
  %sub.ptr.rhs.cast22 = ptrtoint i8* %20 to i32
  %sub.ptr.sub23 = sub i32 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %arrayidx24 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 %sub.ptr.sub23
  store i8 0, i8* %arrayidx24, align 1
  %21 = load i8*, i8** %wend.addr, align 4
  %22 = load i8*, i8** %w.addr, align 4
  %cmp25 = icmp eq i8* %21, %22
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; No predecessors!
  br label %for.end93

if.end27:                                         ; No predecessors!
  %arraydecay28 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay28, i8** %struct.BigStruct_215
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_3216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3216 = load i32, i32* %struct.BigStruct_3216
  %tobool30 = icmp ne i32 %load_struct.BigStruct_3216, 0
  br i1 %tobool30, label %if.then31, label %if.end32

if.then31:                                        ; No predecessors!
  br label %for.end93

if.end32:                                         ; No predecessors!
  %23 = load i32, i32* %is_first_word.addr, align 4
  %tobool33 = icmp ne i32 %23, 0
  br i1 %tobool33, label %land.lhs.true, label %if.end58

land.lhs.true:                                    ; No predecessors!
  %arrayidx34 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %24 = load i8, i8* %arrayidx34, align 1
  %conv = sext i8 %24 to i32
  %call35 = call i32 @isupper_Package(i32 %conv)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.then37, label %if.end58

if.then37:                                        ; No predecessors!
  %arrayidx38 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %25 = load i8, i8* %arrayidx38, align 1
  %conv39 = sext i8 %25 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv39, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 35, i32 0)
  %struct.BigStruct_3210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3210 = load i32, i32* %struct.BigStruct_3210
  %conv41 = trunc i32 %load_struct.BigStruct_3210 to i8
  %arrayidx42 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  store i8 %conv41, i8* %arrayidx42, align 1
  %arraydecay43 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay43, i8** %struct.BigStruct_217
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_3218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3218 = load i32, i32* %struct.BigStruct_3218
  %tobool45 = icmp ne i32 %load_struct.BigStruct_3218, 0
  br i1 %tobool45, label %if.then46, label %if.end52

if.then46:                                        ; No predecessors!
  %arrayidx47 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %26 = load i8, i8* %arrayidx47, align 1
  %conv48 = sext i8 %26 to i32
  %struct.BigStruct_011 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv48, i32* %struct.BigStruct_011
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_3212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3212 = load i32, i32* %struct.BigStruct_3212
  %conv50 = trunc i32 %load_struct.BigStruct_3212 to i8
  %arrayidx51 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  store i8 %conv50, i8* %arrayidx51, align 1
  br label %for.end93

if.end52:                                         ; No predecessors!
  %arrayidx53 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %27 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %27 to i32
  %struct.BigStruct_013 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv54, i32* %struct.BigStruct_013
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  %conv56 = trunc i32 %load_struct.BigStruct_3214 to i8
  %arrayidx57 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  store i8 %conv56, i8* %arrayidx57, align 1
  br label %if.end58

if.end58:                                         ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond59

for.cond59:                                       ; No predecessors!
  %28 = load i32, i32* %i, align 4
  %arrayidx60 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %28
  %29 = load i8*, i8** %arrayidx60, align 4
  %cmp61 = icmp ne i8* %29, null
  br i1 %cmp61, label %for.body63, label %for.end85

for.body63:                                       ; No predecessors!
  %30 = load i32, i32* %i, align 4
  %arrayidx64 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %30
  %31 = load i8*, i8** %arrayidx64, align 4
  %call65 = call i32 @strlen_Package(i8* %31)
  store i32 %call65, i32* %len, align 4
  %32 = load i8*, i8** %wend.addr, align 4
  %33 = load i8*, i8** %w.addr, align 4
  %sub.ptr.lhs.cast66 = ptrtoint i8* %32 to i32
  %sub.ptr.rhs.cast67 = ptrtoint i8* %33 to i32
  %sub.ptr.sub68 = sub i32 %sub.ptr.lhs.cast66, %sub.ptr.rhs.cast67
  %34 = load i32, i32* %len, align 4
  %cmp69 = icmp slt i32 %sub.ptr.sub68, %34
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; No predecessors!
  br label %for.inc83

if.end72:                                         ; No predecessors!
  %35 = load i32, i32* %len, align 4
  %36 = load i32, i32* %i, align 4
  %arrayidx73 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %36
  %37 = load i8*, i8** %arrayidx73, align 4
  %38 = load i8*, i8** %wend.addr, align 4
  %39 = load i32, i32* %len, align 4
  %idx.neg = sub i32 0, %39
  %add.ptr74 = getelementptr inbounds i8, i8* %38, i32 %idx.neg
  %call75 = call i32 @strncmp_Package(i8* %add.ptr74, i8* %37, i32 %35)
  %cmp76 = icmp eq i32 %call75, 0
  br i1 %cmp76, label %if.then78, label %if.end82

if.then78:                                        ; No predecessors!
  %40 = load i32, i32* %i, align 4
  %41 = load i32, i32* %n_stripped, align 4
  %arrayidx79 = getelementptr inbounds [10 x i32], [10 x i32]* %stripped, i32 0, i32 %41
  store i32 %40, i32* %arrayidx79, align 4
  %42 = load i32, i32* %len, align 4
  %43 = load i8*, i8** %wend.addr, align 4
  %idx.neg80 = sub i32 0, %42
  %add.ptr81 = getelementptr inbounds i8, i8* %43, i32 %idx.neg80
  store i8* %add.ptr81, i8** %wend.addr, align 4
  br label %for.end85

if.end82:                                         ; No predecessors!
  br label %for.inc83

for.inc83:                                        ; No predecessors!
  %44 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %44, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond59

for.end85:                                        ; No predecessors!
  %45 = load i32, i32* %i, align 4
  %arrayidx86 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %45
  %46 = load i8*, i8** %arrayidx86, align 4
  %cmp87 = icmp eq i8* %46, null
  br i1 %cmp87, label %if.then89, label %if.end90

if.then89:                                        ; No predecessors!
  br label %for.end93

if.end90:                                         ; No predecessors!
  br label %for.inc91

for.inc91:                                        ; No predecessors!
  %47 = load i32, i32* %n_stripped, align 4
  %inc92 = add nsw i32 %47, 1
  store i32 %inc92, i32* %n_stripped, align 4
  br label %for.cond17

for.end93:                                        ; No predecessors!
  %48 = load i32, i32* %n_stripped, align 4
  %cmp94 = icmp eq i32 %48, 10
  br i1 %cmp94, label %if.then96, label %if.end99

if.then96:                                        ; No predecessors!
  %arraydecay97 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %49 = getelementptr inbounds [49 x i8], [49 x i8]* @.str.15.140, i32 0, i32 0
  %call98 = call i32 (i8*, ...) @printf(i8* %49, i8* %arraydecay97)
  store i32 0, i32* %retval, align 4
  br label %return

if.end99:                                         ; No predecessors!
  %arraydecay100 = getelementptr inbounds [61 x i8], [61 x i8]* %word, i32 0, i32 0
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay100, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  %tobool102 = icmp ne i32 %load_struct.BigStruct_327, 0
  br i1 %tobool102, label %if.end104, label %if.then103

if.then103:                                       ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end104:                                        ; No predecessors!
  %50 = load i32, i32* %n_stripped, align 4
  %sub = sub nsw i32 %50, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond105

for.cond105:                                      ; No predecessors!
  %51 = load i32, i32* %i, align 4
  %cmp106 = icmp sge i32 %51, 0
  br i1 %cmp106, label %for.body108, label %for.end116

for.body108:                                      ; No predecessors!
  %52 = load i32, i32* %i, align 4
  %arrayidx109 = getelementptr inbounds [10 x i32], [10 x i32]* %stripped, i32 0, i32 %52
  %53 = load i32, i32* %arrayidx109, align 4
  %arrayidx110 = getelementptr inbounds [11 x i8*], [11 x i8*]* @strip_right, i32 0, i32 %53
  %54 = load i8*, i8** %arrayidx110, align 4
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %54, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %tobool112 = icmp ne i32 %load_struct.BigStruct_325, 0
  br i1 %tobool112, label %if.end114, label %if.then113

if.then113:                                       ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end114:                                        ; No predecessors!
  br label %for.inc115

for.inc115:                                       ; No predecessors!
  %55 = load i32, i32* %i, align 4
  %dec = add nsw i32 %55, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond105

for.end116:                                       ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %56 = load i32, i32* %retval, align 4
  %struct.BigStruct_3219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %56, i32* %struct.BigStruct_3219
  ret void
}

define void @strchr_Package_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %call = call i8* @strchr(i8* %load_struct.BigStruct_2, i32 %load_struct.BigStruct_5)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret void
}

define void @print_time_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %1 = load i8*, i8** %s.addr, align 4
  %2 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.177, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2, i8* %1)
  br label %if.end

if.end:                                           ; No predecessors!
  ret void
}

define void @compute_linkage_arrays_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %cost.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %cost.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %index.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %1 = load i32, i32* %index.addr, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %1, i32* %struct.BigStruct_01
  %struct.BigStruct_52 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %0, i32* %struct.BigStruct_52
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 69, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 65, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %load_struct.BigStruct_32, i32* %struct.BigStruct_323
  ret void
}

define void @fgets_Package_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  %load_struct.BigStruct_26 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_26
  %call = call i8* @fgets(i8* %load_struct.BigStruct_2, i32 %load_struct.BigStruct_5, %struct._iobuf* %load_struct.BigStruct_26)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret void
}

define void @glom_comma_connector_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d_list = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_list, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end18

for.body:                                         ; No predecessors!
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %3, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc16

if.end:                                           ; No predecessors!
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %left2, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %7, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %next6, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.end:                                          ; No predecessors!
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 0
  %11 = load i16, i16* %label, align 4
  %conv = sext i16 %11 to i32
  %cmp7 = icmp slt i32 %conv, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; No predecessors!
  br label %for.inc16

if.end10:                                         ; No predecessors!
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %12)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d2, align 4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 0
  store %struct.Disjunct_struct* %13, %struct.Disjunct_struct** %next11, align 4
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %15, %struct.Disjunct_struct** %d_list, align 4
  %call12 = call i8* @xalloc(i32 16)
  %16 = bitcast i8* %call12 to %struct.Connector_struct*
  store %struct.Connector_struct* %16, %struct.Connector_struct** %c1, align 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 5
  %18 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.282, i32 0, i32 0
  store i8* %18, i8** %string, align 4
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label13 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %19, i32 0, i32 0
  store i16 -2, i16* %label13, align 4
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %20, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %21, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next14 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next14, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next15 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %24, i32 0, i32 4
  store %struct.Connector_struct* %23, %struct.Connector_struct** %next15, align 4
  br label %for.inc16

for.inc16:                                        ; No predecessors!
  %25 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next17 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %25, i32 0, i32 0
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next17, align 4
  store %struct.Disjunct_struct* %26, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.end18:                                        ; No predecessors!
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call19 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %28, %struct.Disjunct_struct* %27)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %call19, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @glom_aux_connector_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %necessary.addr = alloca i32, align 4
  %label.addr = alloca i32, align 4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %d_list = alloca %struct.Disjunct_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %c1 = alloca %struct.Connector_struct*, align 4
  %c2 = alloca %struct.Connector_struct*, align 4
  store i32 %load_struct.BigStruct_8, i32* %necessary.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %label.addr, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_list, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end37

for.body:                                         ; No predecessors!
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 4
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %3, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc35

if.end:                                           ; No predecessors!
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left2 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %left2, align 4
  store %struct.Connector_struct* %5, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %cmp4 = icmp ne %struct.Connector_struct* %7, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next6 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %8, i32 0, i32 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %next6, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %c, align 4
  br label %for.cond3

for.end:                                          ; No predecessors!
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label7 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 0
  %11 = load i16, i16* %label7, align 4
  %conv = sext i16 %11 to i32
  %cmp8 = icmp slt i32 %conv, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; No predecessors!
  br label %for.inc35

if.end11:                                         ; No predecessors!
  %12 = load i32, i32* %necessary.addr, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.end14, label %if.then12

if.then12:                                        ; No predecessors!
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %call = call %struct.Disjunct_struct* @copy_disjunct(%struct.Disjunct_struct* %13)
  store %struct.Disjunct_struct* %call, %struct.Disjunct_struct** %d2, align 4
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next13 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 0
  store %struct.Disjunct_struct* %14, %struct.Disjunct_struct** %next13, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %16, %struct.Disjunct_struct** %d_list, align 4
  br label %if.end14

if.end14:                                         ; No predecessors!
  %call15 = call i8* @xalloc(i32 16)
  %17 = bitcast i8* %call15 to %struct.Connector_struct*
  store %struct.Connector_struct* %17, %struct.Connector_struct** %c1, align 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %18, i32 0, i32 5
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.1.283, i32 0, i32 0
  store i8* %19, i8** %string, align 4
  %20 = load i32, i32* %label.addr, align 4
  %conv16 = trunc i32 %20 to i16
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %label17 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %21, i32 0, i32 0
  store i16 %conv16, i16* %label17, align 4
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %25 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %next18 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %25, i32 0, i32 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %next18, align 4
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left19 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 4
  %27 = load %struct.Connector_struct*, %struct.Connector_struct** %left19, align 4
  %28 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp20 = icmp eq %struct.Connector_struct* %27, %28
  br i1 %cmp20, label %if.then22, label %if.else

if.then22:                                        ; No predecessors!
  %29 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left23 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 4
  store %struct.Connector_struct* %29, %struct.Connector_struct** %left23, align 4
  br label %if.end34

if.else:                                          ; No predecessors!
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left24 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 4
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %left24, align 4
  store %struct.Connector_struct* %32, %struct.Connector_struct** %c2, align 4
  br label %for.cond25

for.cond25:                                       ; No predecessors!
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next26 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %33, i32 0, i32 4
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %next26, align 4
  %35 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp27 = icmp ne %struct.Connector_struct* %34, %35
  br i1 %cmp27, label %for.body29, label %for.end32

for.body29:                                       ; No predecessors!
  br label %for.inc30

for.inc30:                                        ; No predecessors!
  %36 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next31 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %36, i32 0, i32 4
  %37 = load %struct.Connector_struct*, %struct.Connector_struct** %next31, align 4
  store %struct.Connector_struct* %37, %struct.Connector_struct** %c2, align 4
  br label %for.cond25

for.end32:                                        ; No predecessors!
  %38 = load %struct.Connector_struct*, %struct.Connector_struct** %c1, align 4
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %c2, align 4
  %next33 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %39, i32 0, i32 4
  store %struct.Connector_struct* %38, %struct.Connector_struct** %next33, align 4
  br label %if.end34

if.end34:                                         ; No predecessors!
  br label %for.inc35

for.inc35:                                        ; No predecessors!
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next36 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %40, i32 0, i32 0
  %41 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next36, align 4
  store %struct.Disjunct_struct* %41, %struct.Disjunct_struct** %d1, align 4
  br label %for.cond

for.end37:                                        ; No predecessors!
  %42 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_list, align 4
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %call38 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %43, %struct.Disjunct_struct* %42)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %call38, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @add_one_connector_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  %load_struct.BigStruct_12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_12
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %cs.addr = alloca i8*, align 4
  %dir.addr = alloca i32, align 4
  %label.addr = alloca i32, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_12, %struct.Disjunct_struct** %d.addr, align 4
  store i8* %load_struct.BigStruct_11, i8** %cs.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %dir.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %label.addr, align 4
  %call = call i8* @xalloc(i32 16)
  %0 = bitcast i8* %call to %struct.Connector_struct*
  store %struct.Connector_struct* %0, %struct.Connector_struct** %c, align 4
  %1 = load i8*, i8** %cs.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %2, i32 0, i32 5
  store i8* %1, i8** %string, align 4
  %3 = load i32, i32* %label.addr, align 4
  %conv = trunc i32 %3 to i16
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label1 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 0
  store i16 %conv, i16* %label1, align 4
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next, align 4
  %8 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %8, 43
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 5
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 4
  store %struct.Connector_struct* %10, %struct.Connector_struct** %next3, align 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %right4 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 5
  store %struct.Connector_struct* %12, %struct.Connector_struct** %right4, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next5 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 4
  store %struct.Connector_struct* %15, %struct.Connector_struct** %next5, align 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 4
  store %struct.Connector_struct* %17, %struct.Connector_struct** %left6, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %19, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @special_disjunct_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  %load_struct.BigStruct_27 = load i8*, i8** %struct.BigStruct_27
  %ds.addr = alloca i8*, align 4
  %cs.addr = alloca i8*, align 4
  %dir.addr = alloca i32, align 4
  %label.addr = alloca i32, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store i8* %load_struct.BigStruct_27, i8** %ds.addr, align 4
  store i8* %load_struct.BigStruct_11, i8** %cs.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %dir.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %label.addr, align 4
  %call = call i8* @xalloc(i32 20)
  %0 = bitcast i8* %call to %struct.Disjunct_struct*
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %d1, align 4
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 1
  store i16 0, i16* %cost, align 4
  %2 = load i8*, i8** %ds.addr, align 4
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %string = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 3
  store i8* %2, i8** %string, align 4
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %4, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next, align 4
  %call1 = call i8* @xalloc(i32 16)
  %5 = bitcast i8* %call1 to %struct.Connector_struct*
  store %struct.Connector_struct* %5, %struct.Connector_struct** %c, align 4
  %6 = load i8*, i8** %cs.addr, align 4
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %string2 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %7, i32 0, i32 5
  store i8* %6, i8** %string2, align 4
  %8 = load i32, i32* %label.addr, align 4
  %conv = trunc i32 %8 to i16
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %label3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %9, i32 0, i32 0
  store i16 %conv, i16* %label3, align 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %priority = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 2
  store i8 0, i8* %priority, align 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %multi = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %11, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next4 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %next4, align 4
  %13 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %13, 43
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %14, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left, align 4
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 5
  store %struct.Connector_struct* %15, %struct.Connector_struct** %right, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %right6 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %17, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right6, align 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %left7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %left7, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %20, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @init_table_Clear() {
entry:
  %i = alloca i32, align 4
  %0 = load i32, i32* @N_words, align 4
  %cmp = icmp sge i32 %0, 10
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 65536, i32* @table_size, align 4
  br label %if.end4

if.else:                                          ; No predecessors!
  %1 = load i32, i32* @N_words, align 4
  %cmp1 = icmp sge i32 %1, 4
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; No predecessors!
  %2 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %2, 4
  %mul = mul nsw i32 6, %sub
  %div = sdiv i32 %mul, 6
  %add = add nsw i32 %div, 4
  %shl = shl i32 1, %add
  store i32 %shl, i32* @table_size, align 4
  br label %if.end

if.else3:                                         ; No predecessors!
  store i32 16, i32* @table_size, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end4

if.end4:                                          ; No predecessors!
  %3 = load i32, i32* @table_size, align 4
  %mul5 = mul i32 %3, 4
  %call = call i8* @xalloc(i32 %mul5)
  %4 = bitcast i8* %call to %struct.Table_connector**
  store %struct.Table_connector** %4, %struct.Table_connector*** @table, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @table_size, align 4
  %cmp6 = icmp slt i32 %5, %6
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %8 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %arrayidx = getelementptr inbounds %struct.Table_connector*, %struct.Table_connector** %8, i32 %7
  store %struct.Table_connector* null, %struct.Table_connector** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @free_table_Clear() {
entry:
  %i = alloca i32, align 4
  %t = alloca %struct.Table_connector*, align 4
  %x = alloca %struct.Table_connector*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @table_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end5

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %arrayidx = getelementptr inbounds %struct.Table_connector*, %struct.Table_connector** %3, i32 %2
  %4 = load %struct.Table_connector*, %struct.Table_connector** %arrayidx, align 4
  store %struct.Table_connector* %4, %struct.Table_connector** %t, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %5 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cmp2 = icmp ne %struct.Table_connector* %5, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %6 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %next = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %6, i32 0, i32 6
  %7 = load %struct.Table_connector*, %struct.Table_connector** %next, align 4
  store %struct.Table_connector* %7, %struct.Table_connector** %x, align 4
  %8 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %9 = bitcast %struct.Table_connector* %8 to i8*
  call void @xfree(i8* %9, i32 24)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load %struct.Table_connector*, %struct.Table_connector** %x, align 4
  store %struct.Table_connector* %10, %struct.Table_connector** %t, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  br label %for.inc4

for.inc4:                                         ; No predecessors!
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end5:                                         ; No predecessors!
  %12 = load i32, i32* @table_size, align 4
  %mul = mul i32 %12, 4
  %13 = load %struct.Table_connector**, %struct.Table_connector*** @table, align 4
  %14 = bitcast %struct.Table_connector** %13 to i8*
  call void @xfree(i8* %14, i32 %mul)
  ret void
}

define void @table_update_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  %load_struct.BigStruct_6 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_6
  %struct.BigStruct_7 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 7
  %load_struct.BigStruct_7 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_7
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  %load_struct.BigStruct_15 = load i32, i32* %struct.BigStruct_15
  %count.addr = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %re.addr = alloca %struct.Connector_struct*, align 4
  %le.addr = alloca %struct.Connector_struct*, align 4
  %rw.addr = alloca i32, align 4
  %lw.addr = alloca i32, align 4
  %t = alloca %struct.Table_connector*, align 4
  store i32 %load_struct.BigStruct_15, i32* %count.addr, align 4
  store i32 %load_struct.BigStruct_8, i32* %cost.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_7, %struct.Connector_struct** %re.addr, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_6, %struct.Connector_struct** %le.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %rw.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %lw.addr, align 4
  %0 = load i32, i32* %cost.addr, align 4
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %re.addr, align 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %le.addr, align 4
  %3 = load i32, i32* %rw.addr, align 4
  %4 = load i32, i32* %lw.addr, align 4
  %call = call %struct.Table_connector* @table_pointer(i32 %4, i32 %3, %struct.Connector_struct* %2, %struct.Connector_struct* %1, i32 %0)
  store %struct.Table_connector* %call, %struct.Table_connector** %t, align 4
  %5 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %cmp = icmp ne %struct.Table_connector* %5, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  %6 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1.334, i32 0, i32 0
  %7 = getelementptr inbounds [43 x i8], [43 x i8]* @.str.335, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %6, i8* %7)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; No predecessors!
  %8 = load i32, i32* %count.addr, align 4
  %9 = load %struct.Table_connector*, %struct.Table_connector** %t, align 4
  %count2 = getelementptr inbounds %struct.Table_connector, %struct.Table_connector* %9, i32 0, i32 5
  store i32 %8, i32* %count2, align 4
  ret void
}

define void @compute_chosen_words_Clear() {
entry:
  %i = alloca i32, align 4
  %l = alloca i32, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %u = alloca i8*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end31

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %4 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %4
  store i8* %arraydecay, i8** %arrayidx1, align 4
  %5 = load i32, i32* %i, align 4
  %6 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx2 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %6, i32 0, i32 %5
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx2, align 4
  %cmp3 = icmp eq %struct.Disjunct_struct* %7, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %8 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %8
  %9 = load i8*, i8** %arrayidx4, align 4
  store i8* %9, i8** %t, align 4
  %10 = load i8*, i8** %t, align 4
  %call = call i32 @strlen_Package(i8* %10)
  %add = add i32 %call, 2
  store i32 %add, i32* %l, align 4
  %11 = load i32, i32* %l, align 4
  %add5 = add nsw i32 %11, 1
  %call6 = call i8* @xalloc(i32 %add5)
  store i8* %call6, i8** %s, align 4
  %12 = load i8*, i8** %t, align 4
  %13 = load i8*, i8** %s, align 4
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.15.652, i32 0, i32 0
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* %13, i8* %14, i8* %12)
  %15 = load i32, i32* %l, align 4
  %add8 = add nsw i32 %15, 1
  %16 = load i8*, i8** %s, align 4
  call void @free_this_string_later(i8* %16, i32 %add8)
  %17 = load i8*, i8** %s, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %18
  store i8* %17, i8** %arrayidx9, align 4
  br label %if.end29

if.else:                                          ; No predecessors!
  %19 = load i32, i32* @display_word_subscripts, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.then10, label %if.end28

if.then10:                                        ; No predecessors!
  %20 = load i32, i32* %i, align 4
  %21 = bitcast [250 x %struct.Disjunct_struct*]* @chosen_disjuncts to [0 x %struct.Disjunct_struct*]*
  %arrayidx11 = getelementptr inbounds [0 x %struct.Disjunct_struct*], [0 x %struct.Disjunct_struct*]* %21, i32 0, i32 %20
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx11, align 4
  %string12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 3
  %23 = load i8*, i8** %string12, align 4
  store i8* %23, i8** %t, align 4
  %24 = load i8*, i8** %t, align 4
  %call13 = call i32 @is_idiom_word(i8* %24)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then15, label %if.else26

if.then15:                                        ; No predecessors!
  %25 = load i8*, i8** %t, align 4
  %call16 = call i32 @strlen_Package(i8* %25)
  store i32 %call16, i32* %l, align 4
  %26 = load i32, i32* %l, align 4
  %add17 = add nsw i32 %26, 1
  %call18 = call i8* @xalloc(i32 %add17)
  store i8* %call18, i8** %s, align 4
  %27 = load i32, i32* %l, align 4
  %add19 = add nsw i32 %27, 1
  %28 = load i8*, i8** %s, align 4
  call void @free_this_string_later(i8* %28, i32 %add19)
  %29 = load i8*, i8** %t, align 4
  %30 = load i8*, i8** %s, align 4
  %call20 = call i8* @strcpy_Package(i8* %30, i8* %29)
  %31 = load i8*, i8** %s, align 4
  store i8* %31, i8** %u, align 4
  br label %for.cond21

for.cond21:                                       ; No predecessors!
  %32 = load i8*, i8** %u, align 4
  %33 = load i8, i8* %32, align 1
  %conv = sext i8 %33 to i32
  %cmp22 = icmp ne i32 %conv, 46
  br i1 %cmp22, label %for.body24, label %for.end

for.body24:                                       ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %34 = load i8*, i8** %u, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr, i8** %u, align 4
  br label %for.cond21

for.end:                                          ; No predecessors!
  %35 = load i8*, i8** %u, align 4
  store i8 0, i8* %35, align 1
  %36 = load i8*, i8** %s, align 4
  %37 = load i32, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %37
  store i8* %36, i8** %arrayidx25, align 4
  br label %if.end

if.else26:                                        ; No predecessors!
  %38 = load i8*, i8** %t, align 4
  %39 = load i32, i32* %i, align 4
  %arrayidx27 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %39
  store i8* %38, i8** %arrayidx27, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end28

if.end28:                                         ; No predecessors!
  br label %if.end29

if.end29:                                         ; No predecessors!
  br label %for.inc30

for.inc30:                                        ; No predecessors!
  %40 = load i32, i32* %i, align 4
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end31:                                        ; No predecessors!
  %41 = load i32, i32* @left_wall_defined, align 4
  %tobool32 = icmp ne i32 %41, 0
  br i1 %tobool32, label %if.then33, label %if.end34

if.then33:                                        ; No predecessors!
  %42 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.16.653, i32 0, i32 0
  %43 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 0
  store i8* %42, i8** %43, align 4
  br label %if.end34

if.end34:                                         ; No predecessors!
  %44 = load i32, i32* @right_wall_defined, align 4
  %tobool35 = icmp ne i32 %44, 0
  br i1 %tobool35, label %if.then36, label %if.end38

if.then36:                                        ; No predecessors!
  %45 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %45, 1
  %arrayidx37 = getelementptr inbounds [250 x i8*], [250 x i8*]* @chosen_words, i32 0, i32 %sub
  %46 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.17.654, i32 0, i32 0
  store i8* %46, i8** %arrayidx37, align 4
  br label %if.end38

if.end38:                                         ; No predecessors!
  ret void
}

define void @print_disjunct_counts_Clear() {
entry:
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; No predecessors!
  store i32 0, i32* %c, align 4
  %2 = load i32, i32* %i, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load i32, i32* %c, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %c, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %9 = load i32, i32* %c, align 4
  %10 = load i32, i32* %i, align 4
  %11 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %11, i32 0, i32 %10
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %12 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.23.664, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %12, i8* %arraydecay, i32 %9)
  br label %for.inc6

for.inc6:                                         ; No predecessors!
  %13 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %13, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end8:                                         ; No predecessors!
  %14 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.24.665, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %14)
  ret void
}

define void @free_S_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @s_table_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %3, i32 %2
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc

if.end:                                           ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx2 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %6, i32 %5
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %arrayidx2, align 4
  call void @free_connectors(%struct.Connector_struct* %7)
  %8 = load i32, i32* %i, align 4
  %9 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx3 = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %9, i32 %8
  store %struct.Connector_struct* null, %struct.Connector_struct** %arrayidx3, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @count_disjuncts_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %count = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %count, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load i32, i32* %count, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %count, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %2, i32 0, i32 0
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %3, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %4 = load i32, i32* %count, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %4, i32* %struct.BigStruct_32
  ret void
}

define void @eliminate_duplicate_disjuncts_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %i = alloca i32, align 4
  %h = alloca i32, align 4
  %count = alloca i32, align 4
  %dn = alloca %struct.Disjunct_struct*, align 4
  %dx = alloca %struct.Disjunct_struct*, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %count, align 4
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_44 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %0, %struct.Disjunct_struct** %struct.BigStruct_44
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 93, i32 0)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %mul = mul nsw i32 2, %load_struct.BigStruct_325
  %call1 = call i32 @next_power_of_two_up(i32 %mul)
  store i32 %call1, i32* @dup_table_size, align 4
  %1 = load i32, i32* @dup_table_size, align 4
  %mul2 = mul i32 %1, 4
  %call3 = call i8* @xalloc(i32 %mul2)
  %2 = bitcast i8* %call3 to %struct.Disjunct_struct**
  store %struct.Disjunct_struct** %2, %struct.Disjunct_struct*** @dup_table, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* @dup_table_size, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %6, i32 %5
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp4 = icmp ne %struct.Disjunct_struct* %8, null
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 0
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %10, %struct.Disjunct_struct** %dn, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %struct.BigStruct_42
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 42, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  store i32 %load_struct.BigStruct_323, i32* %h, align 4
  %12 = load i32, i32* %h, align 4
  %13 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx6 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %13, i32 %12
  %14 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx6, align 4
  store %struct.Disjunct_struct* %14, %struct.Disjunct_struct** %dx, align 4
  br label %for.cond7

for.cond7:                                        ; No predecessors!
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cmp8 = icmp ne %struct.Disjunct_struct* %15, null
  br i1 %cmp8, label %for.body9, label %for.end13

for.body9:                                        ; No predecessors!
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %struct.BigStruct_41
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  store %struct.Disjunct_struct* %16, %struct.Disjunct_struct** %struct.BigStruct_12
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 25, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.end13

if.end:                                           ; No predecessors!
  br label %for.inc11

for.inc11:                                        ; No predecessors!
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %next12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 0
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next12, align 4
  store %struct.Disjunct_struct* %19, %struct.Disjunct_struct** %dx, align 4
  br label %for.cond7

for.end13:                                        ; No predecessors!
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cmp14 = icmp eq %struct.Disjunct_struct* %20, null
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; No predecessors!
  %21 = load i32, i32* %h, align 4
  %22 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx16 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %22, i32 %21
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx16, align 4
  %24 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next17 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %24, i32 0, i32 0
  store %struct.Disjunct_struct* %23, %struct.Disjunct_struct** %next17, align 4
  %25 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %26 = load i32, i32* %h, align 4
  %27 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx18 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %27, i32 %26
  store %struct.Disjunct_struct* %25, %struct.Disjunct_struct** %arrayidx18, align 4
  br label %if.end29

if.else:                                          ; No predecessors!
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next19 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %28, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next19, align 4
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cost = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %29, i32 0, i32 1
  %30 = load i16, i16* %cost, align 4
  %conv = sext i16 %30 to i32
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cost20 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %31, i32 0, i32 1
  %32 = load i16, i16* %cost20, align 4
  %conv21 = sext i16 %32 to i32
  %cmp22 = icmp slt i32 %conv, %conv21
  br i1 %cmp22, label %if.then24, label %if.end27

if.then24:                                        ; No predecessors!
  %33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cost25 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %33, i32 0, i32 1
  %34 = load i16, i16* %cost25, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  %cost26 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 1
  store i16 %34, i16* %cost26, align 4
  br label %if.end27

if.end27:                                         ; No predecessors!
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %36)
  %37 = load i32, i32* %count, align 4
  %inc28 = add nsw i32 %37, 1
  store i32 %inc28, i32* %count, align 4
  br label %if.end29

if.end29:                                         ; No predecessors!
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  store %struct.Disjunct_struct* %38, %struct.Disjunct_struct** %d.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond30

for.cond30:                                       ; No predecessors!
  %39 = load i32, i32* %i, align 4
  %40 = load i32, i32* @dup_table_size, align 4
  %cmp31 = icmp slt i32 %39, %40
  br i1 %cmp31, label %for.body33, label %for.end45

for.body33:                                       ; No predecessors!
  %41 = load i32, i32* %i, align 4
  %42 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %arrayidx34 = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %42, i32 %41
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx34, align 4
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %dn, align 4
  br label %for.cond35

for.cond35:                                       ; No predecessors!
  %44 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  %cmp36 = icmp ne %struct.Disjunct_struct* %44, null
  br i1 %cmp36, label %for.body38, label %for.end42

for.body38:                                       ; No predecessors!
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  %next39 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 0
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next39, align 4
  store %struct.Disjunct_struct* %46, %struct.Disjunct_struct** %dx, align 4
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  %next40 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %48, i32 0, i32 0
  store %struct.Disjunct_struct* %47, %struct.Disjunct_struct** %next40, align 4
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dn, align 4
  store %struct.Disjunct_struct* %49, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.inc41

for.inc41:                                        ; No predecessors!
  %50 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %50, %struct.Disjunct_struct** %dn, align 4
  br label %for.cond35

for.end42:                                        ; No predecessors!
  br label %for.inc43

for.inc43:                                        ; No predecessors!
  %51 = load i32, i32* %i, align 4
  %inc44 = add nsw i32 %51, 1
  store i32 %inc44, i32* %i, align 4
  br label %for.cond30

for.end45:                                        ; No predecessors!
  %52 = load i32, i32* @dup_table_size, align 4
  %mul46 = mul i32 %52, 4
  %53 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @dup_table, align 4
  %54 = bitcast %struct.Disjunct_struct** %53 to i8*
  call void @xfree(i8* %54, i32 %mul46)
  %55 = load i32, i32* @verbosity, align 4
  %cmp47 = icmp sgt i32 %55, 2
  br i1 %cmp47, label %land.lhs.true, label %if.end53

land.lhs.true:                                    ; No predecessors!
  %56 = load i32, i32* %count, align 4
  %cmp49 = icmp ne i32 %56, 0
  br i1 %cmp49, label %if.then51, label %if.end53

if.then51:                                        ; No predecessors!
  %57 = load i32, i32* %count, align 4
  %58 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.2.683, i32 0, i32 0
  %call52 = call i32 (i8*, ...) @printf(i8* %58, i32 %57)
  br label %if.end53

if.end53:                                         ; No predecessors!
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %59, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @left_connector_count_Clear() {
entry:
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  %load_struct.BigStruct_4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_4
  %d.addr = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %i = alloca i32, align 4
  store %struct.Disjunct_struct* %load_struct.BigStruct_4, %struct.Disjunct_struct** %d.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; No predecessors!
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %1, i32 0, i32 4
  %2 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %2, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %3 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp2 = icmp ne %struct.Connector_struct* %3, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %5 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %5, i32 0, i32 4
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %6, %struct.Connector_struct** %c, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  br label %for.inc4

for.inc4:                                         ; No predecessors!
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d.addr, align 4
  %next5 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next5, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d.addr, align 4
  br label %for.cond

for.end6:                                         ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %9, i32* %struct.BigStruct_32
  ret void
}

define void @free_power_tables_Clear() {
entry:
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end22

for.body:                                         ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %3
  %4 = load i32, i32* %arrayidx, align 4
  %cmp2 = icmp slt i32 %2, %4
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %w, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %6
  %7 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx4, align 4
  %arrayidx5 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %7, i32 %5
  %8 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx5, align 4
  call void @free_C_list(%struct.c_list_struct* %8)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  %10 = load i32, i32* %w, align 4
  %arrayidx6 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %10
  %11 = load i32, i32* %arrayidx6, align 4
  %mul = mul i32 %11, 4
  %12 = load i32, i32* %w, align 4
  %arrayidx7 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %12
  %13 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx7, align 4
  %14 = bitcast %struct.c_list_struct** %13 to i8*
  call void @xfree(i8* %14, i32 %mul)
  store i32 0, i32* %i, align 4
  br label %for.cond8

for.cond8:                                        ; No predecessors!
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %w, align 4
  %arrayidx9 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %16
  %17 = load i32, i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %15, %17
  br i1 %cmp10, label %for.body11, label %for.end16

for.body11:                                       ; No predecessors!
  %18 = load i32, i32* %i, align 4
  %19 = load i32, i32* %w, align 4
  %arrayidx12 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %19
  %20 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx12, align 4
  %arrayidx13 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %20, i32 %18
  %21 = load %struct.c_list_struct*, %struct.c_list_struct** %arrayidx13, align 4
  call void @free_C_list(%struct.c_list_struct* %21)
  br label %for.inc14

for.inc14:                                        ; No predecessors!
  %22 = load i32, i32* %i, align 4
  %inc15 = add nsw i32 %22, 1
  store i32 %inc15, i32* %i, align 4
  br label %for.cond8

for.end16:                                        ; No predecessors!
  %23 = load i32, i32* %w, align 4
  %arrayidx17 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %23
  %24 = load i32, i32* %arrayidx17, align 4
  %mul18 = mul i32 %24, 4
  %25 = load i32, i32* %w, align 4
  %arrayidx19 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %25
  %26 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx19, align 4
  %27 = bitcast %struct.c_list_struct** %26 to i8*
  call void @xfree(i8* %27, i32 %mul18)
  br label %for.inc20

for.inc20:                                        ; No predecessors!
  %28 = load i32, i32* %w, align 4
  %inc21 = add nsw i32 %28, 1
  store i32 %inc21, i32* %w, align 4
  br label %for.cond

for.end22:                                        ; No predecessors!
  ret void
}

define void @get_character_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %quote_mode.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %quote_mode.addr, align 4
  %0 = load %struct._iobuf*, %struct._iobuf** @dict_file, align 4
  %call = call i32 @fgetc_Package(%struct._iobuf* %0)
  store i32 %call, i32* %c, align 4
  %1 = load i32, i32* %c, align 4
  %cmp = icmp eq i32 %1, 37
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; No predecessors!
  %2 = load i32, i32* %quote_mode.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %3 = load i32, i32* %c, align 4
  %cmp1 = icmp ne i32 %3, -1
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %4 = load i32, i32* %c, align 4
  %cmp2 = icmp ne i32 %4, 10
  br label %land.end

land.end:                                         ; No predecessors!
  %5 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %5, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %6 = load %struct._iobuf*, %struct._iobuf** @dict_file, align 4
  %call3 = call i32 @fgetc_Package(%struct._iobuf* %6)
  store i32 %call3, i32* %c, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  br label %if.end

if.end:                                           ; No predecessors!
  %7 = load i32, i32* %c, align 4
  %cmp4 = icmp eq i32 %7, 10
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; No predecessors!
  %8 = load i32, i32* @line_number, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* @line_number, align 4
  br label %if.end6

if.end6:                                          ; No predecessors!
  %9 = load i32, i32* %c, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %9, i32* %struct.BigStruct_32
  ret void
}

define void @isalnum_Package_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i32 @isalnum(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @free_X_nodes_Clear() {
entry:
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  %load_struct.BigStruct_14 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_14
  %x.addr = alloca %struct.X_node_struct*, align 4
  %y = alloca %struct.X_node_struct*, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_14, %struct.X_node_struct** %x.addr, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %cmp = icmp ne %struct.X_node_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %1, i32 0, i32 2
  %2 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %2, %struct.X_node_struct** %y, align 4
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %3, i32 0, i32 1
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  call void @free_Exp(%struct.Exp_struct* %4)
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x.addr, align 4
  %6 = bitcast %struct.X_node_struct* %5 to i8*
  call void @xfree(i8* %6, i32 12)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %y, align 4
  store %struct.X_node_struct* %7, %struct.X_node_struct** %x.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @get_a_word_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %retval = alloca i8*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %word = alloca [60 x i8], align 1
  %s = alloca i8*, align 4
  %c = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  br label %do.body

do.body:                                          ; No predecessors!
  %0 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %call = call i32 @getc_Package(%struct._iobuf* %0)
  store i32 %call, i32* %c, align 4
  br label %do.cond

do.cond:                                          ; No predecessors!
  %1 = load i32, i32* %c, align 4
  %cmp = icmp ne i32 %1, -1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %2 = load i32, i32* %c, align 4
  %call1 = call i32 @isspace_Package(i32 %2)
  %tobool = icmp ne i32 %call1, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %3 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %3, label %do.body, label %do.end

do.end:                                           ; No predecessors!
  %4 = load i32, i32* %c, align 4
  %cmp2 = icmp eq i32 %4, -1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %5 = load i32, i32* %j, align 4
  %cmp3 = icmp slt i32 %5, 60
  br i1 %cmp3, label %land.lhs.true, label %land.end8

land.lhs.true:                                    ; No predecessors!
  %6 = load i32, i32* %c, align 4
  %call4 = call i32 @isspace_Package(i32 %6)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %land.end8, label %land.rhs6

land.rhs6:                                        ; No predecessors!
  %7 = load i32, i32* %c, align 4
  %cmp7 = icmp ne i32 %7, -1
  br label %land.end8

land.end8:                                        ; No predecessors!
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %cmp7, %land.rhs6 ]
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %9 = load i32, i32* %c, align 4
  %conv = trunc i32 %9 to i8
  %10 = load i32, i32* %j, align 4
  %arrayidx = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 %10
  store i8 %conv, i8* %arrayidx, align 1
  %11 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %call9 = call i32 @getc_Package(%struct._iobuf* %11)
  store i32 %call9, i32* %c, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load i32, i32* %j, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %13 = load i32, i32* %j, align 4
  %cmp10 = icmp eq i32 %13, 60
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; No predecessors!
  %14 = getelementptr inbounds [49 x i8], [49 x i8]* @.str.810, i32 0, i32 0
  call void @error(i8* %14)
  br label %if.end13

if.end13:                                         ; No predecessors!
  %15 = load i32, i32* %j, align 4
  %arrayidx14 = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 %15
  store i8 0, i8* %arrayidx14, align 1
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 0
  %call15 = call i32 @strlen_Package(i8* %arraydecay)
  %add = add i32 %call15, 1
  %call16 = call i8* @xalloc(i32 %add)
  store i8* %call16, i8** %s, align 4
  %arraydecay17 = getelementptr inbounds [60 x i8], [60 x i8]* %word, i32 0, i32 0
  %16 = load i8*, i8** %s, align 4
  %call18 = call i8* @strcpy_Package(i8* %16, i8* %arraydecay17)
  %17 = load i8*, i8** %s, align 4
  store i8* %17, i8** %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %18 = load i8*, i8** %retval, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %18, i8** %struct.BigStruct_34
  ret void
}

define void @fclose_Package_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %call = call i32 @fclose(%struct._iobuf* %load_struct.BigStruct_1)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @init_LT_Clear() {
entry:
  store i32 200, i32* @LT_bound, align 4
  store i32 0, i32* @LT_size, align 4
  %0 = load i32, i32* @LT_bound, align 4
  %mul = mul i32 %0, 4
  %call = call i8* @xalloc(i32 %mul)
  %1 = bitcast i8* %call to %struct.Disjunct_struct**
  store %struct.Disjunct_struct** %1, %struct.Disjunct_struct*** @label_table, align 4
  ret void
}

define void @init_HT_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1024
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %1
  store %struct.label_node_struct* null, %struct.label_node_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @free_HT_Clear() {
entry:
  %i = alloca i32, align 4
  %la = alloca %struct.label_node_struct*, align 4
  %la1 = alloca %struct.label_node_struct*, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1024
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; No predecessors!
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %1
  %2 = load %struct.label_node_struct*, %struct.label_node_struct** %arrayidx, align 4
  store %struct.label_node_struct* %2, %struct.label_node_struct** %la, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %3 = load %struct.label_node_struct*, %struct.label_node_struct** %la, align 4
  %cmp2 = icmp ne %struct.label_node_struct* %3, null
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; No predecessors!
  %4 = load %struct.label_node_struct*, %struct.label_node_struct** %la, align 4
  %next = getelementptr inbounds %struct.label_node_struct, %struct.label_node_struct* %4, i32 0, i32 1
  %5 = load %struct.label_node_struct*, %struct.label_node_struct** %next, align 4
  store %struct.label_node_struct* %5, %struct.label_node_struct** %la1, align 4
  %6 = load %struct.label_node_struct*, %struct.label_node_struct** %la, align 4
  %7 = bitcast %struct.label_node_struct* %6 to i8*
  call void @xfree(i8* %7, i32 8)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %8 = load %struct.label_node_struct*, %struct.label_node_struct** %la1, align 4
  store %struct.label_node_struct* %8, %struct.label_node_struct** %la, align 4
  br label %for.cond1

for.end:                                          ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [1024 x %struct.label_node_struct*], [1024 x %struct.label_node_struct*]* @hash_table, i32 0, i32 %9
  store %struct.label_node_struct* null, %struct.label_node_struct** %arrayidx4, align 4
  br label %for.inc5

for.inc5:                                         ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end6:                                         ; No predecessors!
  ret void
}

define void @free_LT_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @LT_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %arrayidx = getelementptr inbounds %struct.Disjunct_struct*, %struct.Disjunct_struct** %3, i32 %2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %arrayidx, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %4)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %6 = load i32, i32* @LT_bound, align 4
  %mul = mul i32 %6, 4
  %7 = load %struct.Disjunct_struct**, %struct.Disjunct_struct*** @label_table, align 4
  %8 = bitcast %struct.Disjunct_struct** %7 to i8*
  call void @xfree(i8* %8, i32 %mul)
  store i32 0, i32* @LT_bound, align 4
  store i32 0, i32* @LT_size, align 4
  store %struct.Disjunct_struct** null, %struct.Disjunct_struct*** @label_table, align 4
  ret void
}

define void @free_AND_tables_Clear() {
entry:
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 105, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 104, i32 10)
  ret void
}

define void @build_conjunction_tables_Clear() {
entry:
  %w = alloca i32, align 4
  %k = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 103, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 102, i32 10)
  store i32 0, i32* @STAT_calls_to_equality_test, align 4
  store i32 0, i32* @STAT_N_disjuncts, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 30, i32 0)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  br label %for.inc5

for.inc5:                                         ; No predecessors!
  %9 = load i32, i32* %w, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end6:                                         ; No predecessors!
  store i32 0, i32* %k, align 4
  br label %for.cond7

for.cond7:                                        ; No predecessors!
  %10 = load i32, i32* %k, align 4
  %11 = load i32, i32* @LT_size, align 4
  %cmp8 = icmp slt i32 %10, %11
  br i1 %cmp8, label %for.body9, label %for.end12

for.body9:                                        ; No predecessors!
  %12 = load i32, i32* %k, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %12, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 61, i32 0)
  br label %for.inc10

for.inc10:                                        ; No predecessors!
  %13 = load i32, i32* %k, align 4
  %inc11 = add nsw i32 %13, 1
  store i32 %inc11, i32* %k, align 4
  br label %for.cond7

for.end12:                                        ; No predecessors!
  ret void
}

define void @print_AND_statistics_Clear() {
entry:
  %0 = load i32, i32* @LT_size, align 4
  %1 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.1.31, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1, i32 %0)
  %2 = load i32, i32* @STAT_N_disjuncts, align 4
  %3 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.2.32, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %3, i32 %2)
  %4 = load i32, i32* @STAT_N_disjuncts, align 4
  %conv = sitofp i32 %4 to float
  %5 = load i32, i32* @LT_size, align 4
  %conv2 = sitofp i32 %5 to float
  %div = fdiv float %conv, %conv2
  %conv3 = fpext float %div to double
  %6 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.3.33, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %6, double %conv3)
  %7 = load i32, i32* @STAT_calls_to_equality_test, align 4
  %8 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.4.34, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %8, i32 %7)
  ret void
}

define void @build_disjuncts_for_dict_node_Clear() {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %c = alloca %struct.clause_struct*, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %0, i32 0, i32 2
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call %struct.clause_struct* @build_clause(%struct.Exp_struct* %1, i32 1000)
  store %struct.clause_struct* %call, %struct.clause_struct** %c, align 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 0
  %3 = load i8*, i8** %string, align 4
  %4 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  %call1 = call %struct.Disjunct_struct* @build_disjunct(%struct.clause_struct* %4, i8* %3, i32 1000)
  store %struct.Disjunct_struct* %call1, %struct.Disjunct_struct** %dis, align 4
  %5 = load %struct.clause_struct*, %struct.clause_struct** %c, align 4
  call void @free_clause_list(%struct.clause_struct* %5)
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %struct.BigStruct_33
  ret void
}

define void @build_word_expressions_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %x = alloca %struct.X_node_struct*, align 4
  %y = alloca %struct.X_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  store %struct.Dict_node_struct* %call, %struct.Dict_node_struct** %dn, align 4
  store %struct.X_node_struct* null, %struct.X_node_struct** %x, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp = icmp ne %struct.Dict_node_struct* %1, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %call1 = call i8* @xalloc(i32 12)
  %2 = bitcast i8* %call1 to %struct.X_node_struct*
  store %struct.X_node_struct* %2, %struct.X_node_struct** %y, align 4
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %y, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %4, i32 0, i32 2
  store %struct.X_node_struct* %3, %struct.X_node_struct** %next, align 4
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %y, align 4
  store %struct.X_node_struct* %5, %struct.X_node_struct** %x, align 4
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 2
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call2 = call %struct.Exp_struct* @copy_Exp(%struct.Exp_struct* %7)
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp3 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %8, i32 0, i32 1
  store %struct.Exp_struct* %call2, %struct.Exp_struct** %exp3, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %9, i32 0, i32 0
  %10 = load i8*, i8** %string, align 4
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %string4 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %11, i32 0, i32 0
  store i8* %10, i8** %string4, align 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %12, i32 0, i32 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %14 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  store %struct.X_node_struct* %14, %struct.X_node_struct** %struct.BigStruct_40
  ret void
}

define void @build_sentence_disjuncts_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %cost_cutoff.addr = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %cost_cutoff.addr, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end9

for.body:                                         ; No predecessors!
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d, align 4
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %7 = load i32, i32* %cost_cutoff.addr, align 4
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %8, %struct.X_node_struct** %struct.BigStruct_14
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  store i32 %7, i32* %struct.BigStruct_15
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 32, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %call5 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct* %6)
  store %struct.Disjunct_struct* %call5, %struct.Disjunct_struct** %d, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %12 = load i32, i32* %w, align 4
  %13 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %13, i32 0, i32 %12
  %d7 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx6, i32 0, i32 2
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %d7, align 4
  br label %for.inc8

for.inc8:                                         ; No predecessors!
  %14 = load i32, i32* %w, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end9:                                         ; No predecessors!
  ret void
}

define void @is_idiom_string_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  store i8* %0, i8** %t, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i8*, i8** %t, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i8*, i8** %t, align 4
  %4 = load i8, i8* %3, align 1
  %conv2 = sext i8 %4 to i32
  %cmp3 = icmp eq i32 %conv2, 46
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %5 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %6 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %6, i32 0
  %7 = load i8, i8* %arrayidx, align 1
  %conv5 = sext i8 %7 to i32
  %cmp6 = icmp eq i32 %conv5, 95
  br i1 %cmp6, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %8 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strlen_Package(i8* %8)
  %sub = sub i32 %call, 1
  %9 = load i8*, i8** %s.addr, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %9, i32 %sub
  %10 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv9, 95
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end13:                                         ; No predecessors!
  %11 = load i8*, i8** %s.addr, align 4
  store i8* %11, i8** %t, align 4
  br label %for.cond14

for.cond14:                                       ; No predecessors!
  %12 = load i8*, i8** %t, align 4
  %13 = load i8, i8* %12, align 1
  %conv15 = sext i8 %13 to i32
  %cmp16 = icmp ne i32 %conv15, 0
  br i1 %cmp16, label %for.body18, label %for.end29

for.body18:                                       ; No predecessors!
  %14 = load i8*, i8** %t, align 4
  %15 = load i8, i8* %14, align 1
  %conv19 = sext i8 %15 to i32
  %cmp20 = icmp eq i32 %conv19, 95
  br i1 %cmp20, label %land.lhs.true, label %if.end26

land.lhs.true:                                    ; No predecessors!
  %16 = load i8*, i8** %t, align 4
  %add.ptr = getelementptr inbounds i8, i8* %16, i32 1
  %17 = load i8, i8* %add.ptr, align 1
  %conv22 = sext i8 %17 to i32
  %cmp23 = icmp eq i32 %conv22, 95
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end26:                                         ; No predecessors!
  br label %for.inc27

for.inc27:                                        ; No predecessors!
  %18 = load i8*, i8** %t, align 4
  %incdec.ptr28 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr28, i8** %t, align 4
  br label %for.cond14

for.end29:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %19 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %19, i32* %struct.BigStruct_32
  ret void
}

define void @make_idiom_Dict_nodes_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  %t = alloca i8*, align 4
  %more = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end16

while.body:                                       ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  store i8* %2, i8** %t, align 4
  br label %while.cond2

while.cond2:                                      ; No predecessors!
  %3 = load i8*, i8** %s.addr, align 4
  %4 = load i8, i8* %3, align 1
  %conv3 = sext i8 %4 to i32
  %cmp4 = icmp ne i32 %conv3, 0
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv6 = sext i8 %6 to i32
  %cmp7 = icmp ne i32 %conv6, 95
  br label %land.end

land.end:                                         ; No predecessors!
  %7 = phi i1 [ false, %while.cond2 ], [ %cmp7, %land.rhs ]
  br i1 %7, label %while.body9, label %while.end

while.body9:                                      ; No predecessors!
  %8 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond2

while.end:                                        ; No predecessors!
  %9 = load i8*, i8** %s.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv10 = sext i8 %10 to i32
  %cmp11 = icmp eq i32 %conv10, 95
  br i1 %cmp11, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 1, i32* %more, align 4
  %11 = load i8*, i8** %s.addr, align 4
  store i8 0, i8* %11, align 1
  br label %if.end

if.else:                                          ; No predecessors!
  store i32 0, i32* %more, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %call = call i8* @xalloc(i32 20)
  %12 = bitcast i8* %call to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %dn_new, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %14, i32 0, i32 4
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %right, align 4
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %15, %struct.Dict_node_struct** %dn, align 4
  %16 = load i8*, i8** %t, align 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 0
  store i8* %16, i8** %string, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 1
  store %struct.Word_file_struct* null, %struct.Word_file_struct** %file, align 4
  %19 = load i32, i32* %more, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.then13, label %if.end15

if.then13:                                        ; No predecessors!
  %20 = load i8*, i8** %s.addr, align 4
  %incdec.ptr14 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr14, i8** %s.addr, align 4
  br label %if.end15

if.end15:                                         ; No predecessors!
  br label %while.cond

while.end16:                                      ; No predecessors!
  %21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  store %struct.Dict_node_struct* %21, %struct.Dict_node_struct** %struct.BigStruct_41
  ret void
}

define void @insert_idiom_Clear() {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %nc = alloca %struct.Exp_struct*, align 4
  %no = alloca %struct.Exp_struct*, align 4
  %n1 = alloca %struct.Exp_struct*, align 4
  %ell = alloca %struct.E_list_struct*, align 4
  %elr = alloca %struct.E_list_struct*, align 4
  %s = alloca i8*, align 4
  %s_length = alloca i32, align 4
  %dn_list = alloca %struct.Dict_node_struct*, align 4
  %xdn = alloca %struct.Dict_node_struct*, align 4
  %start_dn_list = alloca %struct.Dict_node_struct*, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %0, i32 0, i32 2
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  store %struct.Exp_struct* %1, %struct.Exp_struct** %no, align 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 0
  %3 = load i8*, i8** %string, align 4
  store i8* %3, i8** %s, align 4
  %4 = load i8*, i8** %s, align 4
  %call = call i32 @strlen_Package(i8* %4)
  store i32 %call, i32* %s_length, align 4
  %5 = load i8*, i8** %s, align 4
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %5, i8** %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 112, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  %6 = load i32, i32* @line_number, align 4
  %7 = load i8*, i8** %s, align 4
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.1.94, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %8, i8* %7, i32 %6)
  %9 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.2.95, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %9)
  %10 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.3.96, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %10)
  %11 = load i32, i32* %s_length, align 4
  %add = add nsw i32 %11, 1
  %12 = load i8*, i8** %s, align 4
  call void @xfree(i8* %12, i32 %add)
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %14 = bitcast %struct.Dict_node_struct* %13 to i8*
  call void @xfree(i8* %14, i32 20)
  br label %return

if.end:                                           ; No predecessors!
  %15 = load i8*, i8** %s, align 4
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 113, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %start_dn_list, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn_list, align 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %17 = bitcast %struct.Dict_node_struct* %16 to i8*
  call void @xfree(i8* %17, i32 20)
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 4
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %cmp = icmp eq %struct.Dict_node_struct* %19, null
  br i1 %cmp, label %if.then6, label %if.end7

if.then6:                                         ; No predecessors!
  %20 = getelementptr inbounds [64 x i8], [64 x i8]* @.str.4.97, i32 0, i32 0
  call void @error(i8* %20)
  br label %if.end7

if.end7:                                          ; No predecessors!
  %call8 = call i8* @xalloc(i32 8)
  %21 = bitcast i8* %call8 to %struct.Exp_struct*
  store %struct.Exp_struct* %21, %struct.Exp_struct** %nc, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_344 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_344 = load i8*, i8** %struct.BigStruct_344
  %22 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %22, i32 0, i32 4
  %string10 = bitcast %union.anon* %u to i8**
  store i8* %load_struct.BigStruct_344, i8** %string10, align 4
  %23 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %23, i32 0, i32 2
  store i8 45, i8* %dir, align 2
  %24 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %24, i32 0, i32 3
  store i8 0, i8* %multi, align 1
  %25 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %25, i32 0, i32 0
  store i8 2, i8* %type, align 4
  %26 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %26, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %call11 = call i8* @xalloc(i32 8)
  %27 = bitcast i8* %call11 to %struct.Exp_struct*
  store %struct.Exp_struct* %27, %struct.Exp_struct** %n1, align 4
  %call12 = call i8* @xalloc(i32 8)
  %28 = bitcast i8* %call12 to %struct.E_list_struct*
  store %struct.E_list_struct* %28, %struct.E_list_struct** %ell, align 4
  %29 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %u13 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %29, i32 0, i32 4
  %l = bitcast %union.anon* %u13 to %struct.E_list_struct**
  store %struct.E_list_struct* %28, %struct.E_list_struct** %l, align 4
  %call14 = call i8* @xalloc(i32 8)
  %30 = bitcast i8* %call14 to %struct.E_list_struct*
  store %struct.E_list_struct* %30, %struct.E_list_struct** %elr, align 4
  %31 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %31, i32 0, i32 0
  store %struct.E_list_struct* %30, %struct.E_list_struct** %next, align 4
  %32 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next15 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %32, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next15, align 4
  %33 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %34 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %34, i32 0, i32 1
  store %struct.Exp_struct* %33, %struct.Exp_struct** %e, align 4
  %35 = load %struct.Exp_struct*, %struct.Exp_struct** %no, align 4
  %36 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e16 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %36, i32 0, i32 1
  store %struct.Exp_struct* %35, %struct.Exp_struct** %e16, align 4
  %37 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %type17 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %37, i32 0, i32 0
  store i8 1, i8* %type17, align 4
  %38 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %cost18 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %38, i32 0, i32 1
  store i8 0, i8* %cost18, align 1
  %39 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %40 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %exp19 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %40, i32 0, i32 2
  store %struct.Exp_struct* %39, %struct.Exp_struct** %exp19, align 4
  %41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right20 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %41, i32 0, i32 4
  %42 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right20, align 4
  store %struct.Dict_node_struct* %42, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %43 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right21 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %43, i32 0, i32 4
  %44 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right21, align 4
  %cmp22 = icmp ne %struct.Dict_node_struct* %44, null
  br i1 %cmp22, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %call23 = call i8* @xalloc(i32 8)
  %45 = bitcast i8* %call23 to %struct.Exp_struct*
  store %struct.Exp_struct* %45, %struct.Exp_struct** %n1, align 4
  %46 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %u24 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %46, i32 0, i32 4
  %string25 = bitcast %union.anon* %u24 to i8**
  store i8* null, i8** %string25, align 4
  %47 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %type26 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %47, i32 0, i32 0
  store i8 1, i8* %type26, align 4
  %48 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %cost27 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %48, i32 0, i32 1
  store i8 0, i8* %cost27, align 1
  %call28 = call i8* @xalloc(i32 8)
  %49 = bitcast i8* %call28 to %struct.E_list_struct*
  store %struct.E_list_struct* %49, %struct.E_list_struct** %ell, align 4
  %50 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %u29 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %50, i32 0, i32 4
  %l30 = bitcast %union.anon* %u29 to %struct.E_list_struct**
  store %struct.E_list_struct* %49, %struct.E_list_struct** %l30, align 4
  %call31 = call i8* @xalloc(i32 8)
  %51 = bitcast i8* %call31 to %struct.E_list_struct*
  store %struct.E_list_struct* %51, %struct.E_list_struct** %elr, align 4
  %52 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next32 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %52, i32 0, i32 0
  store %struct.E_list_struct* %51, %struct.E_list_struct** %next32, align 4
  %53 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next33 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %53, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next33, align 4
  %call34 = call i8* @xalloc(i32 8)
  %54 = bitcast i8* %call34 to %struct.Exp_struct*
  store %struct.Exp_struct* %54, %struct.Exp_struct** %nc, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_343 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_343 = load i8*, i8** %struct.BigStruct_343
  %55 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u36 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %55, i32 0, i32 4
  %string37 = bitcast %union.anon* %u36 to i8**
  store i8* %load_struct.BigStruct_343, i8** %string37, align 4
  %56 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir38 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %56, i32 0, i32 2
  store i8 43, i8* %dir38, align 2
  %57 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi39 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %57, i32 0, i32 3
  store i8 0, i8* %multi39, align 1
  %58 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type40 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %58, i32 0, i32 0
  store i8 2, i8* %type40, align 4
  %59 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost41 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %59, i32 0, i32 1
  store i8 0, i8* %cost41, align 1
  %60 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %61 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e42 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %61, i32 0, i32 1
  store %struct.Exp_struct* %60, %struct.Exp_struct** %e42, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 76, i32 0)
  %call43 = call i8* @xalloc(i32 8)
  %62 = bitcast i8* %call43 to %struct.Exp_struct*
  store %struct.Exp_struct* %62, %struct.Exp_struct** %nc, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_342 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_342 = load i8*, i8** %struct.BigStruct_342
  %63 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u45 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %63, i32 0, i32 4
  %string46 = bitcast %union.anon* %u45 to i8**
  store i8* %load_struct.BigStruct_342, i8** %string46, align 4
  %64 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir47 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %64, i32 0, i32 2
  store i8 45, i8* %dir47, align 2
  %65 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi48 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %65, i32 0, i32 3
  store i8 0, i8* %multi48, align 1
  %66 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type49 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %66, i32 0, i32 0
  store i8 2, i8* %type49, align 4
  %67 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost50 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %67, i32 0, i32 1
  store i8 0, i8* %cost50, align 1
  %68 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %69 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e51 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %69, i32 0, i32 1
  store %struct.Exp_struct* %68, %struct.Exp_struct** %e51, align 4
  %70 = load %struct.Exp_struct*, %struct.Exp_struct** %n1, align 4
  %71 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %exp52 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %71, i32 0, i32 2
  store %struct.Exp_struct* %70, %struct.Exp_struct** %exp52, align 4
  %72 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right53 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %72, i32 0, i32 4
  %73 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right53, align 4
  store %struct.Dict_node_struct* %73, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %call54 = call i8* @xalloc(i32 8)
  %74 = bitcast i8* %call54 to %struct.Exp_struct*
  store %struct.Exp_struct* %74, %struct.Exp_struct** %nc, align 4
  %call55 = call i8* @xalloc(i32 8)
  %75 = bitcast i8* %call55 to %struct.E_list_struct*
  store %struct.E_list_struct* %75, %struct.E_list_struct** %ell, align 4
  %76 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u56 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %76, i32 0, i32 4
  %l57 = bitcast %union.anon* %u56 to %struct.E_list_struct**
  store %struct.E_list_struct* %75, %struct.E_list_struct** %l57, align 4
  %call58 = call i8* @xalloc(i32 8)
  %77 = bitcast i8* %call58 to %struct.E_list_struct*
  store %struct.E_list_struct* %77, %struct.E_list_struct** %elr, align 4
  %78 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %next59 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %78, i32 0, i32 0
  store %struct.E_list_struct* %77, %struct.E_list_struct** %next59, align 4
  %79 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %next60 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %79, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next60, align 4
  %80 = load %struct.E_list_struct*, %struct.E_list_struct** %elr, align 4
  %e61 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %80, i32 0, i32 1
  store %struct.Exp_struct* null, %struct.Exp_struct** %e61, align 4
  %81 = load %struct.E_list_struct*, %struct.E_list_struct** %ell, align 4
  %e62 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %81, i32 0, i32 1
  store %struct.Exp_struct* null, %struct.Exp_struct** %e62, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 77, i32 0)
  %struct.BigStruct_341 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_341 = load i8*, i8** %struct.BigStruct_341
  %82 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %u64 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %82, i32 0, i32 4
  %string65 = bitcast %union.anon* %u64 to i8**
  store i8* %load_struct.BigStruct_341, i8** %string65, align 4
  %83 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %dir66 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %83, i32 0, i32 2
  store i8 43, i8* %dir66, align 2
  %84 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %multi67 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %84, i32 0, i32 3
  store i8 0, i8* %multi67, align 1
  %85 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %type68 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %85, i32 0, i32 0
  store i8 2, i8* %type68, align 4
  %86 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %cost69 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %86, i32 0, i32 1
  store i8 0, i8* %cost69, align 1
  %87 = load %struct.Exp_struct*, %struct.Exp_struct** %nc, align 4
  %88 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %exp70 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %88, i32 0, i32 2
  store %struct.Exp_struct* %87, %struct.Exp_struct** %exp70, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 76, i32 0)
  %89 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %start_dn_list, align 4
  store %struct.Dict_node_struct* %89, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond71

while.cond71:                                     ; No predecessors!
  %90 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %cmp72 = icmp ne %struct.Dict_node_struct* %90, null
  br i1 %cmp72, label %while.body73, label %while.end80

while.body73:                                     ; No predecessors!
  %91 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right74 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %91, i32 0, i32 4
  %92 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right74, align 4
  store %struct.Dict_node_struct* %92, %struct.Dict_node_struct** %xdn, align 4
  %93 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %right75 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %93, i32 0, i32 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %right75, align 4
  %94 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %94, i32 0, i32 3
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %left, align 4
  %95 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %string76 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %95, i32 0, i32 0
  %96 = load i8*, i8** %string76, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %96, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 75, i32 3)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %97 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %string78 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %97, i32 0, i32 0
  store i8* %load_struct.BigStruct_34, i8** %string78, align 4
  %98 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_list, align 4
  %99 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call79 = call %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %99, %struct.Dict_node_struct* %98)
  store %struct.Dict_node_struct* %call79, %struct.Dict_node_struct** @dict_root, align 4
  %100 = load i32, i32* @N_dict, align 4
  %inc = add nsw i32 %100, 1
  store i32 %inc, i32* @N_dict, align 4
  %101 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %xdn, align 4
  store %struct.Dict_node_struct* %101, %struct.Dict_node_struct** %dn_list, align 4
  br label %while.cond71

while.end80:                                      ; No predecessors!
  %102 = load i32, i32* %s_length, align 4
  %add81 = add nsw i32 %102, 1
  %103 = load i8*, i8** %s, align 4
  call void @xfree(i8* %103, i32 %add81)
  br label %return

return:                                           ; No predecessors!
  ret void
}

define void @isnumber_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %call = call i32 @isdigit_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv1 = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv3 = sext i8 %5 to i32
  %call4 = call i32 @isdigit_Package(i32 %conv3)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end14, label %land.lhs.true

land.lhs.true:                                    ; No predecessors!
  %6 = load i8*, i8** %s.addr, align 4
  %7 = load i8, i8* %6, align 1
  %conv6 = sext i8 %7 to i32
  %cmp7 = icmp ne i32 %conv6, 46
  br i1 %cmp7, label %land.lhs.true9, label %if.end14

land.lhs.true9:                                   ; No predecessors!
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv10 = sext i8 %9 to i32
  %cmp11 = icmp ne i32 %conv10, 44
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end14:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %11 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %11, i32* %struct.BigStruct_32
  ret void
}

define void @ishyphenated_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %hyp = alloca i32, align 4
  %nonalpha = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %nonalpha, align 4
  store i32 0, i32* %hyp, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 45
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br i1 %cmp3, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv5 = sext i8 %5 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv5, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 4, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end22, label %land.lhs.true

land.lhs.true:                                    ; No predecessors!
  %6 = load i8*, i8** %s.addr, align 4
  %7 = load i8, i8* %6, align 1
  %conv6 = sext i8 %7 to i32
  %call7 = call i32 @isdigit_Package(i32 %conv6)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end22, label %land.lhs.true9

land.lhs.true9:                                   ; No predecessors!
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv10 = sext i8 %9 to i32
  %cmp11 = icmp ne i32 %conv10, 46
  br i1 %cmp11, label %land.lhs.true13, label %if.end22

land.lhs.true13:                                  ; No predecessors!
  %10 = load i8*, i8** %s.addr, align 4
  %11 = load i8, i8* %10, align 1
  %conv14 = sext i8 %11 to i32
  %cmp15 = icmp ne i32 %conv14, 44
  br i1 %cmp15, label %land.lhs.true17, label %if.end22

land.lhs.true17:                                  ; No predecessors!
  %12 = load i8*, i8** %s.addr, align 4
  %13 = load i8, i8* %12, align 1
  %conv18 = sext i8 %13 to i32
  %cmp19 = icmp ne i32 %conv18, 45
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end22:                                         ; No predecessors!
  %14 = load i8*, i8** %s.addr, align 4
  %15 = load i8, i8* %14, align 1
  %conv23 = sext i8 %15 to i32
  %cmp24 = icmp eq i32 %conv23, 45
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; No predecessors!
  %16 = load i32, i32* %hyp, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %hyp, align 4
  br label %if.end27

if.end27:                                         ; No predecessors!
  %17 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %18 = load i8*, i8** %s.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %18, i32 -1
  %19 = load i8, i8* %add.ptr, align 1
  %conv28 = sext i8 %19 to i32
  %cmp29 = icmp ne i32 %conv28, 45
  br i1 %cmp29, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %20 = load i32, i32* %hyp, align 4
  %cmp31 = icmp sgt i32 %20, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %21 = phi i1 [ false, %while.end ], [ %cmp31, %land.rhs ]
  %land.ext = zext i1 %21 to i32
  store i32 %land.ext, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %22 = load i32, i32* %retval, align 4
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %22, i32* %struct.BigStruct_321
  ret void
}

define void @free_sentence_disjuncts_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %3)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @free_sentence_expressions_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %3, %struct.X_node_struct** %struct.BigStruct_14
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 99, i32 0)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @special_string_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %i.addr = alloca i32, align 4
  %e = alloca %struct.X_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %i.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %1 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %1, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_40 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_40
  %2 = load i32, i32* %i.addr, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_40, %struct.X_node_struct** %x, align 4
  %3 = load i32, i32* %i.addr, align 4
  %arrayidx2 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %3
  %x3 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx2, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x3, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %e, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %cmp = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %6 = load i32, i32* %i.addr, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %string5 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %7, i32 0, i32 0
  store i8* %arraydecay, i8** %string5, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %8, i32 0, i32 2
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %9, %struct.X_node_struct** %e, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.else:                                          ; No predecessors!
  %10 = getelementptr inbounds [42 x i8], [42 x i8]* @.str.18.143, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %10)
  %11 = load i8*, i8** %s.addr, align 4
  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.19.144, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printf(i8* %12, i8* %11)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %13 = load i32, i32* %retval, align 4
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %13, i32* %struct.BigStruct_323
  ret void
}

define void @handle_unknown_word_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %i.addr = alloca i32, align 4
  %t = alloca i8*, align 4
  %d = alloca %struct.X_node_struct*, align 4
  %str = alloca [61 x i8], align 1
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %i.addr, align 4
  %0 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.20.145, i32 0, i32 0
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_40 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_40
  %1 = load i32, i32* %i.addr, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %1
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_40, %struct.X_node_struct** %x, align 4
  %2 = load i32, i32* %i.addr, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %x2 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx1, i32 0, i32 1
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %x2, align 4
  %cmp = icmp eq %struct.X_node_struct* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %4 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.22.146, i32 0, i32 0
  %5 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.21.147, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %4, i8* %5)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; No predecessors!
  %6 = load i32, i32* %i.addr, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %x5 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 1
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %x5, align 4
  store %struct.X_node_struct* %7, %struct.X_node_struct** %d, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %cmp6 = icmp ne %struct.X_node_struct* %8, null
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %string = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 0
  %10 = load i8*, i8** %string, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %10, i8** %struct.BigStruct_21
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 46, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 79, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  store i8* %load_struct.BigStruct_34, i8** %t, align 4
  %11 = load i8*, i8** %t, align 4
  %cmp8 = icmp ne i8* %11, null
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; No predecessors!
  %12 = load i8*, i8** %t, align 4
  %add.ptr = getelementptr inbounds i8, i8* %12, i32 1
  %13 = load i8*, i8** %s.addr, align 4
  %arraydecay = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %14 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.23.148, i32 0, i32 0
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* %14, i8* %13, i8* %add.ptr)
  br label %if.end13

if.else:                                          ; No predecessors!
  %15 = load i8*, i8** %s.addr, align 4
  %arraydecay11 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %16 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.24.149, i32 0, i32 0
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay11, i8* %16, i8* %15)
  br label %if.end13

if.end13:                                         ; No predecessors!
  %arraydecay14 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %call15 = call i32 @strlen_Package(i8* %arraydecay14)
  %add = add i32 %call15, 1
  %call16 = call i8* @xalloc(i32 %add)
  store i8* %call16, i8** %t, align 4
  %arraydecay17 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %call18 = call i32 @strlen_Package(i8* %arraydecay17)
  %add19 = add i32 %call18, 1
  %17 = load i8*, i8** %t, align 4
  call void @free_this_string_later(i8* %17, i32 %add19)
  %arraydecay20 = getelementptr inbounds [61 x i8], [61 x i8]* %str, i32 0, i32 0
  %18 = load i8*, i8** %t, align 4
  %call21 = call i8* @strcpy_Package(i8* %18, i8* %arraydecay20)
  %19 = load i8*, i8** %t, align 4
  %20 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %string22 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %20, i32 0, i32 0
  store i8* %19, i8** %string22, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %21 = load %struct.X_node_struct*, %struct.X_node_struct** %d, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %21, i32 0, i32 2
  %22 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %22, %struct.X_node_struct** %d, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @print_statistics_Clear() {
entry:
  %0 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.30.155, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %0)
  %1 = load i32, i32* @parse_cost, align 4
  %2 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.31.156, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %2, i32 %1)
  %3 = load i32, i32* @mark_cost, align 4
  %4 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.32, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %4, i32 %3)
  %5 = load i32, i32* @N_in_table, align 4
  %6 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.33, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %6, i32 %5)
  %7 = load i32, i32* @N_hash_lookups, align 4
  %8 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.34, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %8, i32 %7)
  %9 = load i32, i32* @work_in_hash_lookups, align 4
  %conv = sitofp i32 %9 to float
  %10 = load i32, i32* @N_hash_lookups, align 4
  %conv5 = sitofp i32 %10 to float
  %div = fdiv float %conv, %conv5
  %conv6 = fpext float %div to double
  %11 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.35, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printf(i8* %11, double %conv6)
  %12 = load i32, i32* @max_space_in_use, align 4
  %13 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.36, i32 0, i32 0
  %call8 = call i32 (i8*, ...) @printf(i8* %13, i32 %12)
  %14 = load i32, i32* @space_in_use, align 4
  %15 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.37, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %15, i32 %14)
  ret void
}

define void @sentence_contains_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %w = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %arraydecay, i8* %2)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %w, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret void
}

define void @set_is_conjunction_Clear() {
entry:
  %w = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %3 = load i8*, i8** %s, align 4
  %4 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.164, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %3, i8* %4)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %5 = load i8*, i8** %s, align 4
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.165, i32 0, i32 0
  %call2 = call i32 @strcmp_Package(i8* %5, i8* %6)
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4

lor.lhs.false4:                                   ; No predecessors!
  %7 = load i8*, i8** %s, align 4
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.166, i32 0, i32 0
  %call5 = call i32 @strcmp_Package(i8* %7, i8* %8)
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %lor.end, label %lor.rhs

lor.rhs:                                          ; No predecessors!
  %9 = load i8*, i8** %s, align 4
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.167, i32 0, i32 0
  %call7 = call i32 @strcmp_Package(i8* %9, i8* %10)
  %cmp8 = icmp eq i32 %call7, 0
  br label %lor.end

lor.end:                                          ; No predecessors!
  %11 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp8, %lor.rhs ]
  %lor.ext = zext i1 %11 to i32
  %conv = trunc i32 %lor.ext to i8
  %12 = load i32, i32* %w, align 4
  %arrayidx9 = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %12
  store i8 %conv, i8* %arrayidx9, align 1
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @sentence_contains_conjunction_Clear() {
entry:
  %retval = alloca i32, align 4
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %w, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %5 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %5, i32* %struct.BigStruct_32
  ret void
}

define void @build_deletable_Clear() {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end123

for.body:                                         ; No predecessors!
  %2 = load i32, i32* @N_words, align 4
  %add = add nsw i32 %2, 1
  %call = call i8* @xalloc(i32 %add)
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %3
  store i8* %call, i8** %arrayidx, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %4 = load i32, i32* %j, align 4
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @maxlinklength, align 4
  %add2 = add nsw i32 %5, %6
  %7 = load i32, i32* @N_words, align 4
  %cmp3 = icmp slt i32 %add2, %7
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; No predecessors!
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* @maxlinklength, align 4
  %add4 = add nsw i32 %8, %9
  br label %cond.end

cond.false:                                       ; No predecessors!
  %10 = load i32, i32* @N_words, align 4
  br label %cond.end

cond.end:                                         ; No predecessors!
  %cond = phi i32 [ %add4, %cond.true ], [ %10, %cond.false ]
  %cmp5 = icmp sle i32 %4, %cond
  br i1 %cmp5, label %for.body6, label %for.end120

for.body6:                                        ; No predecessors!
  %11 = load i32, i32* @null_links, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %12 = load i32, i32* %j, align 4
  %13 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %13
  %14 = load i8*, i8** %arrayidx7, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i32 %12
  store i8 1, i8* %arrayidx8, align 1
  br label %if.end117

if.else:                                          ; No predecessors!
  %15 = load i32, i32* %j, align 4
  %16 = load i32, i32* %i, align 4
  %add9 = add nsw i32 %16, 1
  %cmp10 = icmp eq i32 %15, %add9
  br i1 %cmp10, label %if.then11, label %if.else14

if.then11:                                        ; No predecessors!
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %18
  %19 = load i8*, i8** %arrayidx12, align 4
  %arrayidx13 = getelementptr inbounds i8, i8* %19, i32 %17
  store i8 1, i8* %arrayidx13, align 1
  br label %if.end116

if.else14:                                        ; No predecessors!
  %20 = load i32, i32* %j, align 4
  %21 = load i32, i32* %i, align 4
  %add15 = add nsw i32 %21, 2
  %cmp16 = icmp sgt i32 %20, %add15
  br i1 %cmp16, label %land.lhs.true, label %if.else49

land.lhs.true:                                    ; No predecessors!
  %22 = load i32, i32* %i, align 4
  %add17 = add nsw i32 %22, 1
  %arrayidx18 = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %add17
  %23 = load i8, i8* %arrayidx18, align 1
  %conv = sext i8 %23 to i32
  %tobool19 = icmp ne i32 %conv, 0
  br i1 %tobool19, label %if.then46, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %24 = load i32, i32* %j, align 4
  %sub = sub nsw i32 %24, 1
  %arrayidx20 = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %sub
  %25 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %25 to i32
  %tobool22 = icmp ne i32 %conv21, 0
  br i1 %tobool22, label %if.then46, label %lor.lhs.false23

lor.lhs.false23:                                  ; No predecessors!
  %26 = load i32, i32* %i, align 4
  %add24 = add nsw i32 %26, 1
  %arrayidx25 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %add24
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx25, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %27 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.168, i32 0, i32 0
  %call26 = call i32 @strcmp_Package(i8* %27, i8* %arraydecay)
  %cmp27 = icmp eq i32 %call26, 0
  br i1 %cmp27, label %land.lhs.true29, label %lor.lhs.false34

land.lhs.true29:                                  ; No predecessors!
  %28 = load i32, i32* %j, align 4
  %sub30 = sub nsw i32 %28, 1
  %29 = load i32, i32* %i, align 4
  %add31 = add nsw i32 %29, 2
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %add31, i32* %struct.BigStruct_01
  %struct.BigStruct_52 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %sub30, i32* %struct.BigStruct_52
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 37, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool33 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool33, label %if.then46, label %lor.lhs.false34

lor.lhs.false34:                                  ; No predecessors!
  %30 = load i32, i32* %j, align 4
  %sub35 = sub nsw i32 %30, 1
  %arrayidx36 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %sub35
  %string37 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx36, i32 0, i32 0
  %arraydecay38 = getelementptr inbounds [60 x i8], [60 x i8]* %string37, i32 0, i32 0
  %31 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.169, i32 0, i32 0
  %call39 = call i32 @strcmp_Package(i8* %31, i8* %arraydecay38)
  %cmp40 = icmp eq i32 %call39, 0
  br i1 %cmp40, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; No predecessors!
  %32 = load i32, i32* @N_words, align 4
  %sub43 = sub nsw i32 %32, 1
  %33 = load i32, i32* %j, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %33, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %sub43, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 37, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool45 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool45, label %if.then46, label %if.else49

if.then46:                                        ; No predecessors!
  %34 = load i32, i32* %j, align 4
  %35 = load i32, i32* %i, align 4
  %arrayidx47 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %35
  %36 = load i8*, i8** %arrayidx47, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %36, i32 %34
  store i8 1, i8* %arrayidx48, align 1
  br label %if.end115

if.else49:                                        ; No predecessors!
  %37 = load i32, i32* %j, align 4
  %38 = load i32, i32* %i, align 4
  %cmp50 = icmp sgt i32 %37, %38
  br i1 %cmp50, label %if.then52, label %if.else111

if.then52:                                        ; No predecessors!
  %39 = load i32, i32* %i, align 4
  %add53 = add nsw i32 %39, 1
  store i32 %add53, i32* %k, align 4
  br label %for.cond54

for.cond54:                                       ; No predecessors!
  %40 = load i32, i32* %k, align 4
  %41 = load i32, i32* %j, align 4
  %cmp55 = icmp slt i32 %40, %41
  br i1 %cmp55, label %for.body57, label %for.end

for.body57:                                       ; No predecessors!
  %42 = load i32, i32* %k, align 4
  %arrayidx58 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %42
  %string59 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx58, i32 0, i32 0
  %arraydecay60 = getelementptr inbounds [60 x i8], [60 x i8]* %string59, i32 0, i32 0
  %43 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.170, i32 0, i32 0
  %call61 = call i32 @strcmp_Package(i8* %43, i8* %arraydecay60)
  %cmp62 = icmp eq i32 %call61, 0
  br i1 %cmp62, label %if.then85, label %lor.lhs.false64

lor.lhs.false64:                                  ; No predecessors!
  %44 = load i32, i32* %k, align 4
  %arrayidx65 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %44
  %string66 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx65, i32 0, i32 0
  %arraydecay67 = getelementptr inbounds [60 x i8], [60 x i8]* %string66, i32 0, i32 0
  %45 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.171, i32 0, i32 0
  %call68 = call i32 @strcmp_Package(i8* %45, i8* %arraydecay67)
  %cmp69 = icmp eq i32 %call68, 0
  br i1 %cmp69, label %if.then85, label %lor.lhs.false71

lor.lhs.false71:                                  ; No predecessors!
  %46 = load i32, i32* %k, align 4
  %arrayidx72 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %46
  %string73 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx72, i32 0, i32 0
  %arraydecay74 = getelementptr inbounds [60 x i8], [60 x i8]* %string73, i32 0, i32 0
  %47 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.172, i32 0, i32 0
  %call75 = call i32 @strcmp_Package(i8* %47, i8* %arraydecay74)
  %cmp76 = icmp eq i32 %call75, 0
  br i1 %cmp76, label %if.then85, label %lor.lhs.false78

lor.lhs.false78:                                  ; No predecessors!
  %48 = load i32, i32* %k, align 4
  %arrayidx79 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %48
  %string80 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx79, i32 0, i32 0
  %arraydecay81 = getelementptr inbounds [60 x i8], [60 x i8]* %string80, i32 0, i32 0
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.173, i32 0, i32 0
  %call82 = call i32 @strcmp_Package(i8* %49, i8* %arraydecay81)
  %cmp83 = icmp eq i32 %call82, 0
  br i1 %cmp83, label %if.then85, label %if.end

if.then85:                                        ; No predecessors!
  br label %for.inc

if.end:                                           ; No predecessors!
  %50 = load i32, i32* %k, align 4
  %arrayidx86 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %50
  %string87 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx86, i32 0, i32 0
  %arraydecay88 = getelementptr inbounds [60 x i8], [60 x i8]* %string87, i32 0, i32 0
  %51 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.174, i32 0, i32 0
  %call89 = call i32 @strcmp_Package(i8* %51, i8* %arraydecay88)
  %cmp90 = icmp eq i32 %call89, 0
  br i1 %cmp90, label %land.lhs.true92, label %if.end105

land.lhs.true92:                                  ; No predecessors!
  %52 = load i32, i32* %k, align 4
  %53 = load i32, i32* %i, align 4
  %add93 = add nsw i32 %53, 1
  %cmp94 = icmp sgt i32 %52, %add93
  br i1 %cmp94, label %land.lhs.true96, label %if.end105

land.lhs.true96:                                  ; No predecessors!
  %54 = load i32, i32* %k, align 4
  %sub97 = sub nsw i32 %54, 1
  %arrayidx98 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %sub97
  %string99 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx98, i32 0, i32 0
  %arraydecay100 = getelementptr inbounds [60 x i8], [60 x i8]* %string99, i32 0, i32 0
  %55 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.175, i32 0, i32 0
  %call101 = call i32 @strcmp_Package(i8* %55, i8* %arraydecay100)
  %cmp102 = icmp eq i32 %call101, 0
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; No predecessors!
  br label %for.inc

if.end105:                                        ; No predecessors!
  br label %for.end

for.inc:                                          ; No predecessors!
  %56 = load i32, i32* %k, align 4
  %inc = add nsw i32 %56, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond54

for.end:                                          ; No predecessors!
  %57 = load i32, i32* %k, align 4
  %58 = load i32, i32* %j, align 4
  %cmp106 = icmp eq i32 %57, %58
  %conv107 = zext i1 %cmp106 to i32
  %conv108 = trunc i32 %conv107 to i8
  %59 = load i32, i32* %j, align 4
  %60 = load i32, i32* %i, align 4
  %arrayidx109 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %60
  %61 = load i8*, i8** %arrayidx109, align 4
  %arrayidx110 = getelementptr inbounds i8, i8* %61, i32 %59
  store i8 %conv108, i8* %arrayidx110, align 1
  br label %if.end114

if.else111:                                       ; No predecessors!
  %62 = load i32, i32* %j, align 4
  %63 = load i32, i32* %i, align 4
  %arrayidx112 = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %63
  %64 = load i8*, i8** %arrayidx112, align 4
  %arrayidx113 = getelementptr inbounds i8, i8* %64, i32 %62
  store i8 0, i8* %arrayidx113, align 1
  br label %if.end114

if.end114:                                        ; No predecessors!
  br label %if.end115

if.end115:                                        ; No predecessors!
  br label %if.end116

if.end116:                                        ; No predecessors!
  br label %if.end117

if.end117:                                        ; No predecessors!
  br label %for.inc118

for.inc118:                                       ; No predecessors!
  %65 = load i32, i32* %j, align 4
  %inc119 = add nsw i32 %65, 1
  store i32 %inc119, i32* %j, align 4
  br label %for.cond1

for.end120:                                       ; No predecessors!
  br label %for.inc121

for.inc121:                                       ; No predecessors!
  %66 = load i32, i32* %i, align 4
  %inc122 = add nsw i32 %66, 1
  store i32 %inc122, i32* %i, align 4
  br label %for.cond

for.end123:                                       ; No predecessors!
  ret void
}

define void @free_deletable_Clear() {
entry:
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* @N_words, align 4
  %add = add nsw i32 %2, 1
  %3 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x i8*], [250 x i8*]* @deletable, i32 0, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  call void @xfree(i8* %4, i32 %add)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %5 = load i32, i32* %w, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @install_fat_connectors_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x i8], [250 x i8]* @is_conjunction, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %4
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx1, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 64, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %5 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %5
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx2, i32 0, i32 2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call3 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %6, %struct.Disjunct_struct* %load_struct.BigStruct_332)
  %7 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %7
  %d5 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 2
  store %struct.Disjunct_struct* %call3, %struct.Disjunct_struct** %d5, align 4
  br label %if.end26

if.else:                                          ; No predecessors!
  %8 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %8
  %d7 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx6, i32 0, i32 2
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d7, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %9, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 62, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %10 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %10
  %d10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 2
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d10, align 4
  %call11 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %11, %struct.Disjunct_struct* %load_struct.BigStruct_33)
  %12 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %12
  %d13 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx12, i32 0, i32 2
  store %struct.Disjunct_struct* %call11, %struct.Disjunct_struct** %d13, align 4
  %13 = load i32, i32* %i, align 4
  %arrayidx14 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %13
  %string15 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx14, i32 0, i32 0
  %arraydecay16 = getelementptr inbounds [60 x i8], [60 x i8]* %string15, i32 0, i32 0
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.176, i32 0, i32 0
  %call17 = call i32 @strcmp_Package(i8* %arraydecay16, i8* %14)
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.end

if.then19:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 63, i32 0)
  %struct.BigStruct_331 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_331 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_331
  %15 = load i32, i32* %i, align 4
  %arrayidx21 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %15
  %d22 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx21, i32 0, i32 2
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d22, align 4
  %call23 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %16, %struct.Disjunct_struct* %load_struct.BigStruct_331)
  %17 = load i32, i32* %i, align 4
  %arrayidx24 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %17
  %d25 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx24, i32 0, i32 2
  store %struct.Disjunct_struct* %call23, %struct.Disjunct_struct** %d25, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end26

if.end26:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @prepare_to_parse_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %cost_cutoff.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %cost_cutoff.addr, align 4
  %0 = load i32, i32* %cost_cutoff.addr, align 4
  %struct.BigStruct_011 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %0, i32* %struct.BigStruct_011
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 111, i32 10)
  %1 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %1, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %2 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.180, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end

if.end:                                           ; No predecessors!
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.181, i32 0, i32 0
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %3, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @N_words, align 4
  %cmp1 = icmp slt i32 %4, %5
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %7, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 94, i32 1)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %8 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %8
  %d4 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx3, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d4, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %10 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.182, i32 0, i32 0
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %10, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %11 = load i32, i32* @verbosity, align 4
  %cmp5 = icmp sgt i32 %11, 2
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; No predecessors!
  %12 = getelementptr inbounds [54 x i8], [54 x i8]* @.str.183, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printf(i8* %12)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end8

if.end8:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 123, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 124, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then10, label %if.end41

if.then10:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 125, i32 10)
  %struct.BigStruct_012 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 1, i32* %struct.BigStruct_012
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 146, i32 9)
  %13 = load i32, i32* @verbosity, align 4
  %cmp11 = icmp sgt i32 %13, 2
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; No predecessors!
  %14 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.184, i32 0, i32 0
  %call13 = call i32 (i8*, ...) @printf(i8* %14)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end14

if.end14:                                         ; No predecessors!
  %15 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.185, i32 0, i32 0
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* @mark_cost, align 4
  store i32 0, i32* @work_in_hash_lookups, align 4
  store i32 0, i32* @N_hash_lookups, align 4
  store i32 0, i32* @N_in_table, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 139, i32 10)
  %16 = load i32, i32* @verbosity, align 4
  %cmp15 = icmp sgt i32 %16, 2
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; No predecessors!
  %17 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.186, i32 0, i32 0
  %call17 = call i32 (i8*, ...) @printf(i8* %17)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 121, i32 10)
  br label %if.end18

if.end18:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 126, i32 10)
  %18 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.187, i32 0, i32 0
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %18, i8** %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 107, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 127, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 134, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 135, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 136, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 137, i32 9)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 133, i32 10)
  %19 = load i32, i32* @verbosity, align 4
  %cmp19 = icmp sgt i32 %19, 2
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; No predecessors!
  %20 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.188, i32 0, i32 0
  %call21 = call i32 (i8*, ...) @printf(i8* %20)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end22

if.end22:                                         ; No predecessors!
  %21 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.189, i32 0, i32 0
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %21, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 144, i32 9)
  %22 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.190, i32 0, i32 0
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %22, i8** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %i, align 4
  br label %for.cond23

for.cond23:                                       ; No predecessors!
  %23 = load i32, i32* %i, align 4
  %24 = load i32, i32* @N_words, align 4
  %cmp24 = icmp slt i32 %23, %24
  br i1 %cmp24, label %for.body25, label %for.end33

for.body25:                                       ; No predecessors!
  %25 = load i32, i32* %i, align 4
  %arrayidx26 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %25
  %d27 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx26, i32 0, i32 2
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d27, align 4
  %struct.BigStruct_49 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %26, %struct.Disjunct_struct** %struct.BigStruct_49
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 94, i32 1)
  %struct.BigStruct_3310 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_3310 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_3310
  %27 = load i32, i32* %i, align 4
  %arrayidx29 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %27
  %d30 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx29, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_3310, %struct.Disjunct_struct** %d30, align 4
  br label %for.inc31

for.inc31:                                        ; No predecessors!
  %28 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %28, 1
  store i32 %inc32, i32* %i, align 4
  br label %for.cond23

for.end33:                                        ; No predecessors!
  %29 = load i32, i32* @verbosity, align 4
  %cmp34 = icmp sgt i32 %29, 2
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; No predecessors!
  %30 = getelementptr inbounds [42 x i8], [42 x i8]* @.str.191, i32 0, i32 0
  %call36 = call i32 (i8*, ...) @printf(i8* %30)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end37

if.end37:                                         ; No predecessors!
  %31 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.192, i32 0, i32 0
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %31, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %32 = load i32, i32* @verbosity, align 4
  %cmp38 = icmp sgt i32 %32, 2
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 108, i32 10)
  br label %if.end40

if.end40:                                         ; No predecessors!
  br label %if.end41

if.end41:                                         ; No predecessors!
  %struct.BigStruct_013 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_013
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 146, i32 9)
  %33 = load i32, i32* @verbosity, align 4
  %cmp42 = icmp sgt i32 %33, 2
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; No predecessors!
  %34 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.193, i32 0, i32 0
  %call44 = call i32 (i8*, ...) @printf(i8* %34)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end45

if.end45:                                         ; No predecessors!
  %35 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.194, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %35, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* @parse_cost, align 4
  store i32 0, i32* @work_in_hash_lookups, align 4
  store i32 0, i32* @N_hash_lookups, align 4
  store i32 0, i32* @N_in_table, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 72, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 87, i32 0)
  %36 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.195, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %36, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  ret void
}

define void @unprepare_parse_Clear() {
entry:
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 117, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 124, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 106, i32 9)
  br label %if.end

if.end:                                           ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 71, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 88, i32 0)
  ret void
}

define void @final_unprepare_parse_Clear() {
entry:
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 118, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 159, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  ret void
}

define void @summary_line_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  %load_struct.BigStruct_11 = load i8*, i8** %struct.BigStruct_11
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  %load_struct.BigStruct_15 = load i32, i32* %struct.BigStruct_15
  %give_up.addr = alloca i32, align 4
  %stagen.addr = alloca i8*, align 4
  %N_valid_linkages.addr = alloca i32, align 4
  %N_canonical_linkages.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_15, i32* %give_up.addr, align 4
  store i8* %load_struct.BigStruct_11, i8** %stagen.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %N_valid_linkages.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %N_canonical_linkages.addr, align 4
  %0 = load i32, i32* %N_canonical_linkages.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else3

if.then:                                          ; No predecessors!
  %1 = load i32, i32* %give_up.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; No predecessors!
  %2 = load i8*, i8** %stagen.addr, align 4
  %3 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.196, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %3, i8* %2)
  br label %if.end

if.else:                                          ; No predecessors!
  %4 = load i8*, i8** %stagen.addr, align 4
  %5 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.197, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %5, i8* %4)
  br label %if.end

if.end:                                           ; No predecessors!
  br label %if.end30

if.else3:                                         ; No predecessors!
  %6 = load i32, i32* %N_canonical_linkages.addr, align 4
  %cmp4 = icmp eq i32 %6, 1
  br i1 %cmp4, label %if.then5, label %if.else17

if.then5:                                         ; No predecessors!
  %7 = load i32, i32* %N_valid_linkages.addr, align 4
  %cmp6 = icmp eq i32 %7, 0
  br i1 %cmp6, label %if.then7, label %if.else14

if.then7:                                         ; No predecessors!
  %8 = load i32, i32* %give_up.addr, align 4
  %tobool8 = icmp ne i32 %8, 0
  br i1 %tobool8, label %if.then9, label %if.else11

if.then9:                                         ; No predecessors!
  %9 = load i8*, i8** %stagen.addr, align 4
  %10 = getelementptr inbounds [56 x i8], [56 x i8]* @.str.198, i32 0, i32 0
  %call10 = call i32 (i8*, ...) @printf(i8* %10, i8* %9)
  br label %if.end13

if.else11:                                        ; No predecessors!
  %11 = load i8*, i8** %stagen.addr, align 4
  %12 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.199, i32 0, i32 0
  %call12 = call i32 (i8*, ...) @printf(i8* %12, i8* %11)
  br label %if.end13

if.end13:                                         ; No predecessors!
  br label %if.end16

if.else14:                                        ; No predecessors!
  %13 = load i8*, i8** %stagen.addr, align 4
  %14 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.200, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printf(i8* %14, i8* %13)
  br label %if.end16

if.end16:                                         ; No predecessors!
  br label %if.end29

if.else17:                                        ; No predecessors!
  %15 = load i32, i32* %N_valid_linkages.addr, align 4
  %cmp18 = icmp eq i32 %15, 0
  br i1 %cmp18, label %if.then19, label %if.else26

if.then19:                                        ; No predecessors!
  %16 = load i32, i32* %give_up.addr, align 4
  %tobool20 = icmp ne i32 %16, 0
  br i1 %tobool20, label %if.then21, label %if.else23

if.then21:                                        ; No predecessors!
  %17 = load i8*, i8** %stagen.addr, align 4
  %18 = load i32, i32* %N_canonical_linkages.addr, align 4
  %19 = getelementptr inbounds [59 x i8], [59 x i8]* @.str.201, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printf(i8* %19, i32 %18, i8* %17)
  br label %if.end25

if.else23:                                        ; No predecessors!
  %20 = load i8*, i8** %stagen.addr, align 4
  %21 = load i32, i32* %N_canonical_linkages.addr, align 4
  %22 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.202, i32 0, i32 0
  %call24 = call i32 (i8*, ...) @printf(i8* %22, i32 %21, i8* %20)
  br label %if.end25

if.end25:                                         ; No predecessors!
  br label %if.end28

if.else26:                                        ; No predecessors!
  %23 = load i8*, i8** %stagen.addr, align 4
  %24 = load i32, i32* %N_valid_linkages.addr, align 4
  %25 = load i32, i32* %N_canonical_linkages.addr, align 4
  %26 = getelementptr inbounds [57 x i8], [57 x i8]* @.str.203, i32 0, i32 0
  %call27 = call i32 (i8*, ...) @printf(i8* %26, i32 %25, i32 %24, i8* %23)
  br label %if.end28

if.end28:                                         ; No predecessors!
  br label %if.end29

if.end29:                                         ; No predecessors!
  br label %if.end30

if.end30:                                         ; No predecessors!
  %27 = load i32, i32* @display_bad, align 4
  %tobool31 = icmp ne i32 %27, 0
  br i1 %tobool31, label %if.then32, label %if.else34

if.then32:                                        ; No predecessors!
  %28 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.204, i32 0, i32 0
  %call33 = call i32 (i8*, ...) @printf(i8* %28)
  br label %if.end36

if.else34:                                        ; No predecessors!
  %29 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.205, i32 0, i32 0
  %call35 = call i32 (i8*, ...) @printf(i8* %29)
  br label %if.end36

if.end36:                                         ; No predecessors!
  ret void
}

define void @stage_name_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  %load_struct.BigStruct_8 = load i32, i32* %struct.BigStruct_8
  %null_count.addr = alloca i32, align 4
  %cost_cutoff.addr = alloca i32, align 4
  %phase.addr = alloca i32, align 4
  %stage = alloca i32, align 4
  store i32 %load_struct.BigStruct_8, i32* %null_count.addr, align 4
  store i32 %load_struct.BigStruct_5, i32* %cost_cutoff.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %phase.addr, align 4
  %0 = load i32, i32* %phase.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else3

if.then:                                          ; No predecessors!
  %1 = load i32, i32* %cost_cutoff.addr, align 4
  %cmp1 = icmp sle i32 %1, 1
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; No predecessors!
  store i32 1, i32* %stage, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  store i32 2, i32* %stage, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %2 = load i32, i32* %stage, align 4
  %3 = getelementptr inbounds [100 x i8], [100 x i8]* @stage_name.answer, i32 0, i32 0
  %4 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.206, i32 0, i32 0
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* %4, i32 %2)
  br label %if.end5

if.else3:                                         ; No predecessors!
  %5 = load i32, i32* %null_count.addr, align 4
  %6 = getelementptr inbounds [100 x i8], [100 x i8]* @stage_name.answer, i32 0, i32 0
  %7 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.207, i32 0, i32 0
  %call4 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* %7, i32 %5)
  br label %if.end5

if.end5:                                          ; No predecessors!
  %8 = getelementptr inbounds [100 x i8], [100 x i8]* @stage_name.answer, i32 0, i32 0
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %8, i8** %struct.BigStruct_34
  ret void
}

define void @construct_comma_Clear() {
entry:
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %1, 1
  %cmp = icmp slt i32 %0, %sub
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.2.286, i32 0, i32 0
  %call = call i32 @strcmp_Package(i8* %arraydecay, i8* %4)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; No predecessors!
  %5 = load i32, i32* %w, align 4
  %add = add nsw i32 %5, 1
  %6 = bitcast [250 x i8]* @is_conjunction to [0 x i8]*
  %arrayidx2 = getelementptr inbounds [0 x i8], [0 x i8]* %6, i32 0, i32 %add
  %7 = load i8, i8* %arrayidx2, align 1
  %conv = sext i8 %7 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %8 = load i32, i32* %w, align 4
  %9 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx3 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %9, i32 0, i32 %8
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx3, i32 0, i32 2
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.4.287, i32 0, i32 0
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.3.288, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -2, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_5
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %11, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %12, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_331 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_331 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_331
  %call5 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_331, %struct.Disjunct_struct* %10)
  %13 = load i32, i32* %w, align 4
  %14 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %14, i32 0, i32 %13
  %d7 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx6, i32 0, i32 2
  store %struct.Disjunct_struct* %call5, %struct.Disjunct_struct** %d7, align 4
  %15 = load i32, i32* %w, align 4
  %add8 = add nsw i32 %15, 1
  %16 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %16, i32 0, i32 %add8
  %d10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 2
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d10, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 83, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %18 = load i32, i32* %w, align 4
  %add12 = add nsw i32 %18, 1
  %19 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %19, i32 0, i32 %add12
  %d14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d14, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %20 = load i32, i32* %w, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @construct_either_Clear() {
entry:
  %w = alloca i32, align 4
  %0 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.5.291, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  br label %for.end27

if.end:                                           ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.6.292, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; No predecessors!
  br label %for.inc

if.end4:                                          ; No predecessors!
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.8.293, i32 0, i32 0
  %10 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.7.294, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -3, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %9, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %10, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %call7 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct* %8)
  %11 = load i32, i32* %w, align 4
  %12 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %12, i32 0, i32 %11
  %d9 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx8, i32 0, i32 2
  store %struct.Disjunct_struct* %call7, %struct.Disjunct_struct** %d9, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond10

for.cond10:                                       ; No predecessors!
  %14 = load i32, i32* %w, align 4
  %15 = load i32, i32* @N_words, align 4
  %cmp11 = icmp slt i32 %14, %15
  br i1 %cmp11, label %for.body12, label %for.end27

for.body12:                                       ; No predecessors!
  %16 = load i32, i32* %w, align 4
  %17 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %17, i32 0, i32 %16
  %string14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 0
  %arraydecay15 = getelementptr inbounds [60 x i8], [60 x i8]* %string14, i32 0, i32 0
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.9.295, i32 0, i32 0
  %call16 = call i32 @strcmp_Package(i8* %arraydecay15, i8* %18)
  %cmp17 = icmp ne i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; No predecessors!
  br label %for.inc25

if.end19:                                         ; No predecessors!
  %19 = load i32, i32* %w, align 4
  %20 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx20 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %20, i32 0, i32 %19
  %d21 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx20, i32 0, i32 2
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d21, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -3, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d24 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx23, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d24, align 4
  br label %for.inc25

for.inc25:                                        ; No predecessors!
  %24 = load i32, i32* %w, align 4
  %inc26 = add nsw i32 %24, 1
  store i32 %inc26, i32* %w, align 4
  br label %for.cond10

for.end27:                                        ; No predecessors!
  ret void
}

define void @construct_neither_Clear() {
entry:
  %w = alloca i32, align 4
  %0 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.10.298, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end7, label %if.then

if.then:                                          ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.11.299, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; No predecessors!
  br label %for.inc

if.end:                                           ; No predecessors!
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx4 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %8)
  %9 = load i32, i32* %w, align 4
  %10 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %10, i32 0, i32 %9
  %d6 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d6, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %11 = load i32, i32* %w, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  br label %for.end44

if.end7:                                          ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond8

for.cond8:                                        ; No predecessors!
  %12 = load i32, i32* %w, align 4
  %13 = load i32, i32* @N_words, align 4
  %cmp9 = icmp slt i32 %12, %13
  br i1 %cmp9, label %for.body10, label %for.end26

for.body10:                                       ; No predecessors!
  %14 = load i32, i32* %w, align 4
  %15 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx11 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %15, i32 0, i32 %14
  %string12 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx11, i32 0, i32 0
  %arraydecay13 = getelementptr inbounds [60 x i8], [60 x i8]* %string12, i32 0, i32 0
  %16 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.12.300, i32 0, i32 0
  %call14 = call i32 @strcmp_Package(i8* %arraydecay13, i8* %16)
  %cmp15 = icmp ne i32 %call14, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; No predecessors!
  br label %for.inc24

if.end17:                                         ; No predecessors!
  %17 = load i32, i32* %w, align 4
  %18 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx18 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %18, i32 0, i32 %17
  %d19 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx18, i32 0, i32 2
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d19, align 4
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.14.301, i32 0, i32 0
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.13.302, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -4, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %20, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %21, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %call21 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct* %19)
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx22 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d23 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx22, i32 0, i32 2
  store %struct.Disjunct_struct* %call21, %struct.Disjunct_struct** %d23, align 4
  br label %for.inc24

for.inc24:                                        ; No predecessors!
  %24 = load i32, i32* %w, align 4
  %inc25 = add nsw i32 %24, 1
  store i32 %inc25, i32* %w, align 4
  br label %for.cond8

for.end26:                                        ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond27

for.cond27:                                       ; No predecessors!
  %25 = load i32, i32* %w, align 4
  %26 = load i32, i32* @N_words, align 4
  %cmp28 = icmp slt i32 %25, %26
  br i1 %cmp28, label %for.body29, label %for.end44

for.body29:                                       ; No predecessors!
  %27 = load i32, i32* %w, align 4
  %28 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx30 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %28, i32 0, i32 %27
  %string31 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx30, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [60 x i8], [60 x i8]* %string31, i32 0, i32 0
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.15.303, i32 0, i32 0
  %call33 = call i32 @strcmp_Package(i8* %arraydecay32, i8* %29)
  %cmp34 = icmp ne i32 %call33, 0
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; No predecessors!
  br label %for.inc42

if.end36:                                         ; No predecessors!
  %30 = load i32, i32* %w, align 4
  %31 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx37 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %31, i32 0, i32 %30
  %d38 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx37, i32 0, i32 2
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d38, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %32, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -4, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 1, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %33 = load i32, i32* %w, align 4
  %34 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx40 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %34, i32 0, i32 %33
  %d41 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx40, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d41, align 4
  br label %for.inc42

for.inc42:                                        ; No predecessors!
  %35 = load i32, i32* %w, align 4
  %inc43 = add nsw i32 %35, 1
  store i32 %inc43, i32* %w, align 4
  br label %for.cond27

for.end44:                                        ; No predecessors!
  ret void
}

define void @construct_notonlybut_Clear() {
entry:
  %w = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.16.306, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  br label %for.end51

if.end:                                           ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.17.307, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; No predecessors!
  br label %for.inc

if.end4:                                          ; No predecessors!
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d6 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d6, align 4
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.19.308, i32 0, i32 0
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.18.309, i32 0, i32 0
  %struct.BigStruct_012 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -5, i32* %struct.BigStruct_012
  %struct.BigStruct_513 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_513
  %struct.BigStruct_1114 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %9, i8** %struct.BigStruct_1114
  %struct.BigStruct_2715 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %10, i8** %struct.BigStruct_2715
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_3316 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_3316 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_3316
  %call8 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_3316, %struct.Disjunct_struct* %8)
  %11 = load i32, i32* %w, align 4
  %12 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %12, i32 0, i32 %11
  %d10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 2
  store %struct.Disjunct_struct* %call8, %struct.Disjunct_struct** %d10, align 4
  %13 = load i32, i32* %w, align 4
  %14 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %14, 1
  %cmp11 = icmp slt i32 %13, %sub
  br i1 %cmp11, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; No predecessors!
  %15 = load i32, i32* %w, align 4
  %add = add nsw i32 %15, 1
  %16 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx12 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %16, i32 0, i32 %add
  %string13 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx12, i32 0, i32 0
  %arraydecay14 = getelementptr inbounds [60 x i8], [60 x i8]* %string13, i32 0, i32 0
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.20.310, i32 0, i32 0
  %call15 = call i32 @strcmp_Package(i8* %arraydecay14, i8* %17)
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %if.end33

if.then17:                                        ; No predecessors!
  %18 = load i32, i32* %w, align 4
  %add18 = add nsw i32 %18, 1
  %19 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %19, i32 0, i32 %add18
  %d20 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx19, i32 0, i32 2
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d20, align 4
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.22.311, i32 0, i32 0
  %22 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.21.312, i32 0, i32 0
  %struct.BigStruct_07 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -6, i32* %struct.BigStruct_07
  %struct.BigStruct_58 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 45, i32* %struct.BigStruct_58
  %struct.BigStruct_119 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %21, i8** %struct.BigStruct_119
  %struct.BigStruct_2710 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %22, i8** %struct.BigStruct_2710
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_3311 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_3311 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_3311
  %call22 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_3311, %struct.Disjunct_struct* %20)
  %23 = load i32, i32* %w, align 4
  %add23 = add nsw i32 %23, 1
  %24 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx24 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %24, i32 0, i32 %add23
  %d25 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx24, i32 0, i32 2
  store %struct.Disjunct_struct* %call22, %struct.Disjunct_struct** %d25, align 4
  %25 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.24.313, i32 0, i32 0
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.23.314, i32 0, i32 0
  %struct.BigStruct_03 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -6, i32* %struct.BigStruct_03
  %struct.BigStruct_54 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_54
  %struct.BigStruct_115 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %25, i8** %struct.BigStruct_115
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %26, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_336 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_336 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_336
  store %struct.Disjunct_struct* %load_struct.BigStruct_336, %struct.Disjunct_struct** %d, align 4
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %28 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.25.315, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -5, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %28, i8** %struct.BigStruct_11
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 12
  store %struct.Disjunct_struct* %27, %struct.Disjunct_struct** %struct.BigStruct_12
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 85, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  store %struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct** %d, align 4
  %29 = load i32, i32* %w, align 4
  %30 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx28 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %30, i32 0, i32 %29
  %d29 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx28, i32 0, i32 2
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d29, align 4
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %call30 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %32, %struct.Disjunct_struct* %31)
  %33 = load i32, i32* %w, align 4
  %34 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx31 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %34, i32 0, i32 %33
  %d32 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx31, i32 0, i32 2
  store %struct.Disjunct_struct* %call30, %struct.Disjunct_struct** %d32, align 4
  br label %if.end33

if.end33:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %35 = load i32, i32* %w, align 4
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond34

for.cond34:                                       ; No predecessors!
  %36 = load i32, i32* %w, align 4
  %37 = load i32, i32* @N_words, align 4
  %cmp35 = icmp slt i32 %36, %37
  br i1 %cmp35, label %for.body36, label %for.end51

for.body36:                                       ; No predecessors!
  %38 = load i32, i32* %w, align 4
  %39 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx37 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %39, i32 0, i32 %38
  %string38 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx37, i32 0, i32 0
  %arraydecay39 = getelementptr inbounds [60 x i8], [60 x i8]* %string38, i32 0, i32 0
  %40 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.26.316, i32 0, i32 0
  %call40 = call i32 @strcmp_Package(i8* %arraydecay39, i8* %40)
  %cmp41 = icmp ne i32 %call40, 0
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; No predecessors!
  br label %for.inc49

if.end43:                                         ; No predecessors!
  %41 = load i32, i32* %w, align 4
  %42 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx44 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %42, i32 0, i32 %41
  %d45 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx44, i32 0, i32 2
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d45, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -5, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 1, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %44 = load i32, i32* %w, align 4
  %45 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx47 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %45, i32 0, i32 %44
  %d48 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx47, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d48, align 4
  br label %for.inc49

for.inc49:                                        ; No predecessors!
  %46 = load i32, i32* %w, align 4
  %inc50 = add nsw i32 %46, 1
  store i32 %inc50, i32* %w, align 4
  br label %for.cond34

for.end51:                                        ; No predecessors!
  ret void
}

define void @construct_both_Clear() {
entry:
  %w = alloca i32, align 4
  %0 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.27.319, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 122, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  br label %for.end27

if.end:                                           ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.28.320, i32 0, i32 0
  %call1 = call i32 @strcmp_Package(i8* %arraydecay, i8* %5)
  %cmp2 = icmp ne i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; No predecessors!
  br label %for.inc

if.end4:                                          ; No predecessors!
  %6 = load i32, i32* %w, align 4
  %7 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %7, i32 0, i32 %6
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 2
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.30.321, i32 0, i32 0
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.29.322, i32 0, i32 0
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 -7, i32* %struct.BigStruct_0
  %struct.BigStruct_51 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 43, i32* %struct.BigStruct_51
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %9, i8** %struct.BigStruct_11
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %10, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 86, i32 0)
  %struct.BigStruct_332 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_332 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_332
  %call7 = call %struct.Disjunct_struct* @catenate_disjuncts(%struct.Disjunct_struct* %load_struct.BigStruct_332, %struct.Disjunct_struct* %8)
  %11 = load i32, i32* %w, align 4
  %12 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx8 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %12, i32 0, i32 %11
  %d9 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx8, i32 0, i32 2
  store %struct.Disjunct_struct* %call7, %struct.Disjunct_struct** %d9, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond10

for.cond10:                                       ; No predecessors!
  %14 = load i32, i32* %w, align 4
  %15 = load i32, i32* @N_words, align 4
  %cmp11 = icmp slt i32 %14, %15
  br i1 %cmp11, label %for.body12, label %for.end27

for.body12:                                       ; No predecessors!
  %16 = load i32, i32* %w, align 4
  %17 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx13 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %17, i32 0, i32 %16
  %string14 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx13, i32 0, i32 0
  %arraydecay15 = getelementptr inbounds [60 x i8], [60 x i8]* %string14, i32 0, i32 0
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.31.323, i32 0, i32 0
  %call16 = call i32 @strcmp_Package(i8* %arraydecay15, i8* %18)
  %cmp17 = icmp ne i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; No predecessors!
  br label %for.inc25

if.end19:                                         ; No predecessors!
  %19 = load i32, i32* %w, align 4
  %20 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx20 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %20, i32 0, i32 %19
  %d21 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx20, i32 0, i32 2
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d21, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %struct.BigStruct_4
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 -7, i32* %struct.BigStruct_5
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 84, i32 0)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx23 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d24 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx23, i32 0, i32 2
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d24, align 4
  br label %for.inc25

for.inc25:                                        ; No predecessors!
  %24 = load i32, i32* %w, align 4
  %inc26 = add nsw i32 %24, 1
  store i32 %inc26, i32* %w, align 4
  br label %for.cond10

for.end27:                                        ; No predecessors!
  ret void
}

define void @parse_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %cost.addr = alloca i32, align 4
  %dis = alloca %struct.Disjunct_struct*, align 4
  %total = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %cost.addr, align 4
  store i32 0, i32* %total, align 4
  %0 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 0, i32 2
  %1 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %0, align 4
  store %struct.Disjunct_struct* %1, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %cmp = icmp ne %struct.Disjunct_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %3, i32 0, i32 4
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp1 = icmp eq %struct.Connector_struct* %4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %5 = load i32, i32* %cost.addr, align 4
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 5
  %7 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %8 = load i32, i32* @N_words, align 4
  %call = call i32 @count(i32 0, i32 %8, %struct.Connector_struct* %7, %struct.Connector_struct* null, i32 %5)
  %9 = load i32, i32* %total, align 4
  %add = add nsw i32 %9, %call
  store i32 %add, i32* %total, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %10 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dis, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %10, i32 0, i32 0
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %dis, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %12 = load i32, i32* %cost.addr, align 4
  %13 = load i32, i32* @N_words, align 4
  %call2 = call i32 @count(i32 0, i32 %13, %struct.Connector_struct* null, %struct.Connector_struct* null, i32 %12)
  %14 = load i32, i32* %total, align 4
  %add3 = add nsw i32 %14, %call2
  store i32 %add3, i32* %total, align 4
  %15 = load i32, i32* @verbosity, align 4
  %cmp4 = icmp sgt i32 %15, 1
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; No predecessors!
  %16 = load i32, i32* %total, align 4
  %17 = load i32, i32* %cost.addr, align 4
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.2.338, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %18, i32 %17, i32 %16)
  br label %if.end7

if.end7:                                          ; No predecessors!
  %19 = load i32, i32* %total, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %19, i32* %struct.BigStruct_32
  ret void
}

define void @conjunction_prune_Clear() {
entry:
  %d = alloca %struct.Disjunct_struct*, align 4
  %d_head = alloca %struct.Disjunct_struct*, align 4
  %dx = alloca %struct.Disjunct_struct*, align 4
  %w = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 2
  store i8 0, i8* %marked, align 2
  br label %for.inc

for.inc:                                          ; No predecessors!
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 0
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %8, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  br label %for.inc5

for.inc5:                                         ; No predecessors!
  %9 = load i32, i32* %w, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end6:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 72, i32 1)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 87, i32 0)
  %10 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 0, i32 2
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %10, align 4
  store %struct.Disjunct_struct* %11, %struct.Disjunct_struct** %d, align 4
  br label %for.cond7

for.cond7:                                        ; No predecessors!
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp8 = icmp ne %struct.Disjunct_struct* %12, null
  br i1 %cmp8, label %for.body9, label %for.end15

for.body9:                                        ; No predecessors!
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp10 = icmp eq %struct.Connector_struct* %14, null
  br i1 %cmp10, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; No predecessors!
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 5
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %17 = load i32, i32* @N_words, align 4
  %call = call i32 @region_valid(i32 0, i32 %17, %struct.Connector_struct* %16, %struct.Connector_struct* null)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right11 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 5
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %right11, align 4
  %20 = load i32, i32* @N_words, align 4
  call void @mark_region(i32 0, i32 %20, %struct.Connector_struct* %19, %struct.Connector_struct* null)
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked12 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 2
  store i8 1, i8* %marked12, align 2
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc13

for.inc13:                                        ; No predecessors!
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next14 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 0
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next14, align 4
  store %struct.Disjunct_struct* %23, %struct.Disjunct_struct** %d, align 4
  br label %for.cond7

for.end15:                                        ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond16

for.cond16:                                       ; No predecessors!
  %24 = load i32, i32* %w, align 4
  %25 = load i32, i32* @N_words, align 4
  %cmp17 = icmp slt i32 %24, %25
  br i1 %cmp17, label %for.body18, label %for.end37

for.body18:                                       ; No predecessors!
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %d_head, align 4
  %26 = load i32, i32* %w, align 4
  %27 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx19 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %27, i32 0, i32 %26
  %d20 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx19, i32 0, i32 2
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d20, align 4
  store %struct.Disjunct_struct* %28, %struct.Disjunct_struct** %d, align 4
  br label %for.cond21

for.cond21:                                       ; No predecessors!
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp22 = icmp ne %struct.Disjunct_struct* %29, null
  br i1 %cmp22, label %for.body23, label %for.end32

for.body23:                                       ; No predecessors!
  %30 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next24 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %30, i32 0, i32 0
  %31 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next24, align 4
  store %struct.Disjunct_struct* %31, %struct.Disjunct_struct** %dx, align 4
  %32 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %marked25 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %32, i32 0, i32 2
  %33 = load i8, i8* %marked25, align 2
  %tobool26 = icmp ne i8 %33, 0
  br i1 %tobool26, label %if.then27, label %if.else

if.then27:                                        ; No predecessors!
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_head, align 4
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next28 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 0
  store %struct.Disjunct_struct* %34, %struct.Disjunct_struct** %next28, align 4
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %36, %struct.Disjunct_struct** %d_head, align 4
  br label %if.end30

if.else:                                          ; No predecessors!
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next29 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %37, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next29, align 4
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %38)
  br label %if.end30

if.end30:                                         ; No predecessors!
  br label %for.inc31

for.inc31:                                        ; No predecessors!
  %39 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %39, %struct.Disjunct_struct** %d, align 4
  br label %for.cond21

for.end32:                                        ; No predecessors!
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d_head, align 4
  %41 = load i32, i32* %w, align 4
  %42 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx33 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %42, i32 0, i32 %41
  %d34 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx33, i32 0, i32 2
  store %struct.Disjunct_struct* %40, %struct.Disjunct_struct** %d34, align 4
  br label %for.inc35

for.inc35:                                        ; No predecessors!
  %43 = load i32, i32* %w, align 4
  %inc36 = add nsw i32 %43, 1
  store i32 %inc36, i32* %w, align 4
  br label %for.cond16

for.end37:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 71, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 88, i32 0)
  ret void
}

define void @print_expression_sizes_Clear() {
entry:
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  %size = alloca i32, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; No predecessors!
  store i32 0, i32* %size, align 4
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call i32 @size_of_expression(%struct.Exp_struct* %7)
  %8 = load i32, i32* %size, align 4
  %add = add nsw i32 %8, %call
  store i32 %add, i32* %size, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %11 = load i32, i32* %size, align 4
  %12 = load i32, i32* %w, align 4
  %13 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx5 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %13, i32 0, i32 %12
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx5, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.25.668, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %14, i8* %arraydecay, i32 %11)
  br label %for.inc7

for.inc7:                                         ; No predecessors!
  %15 = load i32, i32* %w, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end8:                                         ; No predecessors!
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.26.669, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %16)
  ret void
}

define void @print_sentence_Clear() {
entry:
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  %load_struct.BigStruct_1 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %w.addr = alloca i32, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %i = alloca i32, align 4
  store i32 %load_struct.BigStruct_5, i32* %w.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_1, %struct._iobuf** %fp.addr, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 1, i32* %i, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %1 = load i32, i32* %w.addr, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; No predecessors!
  %2 = load i32, i32* %w.addr, align 4
  %3 = load i32, i32* %i, align 4
  %add = add nsw i32 %3, %2
  store i32 %add, i32* %i, align 4
  br label %if.end2

if.end2:                                          ; No predecessors!
  br label %for.cond

for.cond:                                         ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @N_words, align 4
  %6 = load i32, i32* @right_wall_defined, align 4
  %sub = sub nsw i32 %5, %6
  %cmp3 = icmp slt i32 %4, %sub
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %8 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %8, i32 0, i32 %7
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  %9 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.27.672, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %9, i8* %10, i8* %arraydecay)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %12 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.28.673, i32 0, i32 0
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %12, i8* %13)
  ret void
}

define void @zero_S_Clear() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @s_table_size, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %3, i32 %2
  store %struct.Connector_struct* null, %struct.Connector_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @count_disjuncts_in_sentence_Clear() {
entry:
  %w = alloca i32, align 4
  %count = alloca i32, align 4
  store i32 0, i32* %count, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 93, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %5 = load i32, i32* %count, align 4
  %add = add nsw i32 %5, %load_struct.BigStruct_32
  store i32 %add, i32* %count, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %6 = load i32, i32* %w, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %7 = load i32, i32* %count, align 4
  %struct.BigStruct_321 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %7, i32* %struct.BigStruct_321
  ret void
}

define void @prune_Clear() {
entry:
  %N_deleted = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %e = alloca %struct.Connector_struct*, align 4
  %w = alloca i32, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 143, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %call1 = call i32 @next_power_of_two_up(i32 %load_struct.BigStruct_32)
  store i32 %call1, i32* @s_table_size, align 4
  %0 = load i32, i32* @s_table_size, align 4
  %mul = mul i32 %0, 4
  %call2 = call i8* @xalloc(i32 %mul)
  %1 = bitcast i8* %call2 to %struct.Connector_struct**
  store %struct.Connector_struct** %1, %struct.Connector_struct*** @table.676, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 142, i32 10)
  store i32 1, i32* %N_deleted, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end38

for.body:                                         ; No predecessors!
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %5, i32 0, i32 %4
  %d4 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d4, align 4
  store %struct.Disjunct_struct* %6, %struct.Disjunct_struct** %d, align 4
  br label %for.cond5

for.cond5:                                        ; No predecessors!
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp6 = icmp ne %struct.Disjunct_struct* %7, null
  br i1 %cmp6, label %for.body7, label %for.end20

for.body7:                                        ; No predecessors!
  %8 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %8, i32 0, i32 4
  %9 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  store %struct.Connector_struct* %9, %struct.Connector_struct** %e, align 4
  br label %for.cond8

for.cond8:                                        ; No predecessors!
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp9 = icmp ne %struct.Connector_struct* %10, null
  br i1 %cmp9, label %for.body10, label %for.end

for.body10:                                       ; No predecessors!
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %call11 = call i32 @matches_S(%struct.Connector_struct* %11, i32 45)
  %tobool = icmp ne i32 %call11, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  br label %for.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %12, i32 0, i32 4
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %13, %struct.Connector_struct** %e, align 4
  br label %for.cond8

for.end:                                          ; No predecessors!
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %14, null
  br i1 %cmp12, label %if.then13, label %if.end17

if.then13:                                        ; No predecessors!
  %15 = load i32, i32* %N_deleted, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %N_deleted, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left14 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %16, i32 0, i32 4
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %left14, align 4
  call void @free_connectors(%struct.Connector_struct* %17)
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 5
  %19 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  call void @free_connectors(%struct.Connector_struct* %19)
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right15 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %20, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right15, align 4
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left16 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %21, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left16, align 4
  br label %if.end17

if.end17:                                         ; No predecessors!
  br label %for.inc18

for.inc18:                                        ; No predecessors!
  %22 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next19 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %22, i32 0, i32 0
  %23 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next19, align 4
  store %struct.Disjunct_struct* %23, %struct.Disjunct_struct** %d, align 4
  br label %for.cond5

for.end20:                                        ; No predecessors!
  %24 = load i32, i32* %w, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %24, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 24, i32 0)
  %25 = load i32, i32* %w, align 4
  %26 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx21 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %26, i32 0, i32 %25
  %d22 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx21, i32 0, i32 2
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d22, align 4
  store %struct.Disjunct_struct* %27, %struct.Disjunct_struct** %d, align 4
  br label %for.cond23

for.cond23:                                       ; No predecessors!
  %28 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp24 = icmp ne %struct.Disjunct_struct* %28, null
  br i1 %cmp24, label %for.body25, label %for.end35

for.body25:                                       ; No predecessors!
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right26 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %29, i32 0, i32 5
  %30 = load %struct.Connector_struct*, %struct.Connector_struct** %right26, align 4
  store %struct.Connector_struct* %30, %struct.Connector_struct** %e, align 4
  br label %for.cond27

for.cond27:                                       ; No predecessors!
  %31 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp28 = icmp ne %struct.Connector_struct* %31, null
  br i1 %cmp28, label %for.body29, label %for.end32

for.body29:                                       ; No predecessors!
  %32 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  call void @insert_S(%struct.Connector_struct* %32)
  br label %for.inc30

for.inc30:                                        ; No predecessors!
  %33 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next31 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %33, i32 0, i32 4
  %34 = load %struct.Connector_struct*, %struct.Connector_struct** %next31, align 4
  store %struct.Connector_struct* %34, %struct.Connector_struct** %e, align 4
  br label %for.cond27

for.end32:                                        ; No predecessors!
  br label %for.inc33

for.inc33:                                        ; No predecessors!
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next34 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %35, i32 0, i32 0
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next34, align 4
  store %struct.Disjunct_struct* %36, %struct.Disjunct_struct** %d, align 4
  br label %for.cond23

for.end35:                                        ; No predecessors!
  br label %for.inc36

for.inc36:                                        ; No predecessors!
  %37 = load i32, i32* %w, align 4
  %inc37 = add nsw i32 %37, 1
  store i32 %inc37, i32* %w, align 4
  br label %for.cond3

for.end38:                                        ; No predecessors!
  %38 = load i32, i32* @verbosity, align 4
  %cmp39 = icmp sgt i32 %38, 2
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; No predecessors!
  %39 = load i32, i32* %N_deleted, align 4
  %40 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.679, i32 0, i32 0
  %call41 = call i32 (i8*, ...) @printf(i8* %40, i32 %39)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end42

if.end42:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %41 = load i32, i32* %N_deleted, align 4
  %cmp43 = icmp eq i32 %41, 0
  br i1 %cmp43, label %if.then44, label %if.end45

if.then44:                                        ; No predecessors!
  br label %for.end100

if.end45:                                         ; No predecessors!
  store i32 0, i32* %N_deleted, align 4
  %42 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %42, 1
  store i32 %sub, i32* %w, align 4
  br label %for.cond46

for.cond46:                                       ; No predecessors!
  %43 = load i32, i32* %w, align 4
  %cmp47 = icmp sge i32 %43, 0
  br i1 %cmp47, label %for.body48, label %for.end92

for.body48:                                       ; No predecessors!
  %44 = load i32, i32* %w, align 4
  %45 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx49 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %45, i32 0, i32 %44
  %d50 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx49, i32 0, i32 2
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d50, align 4
  store %struct.Disjunct_struct* %46, %struct.Disjunct_struct** %d, align 4
  br label %for.cond51

for.cond51:                                       ; No predecessors!
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp52 = icmp ne %struct.Disjunct_struct* %47, null
  br i1 %cmp52, label %for.body53, label %for.end75

for.body53:                                       ; No predecessors!
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right54 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %48, i32 0, i32 5
  %49 = load %struct.Connector_struct*, %struct.Connector_struct** %right54, align 4
  store %struct.Connector_struct* %49, %struct.Connector_struct** %e, align 4
  br label %for.cond55

for.cond55:                                       ; No predecessors!
  %50 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp56 = icmp ne %struct.Connector_struct* %50, null
  br i1 %cmp56, label %for.body57, label %for.end64

for.body57:                                       ; No predecessors!
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %call58 = call i32 @matches_S(%struct.Connector_struct* %51, i32 43)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end61, label %if.then60

if.then60:                                        ; No predecessors!
  br label %for.end64

if.end61:                                         ; No predecessors!
  br label %for.inc62

for.inc62:                                        ; No predecessors!
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next63 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %52, i32 0, i32 4
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %next63, align 4
  store %struct.Connector_struct* %53, %struct.Connector_struct** %e, align 4
  br label %for.cond55

for.end64:                                        ; No predecessors!
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp65 = icmp ne %struct.Connector_struct* %54, null
  br i1 %cmp65, label %if.then66, label %if.end72

if.then66:                                        ; No predecessors!
  %55 = load i32, i32* %N_deleted, align 4
  %inc67 = add nsw i32 %55, 1
  store i32 %inc67, i32* %N_deleted, align 4
  %56 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left68 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %56, i32 0, i32 4
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %left68, align 4
  call void @free_connectors(%struct.Connector_struct* %57)
  %58 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %58, i32 0, i32 5
  %59 = load %struct.Connector_struct*, %struct.Connector_struct** %right69, align 4
  call void @free_connectors(%struct.Connector_struct* %59)
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right70 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %60, i32 0, i32 5
  store %struct.Connector_struct* null, %struct.Connector_struct** %right70, align 4
  %61 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left71 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %61, i32 0, i32 4
  store %struct.Connector_struct* null, %struct.Connector_struct** %left71, align 4
  br label %if.end72

if.end72:                                         ; No predecessors!
  br label %for.inc73

for.inc73:                                        ; No predecessors!
  %62 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next74 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %62, i32 0, i32 0
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next74, align 4
  store %struct.Disjunct_struct* %63, %struct.Disjunct_struct** %d, align 4
  br label %for.cond51

for.end75:                                        ; No predecessors!
  %64 = load i32, i32* %w, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %64, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 24, i32 0)
  %65 = load i32, i32* %w, align 4
  %66 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx76 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %66, i32 0, i32 %65
  %d77 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx76, i32 0, i32 2
  %67 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d77, align 4
  store %struct.Disjunct_struct* %67, %struct.Disjunct_struct** %d, align 4
  br label %for.cond78

for.cond78:                                       ; No predecessors!
  %68 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp79 = icmp ne %struct.Disjunct_struct* %68, null
  br i1 %cmp79, label %for.body80, label %for.end90

for.body80:                                       ; No predecessors!
  %69 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left81 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %69, i32 0, i32 4
  %70 = load %struct.Connector_struct*, %struct.Connector_struct** %left81, align 4
  store %struct.Connector_struct* %70, %struct.Connector_struct** %e, align 4
  br label %for.cond82

for.cond82:                                       ; No predecessors!
  %71 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %cmp83 = icmp ne %struct.Connector_struct* %71, null
  br i1 %cmp83, label %for.body84, label %for.end87

for.body84:                                       ; No predecessors!
  %72 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  call void @insert_S(%struct.Connector_struct* %72)
  br label %for.inc85

for.inc85:                                        ; No predecessors!
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %e, align 4
  %next86 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %73, i32 0, i32 4
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %next86, align 4
  store %struct.Connector_struct* %74, %struct.Connector_struct** %e, align 4
  br label %for.cond82

for.end87:                                        ; No predecessors!
  br label %for.inc88

for.inc88:                                        ; No predecessors!
  %75 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next89 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %75, i32 0, i32 0
  %76 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next89, align 4
  store %struct.Disjunct_struct* %76, %struct.Disjunct_struct** %d, align 4
  br label %for.cond78

for.end90:                                        ; No predecessors!
  br label %for.inc91

for.inc91:                                        ; No predecessors!
  %77 = load i32, i32* %w, align 4
  %dec = add nsw i32 %77, -1
  store i32 %dec, i32* %w, align 4
  br label %for.cond46

for.end92:                                        ; No predecessors!
  %78 = load i32, i32* @verbosity, align 4
  %cmp93 = icmp sgt i32 %78, 2
  br i1 %cmp93, label %if.then94, label %if.end96

if.then94:                                        ; No predecessors!
  %79 = load i32, i32* %N_deleted, align 4
  %80 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.1.680, i32 0, i32 0
  %call95 = call i32 (i8*, ...) @printf(i8* %80, i32 %79)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 91, i32 0)
  br label %if.end96

if.end96:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %81 = load i32, i32* %N_deleted, align 4
  %cmp97 = icmp eq i32 %81, 0
  br i1 %cmp97, label %if.then98, label %if.end99

if.then98:                                        ; No predecessors!
  br label %for.end100

if.end99:                                         ; No predecessors!
  store i32 0, i32* %N_deleted, align 4
  br label %for.cond

for.end100:                                       ; No predecessors!
  %82 = load i32, i32* @s_table_size, align 4
  %mul101 = mul i32 %82, 4
  %83 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %84 = bitcast %struct.Connector_struct** %83 to i8*
  call void @xfree(i8* %84, i32 %mul101)
  ret void
}

define void @init_power_Clear() {
entry:
  %w = alloca i32, align 4
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca %struct.c_list_struct**, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %xd = alloca %struct.Disjunct_struct*, align 4
  %head = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end13

for.body:                                         ; No predecessors!
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %head, align 4
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %d1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %4 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %4, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp3 = icmp ne %struct.Disjunct_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %6, i32 0, i32 0
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %7, %struct.Disjunct_struct** %xd, align 4
  %8 = load i32, i32* %w, align 4
  %9 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %9, i32 0, i32 4
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %call = call i32 @set_dist_fields(%struct.Connector_struct* %10, i32 %8, i32 -1)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %11 = load i32, i32* %w, align 4
  %12 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %12, i32 0, i32 5
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  %call6 = call i32 @set_dist_fields(%struct.Connector_struct* %13, i32 %11, i32 1)
  %14 = load i32, i32* @N_words, align 4
  %cmp7 = icmp sge i32 %call6, %14
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %15 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next8 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %15, i32 0, i32 0
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %next8, align 4
  %16 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %16)
  br label %if.end

if.else:                                          ; No predecessors!
  %17 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %head, align 4
  %18 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next9 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %18, i32 0, i32 0
  store %struct.Disjunct_struct* %17, %struct.Disjunct_struct** %next9, align 4
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %19, %struct.Disjunct_struct** %head, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %20 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %xd, align 4
  store %struct.Disjunct_struct* %20, %struct.Disjunct_struct** %d, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  %21 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %head, align 4
  %22 = load i32, i32* %w, align 4
  %23 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx10 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %23, i32 0, i32 %22
  %d11 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx10, i32 0, i32 2
  store %struct.Disjunct_struct* %21, %struct.Disjunct_struct** %d11, align 4
  br label %for.inc12

for.inc12:                                        ; No predecessors!
  %24 = load i32, i32* %w, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end13:                                        ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond14

for.cond14:                                       ; No predecessors!
  %25 = load i32, i32* %w, align 4
  %26 = load i32, i32* @N_words, align 4
  %cmp15 = icmp slt i32 %25, %26
  br i1 %cmp15, label %for.body16, label %for.end86

for.body16:                                       ; No predecessors!
  %27 = load i32, i32* %w, align 4
  %28 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx17 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %28, i32 0, i32 %27
  %d18 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx17, i32 0, i32 2
  %29 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d18, align 4
  %struct.BigStruct_4 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 4
  store %struct.Disjunct_struct* %29, %struct.Disjunct_struct** %struct.BigStruct_4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 95, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  store i32 %load_struct.BigStruct_32, i32* %len, align 4
  %30 = load i32, i32* %len, align 4
  %call20 = call i32 @next_power_of_two_up(i32 %30)
  store i32 %call20, i32* %size, align 4
  %31 = load i32, i32* %size, align 4
  %32 = load i32, i32* %w, align 4
  %arrayidx21 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %32
  store i32 %31, i32* %arrayidx21, align 4
  %33 = load i32, i32* %size, align 4
  %mul = mul i32 %33, 4
  %call22 = call i8* @xalloc(i32 %mul)
  %34 = bitcast i8* %call22 to %struct.c_list_struct**
  %35 = load i32, i32* %w, align 4
  %arrayidx23 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %35
  store %struct.c_list_struct** %34, %struct.c_list_struct*** %arrayidx23, align 4
  store %struct.c_list_struct** %34, %struct.c_list_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond24

for.cond24:                                       ; No predecessors!
  %36 = load i32, i32* %i, align 4
  %37 = load i32, i32* %size, align 4
  %cmp25 = icmp slt i32 %36, %37
  br i1 %cmp25, label %for.body26, label %for.end30

for.body26:                                       ; No predecessors!
  %38 = load i32, i32* %i, align 4
  %39 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %arrayidx27 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %39, i32 %38
  store %struct.c_list_struct* null, %struct.c_list_struct** %arrayidx27, align 4
  br label %for.inc28

for.inc28:                                        ; No predecessors!
  %40 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %40, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond24

for.end30:                                        ; No predecessors!
  %41 = load i32, i32* %w, align 4
  %42 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx31 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %42, i32 0, i32 %41
  %d32 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx31, i32 0, i32 2
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d32, align 4
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %d, align 4
  br label %for.cond33

for.cond33:                                       ; No predecessors!
  %44 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp34 = icmp ne %struct.Disjunct_struct* %44, null
  br i1 %cmp34, label %for.body35, label %for.end49

for.body35:                                       ; No predecessors!
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left36 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %45, i32 0, i32 4
  %46 = load %struct.Connector_struct*, %struct.Connector_struct** %left36, align 4
  store %struct.Connector_struct* %46, %struct.Connector_struct** %c, align 4
  %47 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp37 = icmp ne %struct.Connector_struct* %47, null
  br i1 %cmp37, label %if.then38, label %if.end46

if.then38:                                        ; No predecessors!
  %48 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %49 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %50 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %50, %struct.c_list_struct** %49, %struct.Connector_struct* %48, i32 1)
  %51 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next39 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %51, i32 0, i32 4
  %52 = load %struct.Connector_struct*, %struct.Connector_struct** %next39, align 4
  store %struct.Connector_struct* %52, %struct.Connector_struct** %c, align 4
  br label %for.cond40

for.cond40:                                       ; No predecessors!
  %53 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp41 = icmp ne %struct.Connector_struct* %53, null
  br i1 %cmp41, label %for.body42, label %for.end45

for.body42:                                       ; No predecessors!
  %54 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %55 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %56 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %56, %struct.c_list_struct** %55, %struct.Connector_struct* %54, i32 0)
  br label %for.inc43

for.inc43:                                        ; No predecessors!
  %57 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next44 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %57, i32 0, i32 4
  %58 = load %struct.Connector_struct*, %struct.Connector_struct** %next44, align 4
  store %struct.Connector_struct* %58, %struct.Connector_struct** %c, align 4
  br label %for.cond40

for.end45:                                        ; No predecessors!
  br label %if.end46

if.end46:                                         ; No predecessors!
  br label %for.inc47

for.inc47:                                        ; No predecessors!
  %59 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next48 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %59, i32 0, i32 0
  %60 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next48, align 4
  store %struct.Disjunct_struct* %60, %struct.Disjunct_struct** %d, align 4
  br label %for.cond33

for.end49:                                        ; No predecessors!
  %61 = load i32, i32* %w, align 4
  %62 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx50 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %62, i32 0, i32 %61
  %d51 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx50, i32 0, i32 2
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d51, align 4
  %call52 = call i32 @right_connector_count(%struct.Disjunct_struct* %63)
  store i32 %call52, i32* %len, align 4
  %64 = load i32, i32* %len, align 4
  %call53 = call i32 @next_power_of_two_up(i32 %64)
  store i32 %call53, i32* %size, align 4
  %65 = load i32, i32* %size, align 4
  %66 = load i32, i32* %w, align 4
  %arrayidx54 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %66
  store i32 %65, i32* %arrayidx54, align 4
  %67 = load i32, i32* %size, align 4
  %mul55 = mul i32 %67, 4
  %call56 = call i8* @xalloc(i32 %mul55)
  %68 = bitcast i8* %call56 to %struct.c_list_struct**
  %69 = load i32, i32* %w, align 4
  %arrayidx57 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %69
  store %struct.c_list_struct** %68, %struct.c_list_struct*** %arrayidx57, align 4
  store %struct.c_list_struct** %68, %struct.c_list_struct*** %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; No predecessors!
  %70 = load i32, i32* %i, align 4
  %71 = load i32, i32* %size, align 4
  %cmp59 = icmp slt i32 %70, %71
  br i1 %cmp59, label %for.body60, label %for.end64

for.body60:                                       ; No predecessors!
  %72 = load i32, i32* %i, align 4
  %73 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %arrayidx61 = getelementptr inbounds %struct.c_list_struct*, %struct.c_list_struct** %73, i32 %72
  store %struct.c_list_struct* null, %struct.c_list_struct** %arrayidx61, align 4
  br label %for.inc62

for.inc62:                                        ; No predecessors!
  %74 = load i32, i32* %i, align 4
  %inc63 = add nsw i32 %74, 1
  store i32 %inc63, i32* %i, align 4
  br label %for.cond58

for.end64:                                        ; No predecessors!
  %75 = load i32, i32* %w, align 4
  %76 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx65 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %76, i32 0, i32 %75
  %d66 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx65, i32 0, i32 2
  %77 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d66, align 4
  store %struct.Disjunct_struct* %77, %struct.Disjunct_struct** %d, align 4
  br label %for.cond67

for.cond67:                                       ; No predecessors!
  %78 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp68 = icmp ne %struct.Disjunct_struct* %78, null
  br i1 %cmp68, label %for.body69, label %for.end83

for.body69:                                       ; No predecessors!
  %79 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right70 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %79, i32 0, i32 5
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %right70, align 4
  store %struct.Connector_struct* %80, %struct.Connector_struct** %c, align 4
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp71 = icmp ne %struct.Connector_struct* %81, null
  br i1 %cmp71, label %if.then72, label %if.end80

if.then72:                                        ; No predecessors!
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %83 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %84 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %84, %struct.c_list_struct** %83, %struct.Connector_struct* %82, i32 1)
  %85 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next73 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %85, i32 0, i32 4
  %86 = load %struct.Connector_struct*, %struct.Connector_struct** %next73, align 4
  store %struct.Connector_struct* %86, %struct.Connector_struct** %c, align 4
  br label %for.cond74

for.cond74:                                       ; No predecessors!
  %87 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp75 = icmp ne %struct.Connector_struct* %87, null
  br i1 %cmp75, label %for.body76, label %for.end79

for.body76:                                       ; No predecessors!
  %88 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %89 = load %struct.c_list_struct**, %struct.c_list_struct*** %t, align 4
  %90 = load i32, i32* %size, align 4
  call void @put_into_power_table(i32 %90, %struct.c_list_struct** %89, %struct.Connector_struct* %88, i32 0)
  br label %for.inc77

for.inc77:                                        ; No predecessors!
  %91 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next78 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %91, i32 0, i32 4
  %92 = load %struct.Connector_struct*, %struct.Connector_struct** %next78, align 4
  store %struct.Connector_struct* %92, %struct.Connector_struct** %c, align 4
  br label %for.cond74

for.end79:                                        ; No predecessors!
  br label %if.end80

if.end80:                                         ; No predecessors!
  br label %for.inc81

for.inc81:                                        ; No predecessors!
  %93 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next82 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %93, i32 0, i32 0
  %94 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next82, align 4
  store %struct.Disjunct_struct* %94, %struct.Disjunct_struct** %d, align 4
  br label %for.cond67

for.end83:                                        ; No predecessors!
  br label %for.inc84

for.inc84:                                        ; No predecessors!
  %95 = load i32, i32* %w, align 4
  %inc85 = add nsw i32 %95, 1
  store i32 %inc85, i32* %w, align 4
  br label %for.cond14

for.end86:                                        ; No predecessors!
  ret void
}

define void @power_prune_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %mode.addr = alloca i32, align 4
  %d = alloca %struct.Disjunct_struct*, align 4
  %free_later = alloca %struct.Disjunct_struct*, align 4
  %dx = alloca %struct.Disjunct_struct*, align 4
  %nd = alloca %struct.Disjunct_struct*, align 4
  %c = alloca %struct.Connector_struct*, align 4
  %w = alloca i32, align 4
  %N_deleted = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %mode.addr, align 4
  %0 = load i32, i32* %mode.addr, align 4
  store i32 %0, i32* @power_prune_mode, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 145, i32 10)
  store i32 0, i32* @power_cost, align 4
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %free_later, align 4
  store i32 1, i32* @N_changed, align 4
  store i32 0, i32* %N_deleted, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond1

for.cond1:                                        ; No predecessors!
  %1 = load i32, i32* %w, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end49

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %w, align 4
  %4 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %4, i32 0, i32 %3
  %d2 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 2
  %5 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  store %struct.Disjunct_struct* %5, %struct.Disjunct_struct** %d, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %6 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp4 = icmp ne %struct.Disjunct_struct* %6, null
  br i1 %cmp4, label %for.body5, label %for.end24

for.body5:                                        ; No predecessors!
  %7 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %7, i32 0, i32 4
  %8 = load %struct.Connector_struct*, %struct.Connector_struct** %left, align 4
  %cmp6 = icmp eq %struct.Connector_struct* %8, null
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc22

if.end:                                           ; No predecessors!
  %9 = load i32, i32* %w, align 4
  %10 = load i32, i32* %w, align 4
  %11 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left7 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %11, i32 0, i32 4
  %12 = load %struct.Connector_struct*, %struct.Connector_struct** %left7, align 4
  %call = call i32 @left_connector_list_update(%struct.Connector_struct* %12, i32 %10, i32 %9, i32 1)
  %cmp8 = icmp slt i32 %call, 0
  br i1 %cmp8, label %if.then9, label %if.end21

if.then9:                                         ; No predecessors!
  %13 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left10 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %left10, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %c, align 4
  br label %for.cond11

for.cond11:                                       ; No predecessors!
  %15 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp12 = icmp ne %struct.Connector_struct* %15, null
  br i1 %cmp12, label %for.body13, label %for.end

for.body13:                                       ; No predecessors!
  %16 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %16, i32 0, i32 1
  store i16 251, i16* %word, align 2
  br label %for.inc

for.inc:                                          ; No predecessors!
  %17 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %17, i32 0, i32 4
  %18 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  store %struct.Connector_struct* %18, %struct.Connector_struct** %c, align 4
  br label %for.cond11

for.end:                                          ; No predecessors!
  %19 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %19, i32 0, i32 5
  %20 = load %struct.Connector_struct*, %struct.Connector_struct** %right, align 4
  store %struct.Connector_struct* %20, %struct.Connector_struct** %c, align 4
  br label %for.cond14

for.cond14:                                       ; No predecessors!
  %21 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp15 = icmp ne %struct.Connector_struct* %21, null
  br i1 %cmp15, label %for.body16, label %for.end20

for.body16:                                       ; No predecessors!
  %22 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word17 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %22, i32 0, i32 1
  store i16 251, i16* %word17, align 2
  br label %for.inc18

for.inc18:                                        ; No predecessors!
  %23 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next19 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %23, i32 0, i32 4
  %24 = load %struct.Connector_struct*, %struct.Connector_struct** %next19, align 4
  store %struct.Connector_struct* %24, %struct.Connector_struct** %c, align 4
  br label %for.cond14

for.end20:                                        ; No predecessors!
  %25 = load i32, i32* %N_deleted, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %N_deleted, align 4
  br label %if.end21

if.end21:                                         ; No predecessors!
  br label %for.inc22

for.inc22:                                        ; No predecessors!
  %26 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next23 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %26, i32 0, i32 0
  %27 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next23, align 4
  store %struct.Disjunct_struct* %27, %struct.Disjunct_struct** %d, align 4
  br label %for.cond3

for.end24:                                        ; No predecessors!
  %28 = load i32, i32* %w, align 4
  %arrayidx25 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @r_table.691, i32 0, i32 %28
  %29 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx25, align 4
  %30 = load i32, i32* %w, align 4
  %arrayidx26 = getelementptr inbounds [250 x i32], [250 x i32]* @r_table_size.690, i32 0, i32 %30
  %31 = load i32, i32* %arrayidx26, align 4
  %struct.BigStruct_02 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %31, i32* %struct.BigStruct_02
  %struct.BigStruct_133 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 13
  store %struct.c_list_struct** %29, %struct.c_list_struct*** %struct.BigStruct_133
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 26, i32 0)
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %nd, align 4
  %32 = load i32, i32* %w, align 4
  %33 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx27 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %33, i32 0, i32 %32
  %d28 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx27, i32 0, i32 2
  %34 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d28, align 4
  store %struct.Disjunct_struct* %34, %struct.Disjunct_struct** %d, align 4
  br label %for.cond29

for.cond29:                                       ; No predecessors!
  %35 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp30 = icmp ne %struct.Disjunct_struct* %35, null
  br i1 %cmp30, label %for.body31, label %for.end44

for.body31:                                       ; No predecessors!
  %36 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next32 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %36, i32 0, i32 0
  %37 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next32, align 4
  store %struct.Disjunct_struct* %37, %struct.Disjunct_struct** %dx, align 4
  %38 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left33 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %38, i32 0, i32 4
  %39 = load %struct.Connector_struct*, %struct.Connector_struct** %left33, align 4
  %cmp34 = icmp ne %struct.Connector_struct* %39, null
  br i1 %cmp34, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; No predecessors!
  %40 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left35 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %40, i32 0, i32 4
  %41 = load %struct.Connector_struct*, %struct.Connector_struct** %left35, align 4
  %word36 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %41, i32 0, i32 1
  %42 = load i16, i16* %word36, align 2
  %conv = sext i16 %42 to i32
  %cmp37 = icmp eq i32 %conv, 251
  br i1 %cmp37, label %if.then39, label %if.else

if.then39:                                        ; No predecessors!
  %43 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %free_later, align 4
  %44 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next40 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %44, i32 0, i32 0
  store %struct.Disjunct_struct* %43, %struct.Disjunct_struct** %next40, align 4
  %45 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %45, %struct.Disjunct_struct** %free_later, align 4
  br label %if.end42

if.else:                                          ; No predecessors!
  %46 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %47 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next41 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %47, i32 0, i32 0
  store %struct.Disjunct_struct* %46, %struct.Disjunct_struct** %next41, align 4
  %48 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %48, %struct.Disjunct_struct** %nd, align 4
  br label %if.end42

if.end42:                                         ; No predecessors!
  br label %for.inc43

for.inc43:                                        ; No predecessors!
  %49 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %49, %struct.Disjunct_struct** %d, align 4
  br label %for.cond29

for.end44:                                        ; No predecessors!
  %50 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %51 = load i32, i32* %w, align 4
  %52 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx45 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %52, i32 0, i32 %51
  %d46 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx45, i32 0, i32 2
  store %struct.Disjunct_struct* %50, %struct.Disjunct_struct** %d46, align 4
  br label %for.inc47

for.inc47:                                        ; No predecessors!
  %53 = load i32, i32* %w, align 4
  %inc48 = add nsw i32 %53, 1
  store i32 %inc48, i32* %w, align 4
  br label %for.cond1

for.end49:                                        ; No predecessors!
  %54 = load i32, i32* @verbosity, align 4
  %cmp50 = icmp sgt i32 %54, 2
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; No predecessors!
  %55 = load i32, i32* %N_deleted, align 4
  %56 = load i32, i32* @N_changed, align 4
  %57 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.5.694, i32 0, i32 0
  %call53 = call i32 (i8*, ...) @printf(i8* %57, i32 %56, i32 %55)
  br label %if.end54

if.end54:                                         ; No predecessors!
  %58 = load i32, i32* @N_changed, align 4
  %cmp55 = icmp eq i32 %58, 0
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; No predecessors!
  br label %for.end140

if.end58:                                         ; No predecessors!
  store i32 0, i32* %N_deleted, align 4
  store i32 0, i32* @N_changed, align 4
  %59 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %59, 1
  store i32 %sub, i32* %w, align 4
  br label %for.cond59

for.cond59:                                       ; No predecessors!
  %60 = load i32, i32* %w, align 4
  %cmp60 = icmp sge i32 %60, 0
  br i1 %cmp60, label %for.body62, label %for.end130

for.body62:                                       ; No predecessors!
  %61 = load i32, i32* %w, align 4
  %62 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx63 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %62, i32 0, i32 %61
  %d64 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx63, i32 0, i32 2
  %63 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d64, align 4
  store %struct.Disjunct_struct* %63, %struct.Disjunct_struct** %d, align 4
  br label %for.cond65

for.cond65:                                       ; No predecessors!
  %64 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp66 = icmp ne %struct.Disjunct_struct* %64, null
  br i1 %cmp66, label %for.body68, label %for.end101

for.body68:                                       ; No predecessors!
  %65 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right69 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %65, i32 0, i32 5
  %66 = load %struct.Connector_struct*, %struct.Connector_struct** %right69, align 4
  %cmp70 = icmp eq %struct.Connector_struct* %66, null
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; No predecessors!
  br label %for.inc99

if.end73:                                         ; No predecessors!
  %67 = load i32, i32* %w, align 4
  %68 = load i32, i32* %w, align 4
  %69 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right74 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %69, i32 0, i32 5
  %70 = load %struct.Connector_struct*, %struct.Connector_struct** %right74, align 4
  %call75 = call i32 @right_connector_list_update(%struct.Connector_struct* %70, i32 %68, i32 %67, i32 1)
  %71 = load i32, i32* @N_words, align 4
  %cmp76 = icmp sge i32 %call75, %71
  br i1 %cmp76, label %if.then78, label %if.end98

if.then78:                                        ; No predecessors!
  %72 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right79 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %72, i32 0, i32 5
  %73 = load %struct.Connector_struct*, %struct.Connector_struct** %right79, align 4
  store %struct.Connector_struct* %73, %struct.Connector_struct** %c, align 4
  br label %for.cond80

for.cond80:                                       ; No predecessors!
  %74 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp81 = icmp ne %struct.Connector_struct* %74, null
  br i1 %cmp81, label %for.body83, label %for.end87

for.body83:                                       ; No predecessors!
  %75 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word84 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %75, i32 0, i32 1
  store i16 251, i16* %word84, align 2
  br label %for.inc85

for.inc85:                                        ; No predecessors!
  %76 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next86 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %76, i32 0, i32 4
  %77 = load %struct.Connector_struct*, %struct.Connector_struct** %next86, align 4
  store %struct.Connector_struct* %77, %struct.Connector_struct** %c, align 4
  br label %for.cond80

for.end87:                                        ; No predecessors!
  %78 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %left88 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %78, i32 0, i32 4
  %79 = load %struct.Connector_struct*, %struct.Connector_struct** %left88, align 4
  store %struct.Connector_struct* %79, %struct.Connector_struct** %c, align 4
  br label %for.cond89

for.cond89:                                       ; No predecessors!
  %80 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %cmp90 = icmp ne %struct.Connector_struct* %80, null
  br i1 %cmp90, label %for.body92, label %for.end96

for.body92:                                       ; No predecessors!
  %81 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %word93 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %81, i32 0, i32 1
  store i16 251, i16* %word93, align 2
  br label %for.inc94

for.inc94:                                        ; No predecessors!
  %82 = load %struct.Connector_struct*, %struct.Connector_struct** %c, align 4
  %next95 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %82, i32 0, i32 4
  %83 = load %struct.Connector_struct*, %struct.Connector_struct** %next95, align 4
  store %struct.Connector_struct* %83, %struct.Connector_struct** %c, align 4
  br label %for.cond89

for.end96:                                        ; No predecessors!
  %84 = load i32, i32* %N_deleted, align 4
  %inc97 = add nsw i32 %84, 1
  store i32 %inc97, i32* %N_deleted, align 4
  br label %if.end98

if.end98:                                         ; No predecessors!
  br label %for.inc99

for.inc99:                                        ; No predecessors!
  %85 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next100 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %85, i32 0, i32 0
  %86 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next100, align 4
  store %struct.Disjunct_struct* %86, %struct.Disjunct_struct** %d, align 4
  br label %for.cond65

for.end101:                                       ; No predecessors!
  %87 = load i32, i32* %w, align 4
  %arrayidx102 = getelementptr inbounds [250 x %struct.c_list_struct**], [250 x %struct.c_list_struct**]* @l_table.689, i32 0, i32 %87
  %88 = load %struct.c_list_struct**, %struct.c_list_struct*** %arrayidx102, align 4
  %89 = load i32, i32* %w, align 4
  %arrayidx103 = getelementptr inbounds [250 x i32], [250 x i32]* @l_table_size.688, i32 0, i32 %89
  %90 = load i32, i32* %arrayidx103, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %90, i32* %struct.BigStruct_01
  %struct.BigStruct_13 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 13
  store %struct.c_list_struct** %88, %struct.c_list_struct*** %struct.BigStruct_13
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 26, i32 0)
  store %struct.Disjunct_struct* null, %struct.Disjunct_struct** %nd, align 4
  %91 = load i32, i32* %w, align 4
  %92 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx104 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %92, i32 0, i32 %91
  %d105 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx104, i32 0, i32 2
  %93 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d105, align 4
  store %struct.Disjunct_struct* %93, %struct.Disjunct_struct** %d, align 4
  br label %for.cond106

for.cond106:                                      ; No predecessors!
  %94 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %cmp107 = icmp ne %struct.Disjunct_struct* %94, null
  br i1 %cmp107, label %for.body109, label %for.end126

for.body109:                                      ; No predecessors!
  %95 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next110 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %95, i32 0, i32 0
  %96 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next110, align 4
  store %struct.Disjunct_struct* %96, %struct.Disjunct_struct** %dx, align 4
  %97 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right111 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %97, i32 0, i32 5
  %98 = load %struct.Connector_struct*, %struct.Connector_struct** %right111, align 4
  %cmp112 = icmp ne %struct.Connector_struct* %98, null
  br i1 %cmp112, label %land.lhs.true114, label %if.else122

land.lhs.true114:                                 ; No predecessors!
  %99 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %right115 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %99, i32 0, i32 5
  %100 = load %struct.Connector_struct*, %struct.Connector_struct** %right115, align 4
  %word116 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %100, i32 0, i32 1
  %101 = load i16, i16* %word116, align 2
  %conv117 = sext i16 %101 to i32
  %cmp118 = icmp eq i32 %conv117, 251
  br i1 %cmp118, label %if.then120, label %if.else122

if.then120:                                       ; No predecessors!
  %102 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %free_later, align 4
  %103 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next121 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %103, i32 0, i32 0
  store %struct.Disjunct_struct* %102, %struct.Disjunct_struct** %next121, align 4
  %104 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %104, %struct.Disjunct_struct** %free_later, align 4
  br label %if.end124

if.else122:                                       ; No predecessors!
  %105 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %106 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  %next123 = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %106, i32 0, i32 0
  store %struct.Disjunct_struct* %105, %struct.Disjunct_struct** %next123, align 4
  %107 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d, align 4
  store %struct.Disjunct_struct* %107, %struct.Disjunct_struct** %nd, align 4
  br label %if.end124

if.end124:                                        ; No predecessors!
  br label %for.inc125

for.inc125:                                       ; No predecessors!
  %108 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %dx, align 4
  store %struct.Disjunct_struct* %108, %struct.Disjunct_struct** %d, align 4
  br label %for.cond106

for.end126:                                       ; No predecessors!
  %109 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %nd, align 4
  %110 = load i32, i32* %w, align 4
  %111 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx127 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %111, i32 0, i32 %110
  %d128 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx127, i32 0, i32 2
  store %struct.Disjunct_struct* %109, %struct.Disjunct_struct** %d128, align 4
  br label %for.inc129

for.inc129:                                       ; No predecessors!
  %112 = load i32, i32* %w, align 4
  %dec = add nsw i32 %112, -1
  store i32 %dec, i32* %w, align 4
  br label %for.cond59

for.end130:                                       ; No predecessors!
  %113 = load i32, i32* @verbosity, align 4
  %cmp131 = icmp sgt i32 %113, 2
  br i1 %cmp131, label %if.then133, label %if.end135

if.then133:                                       ; No predecessors!
  %114 = load i32, i32* %N_deleted, align 4
  %115 = load i32, i32* @N_changed, align 4
  %116 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.6.695, i32 0, i32 0
  %call134 = call i32 (i8*, ...) @printf(i8* %116, i32 %115, i32 %114)
  br label %if.end135

if.end135:                                        ; No predecessors!
  %117 = load i32, i32* @N_changed, align 4
  %cmp136 = icmp eq i32 %117, 0
  br i1 %cmp136, label %if.then138, label %if.end139

if.then138:                                       ; No predecessors!
  br label %for.end140

if.end139:                                        ; No predecessors!
  store i32 0, i32* %N_deleted, align 4
  store i32 0, i32* @N_changed, align 4
  br label %for.cond

for.end140:                                       ; No predecessors!
  %118 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %free_later, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %118)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 96, i32 0)
  %119 = load i32, i32* @verbosity, align 4
  %cmp141 = icmp sgt i32 %119, 2
  br i1 %cmp141, label %if.then143, label %if.end145

if.then143:                                       ; No predecessors!
  %120 = load i32, i32* @power_cost, align 4
  %121 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.7.696, i32 0, i32 0
  %call144 = call i32 (i8*, ...) @printf(i8* %121, i32 %120)
  br label %if.end145

if.end145:                                        ; No predecessors!
  ret void
}

define void @warning_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.4.713, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %1, i8* %0)
  %2 = load i32, i32* @line_number, align 4
  %3 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.5.714, i32 0, i32 0
  %4 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %3, i32 %2, i8* %4)
  ret void
}

define void @is_equal_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %c.addr = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %c.addr, align 4
  %0 = load i32, i32* @is_special, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; No predecessors!
  %1 = load i32, i32* %c.addr, align 4
  %2 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %1, %conv
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %4 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 1
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp eq i32 %conv2, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp3, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %land.ext, i32* %struct.BigStruct_32
  ret void
}

define void @copy_string_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %str.addr = alloca i8*, align 4
  %s = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %str.addr, align 4
  %0 = load i8*, i8** %str.addr, align 4
  %call = call i32 @strlen_Package(i8* %0)
  %add = add i32 %call, 1
  %call1 = call i8* @xalloc(i32 %add)
  store i8* %call1, i8** %s, align 4
  %1 = load i8*, i8** %str.addr, align 4
  %2 = load i8*, i8** %s, align 4
  %call2 = call i8* @strcpy_Package(i8* %2, i8* %1)
  %3 = load i8*, i8** %s, align 4
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %3, i8** %struct.BigStruct_34
  ret void
}

define void @check_connector_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strlen_Package(i8* %0)
  store i32 %call, i32* %i, align 4
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %2 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.10.715, i32 0, i32 0
  call void @error(i8* %2)
  br label %if.end

if.end:                                           ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %3, 1
  %4 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %sub
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  store i32 %conv, i32* %i, align 4
  %6 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %6, 43
  br i1 %cmp1, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %7, 45
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; No predecessors!
  %8 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.11.716, i32 0, i32 0
  call void @error(i8* %8)
  br label %if.end6

if.end6:                                          ; No predecessors!
  %9 = load i8*, i8** %s.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv7 = sext i8 %10 to i32
  %cmp8 = icmp eq i32 %conv7, 64
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; No predecessors!
  %11 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %if.end11

if.end11:                                         ; No predecessors!
  %12 = load i8*, i8** %s.addr, align 4
  %13 = load i8, i8* %12, align 1
  %conv12 = sext i8 %13 to i32
  %call13 = call i32 @isupper_Package(i32 %conv12)
  %tobool = icmp ne i32 %call13, 0
  br i1 %tobool, label %if.end15, label %if.then14

if.then14:                                        ; No predecessors!
  %14 = getelementptr inbounds [51 x i8], [51 x i8]* @.str.12.717, i32 0, i32 0
  call void @error(i8* %14)
  br label %if.end15

if.end15:                                         ; No predecessors!
  %15 = load i8*, i8** %s.addr, align 4
  %16 = load i8, i8* %15, align 1
  %conv16 = sext i8 %16 to i32
  %cmp17 = icmp eq i32 %conv16, 73
  br i1 %cmp17, label %land.lhs.true19, label %if.end24

land.lhs.true19:                                  ; No predecessors!
  %17 = load i8*, i8** %s.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %17, i32 1
  %18 = load i8, i8* %add.ptr, align 1
  %conv20 = sext i8 %18 to i32
  %cmp21 = icmp eq i32 %conv20, 68
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; No predecessors!
  %19 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.13.718, i32 0, i32 0
  call void @error(i8* %19)
  br label %if.end24

if.end24:                                         ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %20 = load i8*, i8** %s.addr, align 4
  %add.ptr25 = getelementptr inbounds i8, i8* %20, i32 1
  %21 = load i8, i8* %add.ptr25, align 1
  %tobool26 = icmp ne i8 %21, 0
  br i1 %tobool26, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %22 = load i8*, i8** %s.addr, align 4
  %23 = load i8, i8* %22, align 1
  %conv27 = sext i8 %23 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv27, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 98, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool29 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool29, label %if.end39, label %land.lhs.true30

land.lhs.true30:                                  ; No predecessors!
  %24 = load i8*, i8** %s.addr, align 4
  %25 = load i8, i8* %24, align 1
  %conv31 = sext i8 %25 to i32
  %cmp32 = icmp ne i32 %conv31, 42
  br i1 %cmp32, label %land.lhs.true34, label %if.end39

land.lhs.true34:                                  ; No predecessors!
  %26 = load i8*, i8** %s.addr, align 4
  %27 = load i8, i8* %26, align 1
  %conv35 = sext i8 %27 to i32
  %cmp36 = icmp ne i32 %conv35, 94
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; No predecessors!
  %28 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.14.719, i32 0, i32 0
  call void @error(i8* %28)
  br label %if.end39

if.end39:                                         ; No predecessors!
  %29 = load i8*, i8** %s.addr, align 4
  %incdec.ptr40 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr40, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  ret void
}

define void @connector_Clear() {
entry:
  %n = alloca %struct.Exp_struct*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %i = alloca i32, align 4
  %0 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %call = call i32 @strlen_Package(i8* %0)
  %sub = sub i32 %call, 1
  store i32 %sub, i32* %i, align 4
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 43
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %3
  %4 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %4 to i32
  %cmp4 = icmp ne i32 %conv3, 45
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %5 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %5, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp7 = icmp ne %struct.Dict_node_struct* %6, null
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %7, i32 0, i32 0
  %8 = load i8*, i8** %string, align 4
  %9 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %call9 = call i32 @strcmp_Package(i8* %8, i8* %9)
  %cmp10 = icmp ne i32 %call9, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %10 = phi i1 [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %11, i32 0, i32 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %dn, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp12 = icmp eq %struct.Dict_node_struct* %13, null
  br i1 %cmp12, label %if.then14, label %if.end

if.then14:                                        ; No predecessors!
  %14 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.15.724, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printf(i8* %14)
  %15 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.16.725, i32 0, i32 0
  %call16 = call i32 (i8*, ...) @printf(i8* %15)
  %16 = getelementptr inbounds [48 x i8], [48 x i8]* @.str.17.726, i32 0, i32 0
  call void @error(i8* %16)
  br label %if.end

if.end:                                           ; No predecessors!
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 2
  %18 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 28
  store %struct.Exp_struct* %18, %struct.Exp_struct** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 153, i32 10)
  %struct.BigStruct_425 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  %load_struct.BigStruct_425 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_425
  store %struct.Exp_struct* %load_struct.BigStruct_425, %struct.Exp_struct** %n, align 4
  br label %if.end33

if.else:                                          ; No predecessors!
  %19 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %19, i8** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 150, i32 10)
  %call18 = call i8* @xalloc(i32 8)
  %20 = bitcast i8* %call18 to %struct.Exp_struct*
  store %struct.Exp_struct* %20, %struct.Exp_struct** %n, align 4
  %21 = load i32, i32* %i, align 4
  %arrayidx19 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %21
  %22 = load i8, i8* %arrayidx19, align 1
  %23 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %dir = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %23, i32 0, i32 2
  store i8 %22, i8* %dir, align 2
  %24 = load i32, i32* %i, align 4
  %arrayidx20 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 %24
  store i8 0, i8* %arrayidx20, align 1
  %25 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %26 = load i8, i8* %25, align 1
  %conv21 = sext i8 %26 to i32
  %cmp22 = icmp eq i32 %conv21, 64
  br i1 %cmp22, label %if.then24, label %if.else27

if.then24:                                        ; No predecessors!
  %27 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 1
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %27, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 149, i32 10)
  %struct.BigStruct_342 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_342 = load i8*, i8** %struct.BigStruct_342
  %28 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %28, i32 0, i32 4
  %string26 = bitcast %union.anon* %u to i8**
  store i8* %load_struct.BigStruct_342, i8** %string26, align 4
  %29 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %multi = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %29, i32 0, i32 3
  store i8 1, i8* %multi, align 1
  br label %if.end32

if.else27:                                        ; No predecessors!
  %30 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %30, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 149, i32 10)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %31 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u29 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %31, i32 0, i32 4
  %string30 = bitcast %union.anon* %u29 to i8**
  store i8* %load_struct.BigStruct_34, i8** %string30, align 4
  %32 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %multi31 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %32, i32 0, i32 3
  store i8 0, i8* %multi31, align 1
  br label %if.end32

if.end32:                                         ; No predecessors!
  %33 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %33, i32 0, i32 0
  store i8 2, i8* %type, align 4
  %34 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %34, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  br label %if.end33

if.end33:                                         ; No predecessors!
  call void @advance()
  %35 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %35, %struct.Exp_struct** %struct.BigStruct_42
  ret void
}

define void @abridged_lookup_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  call void @rabridged_lookup(%struct.Dict_node_struct* %1, i8* %0)
  %2 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %2, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 45, i32 1)
  %3 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @lookup_list, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  store %struct.Dict_node_struct* %3, %struct.Dict_node_struct** %struct.BigStruct_41
  ret void
}

define void @make_unary_node_Clear() {
entry:
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 28
  %load_struct.BigStruct_28 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_28
  %e.addr = alloca %struct.Exp_struct*, align 4
  %n = alloca %struct.Exp_struct*, align 4
  store %struct.Exp_struct* %load_struct.BigStruct_28, %struct.Exp_struct** %e.addr, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Exp_struct*
  store %struct.Exp_struct* %0, %struct.Exp_struct** %n, align 4
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %1, i32 0, i32 0
  store i8 1, i8* %type, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %call1 = call i8* @xalloc(i32 8)
  %3 = bitcast i8* %call1 to %struct.E_list_struct*
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %4, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  store %struct.E_list_struct* %3, %struct.E_list_struct** %l, align 4
  %5 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u2 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %5, i32 0, i32 4
  %l3 = bitcast %union.anon* %u2 to %struct.E_list_struct**
  %6 = load %struct.E_list_struct*, %struct.E_list_struct** %l3, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %6, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next, align 4
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %8 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u4 = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %8, i32 0, i32 4
  %l5 = bitcast %union.anon* %u4 to %struct.E_list_struct**
  %9 = load %struct.E_list_struct*, %struct.E_list_struct** %l5, align 4
  %e6 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %9, i32 0, i32 1
  store %struct.Exp_struct* %7, %struct.Exp_struct** %e6, align 4
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %10, %struct.Exp_struct** %struct.BigStruct_42
  ret void
}

define void @make_zeroary_node_Clear() {
entry:
  %n = alloca %struct.Exp_struct*, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Exp_struct*
  store %struct.Exp_struct* %0, %struct.Exp_struct** %n, align 4
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %1, i32 0, i32 0
  store i8 1, i8* %type, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %3 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %3, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  store %struct.E_list_struct* null, %struct.E_list_struct** %l, align 4
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %4, %struct.Exp_struct** %struct.BigStruct_42
  ret void
}

define void @make_optional_node_Clear() {
entry:
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 28
  %load_struct.BigStruct_28 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_28
  %e.addr = alloca %struct.Exp_struct*, align 4
  %n = alloca %struct.Exp_struct*, align 4
  %el = alloca %struct.E_list_struct*, align 4
  %elx = alloca %struct.E_list_struct*, align 4
  store %struct.Exp_struct* %load_struct.BigStruct_28, %struct.Exp_struct** %e.addr, align 4
  %call = call i8* @xalloc(i32 8)
  %0 = bitcast i8* %call to %struct.Exp_struct*
  store %struct.Exp_struct* %0, %struct.Exp_struct** %n, align 4
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %type = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %1, i32 0, i32 0
  store i8 0, i8* %type, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %cost = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %2, i32 0, i32 1
  store i8 0, i8* %cost, align 1
  %call1 = call i8* @xalloc(i32 8)
  %3 = bitcast i8* %call1 to %struct.E_list_struct*
  store %struct.E_list_struct* %3, %struct.E_list_struct** %el, align 4
  %4 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %u = getelementptr inbounds %struct.Exp_struct, %struct.Exp_struct* %4, i32 0, i32 4
  %l = bitcast %union.anon* %u to %struct.E_list_struct**
  store %struct.E_list_struct* %3, %struct.E_list_struct** %l, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 154, i32 10)
  %struct.BigStruct_42 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  %load_struct.BigStruct_42 = load %struct.Exp_struct*, %struct.Exp_struct** %struct.BigStruct_42
  %5 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  %e3 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %5, i32 0, i32 1
  store %struct.Exp_struct* %load_struct.BigStruct_42, %struct.Exp_struct** %e3, align 4
  %call4 = call i8* @xalloc(i32 8)
  %6 = bitcast i8* %call4 to %struct.E_list_struct*
  store %struct.E_list_struct* %6, %struct.E_list_struct** %elx, align 4
  %7 = load %struct.E_list_struct*, %struct.E_list_struct** %el, align 4
  %next = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %7, i32 0, i32 0
  store %struct.E_list_struct* %6, %struct.E_list_struct** %next, align 4
  %8 = load %struct.E_list_struct*, %struct.E_list_struct** %elx, align 4
  %next5 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %8, i32 0, i32 0
  store %struct.E_list_struct* null, %struct.E_list_struct** %next5, align 4
  %9 = load %struct.Exp_struct*, %struct.Exp_struct** %e.addr, align 4
  %10 = load %struct.E_list_struct*, %struct.E_list_struct** %elx, align 4
  %e6 = getelementptr inbounds %struct.E_list_struct, %struct.E_list_struct* %10, i32 0, i32 1
  store %struct.Exp_struct* %9, %struct.Exp_struct** %e6, align 4
  %11 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_421 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 42
  store %struct.Exp_struct* %11, %struct.Exp_struct** %struct.BigStruct_421
  ret void
}

define void @delete_dictionary_words_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %pred = alloca %struct.Dict_node_struct*, align 4
  %pred_parent = alloca %struct.Dict_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call = call i32 @find_one_non_idiom_node(%struct.Dict_node_struct* null, %struct.Dict_node_struct* %1, i8* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %2, i32 0, i32 1
  %3 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file, align 4
  %cmp = icmp ne %struct.Word_file_struct* %3, null
  br i1 %cmp, label %if.then1, label %if.end3

if.then1:                                         ; No predecessors!
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %file2 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %4, i32 0, i32 1
  %5 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file2, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %5, i32 0, i32 1
  store i32 1, i32* %changed, align 4
  br label %if.end3

if.end3:                                          ; No predecessors!
  %6 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %6, i32 0, i32 3
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left, align 4
  %cmp4 = icmp eq %struct.Dict_node_struct* %7, null
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; No predecessors!
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %11 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @parent, align 4
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %11, %struct.Dict_node_struct** %struct.BigStruct_211
  %struct.BigStruct_222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 22
  store %struct.Dict_node_struct* %10, %struct.Dict_node_struct** %struct.BigStruct_222
  %struct.BigStruct_233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 23
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %struct.BigStruct_233
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 47, i32 0)
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %13 = bitcast %struct.Dict_node_struct* %12 to i8*
  call void @xfree(i8* %13, i32 20)
  br label %if.end15

if.else:                                          ; No predecessors!
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %pred_parent, align 4
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %left6 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %15, i32 0, i32 3
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left6, align 4
  store %struct.Dict_node_struct* %16, %struct.Dict_node_struct** %pred, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %right7 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right7, align 4
  %cmp8 = icmp ne %struct.Dict_node_struct* %18, null
  br i1 %cmp8, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  store %struct.Dict_node_struct* %19, %struct.Dict_node_struct** %pred_parent, align 4
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %right9 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %20, i32 0, i32 4
  %21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right9, align 4
  store %struct.Dict_node_struct* %21, %struct.Dict_node_struct** %pred, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %22, i32 0, i32 0
  %23 = load i8*, i8** %string, align 4
  %24 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %string10 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %24, i32 0, i32 0
  store i8* %23, i8** %string10, align 4
  %25 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %file11 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %25, i32 0, i32 1
  %26 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file11, align 4
  %27 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %file12 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %27, i32 0, i32 1
  store %struct.Word_file_struct* %26, %struct.Word_file_struct** %file12, align 4
  %28 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %28, i32 0, i32 2
  %29 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %30 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @to_be_deleted, align 4
  %exp13 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %30, i32 0, i32 2
  store %struct.Exp_struct* %29, %struct.Exp_struct** %exp13, align 4
  %31 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %left14 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %31, i32 0, i32 3
  %32 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left14, align 4
  %33 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %34 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred_parent, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %34, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 22
  store %struct.Dict_node_struct* %33, %struct.Dict_node_struct** %struct.BigStruct_22
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 23
  store %struct.Dict_node_struct* %32, %struct.Dict_node_struct** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 47, i32 0)
  %35 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %pred, align 4
  %36 = bitcast %struct.Dict_node_struct* %35 to i8*
  call void @xfree(i8* %36, i32 20)
  br label %if.end15

if.end15:                                         ; No predecessors!
  %37 = load i8*, i8** %s.addr, align 4
  %38 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call16 = call i32 @find_one_non_idiom_node(%struct.Dict_node_struct* null, %struct.Dict_node_struct* %38, i8* %37)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end19, label %if.then18

if.then18:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end19:                                         ; No predecessors!
  br label %for.cond

return:                                           ; No predecessors!
  %39 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %39, i32* %struct.BigStruct_32
  ret void
}

define void @fopen_Package_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %call = call %struct._iobuf* @fopen(i8* %load_struct.BigStruct_2, i8* %load_struct.BigStruct_3)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  store %struct._iobuf* %call, %struct._iobuf** %struct.BigStruct_38
  ret void
}

define void @strncasecmp_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  %load_struct.BigStruct_5 = load i32, i32* %struct.BigStruct_5
  %retval = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %s2.addr = alloca i8*, align 4
  %s1.addr = alloca i8*, align 4
  %i = alloca i8*, align 4
  %j = alloca i8*, align 4
  %ui = alloca i8, align 1
  %uj = alloca i8, align 1
  store i32 %load_struct.BigStruct_5, i32* %n.addr, align 4
  store i8* %load_struct.BigStruct_3, i8** %s2.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s1.addr, align 4
  %0 = load i8*, i8** %s1.addr, align 4
  store i8* %0, i8** %i, align 4
  %1 = load i8*, i8** %s2.addr, align 4
  store i8* %1, i8** %j, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load i8*, i8** %i, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %4 = load i8*, i8** %j, align 4
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %6 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ]
  br i1 %6, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %7 = load i32, i32* %n.addr, align 4
  %dec = add i32 %7, -1
  store i32 %dec, i32* %n.addr, align 4
  %cmp5 = icmp eq i32 %7, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  %8 = load i8*, i8** %i, align 4
  %9 = load i8, i8* %8, align 1
  %conv7 = sext i8 %9 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv7, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv8 = trunc i32 %load_struct.BigStruct_32 to i8
  store i8 %conv8, i8* %ui, align 1
  %10 = load i8*, i8** %j, align 4
  %11 = load i8, i8* %10, align 1
  %conv9 = sext i8 %11 to i32
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv9, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 36, i32 0)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %conv11 = trunc i32 %load_struct.BigStruct_322 to i8
  store i8 %conv11, i8* %uj, align 1
  %12 = load i8, i8* %ui, align 1
  %conv12 = sext i8 %12 to i32
  %13 = load i8, i8* %uj, align 1
  %conv13 = sext i8 %13 to i32
  %cmp14 = icmp slt i32 %conv12, %conv13
  br i1 %cmp14, label %if.then16, label %if.else

if.then16:                                        ; No predecessors!
  store i32 -1, i32* %retval, align 4
  br label %return

if.else:                                          ; No predecessors!
  %14 = load i8, i8* %ui, align 1
  %conv17 = sext i8 %14 to i32
  %15 = load i8, i8* %uj, align 1
  %conv18 = sext i8 %15 to i32
  %cmp19 = icmp sgt i32 %conv17, %conv18
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end22:                                         ; No predecessors!
  br label %if.end23

if.end23:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %16 = load i8*, i8** %i, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr, i8** %i, align 4
  %17 = load i8*, i8** %j, align 4
  %incdec.ptr24 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr24, i8** %j, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %18 = load i8*, i8** %i, align 4
  %19 = load i8, i8* %18, align 1
  %tobool = icmp ne i8 %19, 0
  br i1 %tobool, label %if.then25, label %if.end26

if.then25:                                        ; No predecessors!
  store i32 -1, i32* %retval, align 4
  br label %return

if.end26:                                         ; No predecessors!
  %20 = load i8*, i8** %j, align 4
  %21 = load i8, i8* %20, align 1
  %tobool27 = icmp ne i8 %21, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end29:                                         ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %22 = load i32, i32* %retval, align 4
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %22, i32* %struct.BigStruct_323
  ret void
}

define void @free_strings_Clear() {
entry:
  %sn = alloca %struct.string_node_struct*, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %cmp = icmp ne %struct.string_node_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %next = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %1, i32 0, i32 2
  %2 = load %struct.string_node_struct*, %struct.string_node_struct** %next, align 4
  store %struct.string_node_struct* %2, %struct.string_node_struct** %sn, align 4
  %3 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %size = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %3, i32 0, i32 1
  %4 = load i32, i32* %size, align 4
  %5 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %string = getelementptr inbounds %struct.string_node_struct, %struct.string_node_struct* %5, i32 0, i32 0
  %6 = load i8*, i8** %string, align 4
  call void @xfree(i8* %6, i32 %4)
  %7 = load %struct.string_node_struct*, %struct.string_node_struct** @string_list, align 4
  %8 = bitcast %struct.string_node_struct* %7 to i8*
  call void @xfree(i8* %8, i32 12)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load %struct.string_node_struct*, %struct.string_node_struct** %sn, align 4
  store %struct.string_node_struct* %9, %struct.string_node_struct** @string_list, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @read_word_file_Clear() {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  %load_struct.BigStruct_27 = load i8*, i8** %struct.BigStruct_27
  %filename.addr = alloca i8*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  %wf = alloca %struct.Word_file_struct*, align 4
  %fp = alloca %struct._iobuf*, align 4
  %s = alloca i8*, align 4
  %file_name_copy = alloca [60 x i8], align 1
  store i8* %load_struct.BigStruct_27, i8** %filename.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  %0 = load i8*, i8** %filename.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %0, i32 1
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %call = call i8* @strcpy_Package(i8* %arraydecay, i8* %add.ptr)
  %arraydecay1 = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %1 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.1.813, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay1, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %1, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 157, i32 10)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  store %struct._iobuf* %load_struct.BigStruct_384, %struct._iobuf** %fp, align 4
  %cmp = icmp eq %struct._iobuf* %load_struct.BigStruct_384, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %arraydecay3 = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %2 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.2.814, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* %2, i8* %arraydecay3)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; No predecessors!
  %3 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.3.815, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %3)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %call8 = call i8* @xalloc(i32 68)
  %4 = bitcast i8* %call8 to %struct.Word_file_struct*
  store %struct.Word_file_struct* %4, %struct.Word_file_struct** %wf, align 4
  %arraydecay9 = getelementptr inbounds [60 x i8], [60 x i8]* %file_name_copy, i32 0, i32 0
  %5 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %5, i32 0, i32 0
  %arraydecay10 = getelementptr inbounds [60 x i8], [60 x i8]* %file, i32 0, i32 0
  %call11 = call i8* @strcpy_Package(i8* %arraydecay10, i8* %arraydecay9)
  %6 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %6, i32 0, i32 1
  store i32 0, i32* %changed, align 4
  %7 = load %struct.Word_file_struct*, %struct.Word_file_struct** @word_file_header, align 4
  %8 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %next = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %8, i32 0, i32 2
  store %struct.Word_file_struct* %7, %struct.Word_file_struct** %next, align 4
  %9 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  store %struct.Word_file_struct* %9, %struct.Word_file_struct** @word_file_header, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %10 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %10, %struct._iobuf** %struct.BigStruct_11
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 100, i32 1)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  store i8* %load_struct.BigStruct_34, i8** %s, align 4
  %cmp13 = icmp ne i8* %load_struct.BigStruct_34, null
  br i1 %cmp13, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %call14 = call i8* @xalloc(i32 20)
  %11 = bitcast i8* %call14 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %11, %struct.Dict_node_struct** %dn_new, align 4
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %13, i32 0, i32 3
  store %struct.Dict_node_struct* %12, %struct.Dict_node_struct** %left, align 4
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %dn.addr, align 4
  %15 = load i8*, i8** %s, align 4
  %16 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %16, i32 0, i32 0
  store i8* %15, i8** %string, align 4
  %17 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %18 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %file15 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %18, i32 0, i32 1
  store %struct.Word_file_struct* %17, %struct.Word_file_struct** %file15, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %19 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %struct.BigStruct_12 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %19, %struct._iobuf** %struct.BigStruct_12
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 101, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  store %struct.Dict_node_struct* %20, %struct.Dict_node_struct** %struct.BigStruct_41
  ret void
}

define void @output_dictionary_Clear() {
entry:
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  %load_struct.BigStruct_21 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  %load_struct.BigStruct_26 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_26
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 29
  %load_struct.BigStruct_29 = load %struct.Word_file_struct*, %struct.Word_file_struct** %struct.BigStruct_29
  %wf.addr = alloca %struct.Word_file_struct*, align 4
  %fp.addr = alloca %struct._iobuf*, align 4
  %dn.addr = alloca %struct.Dict_node_struct*, align 4
  store %struct.Word_file_struct* %load_struct.BigStruct_29, %struct.Word_file_struct** %wf.addr, align 4
  store %struct._iobuf* %load_struct.BigStruct_26, %struct._iobuf** %fp.addr, align 4
  store %struct.Dict_node_struct* %load_struct.BigStruct_21, %struct.Dict_node_struct** %dn.addr, align 4
  store i32 0, i32* @xwhere_in_line, align 4
  %0 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf.addr, align 4
  %1 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %2 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn.addr, align 4
  call void @routput_dictionary(%struct.Dict_node_struct* %2, %struct._iobuf* %1, %struct.Word_file_struct* %0)
  %3 = load %struct._iobuf*, %struct._iobuf** %fp.addr, align 4
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.6.818, i32 0, i32 0
  %call = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %3, i8* %4)
  ret void
}

define void @maxcost_of_sentence_Clear() {
entry:
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  %m = alloca i32, align 4
  %m1 = alloca i32, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end7

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call i32 @maxcost_of_expression(%struct.Exp_struct* %7)
  store i32 %call, i32* %m1, align 4
  %8 = load i32, i32* %m, align 4
  %9 = load i32, i32* %m1, align 4
  %cmp5 = icmp sgt i32 %8, %9
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; No predecessors!
  %10 = load i32, i32* %m, align 4
  br label %cond.end

cond.false:                                       ; No predecessors!
  %11 = load i32, i32* %m1, align 4
  br label %cond.end

cond.end:                                         ; No predecessors!
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ]
  store i32 %cond, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %12, i32 0, i32 2
  %13 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %13, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  br label %for.inc6

for.inc6:                                         ; No predecessors!
  %14 = load i32, i32* %w, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end7:                                         ; No predecessors!
  %15 = load i32, i32* %m, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %15, i32* %struct.BigStruct_32
  ret void
}

define void @separate_sentence_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  %is_first = alloca i32, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  store i32 0, i32* @N_words, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end3

if.then:                                          ; No predecessors!
  %1 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.16.141, i32 0, i32 0
  %struct.BigStruct_22 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %1, i8** %struct.BigStruct_22
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool1 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %if.end3

if.end3:                                          ; No predecessors!
  store i32 1, i32* %is_first, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %call4 = call i32 @isspace_Package(i32 %conv)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %lor.end, label %lor.rhs

lor.rhs:                                          ; No predecessors!
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv6 = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv6, 34
  br label %lor.end

lor.end:                                          ; No predecessors!
  %6 = phi i1 [ true, %while.cond ], [ %cmp, %lor.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %7 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv8 = sext i8 %9 to i32
  %cmp9 = icmp eq i32 %conv8, 0
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; No predecessors!
  br label %for.end35

if.end12:                                         ; No predecessors!
  %10 = load i8*, i8** %s.addr, align 4
  store i8* %10, i8** %t, align 4
  br label %for.cond13

for.cond13:                                       ; No predecessors!
  %11 = load i8*, i8** %t, align 4
  %12 = load i8, i8* %11, align 1
  %conv14 = sext i8 %12 to i32
  %call15 = call i32 @isspace_Package(i32 %conv14)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %lor.end24, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %13 = load i8*, i8** %t, align 4
  %14 = load i8, i8* %13, align 1
  %conv17 = sext i8 %14 to i32
  %cmp18 = icmp eq i32 %conv17, 34
  br i1 %cmp18, label %lor.end24, label %lor.rhs20

lor.rhs20:                                        ; No predecessors!
  %15 = load i8*, i8** %t, align 4
  %16 = load i8, i8* %15, align 1
  %conv21 = sext i8 %16 to i32
  %cmp22 = icmp eq i32 %conv21, 0
  br label %lor.end24

lor.end24:                                        ; No predecessors!
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %for.cond13 ], [ %cmp22, %lor.rhs20 ]
  %lnot = xor i1 %17, true
  br i1 %lnot, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %18 = load i8*, i8** %t, align 4
  %incdec.ptr25 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr25, i8** %t, align 4
  br label %for.cond13

for.end:                                          ; No predecessors!
  %19 = load i32, i32* %is_first, align 4
  %20 = load i8*, i8** %t, align 4
  %21 = load i8*, i8** %s.addr, align 4
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %21, i8** %struct.BigStruct_24
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %20, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %19, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 78, i32 4)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %tobool27 = icmp ne i32 %load_struct.BigStruct_325, 0
  br i1 %tobool27, label %if.end29, label %if.then28

if.then28:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end29:                                         ; No predecessors!
  store i32 0, i32* %is_first, align 4
  %22 = load i8*, i8** %t, align 4
  store i8* %22, i8** %s.addr, align 4
  %23 = load i8*, i8** %s.addr, align 4
  %24 = load i8, i8* %23, align 1
  %conv30 = sext i8 %24 to i32
  %cmp31 = icmp eq i32 %conv30, 0
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; No predecessors!
  br label %for.end35

if.end34:                                         ; No predecessors!
  br label %for.cond

for.end35:                                        ; No predecessors!
  %25 = load i32, i32* @right_wall_defined, align 4
  %tobool36 = icmp ne i32 %25, 0
  br i1 %tobool36, label %if.then37, label %if.end42

if.then37:                                        ; No predecessors!
  %26 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.17.142, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %26, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 10, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool39 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool39, label %if.end41, label %if.then40

if.then40:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end41:                                         ; No predecessors!
  br label %if.end42

if.end42:                                         ; No predecessors!
  %27 = load i32, i32* @N_words, align 4
  %28 = load i32, i32* @left_wall_defined, align 4
  %29 = load i32, i32* @right_wall_defined, align 4
  %add = add nsw i32 %28, %29
  %cmp43 = icmp sgt i32 %27, %add
  %conv44 = zext i1 %cmp43 to i32
  store i32 %conv44, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %30 = load i32, i32* %retval, align 4
  %struct.BigStruct_326 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %30, i32* %struct.BigStruct_326
  ret void
}

define void @build_sentence_expressions_Clear() {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %first_word = alloca i32, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %e = alloca %struct.X_node_struct*, align 4
  %0 = load i32, i32* @left_wall_defined, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  store i32 1, i32* %first_word, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  store i32 0, i32* %first_word, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %3
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %4 = load i8*, i8** %s, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %4, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_323 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_323 = load i32, i32* %struct.BigStruct_323
  %tobool1 = icmp ne i32 %load_struct.BigStruct_323, 0
  br i1 %tobool1, label %if.then2, label %if.else5

if.then2:                                         ; No predecessors!
  %5 = load i8*, i8** %s, align 4
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %5, i8** %struct.BigStruct_211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_4012 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_4012 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_4012
  %6 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %6
  %x = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx4, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_4012, %struct.X_node_struct** %x, align 4
  br label %if.end42

if.else5:                                         ; No predecessors!
  %7 = load i8*, i8** %s, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i32 0
  %8 = load i8, i8* %arrayidx6, align 1
  %conv = sext i8 %8 to i32
  %call7 = call i32 @isupper_Package(i32 %conv)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %land.lhs.true, label %if.else15

land.lhs.true:                                    ; No predecessors!
  %9 = load i32, i32* @capitalized_word_defined, align 4
  %tobool9 = icmp ne i32 %9, 0
  br i1 %tobool9, label %if.then10, label %if.else15

if.then10:                                        ; No predecessors!
  %10 = load i32, i32* %i, align 4
  %11 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.25.150, i32 0, i32 0
  %struct.BigStruct_023 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %10, i32* %struct.BigStruct_023
  %struct.BigStruct_224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %11, i8** %struct.BigStruct_224
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 119, i32 9)
  %struct.BigStruct_3225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3225 = load i32, i32* %struct.BigStruct_3225
  %tobool12 = icmp ne i32 %load_struct.BigStruct_3225, 0
  br i1 %tobool12, label %if.end14, label %if.then13

if.then13:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end14:                                         ; No predecessors!
  br label %if.end41

if.else15:                                        ; No predecessors!
  %12 = load i8*, i8** %s, align 4
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %12, i8** %struct.BigStruct_213
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 115, i32 10)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  %tobool17 = icmp ne i32 %load_struct.BigStruct_3214, 0
  br i1 %tobool17, label %if.then18, label %if.else23

if.then18:                                        ; No predecessors!
  %13 = load i32, i32* %i, align 4
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.26.151, i32 0, i32 0
  %struct.BigStruct_020 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %13, i32* %struct.BigStruct_020
  %struct.BigStruct_221 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %14, i8** %struct.BigStruct_221
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 119, i32 9)
  %struct.BigStruct_3222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3222 = load i32, i32* %struct.BigStruct_3222
  %tobool20 = icmp ne i32 %load_struct.BigStruct_3222, 0
  br i1 %tobool20, label %if.end22, label %if.then21

if.then21:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end22:                                         ; No predecessors!
  br label %if.end40

if.else23:                                        ; No predecessors!
  %15 = load i8*, i8** %s, align 4
  %struct.BigStruct_215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_215
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 116, i32 10)
  %struct.BigStruct_3216 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3216 = load i32, i32* %struct.BigStruct_3216
  %tobool25 = icmp ne i32 %load_struct.BigStruct_3216, 0
  br i1 %tobool25, label %if.then26, label %if.else31

if.then26:                                        ; No predecessors!
  %16 = load i32, i32* %i, align 4
  %17 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.27.152, i32 0, i32 0
  %struct.BigStruct_017 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %16, i32* %struct.BigStruct_017
  %struct.BigStruct_218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %17, i8** %struct.BigStruct_218
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 119, i32 9)
  %struct.BigStruct_3219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3219 = load i32, i32* %struct.BigStruct_3219
  %tobool28 = icmp ne i32 %load_struct.BigStruct_3219, 0
  br i1 %tobool28, label %if.end30, label %if.then29

if.then29:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end30:                                         ; No predecessors!
  br label %if.end39

if.else31:                                        ; No predecessors!
  %18 = load i32, i32* @unknown_word_defined, align 4
  %tobool32 = icmp ne i32 %18, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.else36

land.lhs.true33:                                  ; No predecessors!
  %19 = load i32, i32* @use_unknown_word, align 4
  %tobool34 = icmp ne i32 %19, 0
  br i1 %tobool34, label %if.then35, label %if.else36

if.then35:                                        ; No predecessors!
  %20 = load i8*, i8** %s, align 4
  %21 = load i32, i32* %i, align 4
  %struct.BigStruct_026 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %21, i32* %struct.BigStruct_026
  %struct.BigStruct_227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %20, i8** %struct.BigStruct_227
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 120, i32 9)
  br label %if.end38

if.else36:                                        ; No predecessors!
  %22 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.29.153, i32 0, i32 0
  %23 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.28.154, i32 0, i32 0
  %call37 = call i32 (i8*, ...) @printf(i8* %22, i8* %23)
  call void @exit_Package(i32 1) #5
  unreachable

if.end38:                                         ; No predecessors!
  br label %if.end39

if.end39:                                         ; No predecessors!
  br label %if.end40

if.end40:                                         ; No predecessors!
  br label %if.end41

if.end41:                                         ; No predecessors!
  br label %if.end42

if.end42:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %24 = load i32, i32* %i, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %25 = load i32, i32* %first_word, align 4
  %arrayidx43 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %25
  %string44 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx43, i32 0, i32 0
  %arraydecay45 = getelementptr inbounds [60 x i8], [60 x i8]* %string44, i32 0, i32 0
  store i8* %arraydecay45, i8** %s, align 4
  %26 = load i8*, i8** %s, align 4
  %arrayidx46 = getelementptr inbounds i8, i8* %26, i32 0
  %27 = load i8, i8* %arrayidx46, align 1
  %conv47 = sext i8 %27 to i32
  %call48 = call i32 @isupper_Package(i32 %conv47)
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.then50, label %if.end86

if.then50:                                        ; No predecessors!
  %28 = load i8*, i8** %s, align 4
  %call51 = call i32 @strlen_Package(i8* %28)
  %add = add i32 %call51, 1
  %call52 = call i8* @xalloc(i32 %add)
  store i8* %call52, i8** %t, align 4
  %29 = load i8*, i8** %s, align 4
  %call53 = call i32 @strlen_Package(i8* %29)
  %add54 = add i32 %call53, 1
  %30 = load i8*, i8** %t, align 4
  call void @free_this_string_later(i8* %30, i32 %add54)
  %31 = load i8*, i8** %s, align 4
  %32 = load i8*, i8** %t, align 4
  %call55 = call i8* @strcpy_Package(i8* %32, i8* %31)
  %33 = load i8*, i8** %t, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %33, i32 0
  %34 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %34 to i32
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv57, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 35, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %conv59 = trunc i32 %load_struct.BigStruct_32 to i8
  %35 = load i8*, i8** %t, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %35, i32 0
  store i8 %conv59, i8* %arrayidx60, align 1
  %36 = load i8*, i8** %t, align 4
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %36, i8** %struct.BigStruct_24
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_325 = load i32, i32* %struct.BigStruct_325
  %tobool62 = icmp ne i32 %load_struct.BigStruct_325, 0
  br i1 %tobool62, label %if.then63, label %if.end85

if.then63:                                        ; No predecessors!
  %37 = load i8*, i8** %s, align 4
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %37, i8** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_327 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_327 = load i32, i32* %struct.BigStruct_327
  %tobool65 = icmp ne i32 %load_struct.BigStruct_327, 0
  br i1 %tobool65, label %if.then66, label %if.else73

if.then66:                                        ; No predecessors!
  %38 = load i8*, i8** %t, align 4
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %38, i8** %struct.BigStruct_29
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_4010 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_4010 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_4010
  store %struct.X_node_struct* %load_struct.BigStruct_4010, %struct.X_node_struct** %e, align 4
  %39 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %40 = load i32, i32* %first_word, align 4
  %arrayidx68 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %40
  %x69 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx68, i32 0, i32 1
  %41 = load %struct.X_node_struct*, %struct.X_node_struct** %x69, align 4
  %struct.BigStruct_1429 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %41, %struct.X_node_struct** %struct.BigStruct_1429
  %struct.BigStruct_30 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 30
  store %struct.X_node_struct* %39, %struct.X_node_struct** %struct.BigStruct_30
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 177, i32 10)
  %struct.BigStruct_4030 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_4030 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_4030
  %42 = load i32, i32* %first_word, align 4
  %arrayidx71 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %42
  %x72 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx71, i32 0, i32 1
  store %struct.X_node_struct* %load_struct.BigStruct_4030, %struct.X_node_struct** %x72, align 4
  br label %if.end84

if.else73:                                        ; No predecessors!
  %43 = load i8*, i8** %s, align 4
  %arrayidx74 = getelementptr inbounds i8, i8* %43, i32 0
  %44 = load i8, i8* %arrayidx74, align 1
  %conv75 = sext i8 %44 to i32
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %conv75, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 35, i32 0)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %conv77 = trunc i32 %load_struct.BigStruct_322 to i8
  %45 = load i8*, i8** %s, align 4
  %arrayidx78 = getelementptr inbounds i8, i8* %45, i32 0
  store i8 %conv77, i8* %arrayidx78, align 1
  %46 = load i8*, i8** %s, align 4
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %46, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 110, i32 10)
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  %load_struct.BigStruct_40 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_40
  store %struct.X_node_struct* %load_struct.BigStruct_40, %struct.X_node_struct** %e, align 4
  %47 = load i32, i32* %first_word, align 4
  %arrayidx80 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %47
  %x81 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx80, i32 0, i32 1
  %48 = load %struct.X_node_struct*, %struct.X_node_struct** %x81, align 4
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  store %struct.X_node_struct* %48, %struct.X_node_struct** %struct.BigStruct_14
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 99, i32 0)
  %49 = load %struct.X_node_struct*, %struct.X_node_struct** %e, align 4
  %50 = load i32, i32* %first_word, align 4
  %arrayidx82 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %50
  %x83 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx82, i32 0, i32 1
  store %struct.X_node_struct* %49, %struct.X_node_struct** %x83, align 4
  br label %if.end84

if.end84:                                         ; No predecessors!
  br label %if.end85

if.end85:                                         ; No predecessors!
  br label %if.end86

if.end86:                                         ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %51 = load i32, i32* %retval, align 4
  %struct.BigStruct_3228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %51, i32* %struct.BigStruct_3228
  ret void
}

define void @clean_up_string_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  %x = alloca i8*, align 4
  %y = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  store i8* %0, i8** %x, align 4
  store i8* %0, i8** %y, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %1 = load i8*, i8** %x, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %3 = load i8*, i8** %x, align 4
  %4 = load i8, i8* %3, align 1
  %conv2 = sext i8 %4 to i32
  %call = call i32 @isspace_Package(i32 %conv2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; No predecessors!
  %5 = load i8*, i8** %x, align 4
  %6 = load i8, i8* %5, align 1
  %7 = load i8*, i8** %y, align 4
  store i8 %6, i8* %7, align 1
  %8 = load i8*, i8** %x, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %x, align 4
  %9 = load i8*, i8** %y, align 4
  %incdec.ptr3 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr3, i8** %y, align 4
  br label %if.end

if.else:                                          ; No predecessors!
  %10 = load i8*, i8** %x, align 4
  %incdec.ptr4 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr4, i8** %x, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %while.cond

while.end:                                        ; No predecessors!
  %11 = load i8*, i8** %y, align 4
  store i8 0, i8* %11, align 1
  ret void
}

define void @is_numerical_rhs_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 43
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 45
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %4 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %do.body

do.body:                                          ; No predecessors!
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv5 = sext i8 %6 to i32
  %call = call i32 @isdigit_Package(i32 %conv5)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end7, label %if.then6

if.then6:                                         ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end7:                                          ; No predecessors!
  %7 = load i8*, i8** %s.addr, align 4
  %incdec.ptr8 = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr8, i8** %s.addr, align 4
  br label %do.cond

do.cond:                                          ; No predecessors!
  %8 = load i8*, i8** %s.addr, align 4
  %9 = load i8, i8* %8, align 1
  %conv9 = sext i8 %9 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br i1 %cmp10, label %do.body, label %do.end

do.end:                                           ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %10 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %10, i32* %struct.BigStruct_32
  ret void
}

define void @massage_variables_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %j.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %load_struct.BigStruct_0, i32* %j.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %0
  %p = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 1
  %1 = load i32*, i32** %p, align 4
  %cmp = icmp ne i32* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %2
  %isboolean = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx1, i32 0, i32 2
  %3 = load i32, i32* %isboolean, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %4
  %p3 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx2, i32 0, i32 1
  %5 = load i32*, i32** %p3, align 4
  %6 = load i32, i32* %5, align 4
  %tobool4 = icmp ne i32 %6, 0
  %lnot = xor i1 %tobool4, true
  %lnot5 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot5 to i32
  %7 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %7
  %p7 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx6, i32 0, i32 1
  %8 = load i32*, i32** %p7, align 4
  store i32 %lnot.ext, i32* %8, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %10 = load i32, i32* @display_on, align 4
  %tobool8 = icmp ne i32 %10, 0
  br i1 %tobool8, label %if.else19, label %land.lhs.true

land.lhs.true:                                    ; No predecessors!
  %11 = load i32, i32* @display_multiple, align 4
  %tobool9 = icmp ne i32 %11, 0
  br i1 %tobool9, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %12 = load i32, i32* @display_bad, align 4
  %tobool10 = icmp ne i32 %12, 0
  br i1 %tobool10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; No predecessors!
  %13 = load i32, i32* @display_fat, align 4
  %tobool12 = icmp ne i32 %13, 0
  br i1 %tobool12, label %if.then13, label %if.else19

if.then13:                                        ; No predecessors!
  %14 = load i32, i32* %j.addr, align 4
  %arrayidx14 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %14
  %p15 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx14, i32 0, i32 1
  %15 = load i32*, i32** %p15, align 4
  %cmp16 = icmp eq i32* %15, @display_on
  br i1 %cmp16, label %if.then17, label %if.else

if.then17:                                        ; No predecessors!
  store i32 0, i32* @display_fat, align 4
  store i32 0, i32* @display_bad, align 4
  store i32 0, i32* @display_multiple, align 4
  br label %if.end18

if.else:                                          ; No predecessors!
  store i32 1, i32* @display_on, align 4
  br label %if.end18

if.end18:                                         ; No predecessors!
  br label %if.end35

if.else19:                                        ; No predecessors!
  %16 = load i32, i32* @display_on, align 4
  %tobool20 = icmp ne i32 %16, 0
  br i1 %tobool20, label %land.lhs.true21, label %if.end34

land.lhs.true21:                                  ; No predecessors!
  %17 = load i32, i32* @display_multiple, align 4
  %tobool22 = icmp ne i32 %17, 0
  br i1 %tobool22, label %if.end34, label %lor.lhs.false23

lor.lhs.false23:                                  ; No predecessors!
  %18 = load i32, i32* @display_bad, align 4
  %tobool24 = icmp ne i32 %18, 0
  br i1 %tobool24, label %if.end34, label %lor.lhs.false25

lor.lhs.false25:                                  ; No predecessors!
  %19 = load i32, i32* @display_fat, align 4
  %tobool26 = icmp ne i32 %19, 0
  br i1 %tobool26, label %if.end34, label %if.then27

if.then27:                                        ; No predecessors!
  %20 = load i32, i32* %j.addr, align 4
  %arrayidx28 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %20
  %p29 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx28, i32 0, i32 1
  %21 = load i32*, i32** %p29, align 4
  %cmp30 = icmp eq i32* %21, @display_on
  br i1 %cmp30, label %if.then31, label %if.else32

if.then31:                                        ; No predecessors!
  store i32 1, i32* @display_multiple, align 4
  br label %if.end33

if.else32:                                        ; No predecessors!
  store i32 0, i32* @display_on, align 4
  br label %if.end33

if.end33:                                         ; No predecessors!
  br label %if.end34

if.end34:                                         ; No predecessors!
  br label %if.end35

if.end35:                                         ; No predecessors!
  ret void
}

define void @special_command_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %line.addr = alloca i8*, align 4
  %x = alloca i8*, align 4
  %y = alloca i8*, align 4
  %s = alloca i8*, align 4
  %myline = alloca [1000 x i8], align 1
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  %d1 = alloca %struct.Disjunct_struct*, align 4
  %d2 = alloca %struct.Disjunct_struct*, align 4
  %len = alloca i32, align 4
  %dn206 = alloca %struct.Dict_node_struct*, align 4
  %dn1 = alloca %struct.Dict_node_struct*, align 4
  %count207 = alloca i32, align 4
  %dn284 = alloca %struct.Dict_node_struct*, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %line.addr, align 4
  %0 = load i8*, i8** %line.addr, align 4
  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_21
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %0, i8** %struct.BigStruct_3
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1000, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 3, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %arrayidx = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 999
  store i8 0, i8* %arrayidx, align 1
  %arraydecay1 = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 0
  %struct.BigStruct_223 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay1, i8** %struct.BigStruct_223
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 165, i32 10)
  %arraydecay2 = getelementptr inbounds [1000 x i8], [1000 x i8]* %myline, i32 0, i32 0
  store i8* %arraydecay2, i8** %s, align 4
  %1 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  store i32 -1, i32* %k, align 4
  store i32 -1, i32* %j, align 4
  store i32 0, i32* %count, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %2
  %p = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx3, i32 0, i32 1
  %3 = load i32*, i32** %p, align 4
  %cmp = icmp ne i32* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %4
  %isboolean = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx4, i32 0, i32 2
  %5 = load i32, i32* %isboolean, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; No predecessors!
  %6 = load i8*, i8** %s, align 4
  %call5 = call i32 @strlen_Package(i8* %6)
  %7 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %7
  %s7 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx6, i32 0, i32 0
  %8 = load i8*, i8** %s7, align 4
  %9 = load i8*, i8** %s, align 4
  %struct.BigStruct_215 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %9, i8** %struct.BigStruct_215
  %struct.BigStruct_316 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %8, i8** %struct.BigStruct_316
  %struct.BigStruct_517 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %call5, i32* %struct.BigStruct_517
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 158, i32 10)
  %struct.BigStruct_3218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3218 = load i32, i32* %struct.BigStruct_3218
  %cmp9 = icmp eq i32 %load_struct.BigStruct_3218, 0
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %10 = load i32, i32* %count, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %count, align 4
  %11 = load i32, i32* %i, align 4
  store i32 %11, i32* %j, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %12 = load i32, i32* %i, align 4
  %inc10 = add nsw i32 %12, 1
  store i32 %inc10, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; No predecessors!
  %13 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %13
  %s13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx12, i32 0, i32 0
  %14 = load i8*, i8** %s13, align 4
  %cmp14 = icmp ne i8* %14, null
  br i1 %cmp14, label %for.body15, label %for.end26

for.body15:                                       ; No predecessors!
  %15 = load i8*, i8** %s, align 4
  %call16 = call i32 @strlen_Package(i8* %15)
  %16 = load i32, i32* %i, align 4
  %arrayidx17 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %16
  %s18 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx17, i32 0, i32 0
  %17 = load i8*, i8** %s18, align 4
  %18 = load i8*, i8** %s, align 4
  %struct.BigStruct_219 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %18, i8** %struct.BigStruct_219
  %struct.BigStruct_320 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %17, i8** %struct.BigStruct_320
  %struct.BigStruct_521 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %call16, i32* %struct.BigStruct_521
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 158, i32 10)
  %struct.BigStruct_3222 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3222 = load i32, i32* %struct.BigStruct_3222
  %cmp20 = icmp eq i32 %load_struct.BigStruct_3222, 0
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; No predecessors!
  %19 = load i32, i32* %count, align 4
  %inc22 = add nsw i32 %19, 1
  store i32 %inc22, i32* %count, align 4
  %20 = load i32, i32* %i, align 4
  store i32 %20, i32* %k, align 4
  br label %if.end23

if.end23:                                         ; No predecessors!
  br label %for.inc24

for.inc24:                                        ; No predecessors!
  %21 = load i32, i32* %i, align 4
  %inc25 = add nsw i32 %21, 1
  store i32 %inc25, i32* %i, align 4
  br label %for.cond11

for.end26:                                        ; No predecessors!
  %22 = load i32, i32* %count, align 4
  %cmp27 = icmp sgt i32 %22, 1
  br i1 %cmp27, label %if.then28, label %if.else

if.then28:                                        ; No predecessors!
  %23 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.84, i32 0, i32 0
  %call29 = call i32 (i8*, ...) @printf(i8* %23)
  br label %return

if.else:                                          ; No predecessors!
  %24 = load i32, i32* %count, align 4
  %cmp30 = icmp eq i32 %24, 1
  br i1 %cmp30, label %if.then31, label %if.end49

if.then31:                                        ; No predecessors!
  %25 = load i32, i32* %j, align 4
  %cmp32 = icmp sge i32 %25, 0
  br i1 %cmp32, label %if.then33, label %if.else44

if.then33:                                        ; No predecessors!
  %26 = load i32, i32* %j, align 4
  %arrayidx34 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %26
  %p35 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx34, i32 0, i32 1
  %27 = load i32*, i32** %p35, align 4
  %28 = load i32, i32* %27, align 4
  %tobool36 = icmp ne i32 %28, 0
  %lnot = xor i1 %tobool36, true
  %lnot.ext = zext i1 %lnot to i32
  %29 = load i32, i32* %j, align 4
  %arrayidx37 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %29
  %p38 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx37, i32 0, i32 1
  %30 = load i32*, i32** %p38, align 4
  store i32 %lnot.ext, i32* %30, align 4
  %31 = load i32, i32* %j, align 4
  %arrayidx39 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %31
  %p40 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx39, i32 0, i32 1
  %32 = load i32*, i32** %p40, align 4
  %33 = load i32, i32* %32, align 4
  %tobool41 = icmp ne i32 %33, 0
  %34 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.85, i32 0, i32 0
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.86, i32 0, i32 0
  %cond = select i1 %tobool41, i8* %34, i8* %35
  %36 = load i32, i32* %j, align 4
  %arrayidx42 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %36
  %str = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx42, i32 0, i32 3
  %37 = load i8*, i8** %str, align 4
  %38 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.87.157, i32 0, i32 0
  %call43 = call i32 (i8*, ...) @printf(i8* %38, i8* %37, i8* %cond)
  %39 = load i32, i32* %j, align 4
  %struct.BigStruct_026 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %39, i32* %struct.BigStruct_026
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 167, i32 10)
  br label %return

if.else44:                                        ; No predecessors!
  %40 = load i32, i32* %k, align 4
  %arrayidx45 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %40
  %s46 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx45, i32 0, i32 0
  %41 = load i8*, i8** %s46, align 4
  %42 = load i8*, i8** %s, align 4
  %call47 = call i8* @strcpy_Package(i8* %42, i8* %41)
  br label %if.end48

if.end48:                                         ; No predecessors!
  br label %if.end49

if.end49:                                         ; No predecessors!
  br label %if.end50

if.end50:                                         ; No predecessors!
  %43 = load i8*, i8** %s, align 4
  %44 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.88, i32 0, i32 0
  %call51 = call i32 @strcmp_Package(i8* %43, i8* %44)
  %cmp52 = icmp eq i32 %call51, 0
  br i1 %cmp52, label %if.then53, label %if.end62

if.then53:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 179, i32 10)
  %struct.BigStruct_3227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3227 = load i32, i32* %struct.BigStruct_3227
  %tobool55 = icmp ne i32 %load_struct.BigStruct_3227, 0
  br i1 %tobool55, label %if.else57, label %if.then56

if.then56:                                        ; No predecessors!
  call void @exit_Package(i32 1) #5
  unreachable

if.else57:                                        ; No predecessors!
  %45 = getelementptr inbounds [49 x i8], [49 x i8]* @.str.89, i32 0, i32 0
  %call58 = call i32 (i8*, ...) @printf(i8* %45)
  %46 = getelementptr inbounds [52 x i8], [52 x i8]* @.str.90.158, i32 0, i32 0
  %call59 = call i32 (i8*, ...) @printf(i8* %46)
  %47 = getelementptr inbounds [54 x i8], [54 x i8]* @.str.91, i32 0, i32 0
  %call60 = call i32 (i8*, ...) @printf(i8* %47)
  br label %if.end61

if.end61:                                         ; No predecessors!
  br label %return

if.end62:                                         ; No predecessors!
  %48 = load i8*, i8** %s, align 4
  %49 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.92, i32 0, i32 0
  %call63 = call i32 @strncmp_Package(i8* %48, i8* %49, i32 4)
  %cmp64 = icmp eq i32 %call63, 0
  br i1 %cmp64, label %if.then65, label %if.end70

if.then65:                                        ; No predecessors!
  %50 = load i8*, i8** %line.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %50, i32 6
  %51 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.93.159, i32 0, i32 0
  %call66 = call i32 (i8*, ...) @printf(i8* %51, i8* %add.ptr)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx68 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx68, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  br label %return

if.end70:                                         ; No predecessors!
  %52 = load i8*, i8** %s, align 4
  %53 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.94, i32 0, i32 0
  %call71 = call i32 @strcmp_Package(i8* %52, i8* %53)
  %cmp72 = icmp eq i32 %call71, 0
  br i1 %cmp72, label %if.then73, label %if.end80

if.then73:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 179, i32 10)
  %struct.BigStruct_3228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3228 = load i32, i32* %struct.BigStruct_3228
  %tobool75 = icmp ne i32 %load_struct.BigStruct_3228, 0
  br i1 %tobool75, label %if.then76, label %if.else77

if.then76:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 178, i32 8)
  br label %if.end79

if.else77:                                        ; No predecessors!
  %54 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.95, i32 0, i32 0
  %call78 = call i32 (i8*, ...) @printf(i8* %54)
  br label %if.end79

if.end79:                                         ; No predecessors!
  br label %return

if.end80:                                         ; No predecessors!
  %55 = load i8*, i8** %s, align 4
  %56 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.96, i32 0, i32 0
  %call81 = call i32 @strcmp_Package(i8* %55, i8* %56)
  %cmp82 = icmp eq i32 %call81, 0
  br i1 %cmp82, label %if.then83, label %if.end122

if.then83:                                        ; No predecessors!
  %57 = getelementptr inbounds [67 x i8], [67 x i8]* @.str.97, i32 0, i32 0
  %call84 = call i32 (i8*, ...) @printf(i8* %57)
  %58 = getelementptr inbounds [67 x i8], [67 x i8]* @.str.98, i32 0, i32 0
  %call85 = call i32 (i8*, ...) @printf(i8* %58)
  store i32 0, i32* %i, align 4
  br label %for.cond86

for.cond86:                                       ; No predecessors!
  %59 = load i32, i32* %i, align 4
  %arrayidx87 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %59
  %p88 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx87, i32 0, i32 1
  %60 = load i32*, i32** %p88, align 4
  %cmp89 = icmp ne i32* %60, null
  br i1 %cmp89, label %for.body90, label %for.end119

for.body90:                                       ; No predecessors!
  %61 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.99, i32 0, i32 0
  %call91 = call i32 (i8*, ...) @printf(i8* %61)
  %62 = load i32, i32* %i, align 4
  %arrayidx92 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %62
  %s93 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx92, i32 0, i32 0
  %63 = load i8*, i8** %s93, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx95 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %64 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.100, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx95, i8* %63, i8* %64)
  %65 = load i32, i32* %i, align 4
  %arrayidx96 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %65
  %str97 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx96, i32 0, i32 3
  %66 = load i8*, i8** %str97, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_383 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_383
  %arrayidx99 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_383, i32 1
  %67 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.101, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx99, i8* %66, i8* %67)
  %68 = load i32, i32* %i, align 4
  %arrayidx100 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %68
  %p101 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx100, i32 0, i32 1
  %69 = load i32*, i32** %p101, align 4
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.102, i32 0, i32 0
  %call102 = call i32 (i8*, ...) @printf(i8* %71, i32 %70)
  %72 = load i32, i32* %i, align 4
  %arrayidx103 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %72
  %isboolean104 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx103, i32 0, i32 2
  %73 = load i32, i32* %isboolean104, align 4
  %tobool105 = icmp ne i32 %73, 0
  br i1 %tobool105, label %if.then106, label %if.end115

if.then106:                                       ; No predecessors!
  %74 = load i32, i32* %i, align 4
  %arrayidx107 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %74
  %p108 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx107, i32 0, i32 1
  %75 = load i32*, i32** %p108, align 4
  %76 = load i32, i32* %75, align 4
  %tobool109 = icmp ne i32 %76, 0
  br i1 %tobool109, label %if.then110, label %if.else112

if.then110:                                       ; No predecessors!
  %77 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.103, i32 0, i32 0
  %call111 = call i32 (i8*, ...) @printf(i8* %77)
  br label %if.end114

if.else112:                                       ; No predecessors!
  %78 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.104, i32 0, i32 0
  %call113 = call i32 (i8*, ...) @printf(i8* %78)
  br label %if.end114

if.end114:                                        ; No predecessors!
  br label %if.end115

if.end115:                                        ; No predecessors!
  %79 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.105, i32 0, i32 0
  %call116 = call i32 (i8*, ...) @printf(i8* %79)
  br label %for.inc117

for.inc117:                                       ; No predecessors!
  %80 = load i32, i32* %i, align 4
  %inc118 = add nsw i32 %80, 1
  store i32 %inc118, i32* %i, align 4
  br label %for.cond86

for.end119:                                       ; No predecessors!
  %81 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.106, i32 0, i32 0
  %call120 = call i32 (i8*, ...) @printf(i8* %81)
  %82 = getelementptr inbounds [78 x i8], [78 x i8]* @.str.107, i32 0, i32 0
  %call121 = call i32 (i8*, ...) @printf(i8* %82)
  br label %return

if.end122:                                        ; No predecessors!
  %83 = load i8*, i8** %s, align 4
  %84 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.108, i32 0, i32 0
  %call123 = call i32 @strcmp_Package(i8* %83, i8* %84)
  %cmp124 = icmp eq i32 %call123, 0
  br i1 %cmp124, label %if.then125, label %if.end160

if.then125:                                       ; No predecessors!
  %85 = getelementptr inbounds [69 x i8], [69 x i8]* @.str.109, i32 0, i32 0
  %call126 = call i32 (i8*, ...) @printf(i8* %85)
  %86 = getelementptr inbounds [55 x i8], [55 x i8]* @.str.110, i32 0, i32 0
  %call127 = call i32 (i8*, ...) @printf(i8* %86)
  store i32 0, i32* %i, align 4
  br label %for.cond128

for.cond128:                                      ; No predecessors!
  %87 = load i32, i32* %i, align 4
  %arrayidx129 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %87
  %s130 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx129, i32 0, i32 0
  %88 = load i8*, i8** %s130, align 4
  %cmp131 = icmp ne i8* %88, null
  br i1 %cmp131, label %for.body132, label %for.end145

for.body132:                                      ; No predecessors!
  %89 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.111, i32 0, i32 0
  %call133 = call i32 (i8*, ...) @printf(i8* %89)
  %90 = load i32, i32* %i, align 4
  %arrayidx134 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %90
  %s135 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx134, i32 0, i32 0
  %91 = load i8*, i8** %s135, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  %arrayidx137 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_384, i32 1
  %92 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.112, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx137, i8* %91, i8* %92)
  %93 = load i32, i32* %i, align 4
  %arrayidx138 = getelementptr inbounds [5 x %struct.anon.0], [5 x %struct.anon.0]* @user_command, i32 0, i32 %93
  %str139 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx138, i32 0, i32 1
  %94 = load i8*, i8** %str139, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_385 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_385
  %arrayidx141 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_385, i32 1
  %95 = getelementptr inbounds [53 x i8], [53 x i8]* @.str.113, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx141, i8* %94, i8* %95)
  %96 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.114, i32 0, i32 0
  %call142 = call i32 (i8*, ...) @printf(i8* %96)
  br label %for.inc143

for.inc143:                                       ; No predecessors!
  %97 = load i32, i32* %i, align 4
  %inc144 = add nsw i32 %97, 1
  store i32 %inc144, i32* %i, align 4
  br label %for.cond128

for.end145:                                       ; No predecessors!
  %98 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.115, i32 0, i32 0
  %call146 = call i32 (i8*, ...) @printf(i8* %98)
  %99 = getelementptr inbounds [71 x i8], [71 x i8]* @.str.116, i32 0, i32 0
  %call147 = call i32 (i8*, ...) @printf(i8* %99)
  %100 = getelementptr inbounds [65 x i8], [65 x i8]* @.str.117, i32 0, i32 0
  %call148 = call i32 (i8*, ...) @printf(i8* %100)
  %101 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.118, i32 0, i32 0
  %call149 = call i32 (i8*, ...) @printf(i8* %101)
  %102 = getelementptr inbounds [72 x i8], [72 x i8]* @.str.119, i32 0, i32 0
  %call150 = call i32 (i8*, ...) @printf(i8* %102)
  %103 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.120, i32 0, i32 0
  %call151 = call i32 (i8*, ...) @printf(i8* %103)
  %104 = getelementptr inbounds [72 x i8], [72 x i8]* @.str.121, i32 0, i32 0
  %call152 = call i32 (i8*, ...) @printf(i8* %104)
  %105 = getelementptr inbounds [74 x i8], [74 x i8]* @.str.122, i32 0, i32 0
  %call153 = call i32 (i8*, ...) @printf(i8* %105)
  %106 = getelementptr inbounds [74 x i8], [74 x i8]* @.str.123, i32 0, i32 0
  %call154 = call i32 (i8*, ...) @printf(i8* %106)
  %107 = getelementptr inbounds [58 x i8], [58 x i8]* @.str.124, i32 0, i32 0
  %call155 = call i32 (i8*, ...) @printf(i8* %107)
  %108 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.125, i32 0, i32 0
  %call156 = call i32 (i8*, ...) @printf(i8* %108)
  %109 = getelementptr inbounds [60 x i8], [60 x i8]* @.str.126, i32 0, i32 0
  %call157 = call i32 (i8*, ...) @printf(i8* %109)
  %110 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.127, i32 0, i32 0
  %call158 = call i32 (i8*, ...) @printf(i8* %110)
  %111 = getelementptr inbounds [57 x i8], [57 x i8]* @.str.128, i32 0, i32 0
  %call159 = call i32 (i8*, ...) @printf(i8* %111)
  br label %return

if.end160:                                        ; No predecessors!
  %112 = load i8*, i8** %s, align 4
  %arrayidx161 = getelementptr inbounds i8, i8* %112, i32 0
  %113 = load i8, i8* %arrayidx161, align 1
  %conv = sext i8 %113 to i32
  %cmp162 = icmp eq i32 %conv, 33
  br i1 %cmp162, label %if.then164, label %if.end201

if.then164:                                       ; No predecessors!
  %114 = load i8*, i8** %s, align 4
  %add.ptr165 = getelementptr inbounds i8, i8* %114, i32 1
  %call166 = call %struct.Dict_node_struct* @dictionary_lookup(i8* %add.ptr165)
  store %struct.Dict_node_struct* %call166, %struct.Dict_node_struct** %dn, align 4
  %cmp167 = icmp eq %struct.Dict_node_struct* %call166, null
  br i1 %cmp167, label %if.then169, label %if.end172

if.then169:                                       ; No predecessors!
  %115 = load i8*, i8** %s, align 4
  %add.ptr170 = getelementptr inbounds i8, i8* %115, i32 1
  %116 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.129, i32 0, i32 0
  %call171 = call i32 (i8*, ...) @printf(i8* %116, i8* %add.ptr170)
  br label %return

if.end172:                                        ; No predecessors!
  %117 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.130, i32 0, i32 0
  %call173 = call i32 (i8*, ...) @printf(i8* %117)
  br label %for.cond174

for.cond174:                                      ; No predecessors!
  %118 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %cmp175 = icmp ne %struct.Dict_node_struct* %118, null
  br i1 %cmp175, label %for.body177, label %for.end200

for.body177:                                      ; No predecessors!
  store i32 0, i32* %len, align 4
  %119 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %struct.BigStruct_217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %119, %struct.Dict_node_struct** %struct.BigStruct_217
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 109, i32 10)
  %struct.BigStruct_33 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 33
  %load_struct.BigStruct_33 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %struct.BigStruct_33
  store %struct.Disjunct_struct* %load_struct.BigStruct_33, %struct.Disjunct_struct** %d1, align 4
  %120 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  store %struct.Disjunct_struct* %120, %struct.Disjunct_struct** %d2, align 4
  br label %for.cond179

for.cond179:                                      ; No predecessors!
  %121 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %cmp180 = icmp ne %struct.Disjunct_struct* %121, null
  br i1 %cmp180, label %for.body182, label %for.end185

for.body182:                                      ; No predecessors!
  %122 = load i32, i32* %len, align 4
  %inc183 = add nsw i32 %122, 1
  store i32 %inc183, i32* %len, align 4
  br label %for.inc184

for.inc184:                                       ; No predecessors!
  %123 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d2, align 4
  %next = getelementptr inbounds %struct.Disjunct_struct, %struct.Disjunct_struct* %123, i32 0, i32 0
  %124 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %next, align 4
  store %struct.Disjunct_struct* %124, %struct.Disjunct_struct** %d2, align 4
  br label %for.cond179

for.end185:                                       ; No predecessors!
  %125 = load %struct.Disjunct_struct*, %struct.Disjunct_struct** %d1, align 4
  call void @free_disjuncts(%struct.Disjunct_struct* %125)
  %126 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.131, i32 0, i32 0
  %call186 = call i32 (i8*, ...) @printf(i8* %126)
  %127 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %127, i32 0, i32 0
  %128 = load i8*, i8** %string, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_386 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_386
  %arrayidx188 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_386, i32 1
  %129 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.132, i32 0, i32 0
  call void @left_print_string(%struct._iobuf* %arrayidx188, i8* %128, i8* %129)
  %130 = load i32, i32* %len, align 4
  %131 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.133, i32 0, i32 0
  %call189 = call i32 (i8*, ...) @printf(i8* %131, i32 %130)
  %132 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %132, i32 0, i32 1
  %133 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file, align 4
  %cmp190 = icmp ne %struct.Word_file_struct* %133, null
  br i1 %cmp190, label %if.then192, label %if.end197

if.then192:                                       ; No predecessors!
  %134 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file193 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %134, i32 0, i32 1
  %135 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file193, align 4
  %file194 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %135, i32 0, i32 0
  %arraydecay195 = getelementptr inbounds [60 x i8], [60 x i8]* %file194, i32 0, i32 0
  %136 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.134, i32 0, i32 0
  %call196 = call i32 (i8*, ...) @printf(i8* %136, i8* %arraydecay195)
  br label %if.end197

if.end197:                                        ; No predecessors!
  %137 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.135, i32 0, i32 0
  %call198 = call i32 (i8*, ...) @printf(i8* %137)
  br label %for.inc199

for.inc199:                                       ; No predecessors!
  %138 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %right = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %138, i32 0, i32 4
  %139 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right, align 4
  store %struct.Dict_node_struct* %139, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond174

for.end200:                                       ; No predecessors!
  br label %return

if.end201:                                        ; No predecessors!
  %140 = load i8*, i8** %s, align 4
  %141 = load i8, i8* %140, align 1
  %conv202 = sext i8 %141 to i32
  %cmp203 = icmp eq i32 %conv202, 45
  br i1 %cmp203, label %if.then205, label %if.end268

if.then205:                                       ; No predecessors!
  %142 = load i8*, i8** %s, align 4
  %add.ptr208 = getelementptr inbounds i8, i8* %142, i32 1
  %struct.BigStruct_28 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %add.ptr208, i8** %struct.BigStruct_28
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn206, align 4
  store i32 0, i32* %count207, align 4
  %143 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  %cmp210 = icmp eq %struct.Dict_node_struct* %143, null
  br i1 %cmp210, label %if.then212, label %if.end215

if.then212:                                       ; No predecessors!
  %144 = load i8*, i8** %s, align 4
  %add.ptr213 = getelementptr inbounds i8, i8* %144, i32 1
  %145 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.136, i32 0, i32 0
  %call214 = call i32 (i8*, ...) @printf(i8* %145, i8* %add.ptr213)
  br label %return

if.end215:                                        ; No predecessors!
  %146 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  store %struct.Dict_node_struct* %146, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond216

for.cond216:                                      ; No predecessors!
  %147 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %cmp217 = icmp ne %struct.Dict_node_struct* %147, null
  br i1 %cmp217, label %for.body219, label %for.end228

for.body219:                                      ; No predecessors!
  %148 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %file220 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %148, i32 0, i32 1
  %149 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file220, align 4
  %cmp221 = icmp eq %struct.Word_file_struct* %149, null
  br i1 %cmp221, label %if.then223, label %if.end225

if.then223:                                       ; No predecessors!
  %150 = load i32, i32* %count207, align 4
  %inc224 = add nsw i32 %150, 1
  store i32 %inc224, i32* %count207, align 4
  br label %if.end225

if.end225:                                        ; No predecessors!
  br label %for.inc226

for.inc226:                                       ; No predecessors!
  %151 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %right227 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %151, i32 0, i32 4
  %152 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right227, align 4
  store %struct.Dict_node_struct* %152, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond216

for.end228:                                       ; No predecessors!
  %153 = load i32, i32* %count207, align 4
  %cmp229 = icmp ne i32 %153, 0
  br i1 %cmp229, label %if.then231, label %if.end250

if.then231:                                       ; No predecessors!
  %154 = load i8*, i8** %s, align 4
  %add.ptr232 = getelementptr inbounds i8, i8* %154, i32 1
  %155 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.137.160, i32 0, i32 0
  %call233 = call i32 (i8*, ...) @printf(i8* %155, i8* %add.ptr232)
  %156 = getelementptr inbounds [53 x i8], [53 x i8]* @.str.138, i32 0, i32 0
  %call234 = call i32 (i8*, ...) @printf(i8* %156)
  %157 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  store %struct.Dict_node_struct* %157, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond235

for.cond235:                                      ; No predecessors!
  %158 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %cmp236 = icmp ne %struct.Dict_node_struct* %158, null
  br i1 %cmp236, label %for.body238, label %for.end248

for.body238:                                      ; No predecessors!
  %159 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %file239 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %159, i32 0, i32 1
  %160 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file239, align 4
  %cmp240 = icmp eq %struct.Word_file_struct* %160, null
  br i1 %cmp240, label %if.then242, label %if.end245

if.then242:                                       ; No predecessors!
  %161 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %string243 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %161, i32 0, i32 0
  %162 = load i8*, i8** %string243, align 4
  %163 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.139, i32 0, i32 0
  %call244 = call i32 (i8*, ...) @printf(i8* %163, i8* %162)
  br label %if.end245

if.end245:                                        ; No predecessors!
  br label %for.inc246

for.inc246:                                       ; No predecessors!
  %164 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %right247 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %164, i32 0, i32 4
  %165 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right247, align 4
  store %struct.Dict_node_struct* %165, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond235

for.end248:                                       ; No predecessors!
  %166 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.140, i32 0, i32 0
  %call249 = call i32 (i8*, ...) @printf(i8* %166)
  br label %if.end250

if.end250:                                        ; No predecessors!
  %167 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.141, i32 0, i32 0
  %call251 = call i32 (i8*, ...) @printf(i8* %167)
  %168 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn206, align 4
  store %struct.Dict_node_struct* %168, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond252

for.cond252:                                      ; No predecessors!
  %169 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %cmp253 = icmp ne %struct.Dict_node_struct* %169, null
  br i1 %cmp253, label %for.body255, label %for.end260

for.body255:                                      ; No predecessors!
  %170 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %string256 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %170, i32 0, i32 0
  %171 = load i8*, i8** %string256, align 4
  %172 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.142, i32 0, i32 0
  %call257 = call i32 (i8*, ...) @printf(i8* %172, i8* %171)
  br label %for.inc258

for.inc258:                                       ; No predecessors!
  %173 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn1, align 4
  %right259 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %173, i32 0, i32 4
  %174 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right259, align 4
  store %struct.Dict_node_struct* %174, %struct.Dict_node_struct** %dn1, align 4
  br label %for.cond252

for.end260:                                       ; No predecessors!
  %175 = load i8*, i8** %s, align 4
  %add.ptr261 = getelementptr inbounds i8, i8* %175, i32 1
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %add.ptr261, i8** %struct.BigStruct_213
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 156, i32 10)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  %tobool263 = icmp ne i32 %load_struct.BigStruct_3214, 0
  br i1 %tobool263, label %if.end266, label %if.then264

if.then264:                                       ; No predecessors!
  %176 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.144, i32 0, i32 0
  %177 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.143, i32 0, i32 0
  %call265 = call i32 (i8*, ...) @printf(i8* %176, i8* %177)
  call void @exit_Package(i32 1) #5
  unreachable

if.end266:                                        ; No predecessors!
  %178 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.145, i32 0, i32 0
  %call267 = call i32 (i8*, ...) @printf(i8* %178)
  br label %return

if.end268:                                        ; No predecessors!
  %179 = load i8*, i8** %s, align 4
  store i8* %179, i8** %x, align 4
  br label %for.cond269

for.cond269:                                      ; No predecessors!
  %180 = load i8*, i8** %x, align 4
  %181 = load i8, i8* %180, align 1
  %conv270 = sext i8 %181 to i32
  %cmp271 = icmp ne i32 %conv270, 61
  br i1 %cmp271, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %182 = load i8*, i8** %x, align 4
  %183 = load i8, i8* %182, align 1
  %conv273 = sext i8 %183 to i32
  %cmp274 = icmp ne i32 %conv273, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %184 = phi i1 [ false, %for.cond269 ], [ %cmp274, %land.rhs ]
  br i1 %184, label %for.body276, label %for.end279

for.body276:                                      ; No predecessors!
  br label %for.inc277

for.inc277:                                       ; No predecessors!
  %185 = load i8*, i8** %x, align 4
  %incdec.ptr278 = getelementptr inbounds i8, i8* %185, i32 1
  store i8* %incdec.ptr278, i8** %x, align 4
  br label %for.cond269

for.end279:                                       ; No predecessors!
  %186 = load i8*, i8** %x, align 4
  %187 = load i8, i8* %186, align 1
  %conv280 = sext i8 %187 to i32
  %cmp281 = icmp eq i32 %conv280, 61
  br i1 %cmp281, label %if.then283, label %if.end396

if.then283:                                       ; No predecessors!
  %188 = load i8*, i8** %x, align 4
  store i8 0, i8* %188, align 1
  %189 = load i8*, i8** %x, align 4
  %add.ptr285 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %add.ptr285, i8** %y, align 4
  %190 = load i8*, i8** %s, align 4
  store i8* %190, i8** %x, align 4
  %191 = load i8*, i8** %y, align 4
  %struct.BigStruct_224 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %191, i8** %struct.BigStruct_224
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 166, i32 10)
  %struct.BigStruct_3225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3225 = load i32, i32* %struct.BigStruct_3225
  %tobool287 = icmp ne i32 %load_struct.BigStruct_3225, 0
  br i1 %tobool287, label %if.then288, label %if.end318

if.then288:                                       ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond289

for.cond289:                                      ; No predecessors!
  %192 = load i32, i32* %i, align 4
  %arrayidx290 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %192
  %p291 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx290, i32 0, i32 1
  %193 = load i32*, i32** %p291, align 4
  %cmp292 = icmp ne i32* %193, null
  br i1 %cmp292, label %for.body294, label %for.end304

for.body294:                                      ; No predecessors!
  %194 = load i32, i32* %i, align 4
  %arrayidx295 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %194
  %s296 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx295, i32 0, i32 0
  %195 = load i8*, i8** %s296, align 4
  %196 = load i8*, i8** %x, align 4
  %call297 = call i32 @strcmp_Package(i8* %196, i8* %195)
  %cmp298 = icmp eq i32 %call297, 0
  br i1 %cmp298, label %if.then300, label %if.end301

if.then300:                                       ; No predecessors!
  br label %for.end304

if.end301:                                        ; No predecessors!
  br label %for.inc302

for.inc302:                                       ; No predecessors!
  %197 = load i32, i32* %i, align 4
  %inc303 = add nsw i32 %197, 1
  store i32 %inc303, i32* %i, align 4
  br label %for.cond289

for.end304:                                       ; No predecessors!
  %198 = load i32, i32* %i, align 4
  %arrayidx305 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %198
  %p306 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx305, i32 0, i32 1
  %199 = load i32*, i32** %p306, align 4
  %cmp307 = icmp eq i32* %199, null
  br i1 %cmp307, label %if.then309, label %if.else311

if.then309:                                       ; No predecessors!
  %200 = load i8*, i8** %x, align 4
  %201 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.146, i32 0, i32 0
  %call310 = call i32 (i8*, ...) @printf(i8* %201, i8* %200)
  br label %if.end317

if.else311:                                       ; No predecessors!
  %202 = load i8*, i8** %y, align 4
  %call312 = call i32 @atoi_Package(i8* %202)
  %203 = load i32, i32* %i, align 4
  %arrayidx313 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @user_variable, i32 0, i32 %203
  %p314 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx313, i32 0, i32 1
  %204 = load i32*, i32** %p314, align 4
  store i32 %call312, i32* %204, align 4
  %205 = load i8*, i8** %y, align 4
  %call315 = call i32 @atoi_Package(i8* %205)
  %206 = load i8*, i8** %x, align 4
  %207 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.147, i32 0, i32 0
  %call316 = call i32 (i8*, ...) @printf(i8* %207, i8* %206, i32 %call315)
  %208 = load i32, i32* %i, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %208, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 167, i32 10)
  br label %if.end317

if.end317:                                        ; No predecessors!
  br label %return

if.end318:                                        ; No predecessors!
  %209 = load i8*, i8** %x, align 4
  %call319 = call i32 @is_idiom_word(i8* %209)
  %tobool320 = icmp ne i32 %call319, 0
  br i1 %tobool320, label %if.then323, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %210 = load i8*, i8** %y, align 4
  %call321 = call i32 @is_idiom_word(i8* %210)
  %tobool322 = icmp ne i32 %call321, 0
  br i1 %tobool322, label %if.then323, label %if.end326

if.then323:                                       ; No predecessors!
  %211 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.148, i32 0, i32 0
  %call324 = call i32 (i8*, ...) @printf(i8* %211)
  %212 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.149, i32 0, i32 0
  %call325 = call i32 (i8*, ...) @printf(i8* %212)
  br label %return

if.end326:                                        ; No predecessors!
  %213 = load i8*, i8** %x, align 4
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %213, i8** %struct.BigStruct_29
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_4110 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_4110 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_4110
  store %struct.Dict_node_struct* %load_struct.BigStruct_4110, %struct.Dict_node_struct** %dn284, align 4
  %cmp328 = icmp ne %struct.Dict_node_struct* %load_struct.BigStruct_4110, null
  br i1 %cmp328, label %if.then330, label %if.end342

if.then330:                                       ; No predecessors!
  %214 = load i8*, i8** %s, align 4
  %215 = getelementptr inbounds [51 x i8], [51 x i8]* @.str.150, i32 0, i32 0
  %call331 = call i32 (i8*, ...) @printf(i8* %215, i8* %214)
  br label %for.cond332

for.cond332:                                      ; No predecessors!
  %216 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %cmp333 = icmp ne %struct.Dict_node_struct* %216, null
  br i1 %cmp333, label %for.body335, label %for.end340

for.body335:                                      ; No predecessors!
  %217 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %string336 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %217, i32 0, i32 0
  %218 = load i8*, i8** %string336, align 4
  %219 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.151, i32 0, i32 0
  %call337 = call i32 (i8*, ...) @printf(i8* %219, i8* %218)
  br label %for.inc338

for.inc338:                                       ; No predecessors!
  %220 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %right339 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %220, i32 0, i32 4
  %221 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right339, align 4
  store %struct.Dict_node_struct* %221, %struct.Dict_node_struct** %dn284, align 4
  br label %for.cond332

for.end340:                                       ; No predecessors!
  %222 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.152, i32 0, i32 0
  %call341 = call i32 (i8*, ...) @printf(i8* %222)
  br label %return

if.end342:                                        ; No predecessors!
  %223 = load i8*, i8** %y, align 4
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %223, i8** %struct.BigStruct_211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 152, i32 10)
  %struct.BigStruct_4112 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_4112 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_4112
  store %struct.Dict_node_struct* %load_struct.BigStruct_4112, %struct.Dict_node_struct** %dn284, align 4
  %cmp344 = icmp eq %struct.Dict_node_struct* %load_struct.BigStruct_4112, null
  br i1 %cmp344, label %if.then346, label %if.end348

if.then346:                                       ; No predecessors!
  %224 = load i8*, i8** %y, align 4
  %225 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.153, i32 0, i32 0
  %call347 = call i32 (i8*, ...) @printf(i8* %225, i8* %224)
  br label %return

if.end348:                                        ; No predecessors!
  %226 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %right349 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %226, i32 0, i32 4
  %227 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right349, align 4
  %cmp350 = icmp ne %struct.Dict_node_struct* %227, null
  br i1 %cmp350, label %if.then357, label %lor.lhs.false352

lor.lhs.false352:                                 ; No predecessors!
  %228 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %string353 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %228, i32 0, i32 0
  %229 = load i8*, i8** %string353, align 4
  %230 = load i8*, i8** %y, align 4
  %call354 = call i32 @strcmp_Package(i8* %230, i8* %229)
  %cmp355 = icmp ne i32 %call354, 0
  br i1 %cmp355, label %if.then357, label %if.end369

if.then357:                                       ; No predecessors!
  %231 = load i8*, i8** %y, align 4
  %232 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.154, i32 0, i32 0
  %call358 = call i32 (i8*, ...) @printf(i8* %232, i8* %231)
  br label %for.cond359

for.cond359:                                      ; No predecessors!
  %233 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %cmp360 = icmp ne %struct.Dict_node_struct* %233, null
  br i1 %cmp360, label %for.body362, label %for.end367

for.body362:                                      ; No predecessors!
  %234 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %string363 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %234, i32 0, i32 0
  %235 = load i8*, i8** %string363, align 4
  %236 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.155, i32 0, i32 0
  %call364 = call i32 (i8*, ...) @printf(i8* %236, i8* %235)
  br label %for.inc365

for.inc365:                                       ; No predecessors!
  %237 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %right366 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %237, i32 0, i32 4
  %238 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %right366, align 4
  store %struct.Dict_node_struct* %238, %struct.Dict_node_struct** %dn284, align 4
  br label %for.cond359

for.end367:                                       ; No predecessors!
  %239 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.156, i32 0, i32 0
  %call368 = call i32 (i8*, ...) @printf(i8* %239)
  br label %return

if.end369:                                        ; No predecessors!
  %240 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file370 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %240, i32 0, i32 1
  %241 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file370, align 4
  %cmp371 = icmp eq %struct.Word_file_struct* %241, null
  br i1 %cmp371, label %if.then373, label %if.end376

if.then373:                                       ; No predecessors!
  %242 = load i8*, i8** %y, align 4
  %243 = getelementptr inbounds [50 x i8], [50 x i8]* @.str.157, i32 0, i32 0
  %call374 = call i32 (i8*, ...) @printf(i8* %243, i8* %242)
  %244 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.158, i32 0, i32 0
  %call375 = call i32 (i8*, ...) @printf(i8* %244)
  br label %if.end376

if.end376:                                        ; No predecessors!
  %call377 = call i8* @xalloc(i32 20)
  %245 = bitcast i8* %call377 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %245, %struct.Dict_node_struct** %dn_new, align 4
  %246 = load i8*, i8** %x, align 4
  %call378 = call i32 @strlen_Package(i8* %246)
  %add = add i32 %call378, 1
  %call379 = call i8* @xalloc(i32 %add)
  %247 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %string380 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %247, i32 0, i32 0
  store i8* %call379, i8** %string380, align 4
  %248 = load i8*, i8** %x, align 4
  %249 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %string381 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %249, i32 0, i32 0
  %250 = load i8*, i8** %string381, align 4
  %call382 = call i8* @strcpy_Package(i8* %250, i8* %248)
  %251 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %right383 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %251, i32 0, i32 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %right383, align 4
  %252 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %252, i32 0, i32 3
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %left, align 4
  %253 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file384 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %253, i32 0, i32 1
  %254 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file384, align 4
  %255 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %file385 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %255, i32 0, i32 1
  store %struct.Word_file_struct* %254, %struct.Word_file_struct** %file385, align 4
  %256 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %256, i32 0, i32 2
  %257 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %258 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %exp386 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %258, i32 0, i32 2
  store %struct.Exp_struct* %257, %struct.Exp_struct** %exp386, align 4
  %259 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %260 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %call387 = call %struct.Dict_node_struct* @insert_dict(%struct.Dict_node_struct* %260, %struct.Dict_node_struct* %259)
  store %struct.Dict_node_struct* %call387, %struct.Dict_node_struct** @dict_root, align 4
  %261 = load i8*, i8** %x, align 4
  %262 = getelementptr inbounds [35 x i8], [35 x i8]* @.str.159, i32 0, i32 0
  %call388 = call i32 (i8*, ...) @printf(i8* %262, i8* %261)
  %263 = load i32, i32* @N_dict, align 4
  %inc389 = add nsw i32 %263, 1
  store i32 %inc389, i32* @N_dict, align 4
  %264 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file390 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %264, i32 0, i32 1
  %265 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file390, align 4
  %cmp391 = icmp ne %struct.Word_file_struct* %265, null
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; No predecessors!
  %266 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn284, align 4
  %file394 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %266, i32 0, i32 1
  %267 = load %struct.Word_file_struct*, %struct.Word_file_struct** %file394, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %267, i32 0, i32 1
  store i32 1, i32* %changed, align 4
  br label %if.end395

if.end395:                                        ; No predecessors!
  br label %return

if.end396:                                        ; No predecessors!
  %268 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.160, i32 0, i32 0
  %call397 = call i32 (i8*, ...) @printf(i8* %268)
  br label %return

return:                                           ; No predecessors!
  ret void
}

define void @sentence_in_dictionary_Clear() {
entry:
  %w = alloca i32, align 4
  %ok_so_far = alloca i32, align 4
  %s = alloca i8*, align 4
  store i32 1, i32* %ok_so_far, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %arrayidx = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %2
  %string = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %string, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %3 = load i8*, i8** %s, align 4
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %3, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 46, i32 3)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool, label %if.end19, label %land.lhs.true

land.lhs.true:                                    ; No predecessors!
  %4 = load i8*, i8** %s, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx1, align 1
  %conv = sext i8 %5 to i32
  %call2 = call i32 @isupper_Package(i32 %conv)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %land.lhs.true4, label %land.lhs.true6

land.lhs.true4:                                   ; No predecessors!
  %6 = load i32, i32* @capitalized_word_defined, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.end19, label %land.lhs.true6

land.lhs.true6:                                   ; No predecessors!
  %7 = load i8*, i8** %s, align 4
  %struct.BigStruct_23 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %7, i8** %struct.BigStruct_23
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 116, i32 10)
  %struct.BigStruct_324 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_324 = load i32, i32* %struct.BigStruct_324
  %tobool8 = icmp ne i32 %load_struct.BigStruct_324, 0
  br i1 %tobool8, label %if.end19, label %land.lhs.true9

land.lhs.true9:                                   ; No predecessors!
  %8 = load i8*, i8** %s, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %8, i8** %struct.BigStruct_21
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 115, i32 10)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %tobool11 = icmp ne i32 %load_struct.BigStruct_322, 0
  br i1 %tobool11, label %if.end19, label %if.then

if.then:                                          ; No predecessors!
  %9 = load i32, i32* %ok_so_far, align 4
  %tobool12 = icmp ne i32 %9, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; No predecessors!
  %10 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.161, i32 0, i32 0
  %call14 = call i32 (i8*, ...) @printf(i8* %10)
  store i32 0, i32* %ok_so_far, align 4
  br label %if.end

if.end:                                           ; No predecessors!
  %11 = load i32, i32* %w, align 4
  %arrayidx15 = getelementptr inbounds [250 x %struct.Word_struct], [250 x %struct.Word_struct]* @sentence, i32 0, i32 %11
  %string16 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx15, i32 0, i32 0
  %arraydecay17 = getelementptr inbounds [60 x i8], [60 x i8]* %string16, i32 0, i32 0
  %12 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.162, i32 0, i32 0
  %call18 = call i32 (i8*, ...) @printf(i8* %12, i8* %arraydecay17)
  br label %if.end19

if.end19:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load i32, i32* %w, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %14 = load i32, i32* %ok_so_far, align 4
  %tobool20 = icmp ne i32 %14, 0
  br i1 %tobool20, label %if.end23, label %if.then21

if.then21:                                        ; No predecessors!
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.163, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printf(i8* %15)
  br label %if.end23

if.end23:                                         ; No predecessors!
  %16 = load i32, i32* %ok_so_far, align 4
  %struct.BigStruct_325 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %16, i32* %struct.BigStruct_325
  ret void
}

define void @clear_time_Clear() {
entry:
  ret void
}

define void @print_total_time_Clear() {
entry:
  ret void
}

define void @first_prepare_to_parse_Clear() {
entry:
  %0 = load i32, i32* @echo_on, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 2, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end

if.end:                                           ; No predecessors!
  %1 = load i32, i32* @verbosity, align 4
  %cmp = icmp sgt i32 %1, 2
  br i1 %cmp, label %if.then1, label %if.end3

if.then1:                                         ; No predecessors!
  %2 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.178, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %2)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 140, i32 10)
  br label %if.end3

if.end3:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 174, i32 8)
  %3 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.179, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %3, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  ret void
}

define void @size_of_sentence_expressions_Clear() {
entry:
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  %size = alloca i32, align 4
  store i32 0, i32* %size, align 4
  store i32 0, i32* %w, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %w, align 4
  %1 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %3, i32 0, i32 %2
  %x1 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %x1, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.cond2:                                        ; No predecessors!
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp3 = icmp ne %struct.X_node_struct* %5, null
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; No predecessors!
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %6, i32 0, i32 1
  %7 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call = call i32 @size_of_expression(%struct.Exp_struct* %7)
  %8 = load i32, i32* %size, align 4
  %add = add nsw i32 %8, %call
  store i32 %add, i32* %size, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %9, i32 0, i32 2
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %10, %struct.X_node_struct** %x, align 4
  br label %for.cond2

for.end:                                          ; No predecessors!
  br label %for.inc5

for.inc5:                                         ; No predecessors!
  %11 = load i32, i32* %w, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond

for.end6:                                         ; No predecessors!
  %12 = load i32, i32* %size, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %12, i32* %struct.BigStruct_32
  ret void
}

define void @expression_prune_Clear() {
entry:
  %N_deleted = alloca i32, align 4
  %x = alloca %struct.X_node_struct*, align 4
  %w = alloca i32, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 173, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %call1 = call i32 @next_power_of_two_up(i32 %load_struct.BigStruct_32)
  store i32 %call1, i32* @s_table_size, align 4
  %0 = load i32, i32* @s_table_size, align 4
  %mul = mul i32 %0, 4
  %call2 = call i8* @xalloc(i32 %mul)
  %1 = bitcast i8* %call2 to %struct.Connector_struct**
  store %struct.Connector_struct** %1, %struct.Connector_struct*** @table.676, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 142, i32 10)
  store i32 1, i32* %N_deleted, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  store i32 0, i32* %w, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %2 = load i32, i32* %w, align 4
  %3 = load i32, i32* @N_words, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end30

for.body:                                         ; No predecessors!
  %4 = load i32, i32* %w, align 4
  %5 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %5, i32 0, i32 %4
  %x4 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx, i32 0, i32 1
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %x4, align 4
  store %struct.X_node_struct* %6, %struct.X_node_struct** %x, align 4
  br label %for.cond5

for.cond5:                                        ; No predecessors!
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp6 = icmp ne %struct.X_node_struct* %7, null
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; No predecessors!
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %8, i32 0, i32 1
  %9 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  %call8 = call i32 @mark_dead_connectors(%struct.Exp_struct* %9, i32 45)
  %10 = load i32, i32* %N_deleted, align 4
  %add = add nsw i32 %10, %call8
  store i32 %add, i32* %N_deleted, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %11, i32 0, i32 2
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  store %struct.X_node_struct* %12, %struct.X_node_struct** %x, align 4
  br label %for.cond5

for.end:                                          ; No predecessors!
  %13 = load i32, i32* %w, align 4
  %14 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx9 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %14, i32 0, i32 %13
  %x10 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx9, i32 0, i32 1
  %15 = load %struct.X_node_struct*, %struct.X_node_struct** %x10, align 4
  store %struct.X_node_struct* %15, %struct.X_node_struct** %x, align 4
  br label %for.cond11

for.cond11:                                       ; No predecessors!
  %16 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp12 = icmp ne %struct.X_node_struct* %16, null
  br i1 %cmp12, label %for.body13, label %for.end19

for.body13:                                       ; No predecessors!
  %17 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp14 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %17, i32 0, i32 1
  %18 = load %struct.Exp_struct*, %struct.Exp_struct** %exp14, align 4
  %call15 = call %struct.Exp_struct* @purge_Exp(%struct.Exp_struct* %18)
  %19 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp16 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %19, i32 0, i32 1
  store %struct.Exp_struct* %call15, %struct.Exp_struct** %exp16, align 4
  br label %for.inc17

for.inc17:                                        ; No predecessors!
  %20 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next18 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %20, i32 0, i32 2
  %21 = load %struct.X_node_struct*, %struct.X_node_struct** %next18, align 4
  store %struct.X_node_struct* %21, %struct.X_node_struct** %x, align 4
  br label %for.cond11

for.end19:                                        ; No predecessors!
  %22 = load i32, i32* %w, align 4
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %22, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 43, i32 0)
  %23 = load i32, i32* %w, align 4
  %24 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx20 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %24, i32 0, i32 %23
  %x21 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx20, i32 0, i32 1
  %25 = load %struct.X_node_struct*, %struct.X_node_struct** %x21, align 4
  store %struct.X_node_struct* %25, %struct.X_node_struct** %x, align 4
  br label %for.cond22

for.cond22:                                       ; No predecessors!
  %26 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp23 = icmp ne %struct.X_node_struct* %26, null
  br i1 %cmp23, label %for.body24, label %for.end28

for.body24:                                       ; No predecessors!
  %27 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp25 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %27, i32 0, i32 1
  %28 = load %struct.Exp_struct*, %struct.Exp_struct** %exp25, align 4
  call void @insert_connectors(%struct.Exp_struct* %28, i32 43)
  br label %for.inc26

for.inc26:                                        ; No predecessors!
  %29 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next27 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %29, i32 0, i32 2
  %30 = load %struct.X_node_struct*, %struct.X_node_struct** %next27, align 4
  store %struct.X_node_struct* %30, %struct.X_node_struct** %x, align 4
  br label %for.cond22

for.end28:                                        ; No predecessors!
  br label %for.inc29

for.inc29:                                        ; No predecessors!
  %31 = load i32, i32* %w, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* %w, align 4
  br label %for.cond3

for.end30:                                        ; No predecessors!
  %32 = load i32, i32* @verbosity, align 4
  %cmp31 = icmp sgt i32 %32, 2
  br i1 %cmp31, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %33 = load i32, i32* %N_deleted, align 4
  %34 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.3.686, i32 0, i32 0
  %call32 = call i32 (i8*, ...) @printf(i8* %34, i32 %33)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 140, i32 10)
  br label %if.end

if.end:                                           ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %35 = load i32, i32* %N_deleted, align 4
  %cmp33 = icmp eq i32 %35, 0
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; No predecessors!
  br label %for.end79

if.end35:                                         ; No predecessors!
  store i32 0, i32* %N_deleted, align 4
  %36 = load i32, i32* @N_words, align 4
  %sub = sub nsw i32 %36, 1
  store i32 %sub, i32* %w, align 4
  br label %for.cond36

for.cond36:                                       ; No predecessors!
  %37 = load i32, i32* %w, align 4
  %cmp37 = icmp sge i32 %37, 0
  br i1 %cmp37, label %for.body38, label %for.end71

for.body38:                                       ; No predecessors!
  %38 = load i32, i32* %w, align 4
  %39 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx39 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %39, i32 0, i32 %38
  %x40 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx39, i32 0, i32 1
  %40 = load %struct.X_node_struct*, %struct.X_node_struct** %x40, align 4
  store %struct.X_node_struct* %40, %struct.X_node_struct** %x, align 4
  br label %for.cond41

for.cond41:                                       ; No predecessors!
  %41 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp42 = icmp ne %struct.X_node_struct* %41, null
  br i1 %cmp42, label %for.body43, label %for.end49

for.body43:                                       ; No predecessors!
  %42 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp44 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %42, i32 0, i32 1
  %43 = load %struct.Exp_struct*, %struct.Exp_struct** %exp44, align 4
  %call45 = call i32 @mark_dead_connectors(%struct.Exp_struct* %43, i32 43)
  %44 = load i32, i32* %N_deleted, align 4
  %add46 = add nsw i32 %44, %call45
  store i32 %add46, i32* %N_deleted, align 4
  br label %for.inc47

for.inc47:                                        ; No predecessors!
  %45 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next48 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %45, i32 0, i32 2
  %46 = load %struct.X_node_struct*, %struct.X_node_struct** %next48, align 4
  store %struct.X_node_struct* %46, %struct.X_node_struct** %x, align 4
  br label %for.cond41

for.end49:                                        ; No predecessors!
  %47 = load i32, i32* %w, align 4
  %48 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx50 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %48, i32 0, i32 %47
  %x51 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx50, i32 0, i32 1
  %49 = load %struct.X_node_struct*, %struct.X_node_struct** %x51, align 4
  store %struct.X_node_struct* %49, %struct.X_node_struct** %x, align 4
  br label %for.cond52

for.cond52:                                       ; No predecessors!
  %50 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp53 = icmp ne %struct.X_node_struct* %50, null
  br i1 %cmp53, label %for.body54, label %for.end60

for.body54:                                       ; No predecessors!
  %51 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp55 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %51, i32 0, i32 1
  %52 = load %struct.Exp_struct*, %struct.Exp_struct** %exp55, align 4
  %call56 = call %struct.Exp_struct* @purge_Exp(%struct.Exp_struct* %52)
  %53 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp57 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %53, i32 0, i32 1
  store %struct.Exp_struct* %call56, %struct.Exp_struct** %exp57, align 4
  br label %for.inc58

for.inc58:                                        ; No predecessors!
  %54 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next59 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %54, i32 0, i32 2
  %55 = load %struct.X_node_struct*, %struct.X_node_struct** %next59, align 4
  store %struct.X_node_struct* %55, %struct.X_node_struct** %x, align 4
  br label %for.cond52

for.end60:                                        ; No predecessors!
  %56 = load i32, i32* %w, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %56, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 43, i32 0)
  %57 = load i32, i32* %w, align 4
  %58 = bitcast [250 x %struct.Word_struct]* @sentence to [0 x %struct.Word_struct]*
  %arrayidx61 = getelementptr inbounds [0 x %struct.Word_struct], [0 x %struct.Word_struct]* %58, i32 0, i32 %57
  %x62 = getelementptr inbounds %struct.Word_struct, %struct.Word_struct* %arrayidx61, i32 0, i32 1
  %59 = load %struct.X_node_struct*, %struct.X_node_struct** %x62, align 4
  store %struct.X_node_struct* %59, %struct.X_node_struct** %x, align 4
  br label %for.cond63

for.cond63:                                       ; No predecessors!
  %60 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %cmp64 = icmp ne %struct.X_node_struct* %60, null
  br i1 %cmp64, label %for.body65, label %for.end69

for.body65:                                       ; No predecessors!
  %61 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %exp66 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %61, i32 0, i32 1
  %62 = load %struct.Exp_struct*, %struct.Exp_struct** %exp66, align 4
  call void @insert_connectors(%struct.Exp_struct* %62, i32 45)
  br label %for.inc67

for.inc67:                                        ; No predecessors!
  %63 = load %struct.X_node_struct*, %struct.X_node_struct** %x, align 4
  %next68 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %63, i32 0, i32 2
  %64 = load %struct.X_node_struct*, %struct.X_node_struct** %next68, align 4
  store %struct.X_node_struct* %64, %struct.X_node_struct** %x, align 4
  br label %for.cond63

for.end69:                                        ; No predecessors!
  br label %for.inc70

for.inc70:                                        ; No predecessors!
  %65 = load i32, i32* %w, align 4
  %dec = add nsw i32 %65, -1
  store i32 %dec, i32* %w, align 4
  br label %for.cond36

for.end71:                                        ; No predecessors!
  %66 = load i32, i32* @verbosity, align 4
  %cmp72 = icmp sgt i32 %66, 2
  br i1 %cmp72, label %if.then73, label %if.end75

if.then73:                                        ; No predecessors!
  %67 = load i32, i32* %N_deleted, align 4
  %68 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.4.687, i32 0, i32 0
  %call74 = call i32 (i8*, ...) @printf(i8* %68, i32 %67)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 140, i32 10)
  br label %if.end75

if.end75:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 92, i32 0)
  %69 = load i32, i32* %N_deleted, align 4
  %cmp76 = icmp eq i32 %69, 0
  br i1 %cmp76, label %if.then77, label %if.end78

if.then77:                                        ; No predecessors!
  br label %for.end79

if.end78:                                         ; No predecessors!
  store i32 0, i32* %N_deleted, align 4
  br label %for.cond

for.end79:                                        ; No predecessors!
  %70 = load i32, i32* @s_table_size, align 4
  %mul80 = mul i32 %70, 4
  %71 = load %struct.Connector_struct**, %struct.Connector_struct*** @table.676, align 4
  %72 = bitcast %struct.Connector_struct** %71 to i8*
  call void @xfree(i8* %72, i32 %mul80)
  ret void
}

define void @read_entry_Clear() {
entry:
  %n = alloca %struct.Exp_struct*, align 4
  %i = alloca i32, align 4
  %dn_new = alloca %struct.Dict_node_struct*, align 4
  %dnx = alloca %struct.Dict_node_struct*, align 4
  %dn = alloca %struct.Dict_node_struct*, align 4
  store %struct.Dict_node_struct* null, %struct.Dict_node_struct** %dn, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %struct.BigStruct_01 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 58, i32* %struct.BigStruct_01
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_322 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_322 = load i32, i32* %struct.BigStruct_322
  %tobool = icmp ne i32 %load_struct.BigStruct_322, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %0 = load i32, i32* @is_special, align 4
  %tobool1 = icmp ne i32 %0, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %1 = getelementptr inbounds [37 x i8], [37 x i8]* @.str.35.746, i32 0, i32 0
  call void @error(i8* %1)
  br label %if.end

if.end:                                           ; No predecessors!
  %2 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 47
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; No predecessors!
  %4 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %5 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %4, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_27 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 27
  store i8* %5, i8** %struct.BigStruct_27
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 160, i32 9)
  %struct.BigStruct_41 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 41
  %load_struct.BigStruct_41 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %struct.BigStruct_41
  store %struct.Dict_node_struct* %load_struct.BigStruct_41, %struct.Dict_node_struct** %dn, align 4
  br label %if.end7

if.else:                                          ; No predecessors!
  %call5 = call i8* @xalloc(i32 20)
  %6 = bitcast i8* %call5 to %struct.Dict_node_struct*
  store %struct.Dict_node_struct* %6, %struct.Dict_node_struct** %dn_new, align 4
  %7 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %8 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  %left = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %8, i32 0, i32 3
  store %struct.Dict_node_struct* %7, %struct.Dict_node_struct** %left, align 4
  %9 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn_new, align 4
  store %struct.Dict_node_struct* %9, %struct.Dict_node_struct** %dn, align 4
  %10 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %file = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %10, i32 0, i32 1
  store %struct.Word_file_struct* null, %struct.Word_file_struct** %file, align 4
  %11 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %11, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 149, i32 10)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %12 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  %string = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %12, i32 0, i32 0
  store i8* %load_struct.BigStruct_34, i8** %string, align 4
  br label %if.end7

if.end7:                                          ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  call void @advance()
  br label %for.cond

for.end:                                          ; No predecessors!
  call void @advance()
  %call8 = call %struct.Exp_struct* @expression()
  store %struct.Exp_struct* %call8, %struct.Exp_struct** %n, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 59, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 148, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %tobool10 = icmp ne i32 %load_struct.BigStruct_32, 0
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; No predecessors!
  %13 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.36.747, i32 0, i32 0
  call void @error(i8* %13)
  br label %if.end12

if.end12:                                         ; No predecessors!
  call void @advance()
  store i32 0, i32* %i, align 4
  %14 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  store %struct.Dict_node_struct* %14, %struct.Dict_node_struct** %dnx, align 4
  br label %for.cond13

for.cond13:                                       ; No predecessors!
  %15 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %cmp14 = icmp ne %struct.Dict_node_struct* %15, null
  br i1 %cmp14, label %for.body16, label %for.end19

for.body16:                                       ; No predecessors!
  %16 = load %struct.Exp_struct*, %struct.Exp_struct** %n, align 4
  %17 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %17, i32 0, i32 2
  store %struct.Exp_struct* %16, %struct.Exp_struct** %exp, align 4
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.inc17

for.inc17:                                        ; No predecessors!
  %19 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dnx, align 4
  %left18 = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %19, i32 0, i32 3
  %20 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %left18, align 4
  store %struct.Dict_node_struct* %20, %struct.Dict_node_struct** %dnx, align 4
  br label %for.cond13

for.end19:                                        ; No predecessors!
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** %dn, align 4
  call void @insert_list(%struct.Dict_node_struct* %22, i32 %21)
  ret void
}

define void @rand_Package_Clear() {
entry:
  %call = call i32 @rand()
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %call, i32* %struct.BigStruct_32
  ret void
}

define void @catenate_X_nodes_Clear() {
entry:
  %struct.BigStruct_14 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 14
  %load_struct.BigStruct_14 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_14
  %struct.BigStruct_30 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 30
  %load_struct.BigStruct_30 = load %struct.X_node_struct*, %struct.X_node_struct** %struct.BigStruct_30
  %retval = alloca %struct.X_node_struct*, align 4
  %d2.addr = alloca %struct.X_node_struct*, align 4
  %d1.addr = alloca %struct.X_node_struct*, align 4
  %dis = alloca %struct.X_node_struct*, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_30, %struct.X_node_struct** %d2.addr, align 4
  store %struct.X_node_struct* %load_struct.BigStruct_14, %struct.X_node_struct** %d1.addr, align 4
  %0 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  store %struct.X_node_struct* %0, %struct.X_node_struct** %dis, align 4
  %1 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  %cmp = icmp eq %struct.X_node_struct* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %2 = load %struct.X_node_struct*, %struct.X_node_struct** %d2.addr, align 4
  store %struct.X_node_struct* %2, %struct.X_node_struct** %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  %3 = load %struct.X_node_struct*, %struct.X_node_struct** %d2.addr, align 4
  %cmp1 = icmp eq %struct.X_node_struct* %3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; No predecessors!
  %4 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  store %struct.X_node_struct* %4, %struct.X_node_struct** %retval, align 4
  br label %return

if.end3:                                          ; No predecessors!
  br label %while.cond

while.cond:                                       ; No predecessors!
  %5 = load %struct.X_node_struct*, %struct.X_node_struct** %dis, align 4
  %next = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %5, i32 0, i32 2
  %6 = load %struct.X_node_struct*, %struct.X_node_struct** %next, align 4
  %cmp4 = icmp ne %struct.X_node_struct* %6, null
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %7 = load %struct.X_node_struct*, %struct.X_node_struct** %dis, align 4
  %next5 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %7, i32 0, i32 2
  %8 = load %struct.X_node_struct*, %struct.X_node_struct** %next5, align 4
  store %struct.X_node_struct* %8, %struct.X_node_struct** %dis, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  %9 = load %struct.X_node_struct*, %struct.X_node_struct** %d2.addr, align 4
  %10 = load %struct.X_node_struct*, %struct.X_node_struct** %dis, align 4
  %next6 = getelementptr inbounds %struct.X_node_struct, %struct.X_node_struct* %10, i32 0, i32 2
  store %struct.X_node_struct* %9, %struct.X_node_struct** %next6, align 4
  %11 = load %struct.X_node_struct*, %struct.X_node_struct** %d1.addr, align 4
  store %struct.X_node_struct* %11, %struct.X_node_struct** %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %12 = load %struct.X_node_struct*, %struct.X_node_struct** %retval, align 4
  %struct.BigStruct_40 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 40
  store %struct.X_node_struct* %12, %struct.X_node_struct** %struct.BigStruct_40
  ret void
}

define void @save_files_Clear() {
entry:
  %wf = alloca %struct.Word_file_struct*, align 4
  %fp = alloca %struct._iobuf*, align 4
  %0 = load %struct.Word_file_struct*, %struct.Word_file_struct** @word_file_header, align 4
  store %struct.Word_file_struct* %0, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %cmp = icmp ne %struct.Word_file_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %2, i32 0, i32 1
  %3 = load i32, i32* %changed, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end12

if.then:                                          ; No predecessors!
  %4 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %4, i32 0, i32 0
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %file, i32 0, i32 0
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.7.821, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %5, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 157, i32 10)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  store %struct._iobuf* %load_struct.BigStruct_38, %struct._iobuf** %fp, align 4
  %cmp1 = icmp eq %struct._iobuf* %load_struct.BigStruct_38, null
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; No predecessors!
  %6 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file3 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %6, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [60 x i8], [60 x i8]* %file3, i32 0, i32 0
  %7 = getelementptr inbounds [46 x i8], [46 x i8]* @.str.8.822, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %7, i8* %arraydecay4)
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.9.823, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %8)
  br label %for.end

if.end:                                           ; No predecessors!
  %9 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %file7 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %9, i32 0, i32 0
  %arraydecay8 = getelementptr inbounds [60 x i8], [60 x i8]* %file7, i32 0, i32 0
  %10 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.10.824, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printf(i8* %10, i8* %arraydecay8)
  %11 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %12 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %13 = load %struct.Dict_node_struct*, %struct.Dict_node_struct** @dict_root, align 4
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 21
  store %struct.Dict_node_struct* %13, %struct.Dict_node_struct** %struct.BigStruct_21
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %12, %struct._iobuf** %struct.BigStruct_26
  %struct.BigStruct_29 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 29
  store %struct.Word_file_struct* %11, %struct.Word_file_struct** %struct.BigStruct_29
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 161, i32 10)
  %14 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %14, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 101, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %15 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed11 = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %15, i32 0, i32 1
  store i32 0, i32* %changed11, align 4
  br label %if.end12

if.end12:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %16 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %next = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %16, i32 0, i32 2
  %17 = load %struct.Word_file_struct*, %struct.Word_file_struct** %next, align 4
  store %struct.Word_file_struct* %17, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @files_need_saving_Clear() {
entry:
  %retval = alloca i32, align 4
  %wf = alloca %struct.Word_file_struct*, align 4
  %0 = load %struct.Word_file_struct*, %struct.Word_file_struct** @word_file_header, align 4
  store %struct.Word_file_struct* %0, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %1 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %cmp = icmp ne %struct.Word_file_struct* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %changed = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %2, i32 0, i32 1
  %3 = load i32, i32* %changed, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load %struct.Word_file_struct*, %struct.Word_file_struct** %wf, align 4
  %next = getelementptr inbounds %struct.Word_file_struct, %struct.Word_file_struct* %4, i32 0, i32 2
  %5 = load %struct.Word_file_struct*, %struct.Word_file_struct** %next, align 4
  store %struct.Word_file_struct* %5, %struct.Word_file_struct** %wf, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %6 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %6, i32* %struct.BigStruct_32
  ret void
}

define void @malloc_Package_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %call = call i8* @malloc(i32 %load_struct.BigStruct_0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  store i8* %call, i8** %struct.BigStruct_34
  ret void
}

define void @abort_Package_Clear() {
entry:
  call void @abort()
  ret void
}

define void @init_andable_hash_table_Clear() {
entry:
  %i = alloca i32, align 4
  %e = alloca %struct.Exp_struct*, align 4
  %0 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.28, i32 0, i32 0
  %call = call %struct.Dict_node_struct* @dictionary_lookup(i8* %0)
  %exp = getelementptr inbounds %struct.Dict_node_struct, %struct.Dict_node_struct* %call, i32 0, i32 2
  %1 = load %struct.Exp_struct*, %struct.Exp_struct** %exp, align 4
  store %struct.Exp_struct* %1, %struct.Exp_struct** %e, align 4
  %2 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  %call1 = call i32 @size_of_expression(%struct.Exp_struct* %2)
  %call2 = call i32 @next_power_of_two_up(i32 %call1)
  store i32 %call2, i32* @N_andable_hash_table, align 4
  %3 = load i32, i32* @N_andable_hash_table, align 4
  %mul = mul i32 %3, 4
  %call3 = call i8* @xalloc(i32 %mul)
  %4 = bitcast i8* %call3 to %struct.Connector_struct**
  store %struct.Connector_struct** %4, %struct.Connector_struct*** @andable_hash_table, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* @N_andable_hash_table, align 4
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %8 = load %struct.Connector_struct**, %struct.Connector_struct*** @andable_hash_table, align 4
  %arrayidx = getelementptr inbounds %struct.Connector_struct*, %struct.Connector_struct** %8, i32 %7
  store %struct.Connector_struct* null, %struct.Connector_struct** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %10 = load %struct.Exp_struct*, %struct.Exp_struct** %e, align 4
  call void @fill_andable_hash_table(%struct.Exp_struct* %10)
  ret void
}

define void @loop_Clear() {
entry:
  %i = alloca i32, align 4
  %N_to_display = alloca i32, align 4
  %index = alloca i32, align 4
  %N_linkages = alloca i32, align 4
  %N_canonical_linkages = alloca i32, align 4
  %N_valid_linkages = alloca i32, align 4
  %has_fatlinks = alloca i32, align 4
  %linkage = alloca %struct.Linkage_info_struct*, align 4
  %line = alloca [1500 x i8], align 1
  %message = alloca [80 x i8], align 1
  %line_set = alloca i32, align 4
  %cost_cutoff = alloca i32, align 4
  %old_cost_cutoff = alloca i32, align 4
  %maxcost = alloca i32, align 4
  %success = alloca i32, align 4
  %give_up = alloca i32, align 4
  %phase = alloca i32, align 4
  %just_entered_phase_1 = alloca i32, align 4
  %null_count = alloca i32, align 4
  %stagen = alloca i8*, align 4
  %tmp = alloca %struct.Linkage_info_struct, align 4
  %tmp130 = alloca %struct.Linkage_info_struct, align 4
  %tmp199 = alloca %struct.Linkage_info_struct, align 4
  %tmp201 = alloca %struct.Linkage_info_struct, align 4
  store %struct.Linkage_info_struct* null, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* %line_set, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  store i32 0, i32* @null_links, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 159, i32 10)
  store i32 0, i32* @max_space_in_use, align 4
  store i32 0, i32* @space_in_use, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 170, i32 10)
  %0 = load i32, i32* %line_set, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end13, label %if.then

if.then:                                          ; No predecessors!
  %1 = load i32, i32* @www_mode, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; No predecessors!
  %2 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.208, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %2)
  br label %if.end

if.end:                                           ; No predecessors!
  %3 = load i32, i32* @www_mode, align 4
  %tobool3 = icmp ne i32 %3, 0
  br i1 %tobool3, label %if.then4, label %if.end7

if.then4:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  br label %if.end7

if.end7:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx9 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 0
  %arraydecay = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_218 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_218
  %struct.BigStruct_519 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1500, i32* %struct.BigStruct_519
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %arrayidx9, %struct._iobuf** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 82, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %cmp = icmp eq i8* %load_struct.BigStruct_34, null
  br i1 %cmp, label %if.then11, label %if.end12

if.then11:                                        ; No predecessors!
  call void @exit_Package(i32 1) #5
  unreachable

if.end12:                                         ; No predecessors!
  br label %if.end13

if.end13:                                         ; No predecessors!
  store i32 0, i32* %line_set, align 4
  %arraydecay14 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %call15 = call i32 @strlen_Package(i8* %arraydecay14)
  %sub = sub i32 %call15, 1
  %arrayidx16 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %sub
  %4 = load i8, i8* %arrayidx16, align 1
  %conv = sext i8 %4 to i32
  %cmp17 = icmp ne i32 %conv, 10
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; No predecessors!
  %5 = getelementptr inbounds [27 x i8], [27 x i8]* @.str.209, i32 0, i32 0
  %call20 = call i32 (i8*, ...) @printf(i8* %5)
  br label %for.cond

if.end21:                                         ; No predecessors!
  %arrayidx22 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %6 = load i8, i8* %arrayidx22, align 1
  %conv23 = sext i8 %6 to i32
  %cmp24 = icmp eq i32 %conv23, 33
  br i1 %cmp24, label %if.then26, label %if.end28

if.then26:                                        ; No predecessors!
  %arraydecay27 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_244 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay27, i8** %struct.BigStruct_244
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 168, i32 9)
  br label %for.cond

if.end28:                                         ; No predecessors!
  %arraydecay29 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_240 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay29, i8** %struct.BigStruct_240
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 163, i32 10)
  %struct.BigStruct_3241 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3241 = load i32, i32* %struct.BigStruct_3241
  %tobool31 = icmp ne i32 %load_struct.BigStruct_3241, 0
  br i1 %tobool31, label %if.end33, label %if.then32

if.then32:                                        ; No predecessors!
  br label %for.cond

if.end33:                                         ; No predecessors!
  %7 = load i32, i32* @N_words, align 4
  %8 = load i32, i32* @left_wall_defined, align 4
  %sub34 = sub nsw i32 %7, %8
  %9 = load i32, i32* @right_wall_defined, align 4
  %sub35 = sub nsw i32 %sub34, %9
  %10 = load i32, i32* @word_count_limit, align 4
  %cmp36 = icmp sgt i32 %sub35, %10
  br i1 %cmp36, label %if.then38, label %if.end40

if.then38:                                        ; No predecessors!
  %11 = load i32, i32* @word_count_limit, align 4
  %12 = getelementptr inbounds [39 x i8], [39 x i8]* @.str.210, i32 0, i32 0
  %call39 = call i32 (i8*, ...) @printf(i8* %12, i32 %11)
  br label %for.cond

if.end40:                                         ; No predecessors!
  %13 = load i32, i32* @unknown_word_defined, align 4
  %tobool41 = icmp ne i32 %13, 0
  br i1 %tobool41, label %land.lhs.true, label %if.then43

land.lhs.true:                                    ; No predecessors!
  %14 = load i32, i32* @use_unknown_word, align 4
  %tobool42 = icmp ne i32 %14, 0
  br i1 %tobool42, label %if.end48, label %if.then43

if.then43:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 169, i32 9)
  %struct.BigStruct_3245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3245 = load i32, i32* %struct.BigStruct_3245
  %tobool45 = icmp ne i32 %load_struct.BigStruct_3245, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; No predecessors!
  br label %for.cond

if.end47:                                         ; No predecessors!
  br label %if.end48

if.end48:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 164, i32 8)
  %struct.BigStruct_3242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3242 = load i32, i32* %struct.BigStruct_3242
  %tobool50 = icmp ne i32 %load_struct.BigStruct_3242, 0
  br i1 %tobool50, label %if.end52, label %if.then51

if.then51:                                        ; No predecessors!
  br label %for.cond

if.end52:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 162, i32 10)
  %struct.BigStruct_3239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3239 = load i32, i32* %struct.BigStruct_3239
  store i32 %load_struct.BigStruct_3239, i32* %maxcost, align 4
  %15 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.211, i32 0, i32 0
  %struct.BigStruct_213 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %15, i8** %struct.BigStruct_213
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 172, i32 9)
  store i32 1, i32* %old_cost_cutoff, align 4
  %struct.BigStruct_025 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 1, i32* %struct.BigStruct_025
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  store i32 0, i32* %phase, align 4
  store i32 0, i32* %give_up, align 4
  store i32 0, i32* %success, align 4
  store i32 0, i32* %cost_cutoff, align 4
  store i32 0, i32* %null_count, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %16 = load i32, i32* %success, align 4
  %tobool54 = icmp ne i32 %16, 0
  br i1 %tobool54, label %lor.end, label %lor.rhs

lor.rhs:                                          ; No predecessors!
  %17 = load i32, i32* %give_up, align 4
  %tobool55 = icmp ne i32 %17, 0
  br label %lor.end

lor.end:                                          ; No predecessors!
  %18 = phi i1 [ true, %while.cond ], [ %tobool55, %lor.rhs ]
  %lnot = xor i1 %18, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  store i32 0, i32* %just_entered_phase_1, align 4
  %19 = load i32, i32* %phase, align 4
  %cmp56 = icmp eq i32 %19, 0
  br i1 %cmp56, label %if.then58, label %if.else77

if.then58:                                        ; No predecessors!
  %20 = load i32, i32* %cost_cutoff, align 4
  %cmp59 = icmp eq i32 %20, 0
  br i1 %cmp59, label %if.then61, label %if.else

if.then61:                                        ; No predecessors!
  store i32 1, i32* %cost_cutoff, align 4
  br label %if.end70

if.else:                                          ; No predecessors!
  %21 = load i32, i32* %cost_cutoff, align 4
  %cmp62 = icmp eq i32 %21, 1
  br i1 %cmp62, label %land.lhs.true64, label %if.else68

land.lhs.true64:                                  ; No predecessors!
  %22 = load i32, i32* %maxcost, align 4
  %cmp65 = icmp sgt i32 %22, 1
  br i1 %cmp65, label %if.then67, label %if.else68

if.then67:                                        ; No predecessors!
  %23 = load i32, i32* %maxcost, align 4
  store i32 %23, i32* %cost_cutoff, align 4
  br label %if.end69

if.else68:                                        ; No predecessors!
  store i32 1, i32* %phase, align 4
  store i32 1, i32* @null_links, align 4
  store i32 1000, i32* %cost_cutoff, align 4
  store i32 1, i32* %just_entered_phase_1, align 4
  br label %if.end69

if.end69:                                         ; No predecessors!
  br label %if.end70

if.end70:                                         ; No predecessors!
  %24 = load i32, i32* %cost_cutoff, align 4
  %25 = load i32, i32* %maxcost, align 4
  %cmp71 = icmp eq i32 %24, %25
  br i1 %cmp71, label %land.lhs.true73, label %if.end76

land.lhs.true73:                                  ; No predecessors!
  %26 = load i32, i32* @null_link_search, align 4
  %tobool74 = icmp ne i32 %26, 0
  br i1 %tobool74, label %if.end76, label %if.then75

if.then75:                                        ; No predecessors!
  store i32 1, i32* %give_up, align 4
  br label %if.end76

if.end76:                                         ; No predecessors!
  br label %if.end81

if.else77:                                        ; No predecessors!
  %27 = load i32, i32* %null_count, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %null_count, align 4
  %28 = load i32, i32* %null_count, align 4
  %29 = load i32, i32* @N_words, align 4
  %sub78 = sub nsw i32 %29, 1
  %cmp79 = icmp sge i32 %28, %sub78
  %conv80 = zext i1 %cmp79 to i32
  store i32 %conv80, i32* %give_up, align 4
  br label %if.end81

if.end81:                                         ; No predecessors!
  %30 = load i32, i32* @verbosity, align 4
  %cmp82 = icmp sgt i32 %30, 2
  br i1 %cmp82, label %land.lhs.true84, label %if.end89

land.lhs.true84:                                  ; No predecessors!
  %31 = load i32, i32* %phase, align 4
  %cmp85 = icmp eq i32 %31, 0
  br i1 %cmp85, label %if.then87, label %if.end89

if.then87:                                        ; No predecessors!
  %32 = load i32, i32* %cost_cutoff, align 4
  %33 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.212, i32 0, i32 0
  %call88 = call i32 (i8*, ...) @printf(i8* %33, i32 %32)
  br label %if.end89

if.end89:                                         ; No predecessors!
  %34 = load i32, i32* %cost_cutoff, align 4
  %35 = load i32, i32* %old_cost_cutoff, align 4
  %cmp90 = icmp ne i32 %34, %35
  br i1 %cmp90, label %if.then92, label %if.end93

if.then92:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  %36 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_024 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %36, i32* %struct.BigStruct_024
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  %37 = load i32, i32* %cost_cutoff, align 4
  store i32 %37, i32* %old_cost_cutoff, align 4
  br label %if.end93

if.end93:                                         ; No predecessors!
  %38 = load i32, i32* %just_entered_phase_1, align 4
  %tobool94 = icmp ne i32 %38, 0
  br i1 %tobool94, label %if.then95, label %if.end96

if.then95:                                        ; No predecessors!
  store i32 1, i32* %null_count, align 4
  br label %if.end96

if.end96:                                         ; No predecessors!
  %39 = load i32, i32* %null_count, align 4
  %40 = load i32, i32* %cost_cutoff, align 4
  %41 = load i32, i32* %phase, align 4
  %struct.BigStruct_032 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %41, i32* %struct.BigStruct_032
  %struct.BigStruct_533 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %40, i32* %struct.BigStruct_533
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 %39, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3434 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3434 = load i8*, i8** %struct.BigStruct_3434
  store i8* %load_struct.BigStruct_3434, i8** %stagen, align 4
  %42 = load i32, i32* %phase, align 4
  %cmp98 = icmp eq i32 %42, 0
  br i1 %cmp98, label %if.then100, label %if.else102

if.then100:                                       ; No predecessors!
  %struct.BigStruct_035 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_035
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 138, i32 10)
  %struct.BigStruct_3236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3236 = load i32, i32* %struct.BigStruct_3236
  store i32 %load_struct.BigStruct_3236, i32* %N_linkages, align 4
  br label %if.end104

if.else102:                                       ; No predecessors!
  %43 = load i32, i32* %null_count, align 4
  %struct.BigStruct_037 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %43, i32* %struct.BigStruct_037
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 138, i32 10)
  %struct.BigStruct_3238 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3238 = load i32, i32* %struct.BigStruct_3238
  store i32 %load_struct.BigStruct_3238, i32* %N_linkages, align 4
  br label %if.end104

if.end104:                                        ; No predecessors!
  %44 = load i32, i32* %N_linkages, align 4
  %45 = load i32, i32* @linkage_count_limit, align 4
  %cmp105 = icmp sgt i32 %44, %45
  br i1 %cmp105, label %if.then107, label %if.end109

if.then107:                                       ; No predecessors!
  %46 = load i32, i32* %N_linkages, align 4
  %47 = load i32, i32* @linkage_count_limit, align 4
  %48 = getelementptr inbounds [63 x i8], [63 x i8]* @.str.213, i32 0, i32 0
  %call108 = call i32 (i8*, ...) @printf(i8* %48, i32 %47, i32 %46)
  %49 = load i32, i32* @linkage_count_limit, align 4
  store i32 %49, i32* %N_linkages, align 4
  br label %if.end109

if.end109:                                        ; No predecessors!
  %50 = load i32, i32* %N_linkages, align 4
  %arraydecay110 = getelementptr inbounds [80 x i8], [80 x i8]* %message, i32 0, i32 0
  %51 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.214, i32 0, i32 0
  %call111 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay110, i8* %51, i32 %50)
  %arraydecay112 = getelementptr inbounds [80 x i8], [80 x i8]* %message, i32 0, i32 0
  %struct.BigStruct_212 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay112, i8** %struct.BigStruct_212
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %N_valid_linkages, align 4
  store i32 0, i32* %N_canonical_linkages, align 4
  %52 = load i32, i32* %N_linkages, align 4
  %cmp113 = icmp ne i32 %52, 0
  br i1 %cmp113, label %if.then115, label %if.end143

if.then115:                                       ; No predecessors!
  %53 = load i32, i32* %N_linkages, align 4
  %mul = mul i32 %53, 16
  %call116 = call i8* @xalloc(i32 %mul)
  %54 = bitcast i8* %call116 to %struct.Linkage_info_struct*
  store %struct.Linkage_info_struct* %54, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* %index, align 4
  br label %for.cond117

for.cond117:                                      ; No predecessors!
  %55 = load i32, i32* %index, align 4
  %56 = load i32, i32* %N_linkages, align 4
  %cmp118 = icmp slt i32 %55, %56
  br i1 %cmp118, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %57 = load i32, i32* %null_count, align 4
  %58 = load i32, i32* %index, align 4
  %struct.BigStruct_015 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %58, i32* %struct.BigStruct_015
  %struct.BigStruct_516 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %57, i32* %struct.BigStruct_516
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3217 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3217 = load i32, i32* %struct.BigStruct_3217
  store i32 %load_struct.BigStruct_3217, i32* %has_fatlinks, align 4
  %59 = load i32, i32* %has_fatlinks, align 4
  %tobool121 = icmp ne i32 %59, 0
  br i1 %tobool121, label %if.then122, label %if.else128

if.then122:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 67, i32 1)
  %struct.BigStruct_329 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_329 = load i32, i32* %struct.BigStruct_329
  %tobool124 = icmp ne i32 %load_struct.BigStruct_329, 0
  br i1 %tobool124, label %if.end126, label %if.then125

if.then125:                                       ; No predecessors!
  br label %for.inc

if.end126:                                        ; No predecessors!
  %60 = load i32, i32* %N_canonical_linkages, align 4
  %61 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx127 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %61, i32 %60
  %struct.BigStruct_243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp, %struct.Linkage_info_struct** %struct.BigStruct_243
  %struct.BigStruct_254 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_254
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  %62 = bitcast %struct.Linkage_info_struct* %arrayidx127 to i8*
  %63 = bitcast %struct.Linkage_info_struct* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %62, i8* %63, i32 16, i32 4, i1 false)
  br label %if.end131

if.else128:                                       ; No predecessors!
  %64 = load i32, i32* %N_canonical_linkages, align 4
  %65 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx129 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %65, i32 %64
  %struct.BigStruct_247 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp130, %struct.Linkage_info_struct** %struct.BigStruct_247
  %struct.BigStruct_258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_258
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  %66 = bitcast %struct.Linkage_info_struct* %arrayidx129 to i8*
  %67 = bitcast %struct.Linkage_info_struct* %tmp130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %66, i8* %67, i32 16, i32 4, i1 false)
  br label %if.end131

if.end131:                                        ; No predecessors!
  %68 = load i32, i32* %N_canonical_linkages, align 4
  %69 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx132 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %69, i32 %68
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx132, i32 0, i32 1
  %70 = load i16, i16* %N_violations, align 4
  %conv133 = sext i16 %70 to i32
  %cmp134 = icmp eq i32 %conv133, 0
  br i1 %cmp134, label %if.then136, label %if.end138

if.then136:                                       ; No predecessors!
  %71 = load i32, i32* %N_valid_linkages, align 4
  %inc137 = add nsw i32 %71, 1
  store i32 %inc137, i32* %N_valid_linkages, align 4
  br label %if.end138

if.end138:                                        ; No predecessors!
  %72 = load i32, i32* %index, align 4
  %73 = load i32, i32* %N_canonical_linkages, align 4
  %74 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx139 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %74, i32 %73
  %index140 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx139, i32 0, i32 0
  store i32 %72, i32* %index140, align 4
  %75 = load i32, i32* %N_canonical_linkages, align 4
  %inc141 = add nsw i32 %75, 1
  store i32 %inc141, i32* %N_canonical_linkages, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %76 = load i32, i32* %index, align 4
  %inc142 = add nsw i32 %76, 1
  store i32 %inc142, i32* %index, align 4
  br label %for.cond117

for.end:                                          ; No predecessors!
  %77 = load i32, i32* %N_canonical_linkages, align 4
  %78 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %79 = bitcast %struct.Linkage_info_struct* %78 to i8*
  %80 = bitcast i32 (%struct.Linkage_info_struct*, %struct.Linkage_info_struct*)* @compare_parse to i32 (i8*, i8*)*
  call void @qsort_Package(i8* %79, i32 %77, i32 16, i32 (i8*, i8*)* %80)
  br label %if.end143

if.end143:                                        ; No predecessors!
  %81 = load i32, i32* %N_canonical_linkages, align 4
  %cmp144 = icmp eq i32 %81, 0
  br i1 %cmp144, label %land.lhs.true146, label %if.end154

land.lhs.true146:                                 ; No predecessors!
  %82 = load i32, i32* %N_linkages, align 4
  %cmp147 = icmp sgt i32 %82, 0
  br i1 %cmp147, label %land.lhs.true149, label %if.end154

land.lhs.true149:                                 ; No predecessors!
  %83 = load i32, i32* %N_linkages, align 4
  %84 = load i32, i32* @linkage_count_limit, align 4
  %cmp150 = icmp slt i32 %83, %84
  br i1 %cmp150, label %if.then152, label %if.end154

if.then152:                                       ; No predecessors!
  %85 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.216, i32 0, i32 0
  %86 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.215, i32 0, i32 0
  %call153 = call i32 (i8*, ...) @printf(i8* %85, i8* %86)
  call void @exit_Package(i32 1) #5
  unreachable

if.end154:                                        ; No predecessors!
  %87 = getelementptr inbounds [27 x i8], [27 x i8]* @.str.217, i32 0, i32 0
  %struct.BigStruct_211 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %87, i8** %struct.BigStruct_211
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %line_set, align 4
  %88 = load i32, i32* %N_valid_linkages, align 4
  %cmp155 = icmp sgt i32 %88, 0
  %conv156 = zext i1 %cmp155 to i32
  store i32 %conv156, i32* %success, align 4
  %89 = load i32, i32* @display_bad, align 4
  %tobool157 = icmp ne i32 %89, 0
  br i1 %tobool157, label %if.end159, label %if.then158

if.then158:                                       ; No predecessors!
  %90 = load i32, i32* %give_up, align 4
  %91 = load i8*, i8** %stagen, align 4
  %92 = load i32, i32* %N_valid_linkages, align 4
  %93 = load i32, i32* %N_canonical_linkages, align 4
  %struct.BigStruct_028 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %93, i32* %struct.BigStruct_028
  %struct.BigStruct_529 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %92, i32* %struct.BigStruct_529
  %struct.BigStruct_1130 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %91, i8** %struct.BigStruct_1130
  %struct.BigStruct_1531 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  store i32 %90, i32* %struct.BigStruct_1531
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 131, i32 10)
  br label %if.end159

if.end159:                                        ; No predecessors!
  %94 = load i32, i32* @display_bad, align 4
  %tobool160 = icmp ne i32 %94, 0
  br i1 %tobool160, label %if.then161, label %if.else162

if.then161:                                       ; No predecessors!
  %95 = load i32, i32* %N_canonical_linkages, align 4
  store i32 %95, i32* %N_to_display, align 4
  br label %if.end163

if.else162:                                       ; No predecessors!
  %96 = load i32, i32* %N_valid_linkages, align 4
  store i32 %96, i32* %N_to_display, align 4
  br label %if.end163

if.end163:                                        ; No predecessors!
  %97 = load i32, i32* @display_on, align 4
  %tobool164 = icmp ne i32 %97, 0
  br i1 %tobool164, label %if.then165, label %if.end251

if.then165:                                       ; No predecessors!
  store i32 0, i32* %index, align 4
  br label %for.cond166

for.cond166:                                      ; No predecessors!
  %98 = load i32, i32* %index, align 4
  %99 = load i32, i32* %N_to_display, align 4
  %cmp167 = icmp slt i32 %98, %99
  br i1 %cmp167, label %for.body169, label %for.end250

for.body169:                                      ; No predecessors!
  %100 = load i32, i32* %null_count, align 4
  %101 = load i32, i32* %index, align 4
  %102 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx170 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %102, i32 %101
  %index171 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx170, i32 0, i32 0
  %103 = load i32, i32* %index171, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %103, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %100, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3214 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3214 = load i32, i32* %struct.BigStruct_3214
  store i32 %load_struct.BigStruct_3214, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %104 = load i32, i32* %N_canonical_linkages, align 4
  %cmp173 = icmp sgt i32 %104, 1
  br i1 %cmp173, label %if.then175, label %if.else177

if.then175:                                       ; No predecessors!
  %105 = load i32, i32* %index, align 4
  %add = add nsw i32 %105, 1
  %106 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.218, i32 0, i32 0
  %call176 = call i32 (i8*, ...) @printf(i8* %106, i32 %add)
  br label %if.end179

if.else177:                                       ; No predecessors!
  %107 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.219, i32 0, i32 0
  %call178 = call i32 (i8*, ...) @printf(i8* %107)
  br label %if.end179

if.end179:                                        ; No predecessors!
  %108 = load i32, i32* %index, align 4
  %109 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx180 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %109, i32 %108
  %N_violations181 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx180, i32 0, i32 1
  %110 = load i16, i16* %N_violations181, align 4
  %conv182 = sext i16 %110 to i32
  %cmp183 = icmp sgt i32 %conv182, 0
  br i1 %cmp183, label %if.then185, label %if.else187

if.then185:                                       ; No predecessors!
  %111 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.220, i32 0, i32 0
  %call186 = call i32 (i8*, ...) @printf(i8* %111)
  br label %if.end189

if.else187:                                       ; No predecessors!
  %112 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.221, i32 0, i32 0
  %call188 = call i32 (i8*, ...) @printf(i8* %112)
  br label %if.end189

if.end189:                                        ; No predecessors!
  %113 = load i32, i32* %index, align 4
  %114 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx190 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %114, i32 %113
  %link_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx190, i32 0, i32 5
  %115 = load i16, i16* %link_cost, align 4
  %conv191 = sext i16 %115 to i32
  %116 = load i32, i32* %index, align 4
  %117 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx192 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %117, i32 %116
  %and_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx192, i32 0, i32 4
  %118 = load i16, i16* %and_cost, align 2
  %conv193 = sext i16 %118 to i32
  %119 = load i32, i32* %index, align 4
  %120 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx194 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %120, i32 %119
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx194, i32 0, i32 3
  %121 = load i16, i16* %disjunct_cost, align 4
  %conv195 = sext i16 %121 to i32
  %122 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.222, i32 0, i32 0
  %call196 = call i32 (i8*, ...) @printf(i8* %122, i32 %conv195, i32 %conv193, i32 %conv191)
  %123 = load i32, i32* %has_fatlinks, align 4
  %tobool197 = icmp ne i32 %123, 0
  br i1 %tobool197, label %if.then198, label %if.else200

if.then198:                                       ; No predecessors!
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp199, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end202

if.else200:                                       ; No predecessors!
  %struct.BigStruct_245 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp201, %struct.Linkage_info_struct** %struct.BigStruct_245
  %struct.BigStruct_256 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_256
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end202

if.end202:                                        ; No predecessors!
  %124 = load i32, i32* %index, align 4
  %125 = load i32, i32* %N_to_display, align 4
  %sub203 = sub nsw i32 %125, 1
  %cmp204 = icmp eq i32 %124, %sub203
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; No predecessors!
  br label %for.end250

if.end207:                                        ; No predecessors!
  %126 = load i32, i32* @just_one, align 4
  %tobool208 = icmp ne i32 %126, 0
  br i1 %tobool208, label %if.then209, label %if.end210

if.then209:                                       ; No predecessors!
  br label %for.end250

if.end210:                                        ; No predecessors!
  %127 = load i32, i32* @www_mode, align 4
  %tobool211 = icmp ne i32 %127, 0
  br i1 %tobool211, label %if.then212, label %if.end213

if.then212:                                       ; No predecessors!
  br label %for.inc248

if.end213:                                        ; No predecessors!
  %128 = load i32, i32* @display_bad, align 4
  %tobool214 = icmp ne i32 %128, 0
  br i1 %tobool214, label %if.end247, label %if.then215

if.then215:                                       ; No predecessors!
  %129 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.223, i32 0, i32 0
  %call216 = call i32 (i8*, ...) @printf(i8* %129)
  %130 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.224, i32 0, i32 0
  %call217 = call i32 (i8*, ...) @printf(i8* %130)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx219 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 0
  %arraydecay220 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 0
  %struct.BigStruct_220 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay220, i8** %struct.BigStruct_220
  %struct.BigStruct_521 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1500, i32* %struct.BigStruct_521
  %struct.BigStruct_2622 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %arrayidx219, %struct._iobuf** %struct.BigStruct_2622
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 82, i32 0)
  %struct.BigStruct_3423 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3423 = load i8*, i8** %struct.BigStruct_3423
  %cmp222 = icmp eq i8* %load_struct.BigStruct_3423, null
  br i1 %cmp222, label %if.then224, label %if.end225

if.then224:                                       ; No predecessors!
  call void @exit_Package(i32 1) #5
  unreachable

if.end225:                                        ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond226

for.cond226:                                      ; No predecessors!
  %131 = load i32, i32* %i, align 4
  %arrayidx227 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %131
  %132 = load i8, i8* %arrayidx227, align 1
  %conv228 = sext i8 %132 to i32
  %cmp229 = icmp ne i32 %conv228, 0
  br i1 %cmp229, label %for.body231, label %for.end240

for.body231:                                      ; No predecessors!
  %133 = load i32, i32* %i, align 4
  %arrayidx232 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %133
  %134 = load i8, i8* %arrayidx232, align 1
  %conv233 = sext i8 %134 to i32
  %call234 = call i32 @isspace_Package(i32 %conv233)
  %tobool235 = icmp ne i32 %call234, 0
  br i1 %tobool235, label %if.end237, label %if.then236

if.then236:                                       ; No predecessors!
  br label %for.end240

if.end237:                                        ; No predecessors!
  br label %for.inc238

for.inc238:                                       ; No predecessors!
  %135 = load i32, i32* %i, align 4
  %inc239 = add nsw i32 %135, 1
  store i32 %inc239, i32* %i, align 4
  br label %for.cond226

for.end240:                                       ; No predecessors!
  %136 = load i32, i32* %i, align 4
  %arrayidx241 = getelementptr inbounds [1500 x i8], [1500 x i8]* %line, i32 0, i32 %136
  %137 = load i8, i8* %arrayidx241, align 1
  %conv242 = sext i8 %137 to i32
  %cmp243 = icmp ne i32 %conv242, 0
  br i1 %cmp243, label %if.then245, label %if.end246

if.then245:                                       ; No predecessors!
  store i32 1, i32* %line_set, align 4
  br label %for.end250

if.end246:                                        ; No predecessors!
  br label %if.end247

if.end247:                                        ; No predecessors!
  br label %for.inc248

for.inc248:                                       ; No predecessors!
  %138 = load i32, i32* %index, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %index, align 4
  br label %for.cond166

for.end250:                                       ; No predecessors!
  br label %if.end251

if.end251:                                        ; No predecessors!
  %139 = load i32, i32* @display_bad, align 4
  %tobool252 = icmp ne i32 %139, 0
  br i1 %tobool252, label %if.then253, label %if.end254

if.then253:                                       ; No predecessors!
  %140 = load i32, i32* %give_up, align 4
  %141 = load i8*, i8** %stagen, align 4
  %142 = load i32, i32* %N_valid_linkages, align 4
  %143 = load i32, i32* %N_canonical_linkages, align 4
  %struct.BigStruct_026 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %143, i32* %struct.BigStruct_026
  %struct.BigStruct_527 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %142, i32* %struct.BigStruct_527
  %struct.BigStruct_11 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 11
  store i8* %141, i8** %struct.BigStruct_11
  %struct.BigStruct_15 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 15
  store i32 %140, i32* %struct.BigStruct_15
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 131, i32 10)
  br label %if.end254

if.end254:                                        ; No predecessors!
  %144 = load i32, i32* %N_linkages, align 4
  %cmp255 = icmp ne i32 %144, 0
  br i1 %cmp255, label %if.then257, label %if.end259

if.then257:                                       ; No predecessors!
  %145 = load i32, i32* %N_linkages, align 4
  %mul258 = mul i32 %145, 16
  %146 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %147 = bitcast %struct.Linkage_info_struct* %146 to i8*
  call void @xfree(i8* %147, i32 %mul258)
  br label %if.end259

if.end259:                                        ; No predecessors!
  br label %while.cond

while.end:                                        ; No predecessors!
  %148 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.225, i32 0, i32 0
  %struct.BigStruct_210 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %148, i8** %struct.BigStruct_210
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 130, i32 9)
  %149 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.226, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %149, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %150 = load i32, i32* @verbosity, align 4
  %cmp260 = icmp sgt i32 %150, 2
  br i1 %cmp260, label %if.then262, label %if.end263

if.then262:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 121, i32 10)
  br label %if.end263

if.end263:                                        ; No predecessors!
  %151 = load i32, i32* @space_in_use, align 4
  %cmp264 = icmp ne i32 %151, 0
  br i1 %cmp264, label %if.then266, label %if.end268

if.then266:                                       ; No predecessors!
  %152 = load i32, i32* @space_in_use, align 4
  %153 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.227, i32 0, i32 0
  %call267 = call i32 (i8*, ...) @printf(i8* %153, i32 %152)
  br label %if.end268

if.end268:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 171, i32 10)
  br label %for.cond

return:                                           ; No predecessors!
  ret void
}

define void @batch_process_Clear() {
entry:
  %i = alloca i32, align 4
  %N_linkages = alloca i32, align 4
  %N_canonical_linkages = alloca i32, align 4
  %N_valid_linkages = alloca i32, align 4
  %index = alloca i32, align 4
  %has_fatlinks = alloca i32, align 4
  %linkage = alloca %struct.Linkage_info_struct*, align 4
  %s = alloca [1500 x i8], align 1
  %errors = alloca i32, align 4
  %mc = alloca i32, align 4
  %cost_cutoff = alloca i32, align 4
  %old_cost_cutoff = alloca i32, align 4
  %maxcost = alloca i32, align 4
  %last_pass = alloca i32, align 4
  %tmp = alloca %struct.Linkage_info_struct, align 4
  %tmp135 = alloca %struct.Linkage_info_struct, align 4
  %tmp209 = alloca %struct.Linkage_info_struct, align 4
  %tmp211 = alloca %struct.Linkage_info_struct, align 4
  %tmp243 = alloca %struct.Linkage_info_struct, align 4
  %tmp245 = alloca %struct.Linkage_info_struct, align 4
  %tmp280 = alloca %struct.Linkage_info_struct, align 4
  %tmp282 = alloca %struct.Linkage_info_struct, align 4
  %tmp308 = alloca %struct.Linkage_info_struct, align 4
  %tmp310 = alloca %struct.Linkage_info_struct, align 4
  store %struct.Linkage_info_struct* null, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* @null_links, align 4
  store i32 0, i32* %errors, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 44, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 159, i32 10)
  store i32 0, i32* @max_space_in_use, align 4
  store i32 0, i32* @space_in_use, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 170, i32 10)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 0
  %arraydecay = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %struct.BigStruct_243 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay, i8** %struct.BigStruct_243
  %struct.BigStruct_544 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 1500, i32* %struct.BigStruct_544
  %struct.BigStruct_26 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 26
  store %struct._iobuf* %arrayidx, %struct._iobuf** %struct.BigStruct_26
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 82, i32 0)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  %cmp = icmp eq i8* %load_struct.BigStruct_34, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.end335

if.end:                                           ; No predecessors!
  %arraydecay2 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %call3 = call i32 @strlen_Package(i8* %arraydecay2)
  %sub = sub i32 %call3, 1
  %arrayidx4 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %sub
  %0 = load i8, i8* %arrayidx4, align 1
  %conv = sext i8 %0 to i32
  %cmp5 = icmp ne i32 %conv, 10
  br i1 %cmp5, label %if.then7, label %if.end9

if.then7:                                         ; No predecessors!
  %1 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.228, i32 0, i32 0
  %call8 = call i32 (i8*, ...) @printf(i8* %1)
  br label %for.cond

if.end9:                                          ; No predecessors!
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %arrayidx11 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %3 to i32
  %call13 = call i32 @isspace_Package(i32 %conv12)
  %tobool = icmp ne i32 %call13, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond10

for.end:                                          ; No predecessors!
  %5 = load i32, i32* %i, align 4
  %arrayidx14 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %5
  %6 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %6 to i32
  %cmp16 = icmp eq i32 %conv15, 37
  br i1 %cmp16, label %if.then18, label %if.end19

if.then18:                                        ; No predecessors!
  br label %for.cond

if.end19:                                         ; No predecessors!
  %7 = load i32, i32* %i, align 4
  %arrayidx20 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %7
  %8 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %8 to i32
  %cmp22 = icmp eq i32 %conv21, 0
  br i1 %cmp22, label %if.then24, label %if.end25

if.then24:                                        ; No predecessors!
  br label %for.cond

if.end25:                                         ; No predecessors!
  %9 = load i32, i32* %i, align 4
  %arrayidx26 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %9
  %10 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %10 to i32
  %cmp28 = icmp eq i32 %conv27, 42
  br i1 %cmp28, label %if.then49, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %11 = load i32, i32* %i, align 4
  %arrayidx30 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %11
  %12 = load i8, i8* %arrayidx30, align 1
  %conv31 = sext i8 %12 to i32
  %cmp32 = icmp eq i32 %conv31, 43
  br i1 %cmp32, label %if.then49, label %lor.lhs.false34

lor.lhs.false34:                                  ; No predecessors!
  %13 = load i32, i32* %i, align 4
  %arrayidx35 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %13
  %14 = load i8, i8* %arrayidx35, align 1
  %conv36 = sext i8 %14 to i32
  %cmp37 = icmp eq i32 %conv36, 35
  br i1 %cmp37, label %if.then49, label %lor.lhs.false39

lor.lhs.false39:                                  ; No predecessors!
  %15 = load i32, i32* %i, align 4
  %arrayidx40 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %15
  %16 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %16 to i32
  %cmp42 = icmp eq i32 %conv41, 58
  br i1 %cmp42, label %if.then49, label %lor.lhs.false44

lor.lhs.false44:                                  ; No predecessors!
  %17 = load i32, i32* %i, align 4
  %arrayidx45 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %17
  %18 = load i8, i8* %arrayidx45, align 1
  %conv46 = sext i8 %18 to i32
  %cmp47 = icmp eq i32 %conv46, 45
  br i1 %cmp47, label %if.then49, label %if.else

if.then49:                                        ; No predecessors!
  %19 = load i32, i32* %i, align 4
  %arrayidx50 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %19
  %20 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %20 to i32
  store i32 %conv51, i32* %mc, align 4
  %21 = load i32, i32* %i, align 4
  %arrayidx52 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 %21
  store i8 32, i8* %arrayidx52, align 1
  br label %if.end53

if.else:                                          ; No predecessors!
  store i32 32, i32* %mc, align 4
  br label %if.end53

if.end53:                                         ; No predecessors!
  %arrayidx54 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %22 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %22 to i32
  %cmp56 = icmp eq i32 %conv55, 33
  br i1 %cmp56, label %if.then58, label %if.end60

if.then58:                                        ; No predecessors!
  %arraydecay59 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %struct.BigStruct_2102 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay59, i8** %struct.BigStruct_2102
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 168, i32 9)
  br label %for.cond

if.end60:                                         ; No predecessors!
  %arraydecay61 = getelementptr inbounds [1500 x i8], [1500 x i8]* %s, i32 0, i32 0
  %struct.BigStruct_299 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %arraydecay61, i8** %struct.BigStruct_299
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 163, i32 10)
  %struct.BigStruct_32100 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32100 = load i32, i32* %struct.BigStruct_32100
  %tobool63 = icmp ne i32 %load_struct.BigStruct_32100, 0
  br i1 %tobool63, label %if.end65, label %if.then64

if.then64:                                        ; No predecessors!
  br label %for.cond

if.end65:                                         ; No predecessors!
  %23 = load i32, i32* @unknown_word_defined, align 4
  %tobool66 = icmp ne i32 %23, 0
  br i1 %tobool66, label %land.lhs.true, label %if.then68

land.lhs.true:                                    ; No predecessors!
  %24 = load i32, i32* @use_unknown_word, align 4
  %tobool67 = icmp ne i32 %24, 0
  br i1 %tobool67, label %if.end79, label %if.then68

if.then68:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 169, i32 9)
  %struct.BigStruct_32103 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32103 = load i32, i32* %struct.BigStruct_32103
  %tobool70 = icmp ne i32 %load_struct.BigStruct_32103, 0
  br i1 %tobool70, label %if.end78, label %if.then71

if.then71:                                        ; No predecessors!
  %25 = load i32, i32* %errors, align 4
  %inc72 = add nsw i32 %25, 1
  store i32 %inc72, i32* %errors, align 4
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* @.str.229, i32 0, i32 0
  %call73 = call i32 (i8*, ...) @printf(i8* %26)
  %27 = load i32, i32* %mc, align 4
  %28 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.230, i32 0, i32 0
  %call74 = call i32 (i8*, ...) @printf(i8* %28, i32 %27)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_381 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_381 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_381
  %arrayidx76 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_381, i32 1
  %struct.BigStruct_188 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx76, %struct._iobuf** %struct.BigStruct_188
  %struct.BigStruct_589 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 2, i32* %struct.BigStruct_589
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  %29 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.231, i32 0, i32 0
  %call77 = call i32 (i8*, ...) @printf(i8* %29)
  br label %for.cond

if.end78:                                         ; No predecessors!
  br label %if.end79

if.end79:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 164, i32 8)
  %struct.BigStruct_32101 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32101 = load i32, i32* %struct.BigStruct_32101
  %tobool81 = icmp ne i32 %load_struct.BigStruct_32101, 0
  br i1 %tobool81, label %if.end84, label %if.then82

if.then82:                                        ; No predecessors!
  %30 = load i32, i32* %errors, align 4
  %inc83 = add nsw i32 %30, 1
  store i32 %inc83, i32* %errors, align 4
  br label %for.cond

if.end84:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 162, i32 10)
  %struct.BigStruct_3298 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3298 = load i32, i32* %struct.BigStruct_3298
  store i32 %load_struct.BigStruct_3298, i32* %maxcost, align 4
  %31 = getelementptr inbounds [33 x i8], [33 x i8]* @.str.232, i32 0, i32 0
  %struct.BigStruct_229 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %31, i8** %struct.BigStruct_229
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %32 = load i32, i32* @echo_on, align 4
  %tobool86 = icmp ne i32 %32, 0
  br i1 %tobool86, label %if.then87, label %if.end89

if.then87:                                        ; No predecessors!
  %33 = load i32, i32* %mc, align 4
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.233, i32 0, i32 0
  %call88 = call i32 (i8*, ...) @printf(i8* %34, i32 %33)
  br label %if.end89

if.end89:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 172, i32 9)
  store i32 0, i32* %last_pass, align 4
  store i32 0, i32* %cost_cutoff, align 4
  store i32 1, i32* %old_cost_cutoff, align 4
  %struct.BigStruct_046 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 1, i32* %struct.BigStruct_046
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  br label %while.cond

while.cond:                                       ; No predecessors!
  %35 = load i32, i32* %last_pass, align 4
  %tobool90 = icmp ne i32 %35, 0
  %lnot = xor i1 %tobool90, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %36 = load i32, i32* %cost_cutoff, align 4
  %cmp91 = icmp eq i32 %36, 0
  br i1 %cmp91, label %if.then93, label %if.else94

if.then93:                                        ; No predecessors!
  store i32 1, i32* %cost_cutoff, align 4
  br label %if.end102

if.else94:                                        ; No predecessors!
  %37 = load i32, i32* %cost_cutoff, align 4
  %cmp95 = icmp eq i32 %37, 1
  br i1 %cmp95, label %land.lhs.true97, label %if.end101

land.lhs.true97:                                  ; No predecessors!
  %38 = load i32, i32* %maxcost, align 4
  %cmp98 = icmp sgt i32 %38, 1
  br i1 %cmp98, label %if.then100, label %if.end101

if.then100:                                       ; No predecessors!
  %39 = load i32, i32* %maxcost, align 4
  store i32 %39, i32* %cost_cutoff, align 4
  br label %if.end101

if.end101:                                        ; No predecessors!
  br label %if.end102

if.end102:                                        ; No predecessors!
  %40 = load i32, i32* %cost_cutoff, align 4
  %41 = load i32, i32* %maxcost, align 4
  %cmp103 = icmp sge i32 %40, %41
  %conv104 = zext i1 %cmp103 to i32
  store i32 %conv104, i32* %last_pass, align 4
  %42 = load i32, i32* @verbosity, align 4
  %cmp105 = icmp sgt i32 %42, 2
  br i1 %cmp105, label %if.then107, label %if.end109

if.then107:                                       ; No predecessors!
  %43 = load i32, i32* %maxcost, align 4
  %44 = load i32, i32* %cost_cutoff, align 4
  %45 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.234, i32 0, i32 0
  %call108 = call i32 (i8*, ...) @printf(i8* %45, i32 %44, i32 %43)
  br label %if.end109

if.end109:                                        ; No predecessors!
  %46 = load i32, i32* %cost_cutoff, align 4
  %47 = load i32, i32* %old_cost_cutoff, align 4
  %cmp110 = icmp ne i32 %46, %47
  br i1 %cmp110, label %if.then112, label %if.end113

if.then112:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  %48 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_045 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %48, i32* %struct.BigStruct_045
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 128, i32 8)
  %49 = load i32, i32* %cost_cutoff, align 4
  store i32 %49, i32* %old_cost_cutoff, align 4
  br label %if.end113

if.end113:                                        ; No predecessors!
  %struct.BigStruct_086 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_086
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 138, i32 10)
  %struct.BigStruct_3287 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3287 = load i32, i32* %struct.BigStruct_3287
  store i32 %load_struct.BigStruct_3287, i32* %N_linkages, align 4
  %50 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.235, i32 0, i32 0
  %struct.BigStruct_228 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %50, i8** %struct.BigStruct_228
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  store i32 0, i32* %N_valid_linkages, align 4
  store i32 0, i32* %N_canonical_linkages, align 4
  %51 = load i32, i32* %N_linkages, align 4
  %cmp115 = icmp ne i32 %51, 0
  br i1 %cmp115, label %if.then117, label %if.end150

if.then117:                                       ; No predecessors!
  %52 = load i32, i32* %N_linkages, align 4
  %mul = mul i32 %52, 16
  %call118 = call i8* @xalloc(i32 %mul)
  %53 = bitcast i8* %call118 to %struct.Linkage_info_struct*
  store %struct.Linkage_info_struct* %53, %struct.Linkage_info_struct** %linkage, align 4
  store i32 0, i32* %index, align 4
  br label %for.cond119

for.cond119:                                      ; No predecessors!
  %54 = load i32, i32* %index, align 4
  %55 = load i32, i32* %N_linkages, align 4
  %cmp120 = icmp slt i32 %54, %55
  br i1 %cmp120, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %56 = load i32, i32* %N_valid_linkages, align 4
  %cmp122 = icmp eq i32 %56, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %57 = phi i1 [ false, %for.cond119 ], [ %cmp122, %land.rhs ]
  br i1 %57, label %for.body124, label %for.end149

for.body124:                                      ; No predecessors!
  %58 = load i32, i32* %index, align 4
  %struct.BigStruct_040 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %58, i32* %struct.BigStruct_040
  %struct.BigStruct_541 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_541
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3242 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3242 = load i32, i32* %struct.BigStruct_3242
  store i32 %load_struct.BigStruct_3242, i32* %has_fatlinks, align 4
  %59 = load i32, i32* %has_fatlinks, align 4
  %tobool126 = icmp ne i32 %59, 0
  br i1 %tobool126, label %if.then127, label %if.else133

if.then127:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 67, i32 1)
  %struct.BigStruct_3225 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3225 = load i32, i32* %struct.BigStruct_3225
  %tobool129 = icmp ne i32 %load_struct.BigStruct_3225, 0
  br i1 %tobool129, label %if.end131, label %if.then130

if.then130:                                       ; No predecessors!
  br label %for.inc147

if.end131:                                        ; No predecessors!
  %60 = load i32, i32* %N_canonical_linkages, align 4
  %61 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx132 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %61, i32 %60
  %struct.BigStruct_2413 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp, %struct.Linkage_info_struct** %struct.BigStruct_2413
  %struct.BigStruct_2514 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_2514
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  %62 = bitcast %struct.Linkage_info_struct* %arrayidx132 to i8*
  %63 = bitcast %struct.Linkage_info_struct* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %62, i8* %63, i32 16, i32 4, i1 false)
  br label %if.end136

if.else133:                                       ; No predecessors!
  %64 = load i32, i32* %N_canonical_linkages, align 4
  %65 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx134 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %65, i32 %64
  %struct.BigStruct_2423 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp135, %struct.Linkage_info_struct** %struct.BigStruct_2423
  %struct.BigStruct_2524 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 0, i32* %struct.BigStruct_2524
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  %66 = bitcast %struct.Linkage_info_struct* %arrayidx134 to i8*
  %67 = bitcast %struct.Linkage_info_struct* %tmp135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %66, i8* %67, i32 16, i32 4, i1 false)
  br label %if.end136

if.end136:                                        ; No predecessors!
  %68 = load i32, i32* %N_canonical_linkages, align 4
  %69 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx137 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %69, i32 %68
  %N_violations = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx137, i32 0, i32 1
  %70 = load i16, i16* %N_violations, align 4
  %conv138 = sext i16 %70 to i32
  %cmp139 = icmp eq i32 %conv138, 0
  br i1 %cmp139, label %if.then141, label %if.end143

if.then141:                                       ; No predecessors!
  %71 = load i32, i32* %N_valid_linkages, align 4
  %inc142 = add nsw i32 %71, 1
  store i32 %inc142, i32* %N_valid_linkages, align 4
  br label %if.end143

if.end143:                                        ; No predecessors!
  %72 = load i32, i32* %index, align 4
  %73 = load i32, i32* %N_canonical_linkages, align 4
  %74 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx144 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %74, i32 %73
  %index145 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx144, i32 0, i32 0
  store i32 %72, i32* %index145, align 4
  %75 = load i32, i32* %N_canonical_linkages, align 4
  %inc146 = add nsw i32 %75, 1
  store i32 %inc146, i32* %N_canonical_linkages, align 4
  br label %for.inc147

for.inc147:                                       ; No predecessors!
  %76 = load i32, i32* %index, align 4
  %inc148 = add nsw i32 %76, 1
  store i32 %inc148, i32* %index, align 4
  br label %for.cond119

for.end149:                                       ; No predecessors!
  %77 = load i32, i32* %N_canonical_linkages, align 4
  %78 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %79 = bitcast %struct.Linkage_info_struct* %78 to i8*
  %80 = bitcast i32 (%struct.Linkage_info_struct*, %struct.Linkage_info_struct*)* @compare_parse to i32 (i8*, i8*)*
  call void @qsort_Package(i8* %79, i32 %77, i32 16, i32 (i8*, i8*)* %80)
  br label %if.end150

if.end150:                                        ; No predecessors!
  %81 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.236, i32 0, i32 0
  %struct.BigStruct_227 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %81, i8** %struct.BigStruct_227
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %82 = load i32, i32* %N_canonical_linkages, align 4
  %cmp151 = icmp eq i32 %82, 0
  br i1 %cmp151, label %if.then153, label %if.else180

if.then153:                                       ; No predecessors!
  %83 = load i32, i32* %mc, align 4
  %cmp154 = icmp eq i32 %83, 42
  br i1 %cmp154, label %if.end179, label %lor.lhs.false156

lor.lhs.false156:                                 ; No predecessors!
  %84 = load i32, i32* %mc, align 4
  %cmp157 = icmp eq i32 %84, 35
  br i1 %cmp157, label %if.end179, label %if.then159

if.then159:                                       ; No predecessors!
  %85 = load i32, i32* %last_pass, align 4
  %tobool160 = icmp ne i32 %85, 0
  br i1 %tobool160, label %if.then161, label %if.else177

if.then161:                                       ; No predecessors!
  %86 = load i32, i32* %errors, align 4
  %inc162 = add nsw i32 %86, 1
  store i32 %inc162, i32* %errors, align 4
  %87 = load i32, i32* @echo_on, align 4
  %tobool163 = icmp ne i32 %87, 0
  br i1 %tobool163, label %if.else173, label %if.then164

if.then164:                                       ; No predecessors!
  %88 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_082 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_082
  %struct.BigStruct_583 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %88, i32* %struct.BigStruct_583
  %struct.BigStruct_884 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_884
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3485 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3485 = load i8*, i8** %struct.BigStruct_3485
  %89 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.237, i32 0, i32 0
  %call166 = call i32 (i8*, ...) @printf(i8* %89, i8* %load_struct.BigStruct_3485)
  %90 = load i32, i32* @echo_on, align 4
  %tobool167 = icmp ne i32 %90, 0
  br i1 %tobool167, label %if.then168, label %if.end170

if.then168:                                       ; No predecessors!
  %91 = load i32, i32* %mc, align 4
  %92 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.238, i32 0, i32 0
  %call169 = call i32 (i8*, ...) @printf(i8* %92, i32 %91)
  br label %if.end170

if.end170:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_382 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_382 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_382
  %arrayidx172 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_382, i32 1
  %struct.BigStruct_190 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx172, %struct._iobuf** %struct.BigStruct_190
  %struct.BigStruct_591 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_591
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end176

if.else173:                                       ; No predecessors!
  %93 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_078 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_078
  %struct.BigStruct_579 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %93, i32* %struct.BigStruct_579
  %struct.BigStruct_880 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_880
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3481 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3481 = load i8*, i8** %struct.BigStruct_3481
  %94 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.239, i32 0, i32 0
  %call175 = call i32 (i8*, ...) @printf(i8* %94, i8* %load_struct.BigStruct_3481)
  br label %if.end176

if.end176:                                        ; No predecessors!
  br label %if.end178

if.else177:                                       ; No predecessors!
  br label %if.end178

if.end178:                                        ; No predecessors!
  br label %if.end179

if.end179:                                        ; No predecessors!
  br label %if.end317

if.else180:                                       ; No predecessors!
  %95 = load i32, i32* %N_valid_linkages, align 4
  %cmp181 = icmp eq i32 %95, 0
  br i1 %cmp181, label %if.then183, label %if.else216

if.then183:                                       ; No predecessors!
  %96 = load i32, i32* %mc, align 4
  %cmp184 = icmp eq i32 %96, 43
  br i1 %cmp184, label %if.end215, label %lor.lhs.false186

lor.lhs.false186:                                 ; No predecessors!
  %97 = load i32, i32* %mc, align 4
  %cmp187 = icmp eq i32 %97, 42
  br i1 %cmp187, label %if.end215, label %if.then189

if.then189:                                       ; No predecessors!
  %98 = load i32, i32* %last_pass, align 4
  %tobool190 = icmp ne i32 %98, 0
  br i1 %tobool190, label %if.then191, label %if.else213

if.then191:                                       ; No predecessors!
  %99 = load i32, i32* %N_canonical_linkages, align 4
  %cmp192 = icmp eq i32 %99, 1
  br i1 %cmp192, label %if.then194, label %if.else197

if.then194:                                       ; No predecessors!
  %100 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_074 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_074
  %struct.BigStruct_575 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %100, i32* %struct.BigStruct_575
  %struct.BigStruct_876 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_876
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3477 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3477 = load i8*, i8** %struct.BigStruct_3477
  %101 = getelementptr inbounds [57 x i8], [57 x i8]* @.str.240, i32 0, i32 0
  %call196 = call i32 (i8*, ...) @printf(i8* %101, i8* %load_struct.BigStruct_3477)
  br label %if.end202

if.else197:                                       ; No predecessors!
  %102 = load i32, i32* %N_canonical_linkages, align 4
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.241, i32 0, i32 0
  %call198 = call i32 (i8*, ...) @printf(i8* %103, i32 %102)
  %104 = getelementptr inbounds [38 x i8], [38 x i8]* @.str.242, i32 0, i32 0
  %call199 = call i32 (i8*, ...) @printf(i8* %104)
  %105 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_070 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_070
  %struct.BigStruct_571 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %105, i32* %struct.BigStruct_571
  %struct.BigStruct_872 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_872
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3473 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3473 = load i8*, i8** %struct.BigStruct_3473
  %106 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.243, i32 0, i32 0
  %call201 = call i32 (i8*, ...) @printf(i8* %106, i8* %load_struct.BigStruct_3473)
  br label %if.end202

if.end202:                                        ; No predecessors!
  %107 = load i32, i32* %errors, align 4
  %inc203 = add nsw i32 %107, 1
  store i32 %inc203, i32* %errors, align 4
  %108 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx204 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %108, i32 0
  %index205 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx204, i32 0, i32 0
  %109 = load i32, i32* %index205, align 4
  %struct.BigStruct_037 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %109, i32* %struct.BigStruct_037
  %struct.BigStruct_538 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_538
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3239 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3239 = load i32, i32* %struct.BigStruct_3239
  store i32 %load_struct.BigStruct_3239, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %110 = load i32, i32* %has_fatlinks, align 4
  %tobool207 = icmp ne i32 %110, 0
  br i1 %tobool207, label %if.then208, label %if.else210

if.then208:                                       ; No predecessors!
  %struct.BigStruct_2411 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp209, %struct.Linkage_info_struct** %struct.BigStruct_2411
  %struct.BigStruct_2512 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2512
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end212

if.else210:                                       ; No predecessors!
  %struct.BigStruct_2421 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp211, %struct.Linkage_info_struct** %struct.BigStruct_2421
  %struct.BigStruct_2522 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2522
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end212

if.end212:                                        ; No predecessors!
  br label %if.end214

if.else213:                                       ; No predecessors!
  br label %if.end214

if.end214:                                        ; No predecessors!
  br label %if.end215

if.end215:                                        ; No predecessors!
  br label %if.end316

if.else216:                                       ; No predecessors!
  %111 = load i32, i32* %mc, align 4
  %cmp217 = icmp eq i32 %111, 43
  br i1 %cmp217, label %if.then225, label %lor.lhs.false219

lor.lhs.false219:                                 ; No predecessors!
  %112 = load i32, i32* %mc, align 4
  %cmp220 = icmp eq i32 %112, 42
  br i1 %cmp220, label %if.then225, label %lor.lhs.false222

lor.lhs.false222:                                 ; No predecessors!
  %113 = load i32, i32* %mc, align 4
  %cmp223 = icmp eq i32 %113, 35
  br i1 %cmp223, label %if.then225, label %if.else247

if.then225:                                       ; No predecessors!
  %114 = load i32, i32* %errors, align 4
  %inc226 = add nsw i32 %114, 1
  store i32 %inc226, i32* %errors, align 4
  %115 = load i32, i32* @echo_on, align 4
  %tobool227 = icmp ne i32 %115, 0
  br i1 %tobool227, label %if.else234, label %if.then228

if.then228:                                       ; No predecessors!
  %116 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_066 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_066
  %struct.BigStruct_567 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %116, i32* %struct.BigStruct_567
  %struct.BigStruct_868 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_868
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3469 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3469 = load i8*, i8** %struct.BigStruct_3469
  %117 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.244, i32 0, i32 0
  %call230 = call i32 (i8*, ...) @printf(i8* %117, i8* %load_struct.BigStruct_3469)
  %118 = load i32, i32* %mc, align 4
  %119 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.245, i32 0, i32 0
  %call231 = call i32 (i8*, ...) @printf(i8* %119, i32 %118)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_383 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_383 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_383
  %arrayidx233 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_383, i32 1
  %struct.BigStruct_192 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx233, %struct._iobuf** %struct.BigStruct_192
  %struct.BigStruct_593 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_593
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end237

if.else234:                                       ; No predecessors!
  %120 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_062 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_062
  %struct.BigStruct_563 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %120, i32* %struct.BigStruct_563
  %struct.BigStruct_864 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_864
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3465 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3465 = load i8*, i8** %struct.BigStruct_3465
  %121 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.246, i32 0, i32 0
  %call236 = call i32 (i8*, ...) @printf(i8* %121, i8* %load_struct.BigStruct_3465)
  br label %if.end237

if.end237:                                        ; No predecessors!
  store i32 1, i32* %last_pass, align 4
  %122 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx238 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %122, i32 0
  %index239 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx238, i32 0, i32 0
  %123 = load i32, i32* %index239, align 4
  %struct.BigStruct_034 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %123, i32* %struct.BigStruct_034
  %struct.BigStruct_535 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_535
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3236 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3236 = load i32, i32* %struct.BigStruct_3236
  store i32 %load_struct.BigStruct_3236, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %124 = load i32, i32* %has_fatlinks, align 4
  %tobool241 = icmp ne i32 %124, 0
  br i1 %tobool241, label %if.then242, label %if.else244

if.then242:                                       ; No predecessors!
  %struct.BigStruct_249 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp243, %struct.Linkage_info_struct** %struct.BigStruct_249
  %struct.BigStruct_2510 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2510
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end246

if.else244:                                       ; No predecessors!
  %struct.BigStruct_2419 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp245, %struct.Linkage_info_struct** %struct.BigStruct_2419
  %struct.BigStruct_2520 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2520
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end246

if.end246:                                        ; No predecessors!
  br label %if.end315

if.else247:                                       ; No predecessors!
  %125 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx248 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %125, i32 0
  %disjunct_cost = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx248, i32 0, i32 3
  %126 = load i16, i16* %disjunct_cost, align 4
  %conv249 = sext i16 %126 to i32
  %cmp250 = icmp eq i32 %conv249, 0
  br i1 %cmp250, label %land.lhs.true252, label %if.else284

land.lhs.true252:                                 ; No predecessors!
  %127 = load i32, i32* %mc, align 4
  %cmp253 = icmp eq i32 %127, 58
  br i1 %cmp253, label %if.then255, label %if.else284

if.then255:                                       ; No predecessors!
  %128 = load i32, i32* %errors, align 4
  %inc256 = add nsw i32 %128, 1
  store i32 %inc256, i32* %errors, align 4
  %129 = load i32, i32* @echo_on, align 4
  %tobool257 = icmp ne i32 %129, 0
  br i1 %tobool257, label %if.else264, label %if.then258

if.then258:                                       ; No predecessors!
  %130 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_058 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_058
  %struct.BigStruct_559 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %130, i32* %struct.BigStruct_559
  %struct.BigStruct_860 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_860
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3461 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3461 = load i8*, i8** %struct.BigStruct_3461
  %131 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.247, i32 0, i32 0
  %call260 = call i32 (i8*, ...) @printf(i8* %131, i8* %load_struct.BigStruct_3461)
  %132 = load i32, i32* %mc, align 4
  %133 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.248, i32 0, i32 0
  %call261 = call i32 (i8*, ...) @printf(i8* %133, i32 %132)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_384 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_384 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_384
  %arrayidx263 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_384, i32 1
  %struct.BigStruct_194 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx263, %struct._iobuf** %struct.BigStruct_194
  %struct.BigStruct_595 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_595
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end267

if.else264:                                       ; No predecessors!
  %134 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_054 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_054
  %struct.BigStruct_555 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %134, i32* %struct.BigStruct_555
  %struct.BigStruct_856 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_856
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3457 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3457 = load i8*, i8** %struct.BigStruct_3457
  %135 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.249, i32 0, i32 0
  %call266 = call i32 (i8*, ...) @printf(i8* %135, i8* %load_struct.BigStruct_3457)
  br label %if.end267

if.end267:                                        ; No predecessors!
  store i32 1, i32* %last_pass, align 4
  %136 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx268 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %136, i32 0
  %disjunct_cost269 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx268, i32 0, i32 3
  %137 = load i16, i16* %disjunct_cost269, align 4
  %conv270 = sext i16 %137 to i32
  %138 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx271 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %138, i32 0
  %N_violations272 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx271, i32 0, i32 1
  %139 = load i16, i16* %N_violations272, align 4
  %conv273 = sext i16 %139 to i32
  %140 = getelementptr inbounds [40 x i8], [40 x i8]* @.str.250, i32 0, i32 0
  %call274 = call i32 (i8*, ...) @printf(i8* %140, i32 %conv273, i32 %conv270)
  %141 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx275 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %141, i32 0
  %index276 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx275, i32 0, i32 0
  %142 = load i32, i32* %index276, align 4
  %struct.BigStruct_031 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %142, i32* %struct.BigStruct_031
  %struct.BigStruct_532 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_532
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3233 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3233 = load i32, i32* %struct.BigStruct_3233
  store i32 %load_struct.BigStruct_3233, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %143 = load i32, i32* %has_fatlinks, align 4
  %tobool278 = icmp ne i32 %143, 0
  br i1 %tobool278, label %if.then279, label %if.else281

if.then279:                                       ; No predecessors!
  %struct.BigStruct_247 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp280, %struct.Linkage_info_struct** %struct.BigStruct_247
  %struct.BigStruct_258 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_258
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end283

if.else281:                                       ; No predecessors!
  %struct.BigStruct_2417 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp282, %struct.Linkage_info_struct** %struct.BigStruct_2417
  %struct.BigStruct_2518 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2518
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end283

if.end283:                                        ; No predecessors!
  br label %if.end314

if.else284:                                       ; No predecessors!
  %144 = load i32, i32* %cost_cutoff, align 4
  %cmp285 = icmp eq i32 %144, 1
  br i1 %cmp285, label %land.lhs.true287, label %if.else312

land.lhs.true287:                                 ; No predecessors!
  %145 = load i32, i32* %mc, align 4
  %cmp288 = icmp eq i32 %145, 45
  br i1 %cmp288, label %if.then290, label %if.else312

if.then290:                                       ; No predecessors!
  %146 = load i32, i32* %errors, align 4
  %inc291 = add nsw i32 %146, 1
  store i32 %inc291, i32* %errors, align 4
  %147 = load i32, i32* @echo_on, align 4
  %tobool292 = icmp ne i32 %147, 0
  br i1 %tobool292, label %if.else299, label %if.then293

if.then293:                                       ; No predecessors!
  %148 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_050 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_050
  %struct.BigStruct_551 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %148, i32* %struct.BigStruct_551
  %struct.BigStruct_852 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_852
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3453 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3453 = load i8*, i8** %struct.BigStruct_3453
  %149 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.251, i32 0, i32 0
  %call295 = call i32 (i8*, ...) @printf(i8* %149, i8* %load_struct.BigStruct_3453)
  %150 = load i32, i32* %mc, align 4
  %151 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.252, i32 0, i32 0
  %call296 = call i32 (i8*, ...) @printf(i8* %151, i32 %150)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_385 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_385 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_385
  %arrayidx298 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_385, i32 1
  %struct.BigStruct_196 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx298, %struct._iobuf** %struct.BigStruct_196
  %struct.BigStruct_597 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 13, i32* %struct.BigStruct_597
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 141, i32 10)
  br label %if.end302

if.else299:                                       ; No predecessors!
  %152 = load i32, i32* %cost_cutoff, align 4
  %struct.BigStruct_047 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 0, i32* %struct.BigStruct_047
  %struct.BigStruct_548 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %152, i32* %struct.BigStruct_548
  %struct.BigStruct_8 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 8
  store i32 0, i32* %struct.BigStruct_8
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 132, i32 10)
  %struct.BigStruct_3449 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_3449 = load i8*, i8** %struct.BigStruct_3449
  %153 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.253, i32 0, i32 0
  %call301 = call i32 (i8*, ...) @printf(i8* %153, i8* %load_struct.BigStruct_3449)
  br label %if.end302

if.end302:                                        ; No predecessors!
  store i32 1, i32* %last_pass, align 4
  %154 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %arrayidx303 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %154, i32 0
  %index304 = getelementptr inbounds %struct.Linkage_info_struct, %struct.Linkage_info_struct* %arrayidx303, i32 0, i32 0
  %155 = load i32, i32* %index304, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 %155, i32* %struct.BigStruct_0
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 0, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 81, i32 3)
  %struct.BigStruct_3230 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_3230 = load i32, i32* %struct.BigStruct_3230
  store i32 %load_struct.BigStruct_3230, i32* %has_fatlinks, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 90, i32 0)
  %156 = load i32, i32* %has_fatlinks, align 4
  %tobool306 = icmp ne i32 %156, 0
  br i1 %tobool306, label %if.then307, label %if.else309

if.then307:                                       ; No predecessors!
  %struct.BigStruct_24 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp308, %struct.Linkage_info_struct** %struct.BigStruct_24
  %struct.BigStruct_25 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_25
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 57, i32 3)
  br label %if.end311

if.else309:                                       ; No predecessors!
  %struct.BigStruct_2415 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 24
  store %struct.Linkage_info_struct* %tmp310, %struct.Linkage_info_struct** %struct.BigStruct_2415
  %struct.BigStruct_2516 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 25
  store i32 1, i32* %struct.BigStruct_2516
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 60, i32 3)
  br label %if.end311

if.end311:                                        ; No predecessors!
  br label %if.end313

if.else312:                                       ; No predecessors!
  store i32 1, i32* %last_pass, align 4
  br label %if.end313

if.end313:                                        ; No predecessors!
  br label %if.end314

if.end314:                                        ; No predecessors!
  br label %if.end315

if.end315:                                        ; No predecessors!
  br label %if.end316

if.end316:                                        ; No predecessors!
  br label %if.end317

if.end317:                                        ; No predecessors!
  %157 = load i32, i32* %N_linkages, align 4
  %cmp318 = icmp ne i32 %157, 0
  br i1 %cmp318, label %if.then320, label %if.end322

if.then320:                                       ; No predecessors!
  %158 = load i32, i32* %N_linkages, align 4
  %mul321 = mul i32 %158, 16
  %159 = load %struct.Linkage_info_struct*, %struct.Linkage_info_struct** %linkage, align 4
  %160 = bitcast %struct.Linkage_info_struct* %159 to i8*
  call void @xfree(i8* %160, i32 %mul321)
  br label %if.end322

if.end322:                                        ; No predecessors!
  br label %while.cond

while.end:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_386 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_386 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_386
  %arrayidx324 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_386, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx324, %struct._iobuf** %struct.BigStruct_1
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 59, i32 0)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %161 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.254, i32 0, i32 0
  %struct.BigStruct_226 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %161, i8** %struct.BigStruct_226
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 129, i32 8)
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 130, i32 9)
  %162 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.255, i32 0, i32 0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %162, i8** %struct.BigStruct_2
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 80, i32 0)
  %163 = load i32, i32* @verbosity, align 4
  %cmp326 = icmp sgt i32 %163, 2
  br i1 %cmp326, label %if.then328, label %if.end329

if.then328:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 121, i32 10)
  br label %if.end329

if.end329:                                        ; No predecessors!
  %164 = load i32, i32* @space_in_use, align 4
  %cmp330 = icmp ne i32 %164, 0
  br i1 %cmp330, label %if.then332, label %if.end334

if.then332:                                       ; No predecessors!
  %165 = load i32, i32* @space_in_use, align 4
  %166 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.256, i32 0, i32 0
  %call333 = call i32 (i8*, ...) @printf(i8* %166, i32 %165)
  br label %if.end334

if.end334:                                        ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 171, i32 10)
  br label %for.cond

for.end335:                                       ; No predecessors!
  %167 = load i32, i32* %errors, align 4
  %cmp336 = icmp eq i32 %167, 0
  br i1 %cmp336, label %if.then338, label %if.else340

if.then338:                                       ; No predecessors!
  %168 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.257, i32 0, i32 0
  %call339 = call i32 (i8*, ...) @printf(i8* %168)
  br label %if.end348

if.else340:                                       ; No predecessors!
  %169 = load i32, i32* %errors, align 4
  %cmp341 = icmp eq i32 %169, 1
  br i1 %cmp341, label %if.then343, label %if.else345

if.then343:                                       ; No predecessors!
  %170 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.258, i32 0, i32 0
  %call344 = call i32 (i8*, ...) @printf(i8* %170)
  br label %if.end347

if.else345:                                       ; No predecessors!
  %171 = load i32, i32* %errors, align 4
  %172 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.259, i32 0, i32 0
  %call346 = call i32 (i8*, ...) @printf(i8* %172, i32 %171)
  br label %if.end347

if.end347:                                        ; No predecessors!
  br label %if.end348

if.end348:                                        ; No predecessors!
  ret void
}

define void @read_dictionary_Clear() {
entry:
  call void @advance()
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = getelementptr inbounds [50 x i8], [50 x i8]* @token, i32 0, i32 0
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 175, i32 8)
  br label %while.cond

while.end:                                        ; No predecessors!
  ret void
}

define void @open_dictionary_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.51.772, i32 0, i32 0
  %struct.BigStruct_21 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  store i8* %0, i8** %struct.BigStruct_21
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  store i8* %1, i8** %struct.BigStruct_3
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 157, i32 10)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  store %struct._iobuf* %load_struct.BigStruct_38, %struct._iobuf** @dict_file, align 4
  %cmp = icmp eq %struct._iobuf* %load_struct.BigStruct_38, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %2 = load i8*, i8** %s.addr, align 4
  %3 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.52.773, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %3, i8* %2)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; No predecessors!
  ret void
}

define void @init_randtable_Clear() {
entry:
  %i = alloca i32, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 10, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 188, i32 10)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 176, i32 10)
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  %load_struct.BigStruct_32 = load i32, i32* %struct.BigStruct_32
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @randtable, i32 0, i32 %1
  store i32 %load_struct.BigStruct_32, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %2 = load i32, i32* %i, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @srand_Package_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  call void @srand(i32 %load_struct.BigStruct_0)
  ret void
}

define void @initialize_memory_Clear() {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %j, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %i, align 4
  store i32 %2, i32* @largest_block, align 4
  br label %for.inc

for.inc:                                          ; No predecessors!
  %3 = load i32, i32* %j, align 4
  store i32 %3, i32* %i, align 4
  %4 = load i32, i32* %j, align 4
  %mul = mul i32 2, %4
  %add = add i32 %mul, 1
  store i32 %add, i32* %j, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %5 = load i32, i32* @largest_block, align 4
  %and = and i32 %5, -8
  store i32 %and, i32* @largest_block, align 4
  %6 = load i32, i32* @largest_block, align 4
  %add1 = add i32 %6, -4
  store i32 %add1, i32* @largest_block, align 4
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  store i32 31457280, i32* %struct.BigStruct_0
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 180, i32 10)
  %struct.BigStruct_34 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 34
  %load_struct.BigStruct_34 = load i8*, i8** %struct.BigStruct_34
  store i8* %load_struct.BigStruct_34, i8** @start_of_array, align 4
  %7 = load i8*, i8** @start_of_array, align 4
  %cmp2 = icmp eq i8* %7, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 2
  %8 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.833, i32 0, i32 0
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* %8)
  call void @exit_Package(i32 1) #5
  unreachable

if.end:                                           ; No predecessors!
  %9 = load i8*, i8** @start_of_array, align 4
  %add.ptr = getelementptr inbounds i8, i8* %9, i32 8
  store i8* %add.ptr, i8** @end_of_array, align 4
  %10 = load i8*, i8** @end_of_array, align 4
  %add.ptr5 = getelementptr inbounds i8, i8* %10, i32 -4
  %11 = bitcast i8* %add.ptr5 to %struct.Nuggie*
  %size = getelementptr inbounds %struct.Nuggie, %struct.Nuggie* %11, i32 0, i32 0
  store i32 0, i32* %size, align 4
  store i32 0, i32* @max_space_in_use, align 4
  store i32 0, i32* @space_in_use, align 4
  store i8* null, i8** @last_block, align 4
  ret void
}

define void @print_connector_list_Clear() {
entry:
  %struct.BigStruct_6 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 6
  %load_struct.BigStruct_6 = load %struct.Connector_struct*, %struct.Connector_struct** %struct.BigStruct_6
  %e.addr = alloca %struct.Connector_struct*, align 4
  store %struct.Connector_struct* %load_struct.BigStruct_6, %struct.Connector_struct** %e.addr, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Connector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %string = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %1, i32 0, i32 5
  %2 = load i8*, i8** %string, align 4
  %3 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.4.65, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %3, i8* %2)
  %4 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %label = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %4, i32 0, i32 0
  %5 = load i16, i16* %label, align 4
  %conv = sext i16 %5 to i32
  %cmp1 = icmp ne i32 %conv, -1
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; No predecessors!
  %6 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %label3 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %6, i32 0, i32 0
  %7 = load i16, i16* %label3, align 4
  %conv4 = sext i16 %7 to i32
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.5.66, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printf(i8* %8, i32 %conv4)
  br label %if.end

if.else:                                          ; No predecessors!
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.6.67, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %9)
  br label %if.end

if.end:                                           ; No predecessors!
  %10 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %10, i32 0, i32 4
  %11 = load %struct.Connector_struct*, %struct.Connector_struct** %next, align 4
  %cmp7 = icmp ne %struct.Connector_struct* %11, null
  br i1 %cmp7, label %if.then9, label %if.end11

if.then9:                                         ; No predecessors!
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.7.68, i32 0, i32 0
  %call10 = call i32 (i8*, ...) @printf(i8* %12)
  br label %if.end11

if.end11:                                         ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load %struct.Connector_struct*, %struct.Connector_struct** %e.addr, align 4
  %next12 = getelementptr inbounds %struct.Connector_struct, %struct.Connector_struct* %13, i32 0, i32 4
  %14 = load %struct.Connector_struct*, %struct.Connector_struct** %next12, align 4
  store %struct.Connector_struct* %14, %struct.Connector_struct** %e.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @print_Tconnector_list_Clear() {
entry:
  %struct.BigStruct_31 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 31
  %load_struct.BigStruct_31 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %struct.BigStruct_31
  %e.addr = alloca %struct.Tconnector_struct*, align 4
  store %struct.Tconnector_struct* %load_struct.BigStruct_31, %struct.Tconnector_struct** %e.addr, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %cmp = icmp ne %struct.Tconnector_struct* %0, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %1 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %multi = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %1, i32 0, i32 0
  %2 = load i8, i8* %multi, align 4
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  %3 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.8.69, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* %3)
  br label %if.end

if.end:                                           ; No predecessors!
  %4 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %string = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %4, i32 0, i32 3
  %5 = load i8*, i8** %string, align 4
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.9.70, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printf(i8* %6, i8* %5)
  %7 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %dir = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %7, i32 0, i32 1
  %8 = load i8, i8* %dir, align 1
  %conv = sext i8 %8 to i32
  %9 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.10.71, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printf(i8* %9, i32 %conv)
  %10 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %10, i32 0, i32 2
  %11 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next, align 4
  %cmp3 = icmp ne %struct.Tconnector_struct* %11, null
  br i1 %cmp3, label %if.then5, label %if.end7

if.then5:                                         ; No predecessors!
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.11.72, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printf(i8* %12)
  br label %if.end7

if.end7:                                          ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %e.addr, align 4
  %next8 = getelementptr inbounds %struct.Tconnector_struct, %struct.Tconnector_struct* %13, i32 0, i32 2
  %14 = load %struct.Tconnector_struct*, %struct.Tconnector_struct** %next8, align 4
  store %struct.Tconnector_struct* %14, %struct.Tconnector_struct** %e.addr, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  ret void
}

define void @print_domain_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %d.addr = alloca i32, align 4
  %lol = alloca %struct.List_o_links_struct*, align 4
  store i32 %load_struct.BigStruct_0, i32* %d.addr, align 4
  %0 = load i32, i32* %d.addr, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %0
  %lol1 = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 2
  %1 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol1, align 4
  store %struct.List_o_links_struct* %1, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %2 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %cmp = icmp ne %struct.List_o_links_struct* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; No predecessors!
  %3 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %link = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %3, i32 0, i32 0
  %4 = load i32, i32* %link, align 4
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 29, i32 2)
  %struct.BigStruct_38 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 38
  %load_struct.BigStruct_38 = load %struct._iobuf*, %struct._iobuf** %struct.BigStruct_38
  %arrayidx2 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %load_struct.BigStruct_38, i32 1
  %struct.BigStruct_1 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 1
  store %struct._iobuf* %arrayidx2, %struct._iobuf** %struct.BigStruct_1
  %struct.BigStruct_5 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 5
  store i32 %4, i32* %struct.BigStruct_5
  call void @"\01?SubOldCallForOthread@@YAXHH@Z"(i32 6, i32 0)
  br label %for.inc

for.inc:                                          ; No predecessors!
  %5 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %lol, align 4
  %next = getelementptr inbounds %struct.List_o_links_struct, %struct.List_o_links_struct* %5, i32 0, i32 3
  %6 = load %struct.List_o_links_struct*, %struct.List_o_links_struct** %next, align 4
  store %struct.List_o_links_struct* %6, %struct.List_o_links_struct** %lol, align 4
  br label %for.cond

for.end:                                          ; No predecessors!
  %7 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.43.384, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printf(i8* %7)
  ret void
}

define void @post_process_match_Clear() {
entry:
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %struct.BigStruct_3 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 3
  %load_struct.BigStruct_3 = load i8*, i8** %struct.BigStruct_3
  %retval = alloca i32, align 4
  %t.addr = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  store i8* %load_struct.BigStruct_3, i8** %t.addr, align 4
  store i8* %load_struct.BigStruct_2, i8** %s.addr, align 4
  br label %while.cond

while.cond:                                       ; No predecessors!
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %call = call i32 @isupper_Package(i32 %conv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; No predecessors!
  %2 = load i8*, i8** %t.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv1 = sext i8 %3 to i32
  %call2 = call i32 @isupper_Package(i32 %conv1)
  %tobool3 = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; No predecessors!
  %4 = phi i1 [ true, %while.cond ], [ %tobool3, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; No predecessors!
  %5 = load i8*, i8** %s.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv4 = sext i8 %6 to i32
  %7 = load i8*, i8** %t.addr, align 4
  %8 = load i8, i8* %7, align 1
  %conv5 = sext i8 %8 to i32
  %cmp = icmp ne i32 %conv4, %conv5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; No predecessors!
  %9 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %10 = load i8*, i8** %t.addr, align 4
  %incdec.ptr7 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr7, i8** %t.addr, align 4
  br label %while.cond

while.end:                                        ; No predecessors!
  br label %while.cond8

while.cond8:                                      ; No predecessors!
  %11 = load i8*, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv9 = sext i8 %12 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br i1 %cmp10, label %land.rhs, label %land.end

land.rhs:                                         ; No predecessors!
  %13 = load i8*, i8** %t.addr, align 4
  %14 = load i8, i8* %13, align 1
  %conv12 = sext i8 %14 to i32
  %cmp13 = icmp ne i32 %conv12, 0
  br label %land.end

land.end:                                         ; No predecessors!
  %15 = phi i1 [ false, %while.cond8 ], [ %cmp13, %land.rhs ]
  br i1 %15, label %while.body15, label %while.end34

while.body15:                                     ; No predecessors!
  %16 = load i8*, i8** %s.addr, align 4
  %17 = load i8, i8* %16, align 1
  %conv16 = sext i8 %17 to i32
  %cmp17 = icmp eq i32 %conv16, 42
  br i1 %cmp17, label %if.then30, label %lor.lhs.false

lor.lhs.false:                                    ; No predecessors!
  %18 = load i8*, i8** %t.addr, align 4
  %19 = load i8, i8* %18, align 1
  %conv19 = sext i8 %19 to i32
  %cmp20 = icmp eq i32 %conv19, 42
  br i1 %cmp20, label %if.then30, label %lor.lhs.false22

lor.lhs.false22:                                  ; No predecessors!
  %20 = load i8*, i8** %s.addr, align 4
  %21 = load i8, i8* %20, align 1
  %conv23 = sext i8 %21 to i32
  %22 = load i8*, i8** %t.addr, align 4
  %23 = load i8, i8* %22, align 1
  %conv24 = sext i8 %23 to i32
  %cmp25 = icmp eq i32 %conv23, %conv24
  br i1 %cmp25, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; No predecessors!
  %24 = load i8*, i8** %s.addr, align 4
  %25 = load i8, i8* %24, align 1
  %conv27 = sext i8 %25 to i32
  %cmp28 = icmp ne i32 %conv27, 94
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; No predecessors!
  %26 = load i8*, i8** %s.addr, align 4
  %incdec.ptr31 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %incdec.ptr31, i8** %s.addr, align 4
  %27 = load i8*, i8** %t.addr, align 4
  %incdec.ptr32 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr32, i8** %t.addr, align 4
  br label %if.end33

if.else:                                          ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end33:                                         ; No predecessors!
  br label %while.cond8

while.end34:                                      ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %28 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %28, i32* %struct.BigStruct_32
  ret void
}

define void @group_type_contains_Clear() {
entry:
  %struct.BigStruct_0 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 0
  %load_struct.BigStruct_0 = load i32, i32* %struct.BigStruct_0
  %struct.BigStruct_2 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 2
  %load_struct.BigStruct_2 = load i8*, i8** %struct.BigStruct_2
  %retval = alloca i32, align 4
  %link_name.addr = alloca i8*, align 4
  %d_type.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %c = alloca %struct.d_tree_leaf_struct*, align 4
  store i8* %load_struct.BigStruct_2, i8** %link_name.addr, align 4
  store i32 %load_struct.BigStruct_0, i32* %d_type.addr, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; No predecessors!
  %0 = load i32, i32* %d, align 4
  %1 = load i32, i32* @N_domains, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end13

for.body:                                         ; No predecessors!
  %2 = load i32, i32* %d, align 4
  %arrayidx = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %2
  %type = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx, i32 0, i32 4
  %3 = load i32, i32* %type, align 4
  %4 = load i32, i32* %d_type.addr, align 4
  %cmp1 = icmp ne i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; No predecessors!
  br label %for.inc12

if.end:                                           ; No predecessors!
  %5 = load i32, i32* %d, align 4
  %arrayidx2 = getelementptr inbounds [497 x %struct.domain_struct], [497 x %struct.domain_struct]* @domain_array, i32 0, i32 %5
  %child = getelementptr inbounds %struct.domain_struct, %struct.domain_struct* %arrayidx2, i32 0, i32 5
  %6 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %child, align 4
  store %struct.d_tree_leaf_struct* %6, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond3

for.cond3:                                        ; No predecessors!
  %7 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %cmp4 = icmp ne %struct.d_tree_leaf_struct* %7, null
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; No predecessors!
  %8 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %link = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %8, i32 0, i32 1
  %9 = load i32, i32* %link, align 4
  %10 = bitcast [497 x %struct.Link_struct]* @pp_link_array to [0 x %struct.Link_struct]*
  %arrayidx6 = getelementptr inbounds [0 x %struct.Link_struct], [0 x %struct.Link_struct]* %10, i32 0, i32 %9
  %name = getelementptr inbounds %struct.Link_struct, %struct.Link_struct* %arrayidx6, i32 0, i32 4
  %11 = load i8*, i8** %name, align 4
  %12 = load i8*, i8** %link_name.addr, align 4
  %call = call i32 @ppmatch(i8* %12, i8* %11)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then7, label %if.end8

if.then7:                                         ; No predecessors!
  br label %for.end

if.end8:                                          ; No predecessors!
  br label %for.inc

for.inc:                                          ; No predecessors!
  %13 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %next = getelementptr inbounds %struct.d_tree_leaf_struct, %struct.d_tree_leaf_struct* %13, i32 0, i32 2
  %14 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %next, align 4
  store %struct.d_tree_leaf_struct* %14, %struct.d_tree_leaf_struct** %c, align 4
  br label %for.cond3

for.end:                                          ; No predecessors!
  %15 = load %struct.d_tree_leaf_struct*, %struct.d_tree_leaf_struct** %c, align 4
  %cmp9 = icmp eq %struct.d_tree_leaf_struct* %15, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; No predecessors!
  store i32 0, i32* %retval, align 4
  br label %return

if.end11:                                         ; No predecessors!
  br label %for.inc12

for.inc12:                                        ; No predecessors!
  %16 = load i32, i32* %d, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %d, align 4
  br label %for.cond

for.end13:                                        ; No predecessors!
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; No predecessors!
  %17 = load i32, i32* %retval, align 4
  %struct.BigStruct_32 = getelementptr %struct.BigStruct, %struct.BigStruct* @struct.BigStruct, i32 0, i32 32
  store i32 %17, i32* %struct.BigStruct_32
  ret void
}

attributes #0 = { noinline nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 3.8.0 (branches/release_38)"}
!1 = !{i32 6, !"Linker Options", !2}
!2 = !{!3, !4, !5, !6, !7, !8}
!3 = !{!"/DEFAULTLIB:msvcrt.lib"}
!4 = !{!"/DEFAULTLIB:oldnames.lib"}
!5 = !{!"/FAILIFMISMATCH:\22_MSC_VER=1600\22"}
!6 = !{!"/FAILIFMISMATCH:\22_ITERATOR_DEBUG_LEVEL=2\22"}
!7 = !{!"/DEFAULTLIB:msvcprtd.lib"}
!8 = !{!"/DEFAULTLIB:uuid.lib"}
